/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKBrowserTransitionCoordinator : NSObject <CKFullScreenAppViewControllerDelegate> {
    CKPresentationControllerWindow * _appWindow;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _cachedCompactFrame;
    CKConversation * _conversation;
    UIViewController<CKBrowserViewControllerProtocol> * _currentBrowser;
    int  _currentConsumer;
    <CKBrowserTransitionCoordinatorDelegate> * _delegate;
    BOOL  _expanded;
    CKFullScreenAppViewController * _fullscreenViewController;
    int  _lastTransitionReason;
    UIViewController * _presentingViewController;
    UIWindow * _previousKeyWindow;
    <CKBrowserViewControllerSendDelegate> * _sendDelegate;
    BOOL  _underTest;
}

@property (nonatomic, retain) CKPresentationControllerWindow *appWindow;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } cachedCompactFrame;
@property (nonatomic, retain) CKConversation *conversation;
@property (nonatomic, retain) UIViewController<CKBrowserViewControllerProtocol> *currentBrowser;
@property (nonatomic) int currentConsumer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKBrowserTransitionCoordinatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isExpanded, nonatomic) BOOL expanded;
@property (nonatomic, retain) CKFullScreenAppViewController *fullscreenViewController;
@property (readonly) unsigned int hash;
@property (nonatomic) int lastTransitionReason;
@property (nonatomic) UIViewController *presentingViewController;
@property (nonatomic) UIWindow *previousKeyWindow;
@property (nonatomic) <CKBrowserViewControllerSendDelegate> *sendDelegate;
@property (readonly) Class superclass;
@property (nonatomic) BOOL underTest;

- (void).cxx_destruct;
- (id)_senderIdentifier;
- (id)appWindow;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })cachedCompactFrame;
- (id)conversation;
- (id)currentBrowser;
- (int)currentConsumer;
- (id)delegate;
- (void)dismissCurrentFullscreenBrowserAnimated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)fullscreenAppViewController:(id)arg1 wantsToSwitchToPlugin:(id)arg2;
- (void)fullscreenAppViewControllerDidTransitionFromOrientation:(int)arg1 toOrientation:(int)arg2;
- (void)fullscreenAppViewControllerSwitcherDidSelectAppStore:(id)arg1;
- (void)fullscreenAppViewControllerWantsToCollapse:(id)arg1;
- (id)fullscreenViewController;
- (BOOL)isExpanded;
- (BOOL)isHostingRemoteKeyboardView;
- (int)lastTransitionReason;
- (void)presentCurrentBrowserFullscreenAnimated:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)presentingViewController;
- (id)previousKeyWindow;
- (void)releaseOwnershipOfBrowserForConsumer:(int)arg1;
- (id)requestOwnershipOfBrowserForConsumer:(int)arg1;
- (id)sendDelegate;
- (void)setAppWindow:(id)arg1;
- (void)setCachedCompactFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setConversation:(id)arg1;
- (void)setCurrentBrowser:(id)arg1;
- (void)setCurrentConsumer:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpanded:(BOOL)arg1;
- (void)setExpanded:(BOOL)arg1 withReason:(int)arg2;
- (void)setFullscreenViewController:(id)arg1;
- (void)setLastTransitionReason:(int)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)setPreviousKeyWindow:(id)arg1;
- (void)setSendDelegate:(id)arg1;
- (void)setUnderTest:(BOOL)arg1;
- (void)transitionCurrentBrowserToCollapsedPresentationAnimated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)transitionCurrentBrowserToExpandedPresentationAnimated:(BOOL)arg1 completion:(id /* block */)arg2;
- (BOOL)underTest;
- (BOOL)updateBrowserSessionForPlugin:(id)arg1 datasource:(id)arg2;

@end
