/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKDeviceOrientationManager : NSObject <BKSAccelerometerDelegate> {
    BKSAccelerometer * _accelerometer;
    <CKDeviceOrientationManagerDelegate> * _delegate;
    NSMutableSet * _listenerKeys;
}

@property (nonatomic, retain) BKSAccelerometer *accelerometer;
@property (nonatomic, readonly) int currentDeviceOrientation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKDeviceOrientationManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NSMutableSet *listenerKeys;
@property (getter=isListeningForOrientationEvents, nonatomic, readonly) BOOL listeningForOrientationEvents;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_broadcastOrientation:(int)arg1;
- (int)_springboardDeviceLockOrientation;
- (void)_updateListeningState;
- (BOOL)_wantsOrientationEvents;
- (id)accelerometer;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)beginListeningForOrientationEventsWithKey:(id)arg1;
- (int)currentDeviceOrientation;
- (void)dealloc;
- (id)delegate;
- (void)endListeningForOrientationEventsWithKey:(id)arg1;
- (id)init;
- (void)invalidate;
- (BOOL)isListeningForOrientationEvents;
- (id)listenerKeys;
- (void)setAccelerometer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setListenerKeys:(id)arg1;

@end
