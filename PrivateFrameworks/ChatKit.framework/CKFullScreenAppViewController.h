/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKFullScreenAppViewController : UIViewController <CKBrowserSelectionControllerDelegate, CKBrowserViewControllerProtocol, CKDismissViewDelegate, CKFullScreenAppNavbarManagerDelegate, CKMessageEntryViewDelegate, CKMessageEntryViewInputDelegate, UIInteractionProgressObserver> {
    CADisplayLink * _animationDisplayLink;
    CKBrowserSelectionController * _appSelectionBrowser;
    UIWindow * _appSelectionBrowserWindow;
    UIView * _contentView;
    UIViewController<CKBrowserViewControllerProtocol> * _contentViewController;
    CKConversation * _conversation;
    <CKFullScreenAppViewControllerDelegate> * _delegate;
    CKDismissView * _dismissView;
    CKMessageEntryView * _entryView;
    UIView * _entryViewSnapshot;
    float  _entryViewSnapshotOffset;
    BOOL  _inDragAndDrop;
    BOOL  _inTransition;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _initialBrowserFrame;
    UISimpleInteractionProgress * _interactionProgress;
    int  _lastKnownDeviceOrientation;
    CKFullScreenAppNavbarManager * _navbarManager;
    IMBalloonPlugin * _plugin;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _targetBrowserFrame;
    unsigned int  _transitionDirection;
}

@property (nonatomic, retain) NSNumber *adamID;
@property (nonatomic, retain) CADisplayLink *animationDisplayLink;
@property (nonatomic, retain) CKBrowserSelectionController *appSelectionBrowser;
@property (nonatomic, retain) UIWindow *appSelectionBrowserWindow;
@property (nonatomic, readonly) unsigned int badgeValue;
@property (nonatomic, readonly) IMBalloonPlugin *balloonPlugin;
@property (nonatomic, retain) IMBalloonPluginDataSource *balloonPluginDataSource;
@property (nonatomic, readonly) CKBrowserDragManager *browserDragManager;
@property (nonatomic, readonly) int browserPresentationStyle;
@property (nonatomic, readonly) BOOL canReplaceDataSource;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic, retain) UIViewController<CKBrowserViewControllerProtocol> *contentViewController;
@property (nonatomic, retain) CKConversation *conversation;
@property (nonatomic) NSString *conversationID;
@property (nonatomic) int currentBrowserConsumer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKFullScreenAppViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CKDismissView *dismissView;
@property (nonatomic, retain) CKMessageEntryView *entryView;
@property (nonatomic, retain) UIView *entryViewSnapshot;
@property (nonatomic) float entryViewSnapshotOffset;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL inDragAndDrop;
@property (nonatomic, readonly) BOOL inExpandedPresentation;
@property (nonatomic) BOOL inTransition;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } initialBrowserFrame;
@property (nonatomic, retain) UISimpleInteractionProgress *interactionProgress;
@property (nonatomic) BOOL isiMessage;
@property (nonatomic) int lastKnownDeviceOrientation;
@property (nonatomic, readonly) BOOL mayBeKeptInViewHierarchy;
@property (nonatomic, retain) CKFullScreenAppNavbarManager *navbarManager;
@property (nonatomic, readonly) int parentModalPresentationStyle;
@property (nonatomic, readonly) <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate;
@property (nonatomic, retain) IMBalloonPlugin *plugin;
@property (nonatomic, retain) UIViewController *presentationViewController;
@property (nonatomic) NSObject<CKBrowserViewControllerSendDelegate> *sendDelegate;
@property (nonatomic, readonly) BOOL shouldShowChatChrome;
@property (nonatomic, retain) NSURL *storeLaunchURL;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL supportsQuickView;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } targetBrowserFrame;
@property (nonatomic) unsigned int transitionDirection;
@property (nonatomic, readonly) BOOL wantsDarkUI;
@property (nonatomic, readonly) BOOL wantsOpaqueUI;

+ (float)navbarHeight;

- (void).cxx_destruct;
- (void)_animationDisplayLinkFired;
- (BOOL)_canOpenParentApp;
- (BOOL)_currentPluginIsAppStore;
- (BOOL)_currentPluginIsDT;
- (void)_dismiss:(id)arg1;
- (void)_dismissAppSelectionBrowser;
- (void)_dismissDismissView;
- (void)_dragBegan:(id)arg1;
- (void)_dragEnded:(id)arg1;
- (float)_maxEntryViewHeight;
- (void)_openParentApp:(id)arg1;
- (void)_presentAppSelectionBrowser;
- (void)_presentDismissView;
- (void)_setupEntryView;
- (BOOL)_shouldEnableAppButton;
- (void)_updateEntryViewFrame;
- (void)animateBrowserViewAfterFullScreenTransition;
- (void)animateBrowserViewFromSourceRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 interactive:(BOOL)arg2 switcherFooterView:(id)arg3 completion:(id /* block */)arg4;
- (void)animateBrowserViewToTargetRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 switcherFooterView:(id)arg2 completion:(id /* block */)arg3;
- (id)animationDisplayLink;
- (id)appSelectionBrowser;
- (id)appSelectionBrowserWindow;
- (id)balloonPlugin;
- (id)balloonPluginDataSource;
- (int)browserPresentationStyle;
- (void)browserSelectionControllerSelectedBalloonPlugin:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (void)collapse:(id)arg1;
- (id)contentView;
- (id)contentViewController;
- (id)conversation;
- (id)conversationID;
- (void)dealloc;
- (id)delegate;
- (void)dismiss;
- (id)dismissView;
- (void)dismissViewWasTapped:(id)arg1;
- (id)entryView;
- (id)entryViewSnapshot;
- (float)entryViewSnapshotOffset;
- (BOOL)inDragAndDrop;
- (BOOL)inTransition;
- (id)initWithBalloonPlugin:(id)arg1;
- (id)initWithBalloonPlugin:(id)arg1 dataSource:(id)arg2;
- (id)initWithConversation:(id)arg1 plugin:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })initialBrowserFrame;
- (id)inputAccessoryView;
- (id)interactionProgress;
- (void)interactionProgress:(id)arg1 didEnd:(BOOL)arg2;
- (void)interactionProgressDidUpdate:(id)arg1;
- (BOOL)isiMessage;
- (int)lastKnownDeviceOrientation;
- (void)loadView;
- (BOOL)messageEntryShouldHideCaret:(id)arg1;
- (void)messageEntryView:(id)arg1 didTapMediaObject:(id)arg2;
- (void)messageEntryView:(id)arg1 sendButtonLongPressEnded:(struct CGPoint { float x1; float x2; })arg2;
- (void)messageEntryView:(id)arg1 sendButtonLongPressMoved:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)messageEntryView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)messageEntryViewBrowserButtonHit:(id)arg1;
- (void)messageEntryViewDidBeginEditing:(id)arg1;
- (void)messageEntryViewDidChange:(id)arg1;
- (void)messageEntryViewDidEndEditing:(id)arg1;
- (void)messageEntryViewDidTakeFocus:(id)arg1;
- (void)messageEntryViewDigitalTouchButtonHit:(id)arg1;
- (void)messageEntryViewHandwritingButtonHit:(id)arg1;
- (int)messageEntryViewHighLightInputButton:(id)arg1;
- (float)messageEntryViewMaxHeight:(id)arg1;
- (void)messageEntryViewPhotoButtonHit:(id)arg1;
- (void)messageEntryViewRaiseGestureAutoSend:(id)arg1;
- (void)messageEntryViewRecordingDidChange:(id)arg1;
- (void)messageEntryViewSendButtonHit:(id)arg1;
- (void)messageEntryViewSendButtonHitWhileDisabled:(id)arg1;
- (void)messageEntryViewSendButtonLongPressBegan:(id)arg1;
- (BOOL)messageEntryViewShouldBeginEditing:(id)arg1;
- (id)navbarManager;
- (void)navbarManagerDidDismissAllMessages:(id)arg1;
- (void)navbarManagerDidReceiveMessage:(id)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })navigationBarInsetsWithoutPalette;
- (id)plugin;
- (int)preferredStatusBarStyle;
- (id)presentationViewController;
- (id)sendDelegate;
- (void)setAnimationDisplayLink:(id)arg1;
- (void)setAppSelectionBrowser:(id)arg1;
- (void)setAppSelectionBrowserWindow:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setContentViewController:(id)arg1;
- (void)setConversation:(id)arg1;
- (void)setConversationID:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissView:(id)arg1;
- (void)setEntryView:(id)arg1;
- (void)setEntryViewSnapshot:(id)arg1;
- (void)setEntryViewSnapshotOffset:(float)arg1;
- (void)setInDragAndDrop:(BOOL)arg1;
- (void)setInTransition:(BOOL)arg1;
- (void)setInitialBrowserFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setInteractionProgress:(id)arg1;
- (void)setIsiMessage:(BOOL)arg1;
- (void)setLastKnownDeviceOrientation:(int)arg1;
- (void)setNavbarManager:(id)arg1;
- (void)setPlugin:(id)arg1;
- (void)setPresentationViewController:(id)arg1;
- (void)setSendDelegate:(id)arg1;
- (void)setTargetBrowserFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setTransitionDirection:(unsigned int)arg1;
- (BOOL)shouldAutorotate;
- (BOOL)shouldShowChatChrome;
- (unsigned int)supportedInterfaceOrientations;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })targetBrowserFrame;
- (unsigned int)transitionDirection;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { float x1; float x2; })arg1 withTransitionCoordinator:(id)arg2;
- (BOOL)wantsDarkUI;
- (BOOL)wantsOpaqueUI;
- (void)willMoveToParentViewController:(id)arg1;

@end
