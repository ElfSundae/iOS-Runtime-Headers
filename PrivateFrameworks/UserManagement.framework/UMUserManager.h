/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement
 */

@interface UMUserManager : NSObject <NSXPCListenerDelegate> {
    NSArray *_allUsers;
    id /* block */ _bubblePopHandler;
    NSData *_contextData;
    UMUser *_currentUser;
    NSDictionary *_deviceAttributes;
    BOOL _didBroadcastWillSwitchToUser;
    BOOL _didRegisterStakeholder;
    BOOL _didSendTasks;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    int _foregroundUID;
    BOOL _foregroundUIDHasBeenFetched;
    BOOL _inSyncBubble;
    BOOL _inSyncBubbleHasBeenFetched;
    unsigned int _interruptionRetryCount;
    BOOL _isMultiUser;
    BOOL _isMultiUserHasBeenFetched;
    NSString *_machServiceName;
    unsigned int _maxNumberOfUsers;
    BOOL _maxNumberOfUsersHasBeenFetched;
    NSData *_passcodeData;
    NSDictionary *_personaSpec;
    id _stakeholder;
    unsigned int _stakeholderType;
    NSMutableArray *_switchBlockingTasks;
    id /* block */ _switchCompletionHandler;
    NSMutableArray *_syncTasks;
    NSString *_unregistrationReason;
    unsigned int _unregistrationStatus;
    id /* block */ _uploadContentCompletionHandler;
    <UMUserListUpdateObserver> *_userListUpdateObserver;
    NSXPCConnection *_xpcConnection;
    NSXPCListener *_xpcListener;
}

@property (nonatomic, copy) id /* block */ bubblePopHandler;
@property (nonatomic, retain) NSData *contextData;
@property (nonatomic, readonly, copy) UMUser *currentUser;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didBroadcastWillSwitchToUser;
@property (nonatomic) BOOL didRegisterStakeholder;
@property (nonatomic) BOOL didSendTasks;
@property (readonly) unsigned int hash;
@property (nonatomic) unsigned int interruptionRetryCount;
@property (nonatomic, readonly) BOOL isMultiUser;
@property (nonatomic, retain) NSString *machServiceName;
@property (nonatomic, readonly) unsigned int maxNumberOfUsers;
@property (nonatomic, retain) NSData *passcodeData;
@property (nonatomic, retain) NSDictionary *personaSpec;
@property (nonatomic) id stakeholder;
@property (nonatomic) unsigned int stakeholderType;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableArray *switchBlockingTasks;
@property (nonatomic, copy) id /* block */ switchCompletionHandler;
@property (nonatomic, retain) NSMutableArray *syncTasks;
@property (nonatomic, retain) NSString *unregistrationReason;
@property (nonatomic) unsigned int unregistrationStatus;
@property (nonatomic, copy) id /* block */ uploadContentCompletionHandler;
@property (nonatomic) <UMUserListUpdateObserver> *userListUpdateObserver;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;
@property (nonatomic, retain) NSXPCListener *xpcListener;

+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_addTask:(id)arg1;
- (void)_broadcastReadyToSwitchToUser:(id)arg1;
- (void)_broadcastWillSwitchToUser:(id)arg1;
- (int)_foregroundUID;
- (BOOL)_inSyncBubble;
- (id)_loadUser:(id)arg1 withPasscodeData:(id)arg2 outError:(id*)arg3;
- (id)_mutablePersonaSpecBase;
- (id)_personaSpecForUser:(id)arg1;
- (int)_pid;
- (void)_raiseExceptionIfOperationNotPermittedError:(id)arg1;
- (void)_raiseExceptionIfWeDoNotHaveAStakeholder;
- (void)_raiseExceptionIfWeDoNotHaveASyncStakeholder;
- (void)_raiseExceptionIfWeHaveAStakeholder;
- (void)_raiseExceptionOnMainThread:(id)arg1;
- (void)_registerStakeholder:(id)arg1;
- (void)_removeTask:(id)arg1;
- (void)_resendXPCMessages;
- (void)_sendTasks;
- (void)_sendXPCMessageToServerOfType:(unsigned int)arg1;
- (void)_sendXPCMessageToServerOfType:(unsigned int)arg1 backingObject:(id)arg2;
- (id)_server;
- (void)_setPasscodeTypeOnUser:(id)arg1 withPasscodeData:(id)arg2;
- (void)_setUpUMServerXPCConnection:(id)arg1;
- (void)_setUpXPCConnectionToUMServer;
- (void)_tearDownConnectionToUMServer;
- (id)_userWithUID:(unsigned int)arg1;
- (void)addUserSwitchBlockingTask:(id)arg1;
- (void)addUserSyncTask:(id)arg1;
- (id)allUsers;
- (void)bubbleDidPop;
- (id /* block */)bubblePopHandler;
- (id)contextData;
- (void)createUser:(id)arg1 passcodeData:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)currentUser;
- (id)currentUserSwitchContext;
- (void)currentUserSwitchContextHasBeenUsed;
- (void)deleteUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)deviceAttributes;
- (BOOL)didBroadcastWillSwitchToUser;
- (BOOL)didRegisterStakeholder;
- (BOOL)didSendTasks;
- (void)disableUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)init;
- (unsigned int)interruptionRetryCount;
- (BOOL)isMultiUser;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)loadUser:(id)arg1 passcodeData:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)logIfMultiUser:(id)arg1;
- (id)machServiceName;
- (unsigned int)maxNumberOfUsers;
- (id)passcodeData;
- (id)personaSpec;
- (void)readyToSwitchToUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)registerCriticalUserSwitchStakeHolder:(id)arg1;
- (void)registerUserListUpdateObserver:(id)arg1;
- (void)registerUserSwitchStakeHolder:(id)arg1;
- (void)registerUserSyncStakeholder:(id)arg1 withMachServiceName:(id)arg2;
- (void)removeUserSwitchBlockingTask:(id)arg1;
- (void)removeUserSyncTask:(id)arg1;
- (void)resumeSync;
- (void)setBubblePopHandler:(id /* block */)arg1;
- (void)setContextData:(id)arg1;
- (void)setDidBroadcastWillSwitchToUser:(BOOL)arg1;
- (void)setDidRegisterStakeholder:(BOOL)arg1;
- (void)setDidSendTasks:(BOOL)arg1;
- (void)setInterruptionRetryCount:(unsigned int)arg1;
- (void)setMachServiceName:(id)arg1;
- (void)setPasscodeData:(id)arg1;
- (void)setPersonaSpec:(id)arg1;
- (void)setStakeholder:(id)arg1;
- (void)setStakeholderType:(unsigned int)arg1;
- (void)setSwitchBlockingTasks:(id)arg1;
- (void)setSwitchCompletionHandler:(id /* block */)arg1;
- (void)setSyncTasks:(id)arg1;
- (void)setUnregistrationReason:(id)arg1;
- (void)setUnregistrationStatus:(unsigned int)arg1;
- (void)setUploadContentCompletionHandler:(id /* block */)arg1;
- (void)setUserListUpdateObserver:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)setXpcListener:(id)arg1;
- (id)stakeholder;
- (unsigned int)stakeholderType;
- (id)switchBlockingTasks;
- (id /* block */)switchCompletionHandler;
- (void)switchToLoginUserWithCompletionHandler:(id /* block */)arg1;
- (void)switchToUser:(id)arg1 passcodeData:(id)arg2 context:(id)arg3 completionHandler:(id /* block */)arg4;
- (BOOL)syncPropertiesForUser:(id)arg1;
- (id)syncTasks;
- (void)terminateSyncWithCompletionHandler:(id /* block */)arg1;
- (void)unregisterStakeHolder:(id)arg1 status:(unsigned int)arg2 reason:(id)arg3;
- (id)unregistrationReason;
- (unsigned int)unregistrationStatus;
- (id /* block */)uploadContentCompletionHandler;
- (void)uploadContentWithCompletionHandler:(id /* block */)arg1;
- (id)userAttributesForUID:(unsigned int)arg1;
- (BOOL)userExists:(id)arg1;
- (void)userListDidUpdate;
- (id)userListUpdateObserver;
- (void)userSwitchTaskListDidUpdate;
- (void)willSwitchToUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)xpcConnection;
- (id)xpcListener;

@end
