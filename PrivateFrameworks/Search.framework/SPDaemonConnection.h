/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Search.framework/Search
 */

@interface SPDaemonConnection : NSObject {
    SPXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_connectionQueue;
    NSString *_daemonName;
    BOOL _queryHasBeenReissued;
    NSObject<OS_dispatch_queue> *_queue;
    struct __CFDictionary { } *_runningQueries;
}

@property (nonatomic, retain) NSString *daemonName;
@property (nonatomic) struct __CFDictionary { }*runningQueries;

+ (id)sharedConnection;

- (void).cxx_destruct;
- (id)_connection;
- (void)_resetConnection;
- (void)_sendMessage:(id)arg1 info:(id)arg2 reply:(id /* block */)arg3;
- (void)activate;
- (void)cancelQuery:(id)arg1;
- (id)daemonName;
- (void)deactivate;
- (void)dealloc;
- (void)endRecordUpdatesForApplication:(id)arg1 andCategory:(id)arg2;
- (void)fetchCardDataForResult:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (id)initWithDaemonName:(id)arg1;
- (void)preheat;
- (void)registerApplication:(id)arg1 withCategories:(id)arg2;
- (void)requestParsecParametersWithReply:(id /* block */)arg1;
- (void)requestRecordUpdatesForApplication:(id)arg1 category:(id)arg2 andIDs:(id)arg3;
- (void)retrieveFirstTimeExperienceTextWithReply:(id /* block */)arg1;
- (void)retrieveImageDataForResult:(id)arg1 searchDomain:(unsigned int)arg2 size:(struct CGSize { float x1; float x2; })arg3 completion:(id /* block */)arg4;
- (void)retrieveImageDataForResultIdentifierNumber:(long long)arg1 searchDomain:(unsigned int)arg2 size:(struct CGSize { float x1; float x2; })arg3 completion:(id /* block */)arg4;
- (void)retrieveImageDataWithIdentifier:(id)arg1 searchDomain:(unsigned int)arg2 size:(struct CGSize { float x1; float x2; })arg3 completion:(id /* block */)arg4;
- (BOOL)retrieveUpdateListForDisplayIdentifier:(id)arg1 category:(id)arg2 hasUpdates:(BOOL*)arg3;
- (struct __CFDictionary { }*)runningQueries;
- (void)sendFeedback:(id)arg1;
- (void)sendMessageForToken:(id)arg1 withResponse:(id)arg2 isStable:(BOOL)arg3;
- (void)setDaemonName:(id)arg1;
- (void)setRunningQueries:(struct __CFDictionary { }*)arg1;
- (id)startQuery:(id)arg1;
- (id)startQuery:(id)arg1 withResponse:(id)arg2 isStable:(BOOL)arg3;
- (id)startQuery:(id)arg1 withResponse:(id)arg2 isStable:(BOOL)arg3 queue:(id)arg4;
- (void)startRecordUpdatesForApplication:(id)arg1 andCategory:(id)arg2;

@end
