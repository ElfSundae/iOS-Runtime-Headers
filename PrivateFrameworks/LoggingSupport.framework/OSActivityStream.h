/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport
 */

@interface OSActivityStream : NSObject {
    NSMutableDictionary * _activityFilters;
    <OSActivityStreamDelegate> * _delegate;
    BOOL  _delegateHasDidFail;
    BOOL  _delegateStreamErrorLess;
    BOOL  _delegateStreamWithError;
    OSLogDevice * _device;
    void * _deviceEventSession;
    void * _deviceSearchSession;
    unsigned int  _eventFilter;
    unsigned int  _options;
    NSMutableSet * _pids;
    NSCompoundPredicate * _predicate;
    NSMutableSet * _proc_names;
    struct os_activity_stream_s { } * _stream;
    NSString * _waitforProcessName;
    <OSDeviceDelegate> * deviceDelegate;
}

@property (nonatomic) NSMutableDictionary *activityFilters;
@property (nonatomic) <OSActivityStreamDelegate> *delegate;
@property (nonatomic) OSLogDevice *device;
@property (nonatomic) <OSDeviceDelegate> *deviceDelegate;
@property (nonatomic) unsigned int eventFilter;
@property (nonatomic) unsigned int events;
@property (nonatomic) unsigned int options;
@property (nonatomic, copy) NSCompoundPredicate *predicate;

- (void).cxx_destruct;
- (id)activityFilters;
- (void)addFilterForActivity:(id)arg1 andBinary:(id)arg2;
- (void)addProcessID:(int)arg1;
- (void)addProcessName:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)device;
- (id)deviceDelegate;
- (BOOL)establishTrust:(id)arg1;
- (unsigned int)eventFilter;
- (unsigned int)events;
- (id)getInfoForDevice:(id)arg1 andKey:(id)arg2;
- (id)init;
- (id)initWithDevice:(void*)arg1;
- (int)maxProcs;
- (unsigned int)options;
- (id)predicate;
- (void)setActivityFilters:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDeviceDelegate:(id)arg1;
- (void)setEventFilter:(unsigned int)arg1;
- (void)setEvents:(unsigned int)arg1;
- (void)setOptions:(unsigned int)arg1;
- (void)setPredicate:(id)arg1;
- (void)start;
- (void)startLocal;
- (void)startRemote;
- (void)stop;
- (void)stopLocal;
- (void)stopRemote;
- (BOOL)streamEvent:(id)arg1 error:(id)arg2;
- (void)waitForProcessName:(id)arg1;

@end
