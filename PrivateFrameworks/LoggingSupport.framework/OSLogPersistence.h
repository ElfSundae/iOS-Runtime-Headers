/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport
 */

@interface OSLogPersistence : NSObject {
    unsigned int  _batchSize;
    NSString * _currentFile;
    unsigned int  _decodeFailures;
    <OSLogPersistenceDelegate> * _delegate;
    NSDate * _endDate;
    _OSLogIndex * _index;
    NSURL * _logArchive;
    NSURL * _logFile;
    unsigned int  _logMessageCount;
    unsigned int  _messagesFiltered;
    unsigned int  _options;
    _OSLogCollectionReference * _oslcr;
    NSCompoundPredicate * _predicate;
    NSDate * _sparseDataStart;
    NSDate * _startDate;
    bool  _verbose;
    _OSLogVersioning * _version;
}

@property (nonatomic, readonly) int archiveState;
@property (nonatomic, readonly) int archiveVersion;
@property (nonatomic) unsigned int batchSize;
@property (nonatomic, readonly, copy) NSString *currentFile;
@property (nonatomic, readonly) unsigned int decodeFailures;
@property (nonatomic) <OSLogPersistenceDelegate> *delegate;
@property (nonatomic, readonly, copy) NSDate *endDate;
@property (nonatomic, copy) NSURL *logArchive;
@property (nonatomic, copy) NSURL *logFile;
@property (nonatomic, readonly) unsigned int logMessageCount;
@property (nonatomic, readonly) unsigned int messagesFiltered;
@property (nonatomic) unsigned int options;
@property (nonatomic, copy) NSCompoundPredicate *predicate;
@property (nonatomic, readonly, copy) NSDate *sparseDataStart;
@property (nonatomic, readonly, copy) NSDate *startDate;
@property (nonatomic, readonly, retain) NSDictionary *statistics;
@property (nonatomic, readonly) struct _os_timesync_db_s { }*timesync;
@property (nonatomic) bool verbose;

- (void).cxx_destruct;
- (void)_openFiles;
- (void)_openLocalPersistenceDir;
- (void)_openPath:(id)arg1;
- (bool)allowSensitive;
- (int)archiveState;
- (int)archiveVersion;
- (unsigned int)batchSize;
- (id)currentFile;
- (void)dealloc;
- (unsigned int)decodeFailures;
- (id)delegate;
- (id)endDate;
- (void)enumerateFromLastBootWithBlock:(id /* block */)arg1;
- (void)enumerateFromStartDate:(id)arg1 toEndDate:(id)arg2 withBlock:(id /* block */)arg3;
- (void)fetchFromStartDate:(id)arg1 toEndDate:(id)arg2;
- (id)init;
- (id)logArchive;
- (id)logFile;
- (unsigned int)logMessageCount;
- (unsigned int)messagesFiltered;
- (unsigned int)options;
- (id)predicate;
- (void)resetWorkingState;
- (void)setBatchSize:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLogArchive:(id)arg1;
- (void)setLogFile:(id)arg1;
- (void)setOptions:(unsigned int)arg1;
- (void)setPredicate:(id)arg1;
- (void)setVerbose:(bool)arg1;
- (id)sparseDataStart;
- (id)startDate;
- (id)statistics;
- (BOOL)streamChunks:(id /* block */)arg1 andEntries:(id /* block */)arg2 flags:(unsigned int)arg3;
- (struct _os_timesync_db_s { }*)timesync;
- (bool)verbose;

@end
