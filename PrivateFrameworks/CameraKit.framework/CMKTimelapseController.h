/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@interface CMKTimelapseController : NSObject <CMKStillImageCaptureRequestDelegate, UIAlertViewDelegate> {
    BOOL __backendRecoveryNeeded;
    NSObject<OS_dispatch_source> *__captureTimer;
    CMKLowDiskSpaceAlertView *__diskSpaceAlert;
    BOOL __ignoringTimerCallbacksForTearDown;
    BOOL __ignoringTimerCallbacksWaitingForCaptureResponse;
    NSCountedSet *__inFlightTimelapseUUIDs;
    NSMutableSet *__pendingCompletedStates;
    BOOL __previewStarted;
    CMKTimelapseState *__state;
}

@property (setter=_setBackendRecoveryNeeded:, nonatomic) BOOL _backendRecoveryNeeded;
@property (nonatomic, readonly) NSObject<OS_dispatch_source> *_captureTimer;
@property (nonatomic, readonly) CMKLowDiskSpaceAlertView *_diskSpaceAlert;
@property (nonatomic, readonly) BOOL _ignoringTimerCallbacksForTearDown;
@property (nonatomic, readonly) BOOL _ignoringTimerCallbacksWaitingForCaptureResponse;
@property (nonatomic, readonly) NSCountedSet *_inFlightTimelapseUUIDs;
@property (nonatomic, readonly) NSMutableSet *_pendingCompletedStates;
@property (setter=_setPreviewStarted:, nonatomic) BOOL _previewStarted;
@property (nonatomic, readonly) CMKTimelapseState *_state;
@property (nonatomic, readonly) NSDate *captureStartTime;
@property (getter=isCapturing, nonatomic, readonly) BOOL capturing;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;

+ (id)_videoPreviewImageForTimelapseState:(id)arg1;
+ (id)createPlaceholderAssetResponseForTimelapseState:(id)arg1;
+ (void)recoverFromCrashIfNeededForceEndLastSession:(BOOL)arg1;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (BOOL)_backendRecoveryNeeded;
- (id)_captureTimer;
- (void)_captureTimerFired;
- (id)_createPlaceholderAssetForTimelapseState:(id)arg1;
- (void)_deviceStarted:(id)arg1;
- (id)_diskSpaceAlert;
- (void)_dismissDiskSpaceAlert;
- (BOOL)_enqueueCaptureRequest;
- (BOOL)_ignoringTimerCallbacksForTearDown;
- (BOOL)_ignoringTimerCallbacksWaitingForCaptureResponse;
- (id)_inFlightTimelapseUUIDs;
- (void)_notifyAGGDForDidStartCapturingWithState:(id)arg1;
- (void)_notifyAGGDForDidStopCapturingWithState:(id)arg1;
- (void)_notifyInsufficientDiskSpaceForContinuingCapture;
- (void)_notifyInsufficientDiskSpaceForStartingCaptureWithNeededBytes:(long long)arg1 availableBytes:(long long)arg2;
- (id)_pendingCompletedStates;
- (void)_prepareForTimelapseCapture;
- (BOOL)_previewStarted;
- (void)_previewStarted:(id)arg1;
- (BOOL)_reserveDiskSpaceForTimelapseUUID:(id)arg1;
- (void)_resetIgnoringTimerCallbacksWaitingForCaptureResponse;
- (void)_restoreCaptureStateFromDisk;
- (void)_saveStateToDisk:(id)arg1;
- (void)_sessionRuntimeErrored:(id)arg1;
- (void)_sessionStarted:(id)arg1;
- (void)_setBackendRecoveryNeeded:(BOOL)arg1;
- (void)_setNewCaptureState;
- (void)_setPreviewStarted:(BOOL)arg1;
- (void)_startCaptureTimer;
- (BOOL)_startCapturing;
- (id)_state;
- (void)_stopCapturingWithReasons:(int)arg1;
- (void)_teardownCaptureTimer;
- (void)_triggerBackendCrashRecoveryIfNeeded;
- (void)_updateFocusAndExposureForStartCapturing;
- (void)_updateFocusAndExposureForStopCapturing;
- (void)_updateFocusLensPosition:(float)arg1 forTimelapseUUID:(id)arg2 forceUpdate:(BOOL)arg3;
- (void)_updateLocationIfNecessary;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)captureController:(id)arg1 didFinishWriteForResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didGenerateResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (id)captureStartTime;
- (void)dealloc;
- (id)init;
- (BOOL)isCapturing;
- (void)restoreConfiguration;
- (BOOL)startCapturing;
- (void)stopCapturingWithReasons:(int)arg1;

@end
