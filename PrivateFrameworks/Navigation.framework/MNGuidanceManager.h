/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation
 */

@interface MNGuidanceManager : NSObject {
    double  _baselineDistance;
    double  _baselineSpeed;
    double  _contentOfExecutionAnnouncement;
    double  _contentOfInitPrepAnnouncement;
    BOOL  _currentDirectionsContinueStraight;
    struct { 
        int context; 
        double distance; 
        BOOL usePrimaryName; 
        BOOL useSecondaryName; 
        BOOL useDistanceForSecondary; 
        BOOL useContinueForSecondary; 
        int numPrimarySigns; 
        int numSecondarySigns; 
    }  _currentInstructionOptions;
    NSString * _currentRoadName;
    NSString * _currentShieldText;
    long long  _currentShieldType;
    unsigned int  _currentStepIndex;
    <MNGuidanceManagerDelegate> * _delegate;
    GEOComposedWaypoint * _destination;
    BOOL  _didAnnounceManeuverContinue;
    BOOL  _didAnnounceManeuverExecution;
    BOOL  _didAnnounceManeuverInitial;
    BOOL  _didAnnounceManeuverPreparation;
    BOOL  _didAnnounceProceedToRoute;
    BOOL  _didAnnounceSecondaryManeuver;
    BOOL  _didShowPrimarySign;
    BOOL  _didShowSecondarySign;
    double  _distanceWhenExecuteAnnounced;
    double  _distanceWhenFirstAnnouncementAllowed;
    double  _distanceWhenInitialAnnounced;
    double  _distanceWhenPrepareAnnounced;
    double  _estimateOfTimeToSpeakExecutionAnnouncement;
    int  _guidanceState;
    GEORouteMatch * _lastRouteMatch;
    double  _minExecutionDistance;
    MNNavigationSession * _navigationSession;
    unsigned int  _pointIndexForCurrentRoadInfo;
    GEOComposedRoute * _route;
    BOOL  _shouldAnnounceContinueStraight;
    BOOL  _shouldSkipExecuteAnnounce;
    BOOL  _shouldSkipInitialAnnounce;
    BOOL  _shouldSkipPrepareAnnounce;
    double  _timeLastAnnouncementEnded;
    double  _timeLastAnnouncementStarted;
    double  _timeUntilNextAnnouncement;
}

@property (nonatomic) struct { int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; } currentInstructionOptions;
@property (nonatomic, retain) NSString *currentRoadName;
@property (nonatomic, retain) NSString *currentShieldText;
@property (nonatomic) <MNGuidanceManagerDelegate> *delegate;
@property (nonatomic, readonly) int guidanceState;
@property (nonatomic, readonly) GEOComposedRouteStep *maneuverStep;
@property (nonatomic, readonly) unsigned int maneuverStepIndex;
@property (nonatomic, readonly) BOOL proceedingToRoute;
@property (nonatomic, readonly) NSData *remainingRouteZilchData;
@property (nonatomic, readonly) GEOComposedRoute *route;
@property (nonatomic, readonly) int transportType;

- (void).cxx_destruct;
- (double)_adjustedVehicleSpeed:(id)arg1;
- (id)_announcementForArrival;
- (BOOL)_announcementInProgress;
- (double)_calculateExecutionDistance:(id)arg1 withLogging:(BOOL)arg2;
- (void)_callUpdatePointOfInterestForLocation:(id)arg1 navigatorState:(int)arg2;
- (void)_clearCurrentRoadName;
- (id)_combinedGuidanceForStep:(id)arg1 withType:(int)arg2;
- (unsigned int)_currentAnnouncementStage;
- (double)_distanceForSign;
- (double)_durationOfLastAnnouncement;
- (double)_estimateTimeToSpeakExecutionAnnouncement;
- (id)_getClosestStepWithNameForProceedToRoute:(struct { double x1; double x2; })arg1 routeMatch:(id)arg2;
- (double)_getPortionForStep:(id)arg1 withSecondary:(id)arg2 basedOnOptions:(struct { int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; }*)arg3;
- (id)_getStepAtIndex:(unsigned int)arg1;
- (id)_getStepAtIndex:(unsigned int)arg1 clampIndexToRange:(BOOL)arg2;
- (BOOL)_hasCurrentRoadNameChangedForLocation:(id)arg1;
- (BOOL)_hasSubsteps;
- (unsigned int)_maneuverStepIndex;
- (id)_nameInfoForContinueSign;
- (id)_nameInfoForCurrentRoad;
- (void)_notifyAnnounceContinueAsRepeat:(BOOL)arg1;
- (void)_notifyAnnounceManeuverForStep:(id)arg1 withDistance:(double)arg2 withCombinedGuidance:(int)arg3 playShortPrompt:(BOOL)arg4 isRepeat:(BOOL)arg5 stage:(unsigned int)arg6 timeLimit:(double)arg7;
- (void)_notifyAnnounceProceedToRoute:(id)arg1 withClosestStep:(id)arg2 withNamedStep:(id)arg3 andSecondaryStep:(id)arg4 isRepeat:(BOOL)arg5;
- (void)_notifyDisplayManeuverForSecondaryStep:(id)arg1;
- (void)_notifyDisplayManeuverForStep:(id)arg1 withDistance:(double)arg2 allowCombinedGuidance:(BOOL)arg3;
- (void)_resetStepState;
- (BOOL)_setInstructionContentForStep:(id)arg1 withSecondary:(id)arg2 optionsToSet:(struct { int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; }*)arg3 basedOnPortion:(double)arg4;
- (double)_speedFactor:(id)arg1;
- (BOOL)_startingWrongWayForLocation:(id)arg1 navigatorState:(int)arg2 routeMatch:(id)arg3;
- (double)_timeSinceLastAnnouncement;
- (double)_timeUntilNextAnnouncement;
- (double)_timeUntilNextAnnouncement:(id)arg1 location:(id)arg2 upcomingStage:(out unsigned int*)arg3;
- (BOOL)_updateCheckIfNextStep:(id)arg1 navigatorState:(int)arg2 routeMatch:(id)arg3;
- (BOOL)_updateConsiderContinueAnnouncement:(id)arg1 location:(id)arg2;
- (BOOL)_updateConsiderExecuteAnnouncement:(id)arg1 location:(id)arg2;
- (BOOL)_updateConsiderInitialAnnouncement:(id)arg1 passedManeuverStart:(BOOL)arg2;
- (BOOL)_updateConsiderPrepareAnnouncement:(id)arg1 withMatch:(id)arg2;
- (BOOL)_updateConsiderSubstepAnnouncement:(id)arg1 location:(id)arg2;
- (BOOL)_updateGuidanceStateWithLocation:(id)arg1 withMatch:(id)arg2 withNavigatorState:(int)arg3 stepChanged:(BOOL*)arg4;
- (void)_updatePrepareForNextStep;
- (id)_updateValidateRouteMatchForLocation:(id)arg1;
- (struct { int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; })currentInstructionOptions;
- (id)currentRoadName;
- (id)currentShieldText;
- (void)dealloc;
- (id)delegate;
- (int)guidanceState;
- (id)initWithNavigationSession:(id)arg1 proceedToRoute:(BOOL)arg2 allowMidRouteStart:(BOOL)arg3;
- (id)maneuverStep;
- (struct { double x1; double x2; })maneuverStepCoordinate;
- (unsigned int)maneuverStepIndex;
- (BOOL)proceedingToRoute;
- (id)remainingRouteZilchData;
- (BOOL)repeatLastGuidanceAnnouncement:(id)arg1;
- (id)route;
- (void)setCurrentInstructionOptions:(struct { int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; })arg1;
- (void)setCurrentRoadName:(id)arg1;
- (void)setCurrentShieldText:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)stop;
- (int)transportType;
- (void)updateDestination:(id)arg1;
- (void)updateForReroute:(id)arg1;
- (void)updateForReturnToRoute;
- (void)updateGuidanceAfterReroute;
- (void)updateGuidanceForLocation:(id)arg1 navigatorState:(int)arg2;
- (void)updateGuidanceForProceedToRouteAtLocation:(struct { double x1; double x2; })arg1 routeMatch:(id)arg2 remainingTime:(double)arg3 distanceUntilDestination:(double)arg4;

@end
