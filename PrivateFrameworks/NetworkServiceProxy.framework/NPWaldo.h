/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NPWaldo : NSObject <NSSecureCoding> {
    NPLocation * _cachedLocation;
    int  _connectionIdleTimeout;
    int  _connectionTimeout;
    int  _currentEdgeIndex;
    NSArray * _currentEdges;
    NSDictionary * _currentNetworkCharacteristics;
    NSData * _dayPass;
    BOOL  _dayPassExtendedValidation;
    BOOL  _dayPassExtendedValidationFromWaldo;
    NSString * _dayPassHostname;
    BOOL  _daypassRefreshInProgress;
    NSArray * _daypassSoftExpiry;
    <NPWaldoDelegate> * _delegate;
    unsigned int  _diskVersion;
    double  _edgeFairnessFactor;
    NSArray * _edges;
    BOOL  _enableLatencyDerivation;
    BOOL  _enableLatencyDerivationFromWaldo;
    int  _fallbackTimeout;
    unsigned int  _generation;
    unsigned int  _lastFailureReason;
    double  _latencyFactorA;
    double  _latencyFactorB;
    double  _latencyFactorX;
    int  _locationCheckInterval;
    NSDate * _locationCheckTimestamp;
    NSDate * _locationExpiration;
    int  _locationTTL;
    int  _locationToleranceDistance;
    NSMutableDictionary * _networkInformation;
    NPTuscanyEdge * _nextEdge;
    NSDictionary * _nextProbeDates;
    int  _observedRTTSampleSize;
    double  _probeFrequency;
    int  _probePause;
    BOOL  _reprocessAfterCancelled;
    BOOL  _reprocessCancelled;
    BOOL  _reprocessPending;
    int  _reprocessSampleCount;
    int  _reprocessSampleSize;
    int  _reprocessSamplingInterval;
    NSObject<OS_dispatch_source> * _reprocessSamplingTimer;
    NSDate * _resurrectionDate;
    int  _retryPause;
    BOOL  _shouldSave;
    NSMutableDictionary * _signatureEdgeLists;
    int  _signatureLimit;
    NSMutableDictionary * _signatureReprocessRateLimits;
    NSString * _tag;
    double  _telemetryRatio;
    NSString * _telemetryService;
    NSURL * _telemetryURL;
    unsigned int  _timestamp;
    BOOL  _useGeohashFromServer;
    unsigned int  _version;
    int  _viewSize;
}

@property (retain) NPLocation *cachedLocation;
@property int connectionIdleTimeout;
@property int connectionTimeout;
@property (readonly) NPTuscanyEdge *currentEdge;
@property int currentEdgeIndex;
@property (readonly) NSArray *currentEdgeList;
@property (readonly) NSArray *currentEdges;
@property (readonly) NSDate *currentNetworkLastUsed;
@property (retain) NSData *dayPass;
@property BOOL dayPassExtendedValidation;
@property BOOL dayPassExtendedValidationFromWaldo;
@property (readonly) int dayPassFetchCount;
@property (retain) NSString *dayPassHostname;
@property BOOL daypassRefreshInProgress;
@property (readonly) NSArray *daypassSoftExpiry;
@property <NPWaldoDelegate> *delegate;
@property (readonly) unsigned int diskVersion;
@property (readonly) unsigned int edgeCount;
@property double edgeFairnessFactor;
@property (retain) NSArray *edges;
@property BOOL enableLatencyDerivation;
@property BOOL enableLatencyDerivationFromWaldo;
@property (readonly) NSDate *expirationDate;
@property int fallbackTimeout;
@property unsigned int generation;
@property (readonly) BOOL hasEdges;
@property unsigned int lastFailureReason;
@property double latencyFactorA;
@property double latencyFactorB;
@property double latencyFactorX;
@property int locationCheckInterval;
@property (retain) NSDate *locationCheckTimestamp;
@property (retain) NSDate *locationExpiration;
@property int locationTTL;
@property int locationToleranceDistance;
@property (retain) NSMutableDictionary *networkInformation;
@property (readonly) NPTuscanyEdge *nextEdge;
@property (retain) NSDictionary *nextProbeDates;
@property (readonly) int observedRTTSampleSize;
@property (readonly) double probeFrequency;
@property int probePause;
@property (readonly) unsigned int probeSize;
@property BOOL reprocessAfterCancelled;
@property BOOL reprocessCancelled;
@property BOOL reprocessPending;
@property int reprocessSampleCount;
@property (readonly) int reprocessSampleSize;
@property (readonly) int reprocessSamplingInterval;
@property (retain) NSObject<OS_dispatch_source> *reprocessSamplingTimer;
@property (readonly) NSDate *resurrectionDate;
@property (readonly) int retryPause;
@property BOOL shouldSave;
@property (retain) NSMutableDictionary *signatureEdgeLists;
@property int signatureLimit;
@property (retain) NSMutableDictionary *signatureReprocessRateLimits;
@property (readonly) NSString *tag;
@property double telemetryRatio;
@property (retain) NSString *telemetryService;
@property (retain) NSURL *telemetryURL;
@property (readonly) unsigned int timestamp;
@property (readonly) BOOL useGeohashFromServer;
@property (readonly) unsigned int version;
@property int viewSize;

+ (id)removeFromKeychain;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)ageOutLatencyMap;
- (id)cachedLocation;
- (void)cancelProbes;
- (void)clearAllLatencyMaps;
- (int)connectionIdleTimeout;
- (int)connectionTimeout;
- (id)copyEdgeList:(id)arg1;
- (id)copyEdgeListRTTAverage:(id)arg1 observed:(BOOL)arg2 shortDescription:(BOOL)arg3;
- (id)copyLatencyInfoDictionary:(BOOL)arg1;
- (id)copyStateIncludeDistance:(BOOL)arg1;
- (id)currentEdge;
- (int)currentEdgeIndex;
- (id)currentEdgeList;
- (id)currentEdges;
- (id)currentNetworkLastUsed;
- (id)dayPass;
- (BOOL)dayPassExtendedValidation;
- (BOOL)dayPassExtendedValidationFromWaldo;
- (int)dayPassFetchCount;
- (id)dayPassHostname;
- (BOOL)daypassRefreshInProgress;
- (id)daypassSoftExpiry;
- (id)delegate;
- (id)description;
- (unsigned int)diskVersion;
- (id)edgeAtIndex:(int)arg1;
- (id)edgeContainingOnRamp:(id)arg1;
- (unsigned int)edgeCount;
- (double)edgeFairnessFactor;
- (id)edges;
- (BOOL)enableLatencyDerivation;
- (BOOL)enableLatencyDerivationFromWaldo;
- (void)encodeWithCoder:(id)arg1;
- (id)expirationDate;
- (int)fallbackTimeout;
- (unsigned int)generation;
- (void)getDayPassRTT;
- (id)getLatencyFromList:(id)arg1 edgeIndex:(unsigned int)arg2;
- (void)handleKeyUsageUpdate:(id)arg1 appData:(id)arg2;
- (BOOL)hasEdges;
- (int)indexOfBestEdge;
- (id)initFromKeychain;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONData:(id)arg1 timestamp:(unsigned int)arg2 softExpiryOverride:(id)arg3;
- (unsigned int)lastFailureReason;
- (double)latencyFactorA;
- (double)latencyFactorB;
- (double)latencyFactorX;
- (void)loadObservedRTTSamples:(id)arg1;
- (int)locationCheckInterval;
- (id)locationCheckTimestamp;
- (id)locationExpiration;
- (int)locationTTL;
- (int)locationToleranceDistance;
- (void)logEdgeList:(id)arg1 debug:(BOOL)arg2 toStdout:(BOOL)arg3;
- (void)logLatencyInfoToStdout:(BOOL)arg1;
- (id)networkInformation;
- (id)nextEdge;
- (id)nextProbeDates;
- (int)observedRTTSampleSize;
- (double)probeFrequency;
- (int)probePause;
- (unsigned int)probeSize;
- (BOOL)pushCurrentDayPassesToKernelUpdateGeneration:(BOOL)arg1;
- (id)rebuildLatencyMap:(id)arg1 latencyMap:(id)arg2;
- (BOOL)rebuildLatencyMaps:(id)arg1;
- (void)refreshDayPassesWithCompletionHandler:(id /* block */)arg1;
- (BOOL)reprocessAfterCancelled;
- (BOOL)reprocessCancelled;
- (BOOL)reprocessPending;
- (int)reprocessSampleCount;
- (int)reprocessSampleSize;
- (int)reprocessSamplingInterval;
- (id)reprocessSamplingTimer;
- (void)reprocessSamplingWithCompletionHandler:(id /* block */)arg1 fromScratch:(BOOL)arg2;
- (void)reprocessWithCompletionHandler:(id /* block */)arg1;
- (BOOL)reprocessWithNewRTT:(unsigned int)arg1 reProbe:(BOOL*)arg2;
- (id)resurrectionDate;
- (void)retainValidDayPassesFromWaldoInfo:(id)arg1;
- (int)retryPause;
- (void)saveToKeychain;
- (void)setCachedLocation:(id)arg1;
- (void)setConnectionIdleTimeout:(int)arg1;
- (void)setConnectionTimeout:(int)arg1;
- (void)setConstraint:(id)arg1;
- (void)setCurrentEdgeIndex:(int)arg1;
- (void)setCurrentNetworkCharacteristics:(id)arg1;
- (void)setDayPass:(id)arg1;
- (void)setDayPassExtendedValidation:(BOOL)arg1;
- (void)setDayPassExtendedValidationFromWaldo:(BOOL)arg1;
- (void)setDayPassHostname:(id)arg1;
- (void)setDaypassRefreshInProgress:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEdgeFairnessFactor:(double)arg1;
- (void)setEdgeListForCurrentNetworkSignature:(id)arg1;
- (void)setEdges:(id)arg1;
- (void)setEnableLatencyDerivation:(BOOL)arg1;
- (void)setEnableLatencyDerivationFromWaldo:(BOOL)arg1;
- (void)setFallbackTimeout:(int)arg1;
- (void)setGeneration:(unsigned int)arg1;
- (void)setLastFailureReason:(unsigned int)arg1;
- (void)setLatencyFactorA:(double)arg1;
- (void)setLatencyFactorB:(double)arg1;
- (void)setLatencyFactorX:(double)arg1;
- (void)setLocationCheckInterval:(int)arg1;
- (void)setLocationCheckTimestamp:(id)arg1;
- (void)setLocationExpiration:(id)arg1;
- (void)setLocationTTL:(int)arg1;
- (void)setLocationToleranceDistance:(int)arg1;
- (void)setNetworkInformation:(id)arg1;
- (void)setNextProbeDates:(id)arg1;
- (void)setProbePause:(int)arg1;
- (void)setReprocessAfterCancelled:(BOOL)arg1;
- (void)setReprocessCancelled:(BOOL)arg1;
- (void)setReprocessPending:(BOOL)arg1;
- (void)setReprocessSampleCount:(int)arg1;
- (void)setReprocessSamplingTimer:(id)arg1;
- (void)setShouldSave:(BOOL)arg1;
- (void)setSignatureEdgeLists:(id)arg1;
- (void)setSignatureLimit:(int)arg1;
- (void)setSignatureReprocessRateLimits:(id)arg1;
- (void)setTelemetryRatio:(double)arg1;
- (void)setTelemetryService:(id)arg1;
- (void)setTelemetryURL:(id)arg1;
- (void)setViewSize:(int)arg1;
- (BOOL)shouldFetchWaldo;
- (BOOL)shouldPerformDayPassRefresh;
- (BOOL)shouldReprocess;
- (BOOL)shouldSave;
- (id)signatureEdgeLists;
- (int)signatureLimit;
- (id)signatureReprocessRateLimits;
- (void)startProbingEdges:(id)arg1 atIndex:(unsigned int)arg2 withResults:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)tag;
- (double)telemetryRatio;
- (id)telemetryService;
- (id)telemetryURL;
- (unsigned int)timestamp;
- (void)timestampNetworkSignature:(id)arg1;
- (BOOL)useGeohashFromServer;
- (BOOL)validateEdgeList:(id)arg1;
- (unsigned int)version;
- (int)viewSize;

@end
