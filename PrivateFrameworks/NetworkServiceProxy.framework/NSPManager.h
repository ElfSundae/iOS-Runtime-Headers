/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NSPManager : NSObject <NPTunnelDelegate, NPTunnelFlowDelegate, NSPServerCommands> {
    NSArray * _appRules;
    NSMutableDictionary * _flowCache;
    NSTimer * _idleTimer;
    BOOL  _initialUpdate;
    BOOL  _isIdle;
    BOOL  _isObserving;
    NWPathEvaluator * _pathEvaluator;
    NWPathEvaluator * _policyEvaluator;
    NETunnelProviderProtocol * _protocolConfiguration;
    NSDictionary * _serviceProperties;
    NSObject<OS_dispatch_source> * _telemetryTimer;
    NPTunnelTuscany * _tunnel;
}

@property (retain) NSArray *appRules;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSMutableDictionary *flowCache;
@property (readonly) unsigned int hash;
@property (retain) NSTimer *idleTimer;
@property BOOL initialUpdate;
@property BOOL isIdle;
@property BOOL isObserving;
@property (readonly) NWPathEvaluator *pathEvaluator;
@property (readonly) NWPathEvaluator *policyEvaluator;
@property (retain) NETunnelProviderProtocol *protocolConfiguration;
@property (readonly) NSDictionary *serviceProperties;
@property (readonly) Class superclass;
@property (retain) NSObject<OS_dispatch_source> *telemetryTimer;
@property (retain) NPTunnelTuscany *tunnel;

+ (id)sharedManager;

- (void).cxx_destruct;
- (id)appRules;
- (void)clearIdleTimer;
- (void)closeCurrentConnectionWithCompletionHandler:(id /* block */)arg1;
- (void)copyConnectionInfoForFlow:(unsigned int)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)fetchConnectionInfoForFlow:(unsigned int)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)flowCache;
- (void)flowDidClose:(id)arg1;
- (int)flowGetCurrentMTU;
- (id)idleTimer;
- (void)idleTimerFired:(id)arg1;
- (id)init;
- (BOOL)initialUpdate;
- (BOOL)initializeTuscanyTunnel;
- (id)instantiateFlowWithAppProxyFlow:(id)arg1;
- (id)instantiateFlowWithInputHandler:(struct nw_protocol { struct nw_protocol_identifier {} *x1; struct nw_protocol_callbacks {} *x2; struct nw_protocol {} *x3; void *x4; unsigned char x5[16]; struct nw_protocol {} *x6; void *x7; }*)arg1;
- (BOOL)isIdle;
- (BOOL)isObserving;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)pathEvaluator;
- (id)policyEvaluator;
- (id)protocolConfiguration;
- (void)resetIdleTimer;
- (void)resetTunnelWithCompletionHandler:(id /* block */)arg1;
- (void)sendKeyBag:(id)arg1 usageData:(id)arg2;
- (id)serviceProperties;
- (void)setAppRules:(id)arg1;
- (void)setFlowCache:(id)arg1;
- (void)setIdleTimer:(id)arg1;
- (void)setInitialUpdate:(BOOL)arg1;
- (void)setIsIdle:(BOOL)arg1;
- (void)setIsObserving:(BOOL)arg1;
- (void)setProtocolConfiguration:(id)arg1;
- (void)setTelemetryTimer:(id)arg1;
- (void)setTunnel:(id)arg1;
- (void)setupServiceProperties;
- (BOOL)shouldTunnelFlowWithParameters:(id)arg1;
- (void)start;
- (void)startWithConfiguration:(id)arg1 appRules:(id)arg2;
- (void)stopWithCompletionHandler:(id /* block */)arg1;
- (id)telemetryTimer;
- (id)tunnel;
- (id)tunnel:(id)arg1 openConnectionToEndpoint:(id)arg2 enableTFO:(BOOL)arg3 initialData:(id)arg4 enableMultipath:(BOOL)arg5 enableTLS:(BOOL)arg6 TLSParameters:(id)arg7 TLSDelegate:(id)arg8 URL:(id)arg9;
- (id)tunnel:(id)arg1 openSessionToEndpoint:(id)arg2 fromEndpoint:(id)arg3;
- (void)tunnelDidConnect;
- (void)tunnelDidDisconnect;
- (int)tunnelGetCurrentMTU:(id)arg1;
- (BOOL)tunnelGetIsNetworkCaptive;
- (BOOL)tunnelGetNetworkHasProxy;

@end
