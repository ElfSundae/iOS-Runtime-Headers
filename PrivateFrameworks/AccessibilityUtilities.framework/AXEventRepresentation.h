/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXEventRepresentation : NSObject <AXEventRepresentationDescription, NSCopying, NSSecureCoding> {
    NSData * _HIDAttributeData;
    unsigned long long  _HIDTime;
    AXEventAccelerometerInfoRepresentation * _accelerometerInfo;
    AXEventData * _accessibilityData;
    unsigned long long  _additionalFlags;
    NSString * _clientId;
    unsigned int  _contextId;
    struct __IOHIDEvent { } * _creatorHIDEvent;
    NSData * _data;
    unsigned int  _didUpdateMask;
    int  _flags;
    AXEventGameControllerInfoRepresentation * _gameControllerInfo;
    long  _generationCount;
    AXEventHandInfoRepresentation * _handInfo;
    BOOL  _isBuiltIn;
    BOOL  _isDisplayIntegrated;
    BOOL  _isGeneratedEvent;
    AXEventKeyInfoRepresentation * _keyInfo;
    struct CGPoint { 
        float x; 
        float y; 
    }  _location;
    int  _pid;
    BOOL  _redirectEvent;
    long long  _scrollAmount;
    unsigned long long  _senderID;
    int  _subtype;
    unsigned int  _taskPort;
    unsigned long long  _time;
    unsigned int  _type;
    BOOL  _useOriginalHIDTime;
    unsigned int  _willUpdateMask;
    void * _window;
    struct CGPoint { 
        float x; 
        float y; 
    }  _windowLocation;
}

@property (nonatomic, retain) NSData *HIDAttributeData;
@property (nonatomic) unsigned long long HIDTime;
@property (nonatomic, retain) AXEventAccelerometerInfoRepresentation *accelerometerInfo;
@property (nonatomic, retain) AXEventData *accessibilityData;
@property (nonatomic) unsigned long long additionalFlags;
@property (nonatomic, retain) NSString *clientId;
@property (nonatomic) unsigned int contextId;
@property (nonatomic, retain) struct __IOHIDEvent { }*creatorHIDEvent;
@property (nonatomic, retain) NSData *data;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned int didUpdateMask;
@property (nonatomic, readonly) unsigned int fingerCount;
@property (nonatomic) int flags;
@property (nonatomic, retain) AXEventGameControllerInfoRepresentation *gameControllerInfo;
@property (nonatomic) long generationCount;
@property (nonatomic, retain) AXEventHandInfoRepresentation *handInfo;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL isBuiltIn;
@property (nonatomic, readonly) BOOL isCancel;
@property (nonatomic, readonly) BOOL isChordChange;
@property (nonatomic) BOOL isDisplayIntegrated;
@property (nonatomic) BOOL isGeneratedEvent;
@property (nonatomic, readonly) BOOL isInRange;
@property (nonatomic, readonly) BOOL isInRangeLift;
@property (nonatomic, readonly) BOOL isLift;
@property (nonatomic, readonly) BOOL isMove;
@property (nonatomic, readonly) BOOL isTouchDown;
@property (nonatomic, readonly) BOOL isUpdate;
@property (nonatomic, retain) AXEventKeyInfoRepresentation *keyInfo;
@property (nonatomic) struct CGPoint { float x1; float x2; } location;
@property (nonatomic) int pid;
@property (getter=isRedirectEvent, nonatomic) BOOL redirectEvent;
@property (nonatomic) long long scrollAmount;
@property (nonatomic) unsigned long long senderID;
@property (nonatomic) int subtype;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int taskPort;
@property (nonatomic) unsigned long long time;
@property (nonatomic) unsigned int type;
@property (nonatomic) BOOL useOriginalHIDTime;
@property (nonatomic, readonly) BOOL willBeUpdated;
@property (nonatomic) unsigned int willUpdateMask;
@property (nonatomic) void*window;
@property (nonatomic) struct CGPoint { float x1; float x2; } windowLocation;

+ (id)_digitizerRepresentation:(struct __IOHIDEvent { }*)arg1 hidStreamIdentifier:(id)arg2;
+ (id)_gameControllerEvent:(struct __IOHIDEvent { }*)arg1;
+ (id)_keyboardButtonEvent:(struct __IOHIDEvent { }*)arg1;
+ (id)_wheelEvent:(struct __IOHIDEvent { }*)arg1;
+ (id)accelerometerRepresentation:(id)arg1;
+ (id)buttonRepresentationWithType:(unsigned int)arg1;
+ (id)cancelEventForPathIndexMask:(unsigned int)arg1;
+ (id)keyRepresentationWithType:(unsigned int)arg1;
+ (id)representationWithData:(id)arg1;
+ (id)representationWithEventRecord:(struct { int x1; int x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; unsigned int x5; unsigned long long x6; void *x7; int x8; int x9; unsigned int x10; unsigned long long x11; unsigned char x12[0]; }*)arg1;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent { }*)arg1 hidStreamIdentifier:(id)arg2;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent { }*)arg1 hidStreamIdentifier:(id)arg2 clientID:(id)arg3 taskPort:(unsigned int)arg4;
+ (id)representationWithLocation:(struct CGPoint { float x1; float x2; })arg1 windowLocation:(struct CGPoint { float x1; float x2; })arg2 handInfo:(id)arg3;
+ (id)representationWithType:(unsigned int)arg1 subtype:(int)arg2 time:(unsigned long long)arg3 location:(struct CGPoint { float x1; float x2; })arg4 windowLocation:(struct CGPoint { float x1; float x2; })arg5 handInfo:(id)arg6;
+ (BOOL)supportsSecureCoding;
+ (id)touchRepresentationWithHandType:(unsigned int)arg1 location:(struct CGPoint { float x1; float x2; })arg2;

- (id)HIDAttributeData;
- (unsigned long long)HIDTime;
- (BOOL)_HIDEventIsAccessibilityEvent:(struct __IOHIDEvent { }*)arg1;
- (id)_accessibilityDataFromRealEvent:(struct __IOHIDEvent { }*)arg1;
- (struct __IOHIDEvent { }*)_accessibilityEventFromRealEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_applyAccessibilityDataToRealEvent:(struct __IOHIDEvent { }*)arg1;
- (unsigned int)_contextIDFromHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (struct __IOHIDEvent { }*)_newAccelerometerHIDEventRef;
- (struct __IOHIDEvent { }*)_newButtonHIDEventRef;
- (struct __IOHIDEvent { }*)_newHandHIDEventRef;
- (struct __IOHIDEvent { }*)_newKeyboardHIDEventRef;
- (id)_senderNameForID;
- (id)accelerometerInfo;
- (id)accessibilityData;
- (id)accessibilityEventRepresentationTabularDescription;
- (unsigned long long)additionalFlags;
- (void)applyAccessibilityDataToCreatorHIDEvent;
- (id)clientId;
- (unsigned int)contextId;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct __IOHIDEvent { }*)creatorHIDEvent;
- (id)data;
- (id)dataRepresentation;
- (void)dealloc;
- (id)denormalizedEventRepresentation:(BOOL)arg1 descale:(BOOL)arg2;
- (id)description;
- (unsigned int)didUpdateMask;
- (void)encodeWithCoder:(id)arg1;
- (id)fakeTouchScaleEventRepresentation:(BOOL)arg1;
- (unsigned int)fingerCount;
- (unsigned int)firstPathContextId;
- (int)flags;
- (id)gameControllerInfo;
- (long)generationCount;
- (id)handInfo;
- (id)initWithCoder:(id)arg1;
- (BOOL)isBuiltIn;
- (BOOL)isCancel;
- (BOOL)isChordChange;
- (BOOL)isDisplayIntegrated;
- (BOOL)isDownEvent;
- (BOOL)isGeneratedEvent;
- (BOOL)isInRange;
- (BOOL)isInRangeLift;
- (BOOL)isLift;
- (BOOL)isMove;
- (BOOL)isRedirectEvent;
- (BOOL)isTouchDown;
- (BOOL)isUpdate;
- (id)keyInfo;
- (struct CGPoint { float x1; float x2; })location;
- (void)modifyPoints:(id /* block */)arg1;
- (void)neuterUpdates;
- (struct { int x1; int x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; unsigned int x5; unsigned long long x6; void *x7; int x8; int x9; unsigned int x10; unsigned long long x11; unsigned char x12[0]; }*)newEventRecord;
- (struct __GSEvent { }*)newGSEventRef;
- (struct __IOHIDEvent { }*)newHIDEventRef;
- (id)normalizedEventRepresentation:(BOOL)arg1 scale:(BOOL)arg2;
- (unsigned int)pathIndexMask;
- (int)pid;
- (void)resetInitialTouchCountValueForHidStreamIdentifier:(id)arg1;
- (long long)scrollAmount;
- (unsigned long long)senderID;
- (void)setAccelerometerInfo:(id)arg1;
- (void)setAccessibilityData:(id)arg1;
- (void)setAdditionalFlags:(unsigned long long)arg1;
- (void)setClientId:(id)arg1;
- (void)setContextId:(unsigned int)arg1;
- (void)setCreatorHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)setData:(id)arg1;
- (void)setDidUpdateMask:(unsigned int)arg1;
- (void)setFlags:(int)arg1;
- (void)setGameControllerInfo:(id)arg1;
- (void)setGenerationCount:(long)arg1;
- (void)setHIDAttributeData:(id)arg1;
- (void)setHIDTime:(unsigned long long)arg1;
- (void)setHandInfo:(id)arg1;
- (void)setIsBuiltIn:(BOOL)arg1;
- (void)setIsDisplayIntegrated:(BOOL)arg1;
- (void)setIsGeneratedEvent:(BOOL)arg1;
- (void)setKeyInfo:(id)arg1;
- (void)setLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)setPid:(int)arg1;
- (void)setRedirectEvent:(BOOL)arg1;
- (void)setScrollAmount:(long long)arg1;
- (void)setSenderID:(unsigned long long)arg1;
- (void)setSubtype:(int)arg1;
- (void)setTaskPort:(unsigned int)arg1;
- (void)setTime:(unsigned long long)arg1;
- (void)setType:(unsigned int)arg1;
- (void)setUseOriginalHIDTime:(BOOL)arg1;
- (void)setWillUpdateMask:(unsigned int)arg1;
- (void)setWindow:(void*)arg1;
- (void)setWindowLocation:(struct CGPoint { float x1; float x2; })arg1;
- (int)subtype;
- (unsigned int)taskPort;
- (unsigned long long)time;
- (unsigned int)type;
- (BOOL)useOriginalHIDTime;
- (BOOL)willBeUpdated;
- (unsigned int)willUpdateMask;
- (void*)window;
- (struct CGPoint { float x1; float x2; })windowLocation;

@end
