/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DiagnosticsSupport.framework/DiagnosticsSupport
 */

@interface DSHardwareButtonEventMonitor : NSObject {
    BOOL  _allowEvents;
    NSMutableSet * _buttonEventHandlers;
    NSObject<OS_dispatch_queue> * _buttonEventQueue;
    struct __IOHIDEventSystemClient { } * _buttonHIDSystemClient;
    NSLock * _eventHandlerChangeLock;
    NSObject<OS_dispatch_queue> * _systemClientCreationQueue;
    NSObject<OS_dispatch_queue> * _targetQueue;
    DSTestAutomation * _testAutomation;
}

@property (nonatomic) BOOL allowEvents;
@property (nonatomic, retain) NSMutableSet *buttonEventHandlers;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *buttonEventQueue;
@property (nonatomic, retain) NSLock *eventHandlerChangeLock;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *systemClientCreationQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *targetQueue;
@property (nonatomic, retain) DSTestAutomation *testAutomation;

- (void).cxx_destruct;
- (id)_handlersForEvent:(unsigned int)arg1;
- (id)_handlersForTarget:(id)arg1;
- (BOOL)_triggerHandlers:(id)arg1 event:(unsigned int)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forButtonEvents:(unsigned int)arg3 propagate:(BOOL)arg4;
- (BOOL)allowEvents;
- (id)buttonEventHandlers;
- (id)buttonEventQueue;
- (id)eventHandlerChangeLock;
- (id)init;
- (void)removeTarget:(id)arg1;
- (void)removeTarget:(id)arg1 action:(SEL)arg2 forButtonEvents:(unsigned int)arg3 propagate:(BOOL)arg4;
- (void)setAllowEvents:(BOOL)arg1;
- (void)setButtonEventHandlers:(id)arg1;
- (void)setButtonEventQueue:(id)arg1;
- (void)setEventHandlerChangeLock:(id)arg1;
- (void)setSystemClientCreationQueue:(id)arg1;
- (void)setTargetQueue:(id)arg1;
- (void)setTestAutomation:(id)arg1;
- (void)startWithPriority:(int)arg1 completion:(id /* block */)arg2;
- (void)stopWithCompletion:(id /* block */)arg1;
- (id)systemClientCreationQueue;
- (id)targetQueue;
- (id)testAutomation;

@end
