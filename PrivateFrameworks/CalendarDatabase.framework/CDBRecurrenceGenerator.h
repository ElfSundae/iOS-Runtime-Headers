/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase
 */

@interface CDBRecurrenceGenerator : NSObject {
    BOOL _allDay;
    NSCalendar *_calendar;
    NSArray *_daysOfTheMonth;
    NSArray *_daysOfTheWeek;
    NSArray *_daysOfTheYear;
    unsigned int _duration;
    NSDate *_endDate;
    NSDate *_eventEndDate;
    NSDate *_eventStartDate;
    NSTimeZone *_eventTimeZone;
    int _frequency;
    long _interval;
    NSArray *_monthsOfTheYear;
    NSArray *_setPositions;
    BOOL _shouldPinMonthDays;
    int _weekStart;
    NSArray *_weeksOfTheYear;
}

@property (nonatomic) BOOL allDay;
@property (nonatomic, copy) NSArray *daysOfTheMonth;
@property (nonatomic, copy) NSArray *daysOfTheWeek;
@property (nonatomic, copy) NSArray *daysOfTheYear;
@property (nonatomic, copy) NSDate *endDate;
@property (nonatomic, copy) NSDate *eventEndDate;
@property (nonatomic, copy) NSDate *eventStartDate;
@property (nonatomic, copy) NSTimeZone *eventTimeZone;
@property (nonatomic, copy) NSArray *monthsOfTheYear;
@property (nonatomic, copy) NSArray *setPositions;
@property (nonatomic, copy) NSArray *weeksOfTheYear;

- (double)_convertAbsoluteTime:(double)arg1 fromTimeZone:(id)arg2 toTimeZone:(id)arg3;
- (id)_copyDailyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;
- (id)_copyMonthlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;
- (id)_copyOccurrenceDatesWithBirthdayEvent:(void*)arg1 startDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 endDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg3 timeZone:(id)arg4 limit:(int)arg5 locked:(BOOL)arg6;
- (id)_copySimpleYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;
- (id)_copyWeeklyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;
- (id)_copyYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;
- (BOOL)_isSimpleYearlyRecurrence;
- (void)_prepareForCalRecurrence:(void*)arg1 locked:(BOOL)arg2;
- (void)_setupForCalEvent:(void*)arg1 locked:(BOOL)arg2;
- (BOOL)_validateCalDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 pinned:(BOOL)arg2;
- (BOOL)allDay;
- (id)computeRecurrenceEndDate:(unsigned int)arg1;
- (id)computeRecurrenceEndDateForCalEvent:(void*)arg1 recurrenceRule:(void*)arg2 count:(unsigned int)arg3 locked:(BOOL)arg4;
- (id)copyOccurrenceDatesBetweenStartDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 endDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 timeZone:(id)arg3 limit:(int)arg4;
- (id)copyOccurrenceDatesWithCalEvent:(void*)arg1 startDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 endDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg3 timeZone:(id)arg4 limit:(int)arg5 locked:(BOOL)arg6;
- (id)copyOccurrenceDatesWithInitialDate:(id)arg1 calRecurrences:(id)arg2 rangeStart:(id)arg3 rangeEnd:(id)arg4 timeZone:(id)arg5;
- (id)daysOfTheMonth;
- (id)daysOfTheWeek;
- (id)daysOfTheYear;
- (void)dealloc;
- (id)endDate;
- (id)eventEndDate;
- (id)eventStartDate;
- (id)eventTimeZone;
- (id)init;
- (id)monthsOfTheYear;
- (void)setAllDay:(BOOL)arg1;
- (void)setDaysOfTheMonth:(id)arg1;
- (void)setDaysOfTheWeek:(id)arg1;
- (void)setDaysOfTheYear:(id)arg1;
- (void)setEndDate:(id)arg1;
- (void)setEventEndDate:(id)arg1;
- (void)setEventStartDate:(id)arg1;
- (void)setEventTimeZone:(id)arg1;
- (void)setMonthsOfTheYear:(id)arg1;
- (id)setPositions;
- (void)setSetPositions:(id)arg1;
- (void)setWeeksOfTheYear:(id)arg1;
- (id)weeksOfTheYear;

@end
