/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
 */

@interface AKArrowAnnotation : AKShapeAnnotation <AKTextAnnotationProtocol> {
    NSTextStorage *_annotationText;
    unsigned int _arrowHeadStyle;
    struct CGPoint { 
        float x; 
        float y; 
    } _endPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } _midPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } _startPoint;
    NSDictionary *_typingAttributes;
}

@property (retain) NSTextStorage *annotationText;
@property unsigned int arrowHeadStyle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property struct CGPoint { float x1; float x2; } endPoint;
@property (readonly) unsigned int hash;
@property BOOL isEditingText;
@property struct CGPoint { float x1; float x2; } midPoint;
@property BOOL shouldUsePlaceholderText;
@property struct CGPoint { float x1; float x2; } startPoint;
@property (readonly) Class superclass;
@property BOOL textIsClipped;
@property BOOL textIsFixedHeight;
@property BOOL textIsFixedWidth;
@property (copy) NSDictionary *typingAttributes;

+ (id)displayNameForUndoablePropertyChangeWithKey:(id)arg1;
+ (id)keyPathsForValuesAffectingDrawingBounds;
+ (id)keyPathsForValuesAffectingHitTestBounds;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)adjustModelToCompensateForOriginalExif;
- (id)annotationText;
- (unsigned int)arrowHeadStyle;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (struct CGPoint { float x1; float x2; })endPoint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })hitTestBounds;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)keysForValuesToObserveForAdornments;
- (id)keysForValuesToObserveForRedrawing;
- (id)keysForValuesToObserveForUndo;
- (struct CGPoint { float x1; float x2; })midPoint;
- (void)setAnnotationText:(id)arg1;
- (void)setArrowHeadStyle:(unsigned int)arg1;
- (void)setEndPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setMidPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setStartPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setTypingAttributes:(id)arg1;
- (struct CGPoint { float x1; float x2; })startPoint;
- (void)translateBy:(struct CGPoint { float x1; float x2; })arg1;
- (id)typingAttributes;

@end
