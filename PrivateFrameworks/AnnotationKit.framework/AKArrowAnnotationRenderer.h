/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
 */

@interface AKArrowAnnotationRenderer : AKAnnotationRenderer

+ (void)_arrowHeadLineIntersection:(id)arg1 outStartIntersection:(struct CGPoint { float x1; float x2; }*)arg2 outBezierStartParameter:(float*)arg3 outEndIntersection:(struct CGPoint { float x1; float x2; }*)arg4 outBezierEndParameter:(float*)arg5;
+ (void)_arrowHeadPathsForArrow:(id)arg1 inOutStartArrowHead:(struct CGPath { }*)arg2 outBezierStartParameter:(float*)arg3 inOutEndArrowHead:(struct CGPath { }*)arg4 outBezierEndParameter:(float*)arg5;
+ (struct CGSize { float x1; float x2; })_concreteDraggingBoundsInsetsForAnnotation:(id)arg1;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_concreteDrawingBoundsOfAnnotation:(id)arg1;
+ (BOOL)_concretePointIsOnBorder:(struct CGPoint { float x1; float x2; })arg1 ofAnnotation:(id)arg2 minimumBorderThickness:(float)arg3;
+ (BOOL)_concretePointIsOnInside:(struct CGPoint { float x1; float x2; })arg1 ofAnnotation:(id)arg2;
+ (void)_concreteRenderAnnotation:(id)arg1 intoContext:(struct CGContext { }*)arg2 forDisplay:(BOOL)arg3 pageControllerOrNil:(id)arg4;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_concreteTextBoundsOfAnnotation:(id)arg1 withOptionalAnnotationRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 optionalText:(id)arg3;
+ (void)_controlPointsForArrow:(id)arg1 outControlPoint1:(struct CGPoint { float x1; float x2; }*)arg2 outControlPoint2:(struct CGPoint { float x1; float x2; }*)arg3;
+ (struct CGPoint { float x1; float x2; })_cubicBezierPointForParameter:(float)arg1 start:(struct CGPoint { float x1; float x2; })arg2 controlPt1:(struct CGPoint { float x1; float x2; })arg3 controlPt2:(struct CGPoint { float x1; float x2; })arg4 end:(struct CGPoint { float x1; float x2; })arg5;
+ (void)_drawPathForArrow:(id)arg1 inContext:(struct CGContext { }*)arg2 inPath:(struct CGPath { }*)arg3 pageControllerForPixelAlignmentOrNil:(id)arg4 minimumGrabbableBorderThickness:(float)arg5;
+ (unsigned int)_drawableArrowHeads:(id)arg1;
+ (struct CGPath { }*)_newConcreteTextExclusionPathForAnnotation:(id)arg1 withOptionalAnnotationRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (struct CGPath { }*)_newLinePathForArrow:(id)arg1 withHeads:(BOOL)arg2 fromBezierParameter:(float)arg3 toBezierParameter:(float)arg4 optionalPageController:(id)arg5 optionalContext:(struct CGContext { }*)arg6;
+ (float)_oneDimensionalCubicBezierValueForParameter:(float)arg1 start:(float)arg2 controlPt1:(float)arg3 controlPt2:(float)arg4 end:(float)arg5;

@end
