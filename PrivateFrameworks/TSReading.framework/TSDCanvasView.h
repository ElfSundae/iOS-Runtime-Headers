/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
 */

@interface TSDCanvasView : UIView <UITextLinkInteraction> {
    TSDInteractiveCanvasController * mController;
    <UITextLinkInteraction> * mHyperLinkDelegate;
    <TSDCanvasLayerHosting> * mLayerHost;
}

@property (nonatomic, readonly) TSDCanvasLayer *canvasLayer;
@property (nonatomic) TSDInteractiveCanvasController *controller;
@property (readonly) TSKScrollView *enclosingScrollView;
@property (nonatomic) <UITextLinkInteraction> *hyperLinkDelegate;
@property (nonatomic) <TSDCanvasLayerHosting> *layerHost;
@property (nonatomic, readonly) TSDCanvasView *rootCanvasView;

// Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading

+ (Class)layerClass;

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)cancelInteractionWithLink;
- (id)canvasLayer;
- (id)controller;
- (id)enclosingScrollView;
- (id)hyperLinkDelegate;
- (bool)isInteractingWithLink;
- (id)layerHost;
- (bool)mightHaveLinks;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)rootCanvasView;
- (void)setController:(id)arg1;
- (void)setHyperLinkDelegate:(id)arg1;
- (void)setLayerHost:(id)arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)tapLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)teardown;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)willInteractWithLinkAtPoint:(struct CGPoint { double x1; double x2; })arg1;

// Image: /System/Library/PrivateFrameworks/SilexText.framework/SilexText

- (bool)_accessibilityIsSpeakThisElement;
- (bool)_accessibilitySpeakThisIgnoresAccessibilityElementStatus;
- (id)_accessibilitySpeakThisString;
- (id)_accessibilityTextRectsForSpeakThisStringRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)_isInPreviewPlatter;
- (id)_speakThisElementStrings;
- (id)_speakThisElements;

@end
