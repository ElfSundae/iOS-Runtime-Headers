/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOMapAccessRoad : GEOMapAccessLine <GEOMapRoad> {
    struct shared_ptr<geo::MapEdgeRoad> { 
        struct MapEdgeRoad {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _roadEdge;
    unsigned long long  _roadID;
}

@property (nonatomic, readonly) unsigned long coordinateCount;
@property (nonatomic, readonly) struct { double x1; double x2; }*coordinates;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int formOfWay;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) NSString *internalRoadName;
@property (nonatomic, readonly) BOOL isBridge;
@property (nonatomic, readonly) BOOL isRail;
@property (nonatomic, readonly) BOOL isTunnel;
@property (nonatomic, readonly) double length;
@property (nonatomic, readonly) int rampType;
@property (nonatomic, readonly) int roadClass;
@property (nonatomic, readonly) unsigned long long roadID;
@property (nonatomic, readonly) double roadWidth;
@property (nonatomic, readonly) unsigned int speedLimit;
@property (nonatomic, readonly) BOOL speedLimitIsMPH;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int travelDirection;

+ (double)estimatedWidthForRoad:(struct { struct { id x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned long long x_1_1_7; BOOL x_1_1_8; unsigned long long x_1_1_9; float x_1_1_10; unsigned long long x_1_1_11; id x_1_1_12; } x1; unsigned int x2; unsigned int x3; int x4; int x5; int x6; unsigned int x7; unsigned int x8; union { struct { struct { float x_1_3_1; float x_1_3_2; } x_1_2_1; struct { float x_2_3_1; float x_2_3_2; } x_1_2_2; } x_9_1_1; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_9_1_2; } x9; struct { /* ? */ } *x10; struct { unsigned short x_11_1_1[2]; unsigned short x_11_1_2[2]; } x11; unsigned char x12; BOOL x13; unsigned char x14; BOOL x15; BOOL x16; unsigned char x17; BOOL x18; unsigned char x19; struct _NSRange { unsigned int x_20_1_1; unsigned int x_20_1_2; } x20; BOOL x21; }*)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)findRoadsFrom:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)findRoadsFromNextIntersection:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)findRoadsFromPreviousIntersection:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)findRoadsToNextIntersection:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)findRoadsToPreviousIntersection:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (int)formOfWay;
- (id)initWithMap:(id)arg1 roadEdge:(struct shared_ptr<geo::MapEdgeRoad> { struct MapEdgeRoad {} *x1; struct __shared_weak_count {} *x2; })arg2;
- (id)internalRoadName;
- (BOOL)isBridge;
- (BOOL)isRail;
- (BOOL)isTunnel;
- (int)rampType;
- (int)roadClass;
- (void)roadEdgesWithHandler:(id /* block */)arg1;
- (void)roadFeaturesWithHandler:(id /* block */)arg1;
- (unsigned long long)roadID;
- (double)roadWidth;
- (unsigned int)speedLimit;
- (BOOL)speedLimitIsMPH;
- (id)tileKeys;
- (int)travelDirection;

@end
