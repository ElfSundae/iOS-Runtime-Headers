/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOETAUpdater : NSObject {
    BOOL _allowRequests;
    GEOETATrafficUpdateRequest *_currentETARequest;
    double _debugTimeWindowDuration;
    <GEOETAUpdaterDelegate> *_delegate;
    GEOComposedWaypoint *_destination;
    NSData *_directionsResponseID;
    NSTimer *_etaIdleTimer;
    int _etaState;
    double _lastETARequestTime;
    double _requestInterval;
    GEOComposedRoute *_route;
    GEORouteAttributes *_routeAttributes;
    GEORouteMatch *_routeMatch;
    GEORouteSummaryAttributes *_routeSummaryAttributes;
    BOOL _shouldUpdateTrafficOnRoute;
    BOOL _shouldUseConditionalRequest;
    GEOLocation *_userLocation;
}

@property (nonatomic) BOOL allowRequests;
@property (nonatomic) double debugTimeWindowDuration;
@property (nonatomic) <GEOETAUpdaterDelegate> *delegate;
@property (nonatomic, retain) GEOComposedWaypoint *destination;
@property (nonatomic, retain) NSData *directionsResponseID;
@property (nonatomic) double requestInterval;
@property (nonatomic, retain) GEOComposedRoute *route;
@property (nonatomic, retain) GEORouteAttributes *routeAttributes;
@property (nonatomic, retain) GEORouteMatch *routeMatch;
@property (nonatomic) BOOL shouldUpdateTrafficOnRoute;
@property (nonatomic) BOOL shouldUseConditionalRequest;
@property (nonatomic, retain) GEOLocation *userLocation;

- (double)_calculateNextTransitionTime;
- (void)_clearCurrentETARequest;
- (void)_clearTimer;
- (void)_continueUpdateRequests;
- (void)_createETARequest;
- (void)_fakeResponseForWalkingWithETAUpdateRequest:(id)arg1 currentStep:(id)arg2 percentOfCurrentStepRemaining:(double)arg3;
- (BOOL)_sendETARequest:(id)arg1 isUpdate:(BOOL)arg2;
- (BOOL)_shouldStartConditionalETARequest;
- (void)_startConditionalConnectionETARequest;
- (void)_startStateWaitingForBestTimeStart:(id)arg1;
- (void)_updateCurrentETARequest;
- (BOOL)_updateETAResponse:(id)arg1 withRemainingDistanceFromRequest:(id)arg2;
- (BOOL)_updateRouteWithETATrafficUpdateResponse:(id)arg1;
- (BOOL)allowRequests;
- (void)cancelRequest;
- (id)currentStep;
- (void)dealloc;
- (double)debugTimeWindowDuration;
- (id)delegate;
- (id)destination;
- (id)directionsResponseID;
- (id)init;
- (id)initWithRoute:(id)arg1 destination:(id)arg2 routeAttributes:(id)arg3;
- (double)percentageOfCurrentStepRemaining;
- (double)requestInterval;
- (void)requestUpdate;
- (void)reset;
- (id)route;
- (id)routeAttributes;
- (id)routeMatch;
- (id)routesForETAUpdateRequest;
- (void)setAllowRequests:(BOOL)arg1;
- (void)setDebugTimeWindowDuration:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDirectionsResponseID:(id)arg1;
- (void)setRequestInterval:(double)arg1;
- (void)setRoute:(id)arg1;
- (void)setRouteAttributes:(id)arg1;
- (void)setRouteMatch:(id)arg1;
- (void)setShouldUpdateTrafficOnRoute:(BOOL)arg1;
- (void)setShouldUseConditionalRequest:(BOOL)arg1;
- (void)setUserLocation:(id)arg1;
- (BOOL)shouldUpdateTrafficOnRoute;
- (BOOL)shouldUseConditionalRequest;
- (void)startUpdateRequests;
- (void)stopUpdateRequests;
- (BOOL)updateRouteWithETATrafficUpdateResponse:(id)arg1 step:(id)arg2 percentOfStepRemaining:(double)arg3;
- (id)userLocation;

@end
