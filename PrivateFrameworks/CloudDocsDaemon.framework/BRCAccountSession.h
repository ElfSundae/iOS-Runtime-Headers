/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface BRCAccountSession : NSObject <BRCCloudDocsAppsObserver> {
    NSString *_accountID;
    BOOL _accountIsReady;
    NSNumber *_accountSize;
    BRCAccountWaitOperation *_accountWaitOperation;
    BRCThrottle *_aliasRemovalThrottle;
    NSString *_appSupportDirPath;
    BRCApplyScheduler *_applyScheduler;
    unsigned long long _availableDiskSpace;
    NSString *_cacheDirPath;
    PQLConnection *_clientDB;
    NSMutableDictionary *_clientState;
    int _cloudDocsFD;
    BRCThrottle *_containerResetThrottle;
    BRCThrottle *_containerScanThrottle;
    BRCContainerScheduler *_containerScheduler;
    struct _opaque_pthread_mutex_t { 
        long __sig; 
        BOOL __opaque[40]; 
    } _containersCreationLock;
    struct _opaque_pthread_rwlock_t { 
        long __sig; 
        BOOL __opaque[124]; 
    } _containersLock;
    CDSession *_coreDuetSession;
    NSString *_databaseID;
    id /* block */ _dbProfilingHook;
    NSURL *_dbURL;
    NSObject<OS_dispatch_source> *_dbWatcher;
    NSObject<OS_dispatch_queue> *_dbWatcherQueue;
    BRCDeadlineScheduler *_defaultScheduler;
    BRCDiskSpaceReclaimer *_diskReclaimer;
    BRCFSDownloader *_fsDownloader;
    BRCFSEventsMonitor *_fsEventsMonitor;
    BRCFSReader<BRCFileCoordinationReading> *_fsReader;
    BRCFSUploader *_fsUploader;
    BRCFSWriter<BRCFileCoordinationWriting> *_fsWriter;
    BRCGlobalProgress *_globalProgress;
    BOOL _isCancelled;
    BOOL _isGreedy;
    unsigned long long _lastDiskSpaceCheckTime;
    BRCThrottle *_lostItemThrottle;
    NSHashTable *_miscOperations;
    BRCNotificationManager *_notificationManager;
    BRCThrottle *_operationFailureThrottle;
    NSMutableDictionary *_privateLocalContainersByID;
    NSMutableDictionary *_privateServerZonesByID;
    struct br_pacer_t { } *_reschedulePendingDiskItemsPacer;
    BOOL _resumed;
    NSString *_rootDirPath;
    PQLConnection *_serverDB;
    BRCServerPersistedState *_serverState;
    NSMutableDictionary *_serverZoneByZoneRowID;
    NSMutableDictionary *_sharedLocalContainersByMangledID;
    NSMutableDictionary *_sharedServerZonesByMangledID;
    BRCStageRegistry *_stageRegistry;
    BRCThrottle *_syncAppContainerThrottle;
    NSMutableDictionary *_syncContexts;
    NSString *_ubiquityTokenSalt;
    struct br_pacer_t { } *_updateDiskSpacePacer;
    BRCUserNotification *_userNotification;
    NSMutableSet *_xpcClients;
}

@property (nonatomic, readonly) NSString *accountID;
@property (nonatomic, readonly) BRCAccountWaitOperation *accountWaitOperation;
@property (nonatomic, readonly) BRCThrottle *aliasRemovalThrottle;
@property (nonatomic, retain) NSString *appSupportDirPath;
@property (nonatomic, readonly) BRCApplyScheduler *applyScheduler;
@property (nonatomic, readonly) unsigned long long availableDiskSpace;
@property (nonatomic, retain) NSString *cacheDirPath;
@property (nonatomic, readonly) PQLConnection *clientDB;
@property (nonatomic, readonly) NSMutableDictionary *clientState;
@property (nonatomic, readonly) BRCThrottle *containerResetThrottle;
@property (nonatomic, readonly) BRCThrottle *containerScanThrottle;
@property (nonatomic, readonly) BRCContainerScheduler *containerScheduler;
@property (nonatomic, readonly) CDSession *coreDuetSession;
@property (nonatomic, readonly) NSString *databaseID;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) BRCDeadlineScheduler *defaultScheduler;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) BRCDiskSpaceReclaimer *diskReclaimer;
@property (nonatomic, readonly) BRCFSDownloader *fsDownloader;
@property (nonatomic, readonly) BRCFSEventsMonitor *fsEventsMonitor;
@property (nonatomic, readonly) BRCFSReader<BRCFileCoordinationReading> *fsReader;
@property (nonatomic, readonly) BRCFSUploader *fsUploader;
@property (nonatomic, readonly) BRCFSWriter<BRCFileCoordinationWriting> *fsWriter;
@property (nonatomic, readonly) BRCGlobalProgress *globalProgress;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) BOOL isCancelled;
@property (nonatomic, readonly) BOOL isGreedy;
@property (nonatomic, readonly) BRCThrottle *lostItemThrottle;
@property (nonatomic, readonly) BRCNotificationManager *notificationManager;
@property (nonatomic, readonly) BRCThrottle *operationFailureThrottle;
@property (nonatomic, readonly) BRCRelativePath *root;
@property (nonatomic, retain) NSString *rootDirPath;
@property (nonatomic, readonly) PQLConnection *serverDB;
@property (nonatomic, readonly) BRCServerPersistedState *serverState;
@property (nonatomic, readonly) BRCStageRegistry *stageRegistry;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BRCThrottle *syncAppContainerThrottle;
@property (nonatomic, readonly) NSString *ubiquityTokenSalt;
@property (nonatomic, readonly) BRCUserNotification *userNotification;

+ (id)sessionForDumpingDatabasesAtURL:(id)arg1;

- (void).cxx_destruct;
- (BOOL)_attachDatabase:(id)arg1 toConnection:(id)arg2 error:(id*)arg3;
- (BOOL)_checkIntegrity:(id)arg1 serverTruth:(BOOL)arg2 error:(id*)arg3;
- (id)_containerMetadataRecordsToSaveWithBatchSize:(unsigned int)arg1;
- (void)_createAccountSupportPathIfNeeded:(id)arg1 protectParent:(BOOL)arg2;
- (BOOL)_createLocalContainer:(id)arg1 ownerName:(id)arg2;
- (BOOL)_createPrivateLocalContainer:(id)arg1;
- (BOOL)_createSharedLocalContainer:(id)arg1 ownerName:(id)arg2;
- (BOOL)_deleteLocalContainer:(id)arg1;
- (BOOL)_dumpContainer:(id)arg1 toContext:(id)arg2 error:(id*)arg3;
- (BOOL)_dumpContainerStatus:(id)arg1 toContext:(id)arg2 error:(id*)arg3;
- (void)_loadContainersFromDisk;
- (id)_loadedContainers;
- (id)_localContainersMatchingSearchString:(id)arg1 db:(id)arg2;
- (BOOL)_openClientTruthConnectionWithError:(id*)arg1;
- (BOOL)_openServerTruthConnectionWithError:(id*)arg1;
- (void)_registerLastBootIfNeeded:(id)arg1 table:(struct NSObject { Class x1; }*)arg2;
- (BOOL)_setupBackupDetector:(struct backup_detector { unsigned long long x1; unsigned long long x2; unsigned long long x3; }*)arg1 error:(id*)arg2;
- (BOOL)_setupConnection:(id)arg1 databaseName:(id)arg2 error:(id*)arg3;
- (void)_setupSharedPackageExtensionsPlist;
- (void)_setupThrottles;
- (void)_showiCloudDriveAppUpSellDialogIfNeeded;
- (void)_startWatcher;
- (BOOL)_stepBackupDetector:(struct backup_detector { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1 newState:(struct backup_detector { unsigned long long x1; unsigned long long x2; unsigned long long x3; }*)arg2 error:(id*)arg3;
- (id)_unloadContainers;
- (id)accountID;
- (unsigned long long)accountSize;
- (void)accountSizeDidChange;
- (id)accountWaitOperation;
- (void)addMiscOperation:(id)arg1;
- (id)aliasRemovalThrottle;
- (id)appSupportDirPath;
- (id)applyScheduler;
- (unsigned long long)availableDiskSpace;
- (void)availableDiskSpaceDidChange;
- (unsigned long long)availableDiskSpaceUsingCache:(BOOL)arg1;
- (unsigned long long)availableDiskSpaceUsingCache:(BOOL)arg1 schedulingPendingDiskItemsIfNeeded:(BOOL)arg2;
- (BOOL)backupDatabaseToURL:(id)arg1 error:(id*)arg2;
- (struct PQLResultSet { Class x1; }*)bouncedItemsEnumerator;
- (id)cacheDirPath;
- (id)clientDB;
- (id)clientState;
- (void)close;
- (void)closeAndResetLocalState;
- (BOOL)closeDBWithError:(id*)arg1;
- (void)closeXPCClientsSync;
- (void)cloudDocsAppsListDidChange:(id)arg1;
- (id)containerByMangledID:(id)arg1;
- (id)containerResetThrottle;
- (id)containerScanThrottle;
- (id)containerScheduler;
- (id)coreDuetSession;
- (id)createDeviceKeyForNameInServerDB:(id)arg1;
- (id)createOwnerKeyForName:(id)arg1;
- (id)createPrivateContainerIfNeeded:(id)arg1;
- (BOOL)createPrivateContainerOnDisk:(id)arg1 createdRoot:(BOOL*)arg2 createdDocuments:(BOOL*)arg3;
- (BOOL)createServerZone:(id)arg1;
- (id)createSharedContainerIfNeeded:(id)arg1 ownerName:(id)arg2;
- (BOOL)createSharedContainerOnDiskWithMangledID:(id)arg1 createdRoot:(BOOL*)arg2;
- (id)databaseID;
- (void)dealloc;
- (id)defaultScheduler;
- (id)defaultSyncContext;
- (BOOL)deleteServerZone:(id)arg1;
- (id)description;
- (void)destroyLocalData;
- (void)destroyLocalDataWithCompletionBlock:(id /* block */)arg1;
- (void)destroySharedContainer:(id)arg1;
- (id)deviceKeyForName:(id)arg1 db:(id)arg2;
- (void)disableDatabaseProfilingForDB:(id)arg1;
- (id)diskReclaimer;
- (BOOL)dumpDatabaseToFileHandle:(id)arg1 containerID:(id)arg2 error:(id*)arg3;
- (void)dumpMiscOperationsToContext:(id)arg1;
- (BOOL)dumpStatusToFileHandle:(id)arg1 containerID:(id)arg2 error:(id*)arg3;
- (void)dumpXPCClientsToContext:(id)arg1;
- (void)enableDatabaseProfilingForDB:(id)arg1;
- (void)enumeratePrivateContainers:(id /* block */)arg1;
- (void)enumerateServerZones:(id /* block */)arg1;
- (void)enumerateSharedContainers:(id /* block */)arg1;
- (id)fsDownloader;
- (id)fsEventsMonitor;
- (id)fsReader;
- (id)fsUploader;
- (id)fsWriter;
- (id)globalProgress;
- (id)init;
- (id)initWithAccountID:(id)arg1 salt:(id)arg2;
- (BOOL)isCancelled;
- (BOOL)isGreedy;
- (struct PQLResultSet { Class x1; }*)itemsNeedingIndexingEnumeratorWithMinNotifRank:(unsigned long long)arg1 maxNotifRank:(unsigned long long)arg2;
- (id)localContainersMatchingSearchString:(id)arg1 db:(id)arg2 error:(id*)arg3;
- (id)lostItemThrottle;
- (void)markAccountMigrationComplete;
- (id)newConnection:(id)arg1;
- (id)newConnectionWithLabel:(id)arg1 error:(id*)arg2;
- (id)newPrivateLocalContainerFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)newPrivateServerZoneFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)newSharedLocalContainerFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)newSharedServerZoneFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)notificationManager;
- (BOOL)openDBWithError:(id*)arg1;
- (BOOL)openWithError:(id*)arg1;
- (id)operationFailureThrottle;
- (id)ownerIdentityForKey:(id)arg1;
- (id)ownerIdentityForName:(id)arg1;
- (id)ownerIdentityForName:(id)arg1 db:(id)arg2;
- (id)ownerKeyForName:(id)arg1 db:(id)arg2;
- (id)ownerNameForKey:(id)arg1 db:(id)arg2;
- (id)pendingDownloadItemWithDocumentID:(unsigned int)arg1;
- (void)preventDatabaseFromBeingReused;
- (id)privateContainerByID:(id)arg1;
- (id)privateContainerByMangledID:(id)arg1;
- (id)privateLocalContainerByID:(id)arg1 db:(id)arg2;
- (struct PQLResultSet { Class x1; }*)privateLocalContainersEnumerator:(id)arg1;
- (id)privateServerZoneByID:(id)arg1 db:(id)arg2;
- (struct PQLResultSet { Class x1; }*)privateServerZonesEnumerator:(id)arg1;
- (void)registerClient:(id)arg1;
- (void)resume;
- (id)root;
- (id)rootDirPath;
- (BOOL)saveLocalContainerToDB:(id)arg1;
- (BOOL)saveServerZoneToDB:(id)arg1;
- (id)serverDB;
- (id)serverState;
- (id)serverZoneByRowID:(id)arg1;
- (void)setAppSupportDirPath:(id)arg1;
- (void)setCacheDirPath:(id)arg1;
- (void)setOwnerIdentity:(id)arg1 forName:(id)arg2;
- (void)setRootDirPath:(id)arg1;
- (void)setupDatabase;
- (id)sharedContainerByMangledID:(id)arg1;
- (struct PQLResultSet { Class x1; }*)sharedLocalContainersEnumerator:(id)arg1;
- (id)sharedServerZoneByName:(id)arg1 ownerName:(id)arg2 db:(id)arg3;
- (struct PQLResultSet { Class x1; }*)sharedServerZonesEnumerator:(id)arg1;
- (id)sharedSyncContext;
- (id)singleLocalContainerMatchingSearchString:(id)arg1 db:(id)arg2 error:(id*)arg3;
- (id)stageRegistry;
- (struct PQLResultSet { Class x1; }*)stagedItemsEnumerator;
- (void)stopDBWatcher;
- (id)syncAppContainerThrottle;
- (id)syncContextForContextIdentifier:(id)arg1 isShared:(BOOL)arg2;
- (id)syncContextForZone:(id)arg1;
- (id)syncContextForZone:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)ubiquityTokenSalt;
- (void)unregisterClient:(id)arg1;
- (void)userDefaultsChanged;
- (id)userNotification;
- (BOOL)validateDatabase:(id)arg1 serverTruth:(BOOL)arg2 error:(id*)arg3;

@end
