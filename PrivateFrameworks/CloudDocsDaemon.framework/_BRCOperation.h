/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface _BRCOperation : NSOperation {
    unsigned long long _activityID;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_os_transaction> *_executionTransaction;
    id /* block */ _finishBlock;
    BOOL _finished;
    NSObject<OS_dispatch_group> *_group;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSError *_lastError;
    NSDate *_lastTryDate;
    id _logSections;
    id /* block */ _mainBlock;
    NSDate *_nextTryDate;
    BRCThrottle *_operationThrottle;
    unsigned char _operationUUID;
    NSObject<OS_dispatch_source> *_retryTimer;
    NSDate *_startDate;
    BRCSyncContext *_syncContext;
    long long _throttleHash;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, readonly) NSError *error;
@property (getter=isExecuting, nonatomic) BOOL executing;
@property (nonatomic, copy) id /* block */ finishBlock;
@property (getter=isFinished, nonatomic) BOOL finished;
@property (nonatomic, readonly) id logSections;
@property (nonatomic, copy) id /* block */ mainBlock;
@property (nonatomic, readonly) NSUUID *operationID;
@property (nonatomic) BRCThrottle *operationThrottle;
@property (nonatomic, readonly) BRCSyncContext *syncContext;
@property (nonatomic, readonly) BOOL usesBackgroundSession;

- (void).cxx_destruct;
- (void)_addRegisterSubscriptionForZoneID:(id)arg1 isOptimisticSubscribe:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)_addZoneCreationWithZoneID:(id)arg1 completion:(id /* block */)arg2;
- (void)_completedWithResult:(id)arg1 error:(id)arg2;
- (void)_executeAndBumpThrottle:(id)arg1;
- (BOOL)_finishIfCancelled;
- (void)_main;
- (void)_scheduleExecutionWithPreviousError:(id)arg1 throttle:(id)arg2;
- (void)addSubOperation:(id)arg1;
- (void)addSubOperation:(id)arg1 overrideContext:(id)arg2 allowsCellularAccess:(id)arg3;
- (void)addZoneCreationAndRegisterSubscriptionWithZoneID:(id)arg1 completion:(id /* block */)arg2;
- (id)callbackQueue;
- (void)cancel;
- (void)completedWithResult:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)description;
- (id)descriptionWithContext:(id)arg1;
- (id)error;
- (id /* block */)finishBlock;
- (BOOL)finishIfCancelled;
- (void)finishWithResult:(id)arg1 error:(id)arg2;
- (id)init;
- (id)initWithName:(id)arg1 syncContext:(id)arg2;
- (id)initWithName:(id)arg1 syncContext:(id)arg2 group:(id)arg3;
- (id)initWithName:(id)arg1 zone:(id)arg2;
- (id)initWithName:(id)arg1 zone:(id)arg2 group:(id)arg3;
- (BOOL)isConcurrent;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (id)logSections;
- (void)main;
- (id /* block */)mainBlock;
- (id)operationID;
- (id)operationThrottle;
- (void)schedule;
- (void)setExecuting:(BOOL)arg1;
- (void)setFinishBlock:(id /* block */)arg1;
- (void)setFinished:(BOOL)arg1;
- (void)setMainBlock:(id /* block */)arg1;
- (void)setOperationThrottle:(id)arg1;
- (BOOL)shouldRetryForError:(id)arg1;
- (void)start;
- (unsigned long long)startActivity;
- (id)stateWithContext:(id)arg1;
- (id)subclassableDescriptionWithContext:(id)arg1;
- (id)syncContext;
- (BOOL)usesBackgroundSession;

@end
