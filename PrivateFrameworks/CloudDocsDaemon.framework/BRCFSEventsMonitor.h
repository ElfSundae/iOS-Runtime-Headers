/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface BRCFSEventsMonitor : NSObject <BRCLowDiskDelegate, BRCModule> {
    PQLConnection *_db;
    <BRCFSEventsDelegate> *_delegate;
    NSString *_devicePath;
    BOOL _drainEvents;
    NSObject<OS_dispatch_source> *_historicalEventSource;
    BRCFSEventsPersistedState *_persistedState;
    BRCFSEventsPersistedState *_rendezVous;
    int _resetCount;
    BRCRelativePath *_root;
    NSString *_rootPathRelativeToDevice;
    NSObject<OS_dispatch_source> *_rootVnodeWatcher;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    BRCAccountSession *_session;
    struct __FSEventStream { } *_stream;
    NSObject<OS_dispatch_queue> *_streamQueue;
    int _suspendCount;
    BOOL _volumeHasLowDiskSpace;
    BOOL _volumeIsCaseSensitive;
}

@property (setter=setDB:, nonatomic, retain) PQLConnection *db;
@property (readonly, copy) NSString *debugDescription;
@property <BRCFSEventsDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL isCancelled;
@property (nonatomic, readonly) BRCRelativePath *root;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL volumeIsCaseSensitive;

- (void).cxx_destruct;
- (void)_cancel;
- (void)cancel;
- (void)close;
- (id)db;
- (void)dealloc;
- (id)delegate;
- (void)didProcessEventID:(unsigned long long)arg1;
- (void)fseventAtPath:(id)arg1 withFlags:(unsigned long)arg2 andID:(unsigned long long)arg3 eventIndex:(unsigned int)arg4 eventCount:(unsigned int)arg5 initialScan:(BOOL)arg6;
- (id)initWithAccountSession:(id)arg1;
- (BOOL)isCancelled;
- (void)lowDiskStatusChangedForDevice:(int)arg1 hasEnoughSpace:(BOOL)arg2;
- (BOOL)openWithRootPath:(id)arg1 error:(id*)arg2;
- (void)reset;
- (void)resume;
- (id)root;
- (void)setDB:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsCancelled:(BOOL)arg1;
- (BOOL)setUpRootAtPath:(id)arg1 error:(id*)arg2;
- (BOOL)setUpStreamSynchronously:(BOOL)arg1 error:(id*)arg2;
- (void)signalAfterCurrentFSEvent:(id)arg1;
- (void)stopWatcher;
- (void)suspend;
- (BOOL)volumeIsCaseSensitive;

@end
