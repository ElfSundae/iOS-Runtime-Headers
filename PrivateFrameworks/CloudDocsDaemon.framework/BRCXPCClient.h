/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface BRCXPCClient : NSObject <BRCForegroundClient, BRCProcessMonitorDelegate> {
    NSOperationQueue *_acceptOperationQueue;
    int _clientPid;
    BRCClientPrivilegesDescriptor *_clientPriviledgesDescriptor;
    NSXPCConnection *_connection;
    NSCountedSet *_containers;
    BOOL _dieOnInvalidate;
    unsigned int _invalidated;
    unsigned int _isForeground;
    BOOL _isUsingUbiquity;
    NSMutableDictionary *_runningAcceptOperations;
    BRCAccountSession *_session;
    brc_task_tracker *_tracker;
    struct { 
        unsigned int val[8]; 
    } auditToken;
}

@property (nonatomic, readonly) NSString *bundleID;
@property (nonatomic, readonly) NSXPCConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSString *defaultContainerID;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) BOOL dieOnInvalidate;
@property (nonatomic, readonly) NSSet *entitledContainerIDs;
@property (nonatomic, readonly) BOOL hasPrivateSharingInterfaceEntitlement;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic) BOOL isUsingUbiquity;
@property (nonatomic, retain) BRCAccountSession *session;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(BOOL)arg3 reply:(id /* block */)arg4;
- (BOOL)_canCreateContainerWithID:(id)arg1 error:(id*)arg2;
- (id)_disabledBundleIDs;
- (BOOL)_entitlementBooleanValueForKey:(id)arg1;
- (id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2;
- (BOOL)_hasAccessToContainerID:(id)arg1 error:(id*)arg2;
- (BOOL)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id*)arg2;
- (BOOL)_isAutomationEntitled;
- (BOOL)_isContainerProxyEntitled;
- (BOOL)_isContainerProxyWithError:(id*)arg1;
- (void)_setupContainerID:(id)arg1 andSendReply:(id /* block */)arg2;
- (void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned int)arg2 options:(unsigned int)arg3 error:(id)arg4 reply:(id /* block */)arg5;
- (void)_startMonitoringProcessIfNeeded;
- (void)_stopMonitoringProcess;
- (void)accessLogicalOrPhysicalURL:(id)arg1 needsWrite:(BOOL)arg2 asynchronously:(BOOL)arg3 handler:(id /* block */)arg4;
- (void)addContainer:(id)arg1;
- (id)bundleID;
- (BOOL)canAccessPath:(const char *)arg1 needsWrite:(BOOL)arg2;
- (BOOL)canAccessPhysicalURL:(id)arg1;
- (BOOL)cloudEnabledStatus;
- (id)connection;
- (id)defaultContainerID;
- (id)description;
- (BOOL)dieOnInvalidate;
- (void)dumpToContext:(id)arg1;
- (id)entitledContainerIDs;
- (BOOL)hasPrivateSharingInterfaceEntitlement;
- (id)identifier;
- (id)initWithConnection:(id)arg1;
- (void)invalidate;
- (BOOL)isSandboxed;
- (BOOL)isUsingUbiquity;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id*)arg2;
- (void)process:(int)arg1 didBecomeForeground:(BOOL)arg2;
- (void)removeContainer:(id)arg1;
- (id)session;
- (void)setIsUsingUbiquity:(BOOL)arg1;
- (void)setPrivilegesDescriptor:(id)arg1;
- (void)setSession:(id)arg1;
- (void)setupNonSandboxedAccessForUbiquityContainers:(id)arg1 forBundleID:(id)arg2;
- (id)setupPrivateContainer:(id)arg1 root:(id)arg2 error:(id*)arg3;
- (void)wait;

@end
