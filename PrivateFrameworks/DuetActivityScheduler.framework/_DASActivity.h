/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler
 */

@interface _DASActivity : NSObject <NSCopying, NSSecureCoding> {
    CDAttribute * _admissionAttribute;
    BOOL  _afterUserIsInactive;
    BOOL  _beforeDaysFirstActivity;
    BOOL  _beforeUserIsActive;
    BOOL  _budgeted;
    unsigned long long  _budgetingToken;
    NSString * _bundleId;
    BOOL  _bypassesPredictions;
    BOOL  _cancelAfterDeadline;
    BOOL  _cpuIntensive;
    BOOL  _darkWakeEligible;
    BOOL  _diskIntensive;
    unsigned int  _duration;
    _DASFileProtection * _fileProtection;
    NSString * _groupName;
    NSObject<OS_dispatch_queue> * _handlerQueue;
    BOOL  _isUpload;
    double  _lastComputedScore;
    NSDate * _lastScored;
    NSString * _launchReason;
    BOOL  _memoryIntensive;
    CDAttribute * _meteringAttribute;
    NSString * _name;
    int  _pid;
    NSMutableDictionary * _policyScores;
    double  _predictedOptimalScore;
    NSDate * _predictedOptimalStartDate;
    NSArray * _relatedApplications;
    int  _relevancy;
    BOOL  _requestsApplicationLaunch;
    BOOL  _requiresDeviceInactivity;
    BOOL  _requiresInexpensiveNetworking;
    BOOL  _requiresNetwork;
    BOOL  _requiresPlugin;
    NSArray * _schedulerRecommendedApplications;
    unsigned int  _schedulingPriority;
    NSDate * _startAfter;
    NSDate * _startBefore;
    NSDate * _startDate;
    id /* block */  _startHandler;
    NSDate * _submitDate;
    BOOL  _supportsAnyApplication;
    id /* block */  _suspendHandler;
    BOOL  _suspendRequested;
    BOOL  _suspendable;
    int  _targetDevice;
    unsigned int  _transferSize;
    BOOL  _triggersRestart;
    NSDictionary * _userInfo;
}

@property (nonatomic, retain) CDAttribute *admissionAttribute;
@property (nonatomic) BOOL afterUserIsInactive;
@property (nonatomic) BOOL beforeDaysFirstActivity;
@property (nonatomic) BOOL beforeUserIsActive;
@property (nonatomic) BOOL budgeted;
@property (nonatomic) unsigned long long budgetingToken;
@property (nonatomic, retain) NSString *bundleId;
@property (nonatomic) BOOL bypassesPredictions;
@property (nonatomic) BOOL cancelAfterDeadline;
@property (nonatomic) BOOL cpuIntensive;
@property (nonatomic) BOOL darkWakeEligible;
@property (nonatomic) BOOL diskIntensive;
@property (nonatomic) unsigned int duration;
@property (nonatomic, copy) _DASFileProtection *fileProtection;
@property (nonatomic, copy) NSString *groupName;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *handlerQueue;
@property (nonatomic) BOOL isUpload;
@property (nonatomic) double lastComputedScore;
@property (retain) NSDate *lastScored;
@property (nonatomic, copy) NSString *launchReason;
@property (nonatomic) BOOL memoryIntensive;
@property (nonatomic, retain) CDAttribute *meteringAttribute;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) int pid;
@property (nonatomic, retain) NSMutableDictionary *policyScores;
@property (nonatomic) double predictedOptimalScore;
@property (nonatomic, retain) NSDate *predictedOptimalStartDate;
@property (nonatomic, retain) NSArray *relatedApplications;
@property (nonatomic) int relevancy;
@property (nonatomic) BOOL requestsApplicationLaunch;
@property (nonatomic) BOOL requiresDeviceInactivity;
@property (nonatomic) BOOL requiresInexpensiveNetworking;
@property (nonatomic) BOOL requiresNetwork;
@property (nonatomic) BOOL requiresPlugin;
@property (nonatomic, retain) NSArray *schedulerRecommendedApplications;
@property (nonatomic) unsigned int schedulingPriority;
@property (nonatomic, retain) NSDate *startAfter;
@property (nonatomic, retain) NSDate *startBefore;
@property (retain) NSDate *startDate;
@property (nonatomic, copy) id /* block */ startHandler;
@property (nonatomic, retain) NSDate *submitDate;
@property (nonatomic) BOOL supportsAnyApplication;
@property (nonatomic, copy) id /* block */ suspendHandler;
@property (nonatomic) BOOL suspendRequested;
@property (nonatomic) BOOL suspendable;
@property (nonatomic) int targetDevice;
@property (nonatomic) unsigned int transferSize;
@property (nonatomic) BOOL triggersRestart;
@property (nonatomic, retain) NSDictionary *userInfo;

+ (id)activityWithName:(id)arg1 priority:(unsigned int)arg2 duration:(unsigned int)arg3 startingAfter:(id)arg4 startingBefore:(id)arg5;
+ (id)anyApplicationActivityWithName:(id)arg1 priority:(unsigned int)arg2 duration:(unsigned int)arg3 startingAfter:(id)arg4 startingBefore:(id)arg5 limitedToApplications:(id)arg6;
+ (id)applicationLaunchActivityWithName:(id)arg1 priority:(unsigned int)arg2 forApplication:(id)arg3 withReason:(id)arg4 duration:(unsigned int)arg5 startingAfter:(id)arg6 startingBefore:(id)arg7;
+ (unsigned int)cleanDuration:(unsigned int)arg1;
+ (unsigned int)cleanSchedulingPriority:(unsigned int)arg1;
+ (unsigned int)cleanTransferSize:(unsigned int)arg1;
+ (id)networkingActivityWithName:(id)arg1 priority:(unsigned int)arg2 transferSize:(unsigned int)arg3 isUpload:(BOOL)arg4 expensiveNetworkingAllowed:(BOOL)arg5 startingAfter:(id)arg6 startingBefore:(id)arg7;
+ (id)prettySchedulingPriorityDescription:(unsigned int)arg1;
+ (id)sharedDateFormatter;
+ (BOOL)supportsSecureCoding;
+ (id)validClassesForUserInfoSerialization;

- (void).cxx_destruct;
- (id)admissionAttribute;
- (BOOL)afterUserIsInactive;
- (BOOL)beforeDaysFirstActivity;
- (BOOL)beforeUserIsActive;
- (BOOL)budgeted;
- (unsigned long long)budgetingToken;
- (id)bundleId;
- (BOOL)bypassesPredictions;
- (BOOL)cancelAfterDeadline;
- (double)compatibilityWith:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)cpuIntensive;
- (BOOL)darkWakeEligible;
- (id)debugDescription;
- (id)description;
- (BOOL)diskIntensive;
- (unsigned int)duration;
- (void)encodeWithCoder:(id)arg1;
- (id)fileProtection;
- (id)groupName;
- (id)handlerQueue;
- (BOOL)hasManyConstraints;
- (unsigned int)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 priority:(unsigned int)arg2 duration:(unsigned int)arg3 startingAfter:(id)arg4 startingBefore:(id)arg5;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isIntensive;
- (BOOL)isUpload;
- (double)lastComputedScore;
- (id)lastScored;
- (id)launchReason;
- (BOOL)memoryIntensive;
- (id)meteringAttribute;
- (id)name;
- (int)pid;
- (id)policyScores;
- (double)predictedOptimalScore;
- (id)predictedOptimalStartDate;
- (id)relatedApplications;
- (int)relevancy;
- (BOOL)requestsApplicationLaunch;
- (BOOL)requiresDeviceInactivity;
- (BOOL)requiresInexpensiveNetworking;
- (BOOL)requiresNetwork;
- (BOOL)requiresPlugin;
- (id)schedulerRecommendedApplications;
- (unsigned int)schedulingPriority;
- (void)setAdmissionAttribute:(id)arg1;
- (void)setAfterUserIsInactive:(BOOL)arg1;
- (void)setBeforeDaysFirstActivity:(BOOL)arg1;
- (void)setBeforeUserIsActive:(BOOL)arg1;
- (void)setBudgeted:(BOOL)arg1;
- (void)setBudgetingToken:(unsigned long long)arg1;
- (void)setBundleId:(id)arg1;
- (void)setBypassesPredictions:(BOOL)arg1;
- (void)setCancelAfterDeadline:(BOOL)arg1;
- (void)setCpuIntensive:(BOOL)arg1;
- (void)setDarkWakeEligible:(BOOL)arg1;
- (void)setDiskIntensive:(BOOL)arg1;
- (void)setDuration:(unsigned int)arg1;
- (void)setFileProtection:(id)arg1;
- (void)setGroupName:(id)arg1;
- (void)setHandlerQueue:(id)arg1;
- (void)setIsUpload:(BOOL)arg1;
- (void)setLastComputedScore:(double)arg1;
- (void)setLastScored:(id)arg1;
- (void)setLaunchReason:(id)arg1;
- (void)setMemoryIntensive:(BOOL)arg1;
- (void)setMeteringAttribute:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPid:(int)arg1;
- (void)setPolicyScores:(id)arg1;
- (void)setPredictedOptimalScore:(double)arg1;
- (void)setPredictedOptimalStartDate:(id)arg1;
- (void)setRelatedApplications:(id)arg1;
- (void)setRelevancy:(int)arg1;
- (void)setRequestsApplicationLaunch:(BOOL)arg1;
- (void)setRequiresDeviceInactivity:(BOOL)arg1;
- (void)setRequiresInexpensiveNetworking:(BOOL)arg1;
- (void)setRequiresNetwork:(BOOL)arg1;
- (void)setRequiresPlugin:(BOOL)arg1;
- (void)setSchedulerRecommendedApplications:(id)arg1;
- (void)setSchedulingPriority:(unsigned int)arg1;
- (void)setStartAfter:(id)arg1;
- (void)setStartBefore:(id)arg1;
- (void)setStartDate:(id)arg1;
- (void)setStartHandler:(id /* block */)arg1;
- (void)setSubmitDate:(id)arg1;
- (void)setSupportsAnyApplication:(BOOL)arg1;
- (void)setSuspendHandler:(id /* block */)arg1;
- (void)setSuspendRequested:(BOOL)arg1;
- (void)setSuspendable:(BOOL)arg1;
- (void)setTargetDevice:(int)arg1;
- (void)setTransferSize:(unsigned int)arg1;
- (void)setTriggersRestart:(BOOL)arg1;
- (void)setUserInfo:(id)arg1;
- (id)shortDescription;
- (id)startAfter;
- (id)startBefore;
- (id)startDate;
- (id /* block */)startHandler;
- (id)submitDate;
- (BOOL)supportsAnyApplication;
- (id /* block */)suspendHandler;
- (BOOL)suspendRequested;
- (BOOL)suspendable;
- (int)targetDevice;
- (BOOL)timewiseEligibleAtDate:(id)arg1;
- (unsigned int)transferSize;
- (BOOL)triggersRestart;
- (id)userInfo;

@end
