/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
 */

@interface SCRCGestureFactory : NSObject {
    unsigned int  _absoluteFingerCount;
    struct { 
        float horizontal; 
        float vertical; 
    }  _axisFlipper;
    /* Warning: unhandled struct encoding: '{?="track"@"tap"@"gutterUp"@"splitTap"@"canSplitTap"@}' */ struct { 
        id track; 
    }  _delegate;
    int  _direction;
    float  _directionalSlope;
    int  _directions;
    float  _distance;
    double  _echoWaitTime;
    struct SCRCFingerState { 
        unsigned int identifier; 
        int xDirection; 
        int yDirection; 
        struct SCRCMathAverageValue { 
            unsigned int samples; 
            float fifo[50]; 
            int fifoIndex; 
            float sum; 
            float average; 
            float current; 
        } normalizedVelocityPerSample; 
        struct SCRCMathAverageValue { 
            unsigned int samples; 
            float fifo[50]; 
            int fifoIndex; 
            float sum; 
            float average; 
            float current; 
        } deltaXPerSample; 
        struct SCRCMathAverageValue { 
            unsigned int samples; 
            float fifo[50]; 
            int fifoIndex; 
            float sum; 
            float average; 
            float current; 
        } deltaYPerSample; 
        struct SCRCMathAverageValue { 
            unsigned int samples; 
            float fifo[50]; 
            int fifoIndex; 
            float sum; 
            float average; 
            float current; 
        } distancePerSample; 
        float distanceTraveledWithInertiaApplied; 
        BOOL dragStalled; 
        unsigned int type; 
        struct CGPoint { 
            float x; 
            float y; 
        } startTouchPoint; 
        struct CGPoint { 
            float x; 
            float y; 
        } mostRecentTouchPoint; 
        struct CGPoint { 
            float x; 
            float y; 
        } lastDownPoint; 
        float orbValue; 
        float altitude; 
        float azimuth; 
    }  _finger;
    unsigned short  _fingerCount;
    float  _flickVelocityThreshold;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _gutterFrame;
    SCRCTargetSelectorTimer * _gutterUpTimer;
    BOOL  _inTapSpeedRegionForDownEvent;
    float  _lastDegrees;
    double  _lastDownTime;
    unsigned short  _lastFingerCount;
    double  _lastGutterDownTime;
    double  _lastTime;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _mainFrame;
    float  _maxDimension;
    int  _orientation;
    double  _potentialTrackingStartTimestamp;
    BOOL  _requireUp;
    float  _scaledTrackingDistance;
    BOOL  _setTrackingTimer;
    struct { 
        SCRCGestureFactory *factory; 
        BOOL isSplitting; 
        BOOL isTapping; 
        BOOL fastTrack; 
        BOOL tapDead; 
        BOOL timedOut; 
        BOOL active; 
        unsigned int fingerIdentifier; 
        double fingerDownTime; 
        struct CGPoint { 
            float x; 
            float y; 
        } startTapLocation; 
        struct CGPoint { 
            float x; 
            float y; 
        } lastTapLocation; 
        struct CGPoint { 
            float x; 
            float y; 
        } primaryFingerLocation; 
        float tapDistance; 
        int state; 
    }  _split;
    float  _stallDistance;
    float  _startDegrees;
    float  _startDistance;
    int  _state;
    struct { 
        BOOL isFingerCurrentlyDown; 
        BOOL dead; 
        BOOL gutterHasBeenTouched; 
        unsigned int numFingersInCurrentGestureEvent; 
        unsigned int totalNumFingersInGesture; 
        unsigned int count; 
        struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } frame; 
        struct CGPoint { 
            float x; 
            float y; 
        } location[8]; 
        struct CGPoint { 
            float x; 
            float y; 
        } locationPerTap[8]; 
        double thisTime; 
        double lastTime; 
    }  _tap;
    unsigned int  _tapCount;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _tapFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _tapMultiFrame;
    int  _tapSpeedFingerCount;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _tapSpeedRegion;
    SCRCTargetSelectorTimer * _tapTimer;
    double  _tapVelocityThreshold;
    double  _tapVelocityThresholdForRegion;
    float  _thumbRegion;
    BOOL  _thumbRejectionEnabled;
    SCRCTargetSelectorTimer * _trackingTimer;
}

@property (nonatomic) BOOL thumbRejectionEnabled;

- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_currentTapRect;
- (void)_down:(id)arg1;
- (void)_drag:(id)arg1;
- (void)_enterTrackingMode:(id)arg1;
- (void)_handleGutterUp;
- (BOOL)_handleSplitEvent:(id)arg1;
- (BOOL)_handleSplitTap;
- (void)_handleTap;
- (void)_processUpAndPost:(BOOL)arg1;
- (void)_up;
- (void)_updateMultiTapFrame;
- (void)_updateStartWithPoint:(struct CGPoint { float x1; float x2; })arg1 time:(double)arg2;
- (void)_updateTapState;
- (unsigned int)absoluteFingerCount;
- (/* Warning: unhandled struct encoding: '{?=iiffffIIIc{CGPoint=ff}fff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}{CGPoint=ff}{CGPoint=ff}d@}' */ struct { int x1; int x2; float x3; float x4; float x5; float x6; unsigned int x7; unsigned int x8; unsigned int x9; BOOL x10; struct CGPoint { float x_11_1_1; float x_11_1_2; } x11; float x12; float x13; float x14; struct CGPoint { float x_15_1_1; float x_15_1_2; } x15; struct CGPoint { float x_16_1_1; float x_16_1_2; } x16; struct CGPoint { float x_17_1_1; float x_17_1_2; } x17; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_18_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_18_1_2; } x18; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_19_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_19_1_2; } x19; struct CGPoint { float x_20_1_1; float x_20_1_2; } x20; struct CGPoint { float x_21_1_1; float x_21_1_2; } x21; double x22; id x23; })captureCurrentState;
- (void)dealloc;
- (int)direction;
- (float)directionalSlope;
- (float)distance;
- (struct CGPoint { float x1; float x2; })endLocation;
- (unsigned int)fingerCount;
- (float)firstFingerAltitude;
- (float)firstFingerAzimuth;
- (float)firstFingerOrbValue;
- (float)flickSpeed;
- (int)gestureState;
- (id)gestureStateString;
- (/* Warning: unhandled struct encoding: '{?=iiffffIIIc{CGPoint=ff}fff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}{CGPoint=ff}{CGPoint=ff}d@}' */ struct { int x1; int x2; float x3; float x4; float x5; float x6; unsigned int x7; unsigned int x8; unsigned int x9; BOOL x10; struct CGPoint { float x_11_1_1; float x_11_1_2; } x11; float x12; float x13; float x14; struct CGPoint { float x_15_1_1; float x_15_1_2; } x15; struct CGPoint { float x_16_1_1; float x_16_1_2; } x16; struct CGPoint { float x_17_1_1; float x_17_1_2; } x17; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_18_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_18_1_2; } x18; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_19_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_19_1_2; } x19; struct CGPoint { float x_20_1_1; float x_20_1_2; } x20; struct CGPoint { float x_21_1_1; float x_21_1_2; } x21; double x22; id x23; })handleGestureEvent:(id)arg1;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1 delegate:(id)arg2;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1 delegate:(id)arg2 threadKey:(id)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })mainFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })multiTapFrame;
- (int)orientation;
- (struct CGPoint { float x1; float x2; })rawAverageLocation;
- (struct CGPoint { float x1; float x2; })rawLocation;
- (void)reset;
- (void)setFlickSpeed:(float)arg1;
- (void)setOrientation:(int)arg1;
- (void)setTapSpeed:(float)arg1;
- (void)setTapSpeedTimeThreshold:(float)arg1 forRegion:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 fingerCount:(int)arg3;
- (void)setThumbRejectionEnabled:(BOOL)arg1;
- (struct CGPoint { float x1; float x2; })startLocation;
- (unsigned int)tapCount;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })tapFrame;
- (double)tapInterval;
- (BOOL)tapIsDown;
- (struct CGPoint { float x1; float x2; })tapPoint;
- (struct CGPoint { float x1; float x2; })tapPointWeightedToSides;
- (float)tapSpeed;
- (BOOL)thumbRejectionEnabled;
- (float)vector;
- (float)velocity;

@end
