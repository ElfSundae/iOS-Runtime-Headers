/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCEUUidReferenceMap : NSObject {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> >, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > > > > { 
        struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > > > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, std::__1::hash<TSUUUID>, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > >, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _cellRefsByUuid;
    struct unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > > > > { 
        struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > > > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, std::__1::hash<TSCEInternalCellReference>, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > >, std::__1::equal_to<TSCEInternalCellReference>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _uuidsByCellRef;
}

+ (id)_stringForInternalCellRef:(const struct TSCEInternalCellReference { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; unsigned short x2; unsigned short x3; }*)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addCellRef:(const struct { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct __CFUUID {} *x2; }*)arg1 dependencyTracker:(struct TSCEDependencyTracker { struct _opaque_pthread_mutex_t { long x_1_1_1; BOOL x_1_1_2[40]; } x1; id x2; /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x3; in out const double x4; void*x5; const void*x6; double x7; void*x8; void*x9; void*x10; void*x11; void*x12; BOOL x13; out in short x14; void*x15; void*x16; void*x17; void*x18; unsigned char x19; void*x20; void*x21; void*x22; unsigned int x23; long doublex24; void*x25; char *x26; void*x27; void*x28; void*x29; unsigned short x30; unsigned char x31; void*x32; long doublex33; void*x34; void*x35; void*x36; in double x37; void*x38; in BOOL x39; void*x40; void*x41; const void*x42; BOOL x43; void*x44; void*x45; const void*x46; out const void*x47; void*x48; long x49; void*x50; bycopy void*x51; in void*x52; const unsigned int x53; in float x54; out void*x55; void*x56; void*x57; unsigned short x58; unsigned char x59; void*x60; void*x61; out const void*x62; void*x63; long x64; void*x65; bycopy void*x66; in void*x67; const unsigned int x68; long doublex69; void*x70; void*x71; short x72; void*x73; void*x74; void*x75; void*x76; unsigned short x77; unsigned char x78; void*x79; void*x80; out const void*x81; void*x82; long x83; void*x84; bycopy void*x85; in void*x86; const unsigned int x87; long doublex88; void*x89; long long x90; void*x91; void*x92; long x93; void*x94; void*x95; short x96; void*x97; double x98; SEL x99; SEL x100; void*x101; void*x102; void*x103; SEL x104; SEL x105; void*x106; long x107; long x108; out BOOL x109; void*x110; void*x111; out const void*x112; short x113; void*x114; double x115; SEL x116; SEL x117; void*x118; void*x119; void*x120; SEL x121; SEL x122; void*x123; void*x124; int x125; const void*x126; BOOL x127; out in short x128; void*x129; void*x130; void*x131; void*x132; unsigned char x133; void*x134; void*x135; void*x136; unsigned int x137; long doublex138; void*x139; char *x140; BOOL x141; out in short x142; void*x143; void*x144; void*x145; void*x146; unsigned short x147; unsigned char x148; void*x149; long doublex150; void*x151; void*x152; void*x153; in double x154; void*x155; in BOOL x156; void*x157; void*x158; const void*x159; BOOL x160; void*x161; void*x162; const void*x163; out const void*x164; void*x165; long x166; void*x167; bycopy void*x168; in void*x169; const unsigned int x170; in float x171; out void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_178_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} *x_1_3_1; } x_2_2_1; } x_178_1_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true> > { unsigned long x_3_2_1; } x_178_1_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true> > { float x_4_2_1; } x_178_1_4; } x178; }*)arg2 forUuid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg3;
- (void)addCellRef:(const struct TSCEInternalCellReference { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; unsigned short x2; unsigned short x3; }*)arg1 forUuid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg2;
- (id)description;
- (void)encodeToArchive:(struct UuidReferenceMapArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; }*)arg1;
- (void)getCellRefs:(struct unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> > { struct __hash_table<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> > { struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<TSCECellReference, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > > { struct __hash_node<TSCECellReference, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellReference, void *> *>, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> > > { struct __hash_node_base<std::__1::__hash_node<TSCECellReference, void *> *> { struct __hash_node<TSCECellReference, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, TSCECellReferenceHash> { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, TSCECellReferenceEqual> { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 dependencyTracker:(struct TSCEDependencyTracker { struct _opaque_pthread_mutex_t { long x_1_1_1; BOOL x_1_1_2[40]; } x1; id x2; /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x3; in out const double x4; void*x5; const void*x6; double x7; void*x8; void*x9; void*x10; void*x11; void*x12; BOOL x13; out in short x14; void*x15; void*x16; void*x17; void*x18; unsigned char x19; void*x20; void*x21; void*x22; unsigned int x23; long doublex24; void*x25; char *x26; void*x27; void*x28; void*x29; unsigned short x30; unsigned char x31; void*x32; long doublex33; void*x34; void*x35; void*x36; in double x37; void*x38; in BOOL x39; void*x40; void*x41; const void*x42; BOOL x43; void*x44; void*x45; const void*x46; out const void*x47; void*x48; long x49; void*x50; bycopy void*x51; in void*x52; const unsigned int x53; in float x54; out void*x55; void*x56; void*x57; unsigned short x58; unsigned char x59; void*x60; void*x61; out const void*x62; void*x63; long x64; void*x65; bycopy void*x66; in void*x67; const unsigned int x68; long doublex69; void*x70; void*x71; short x72; void*x73; void*x74; void*x75; void*x76; unsigned short x77; unsigned char x78; void*x79; void*x80; out const void*x81; void*x82; long x83; void*x84; bycopy void*x85; in void*x86; const unsigned int x87; long doublex88; void*x89; long long x90; void*x91; void*x92; long x93; void*x94; void*x95; short x96; void*x97; double x98; SEL x99; SEL x100; void*x101; void*x102; void*x103; SEL x104; SEL x105; void*x106; long x107; long x108; out BOOL x109; void*x110; void*x111; out const void*x112; short x113; void*x114; double x115; SEL x116; SEL x117; void*x118; void*x119; void*x120; SEL x121; SEL x122; void*x123; void*x124; int x125; const void*x126; BOOL x127; out in short x128; void*x129; void*x130; void*x131; void*x132; unsigned char x133; void*x134; void*x135; void*x136; unsigned int x137; long doublex138; void*x139; char *x140; BOOL x141; out in short x142; void*x143; void*x144; void*x145; void*x146; unsigned short x147; unsigned char x148; void*x149; long doublex150; void*x151; void*x152; void*x153; in double x154; void*x155; in BOOL x156; void*x157; void*x158; const void*x159; BOOL x160; void*x161; void*x162; const void*x163; out const void*x164; void*x165; long x166; void*x167; bycopy void*x168; in void*x169; const unsigned int x170; in float x171; out void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_178_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} *x_1_3_1; } x_2_2_1; } x_178_1_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true> > { unsigned long x_3_2_1; } x_178_1_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true> > { float x_4_2_1; } x_178_1_4; } x178; }*)arg2 referringToUuid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg3;
- (void)getCellRefs:(struct unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> > { struct __hash_table<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> > { struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<TSCECellReference, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > > { struct __hash_node<TSCECellReference, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellReference, void *> *>, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *> > > { struct __hash_node_base<std::__1::__hash_node<TSCECellReference, void *> *> { struct __hash_node<TSCECellReference, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, TSCECellReferenceHash> { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, TSCECellReferenceEqual> { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 dependencyTracker:(struct TSCEDependencyTracker { struct _opaque_pthread_mutex_t { long x_1_1_1; BOOL x_1_1_2[40]; } x1; id x2; /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x3; in out const double x4; void*x5; const void*x6; double x7; void*x8; void*x9; void*x10; void*x11; void*x12; BOOL x13; out in short x14; void*x15; void*x16; void*x17; void*x18; unsigned char x19; void*x20; void*x21; void*x22; unsigned int x23; long doublex24; void*x25; char *x26; void*x27; void*x28; void*x29; unsigned short x30; unsigned char x31; void*x32; long doublex33; void*x34; void*x35; void*x36; in double x37; void*x38; in BOOL x39; void*x40; void*x41; const void*x42; BOOL x43; void*x44; void*x45; const void*x46; out const void*x47; void*x48; long x49; void*x50; bycopy void*x51; in void*x52; const unsigned int x53; in float x54; out void*x55; void*x56; void*x57; unsigned short x58; unsigned char x59; void*x60; void*x61; out const void*x62; void*x63; long x64; void*x65; bycopy void*x66; in void*x67; const unsigned int x68; long doublex69; void*x70; void*x71; short x72; void*x73; void*x74; void*x75; void*x76; unsigned short x77; unsigned char x78; void*x79; void*x80; out const void*x81; void*x82; long x83; void*x84; bycopy void*x85; in void*x86; const unsigned int x87; long doublex88; void*x89; long long x90; void*x91; void*x92; long x93; void*x94; void*x95; short x96; void*x97; double x98; SEL x99; SEL x100; void*x101; void*x102; void*x103; SEL x104; SEL x105; void*x106; long x107; long x108; out BOOL x109; void*x110; void*x111; out const void*x112; short x113; void*x114; double x115; SEL x116; SEL x117; void*x118; void*x119; void*x120; SEL x121; SEL x122; void*x123; void*x124; int x125; const void*x126; BOOL x127; out in short x128; void*x129; void*x130; void*x131; void*x132; unsigned char x133; void*x134; void*x135; void*x136; unsigned int x137; long doublex138; void*x139; char *x140; BOOL x141; out in short x142; void*x143; void*x144; void*x145; void*x146; unsigned short x147; unsigned char x148; void*x149; long doublex150; void*x151; void*x152; void*x153; in double x154; void*x155; in BOOL x156; void*x157; void*x158; const void*x159; BOOL x160; void*x161; void*x162; const void*x163; out const void*x164; void*x165; long x166; void*x167; bycopy void*x168; in void*x169; const unsigned int x170; in float x171; out void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_178_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} *x_1_3_1; } x_2_2_1; } x_178_1_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true> > { unsigned long x_3_2_1; } x_178_1_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true> > { float x_4_2_1; } x_178_1_4; } x178; }*)arg2 referringToUuids:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg3;
- (id)init;
- (id)initFromArchive:(const struct UuidReferenceMapArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; }*)arg1;
- (void)p_getCellRefs:(struct unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > { struct __hash_table<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > { struct unique_ptr<std::__1::__hash_node<TSCEInternalCellReference, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<TSCEInternalCellReference, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *> *> > > { struct __hash_node<TSCEInternalCellReference, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *> *>, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *> > > { struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *> *> { struct __hash_node<TSCEInternalCellReference, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<TSCEInternalCellReference> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<TSCEInternalCellReference> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 referringToUuids:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg2;
- (void)removeCellRef:(const struct TSCEInternalCellReference { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; unsigned short x2; unsigned short x3; }*)arg1;
- (void)removeCellRef:(const struct { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct __CFUUID {} *x2; }*)arg1 dependencyTracker:(struct TSCEDependencyTracker { struct _opaque_pthread_mutex_t { long x_1_1_1; BOOL x_1_1_2[40]; } x1; id x2; /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x3; in out const double x4; void*x5; const void*x6; double x7; void*x8; void*x9; void*x10; void*x11; void*x12; BOOL x13; out in short x14; void*x15; void*x16; void*x17; void*x18; unsigned char x19; void*x20; void*x21; void*x22; unsigned int x23; long doublex24; void*x25; char *x26; void*x27; void*x28; void*x29; unsigned short x30; unsigned char x31; void*x32; long doublex33; void*x34; void*x35; void*x36; in double x37; void*x38; in BOOL x39; void*x40; void*x41; const void*x42; BOOL x43; void*x44; void*x45; const void*x46; out const void*x47; void*x48; long x49; void*x50; bycopy void*x51; in void*x52; const unsigned int x53; in float x54; out void*x55; void*x56; void*x57; unsigned short x58; unsigned char x59; void*x60; void*x61; out const void*x62; void*x63; long x64; void*x65; bycopy void*x66; in void*x67; const unsigned int x68; long doublex69; void*x70; void*x71; short x72; void*x73; void*x74; void*x75; void*x76; unsigned short x77; unsigned char x78; void*x79; void*x80; out const void*x81; void*x82; long x83; void*x84; bycopy void*x85; in void*x86; const unsigned int x87; long doublex88; void*x89; long long x90; void*x91; void*x92; long x93; void*x94; void*x95; short x96; void*x97; double x98; SEL x99; SEL x100; void*x101; void*x102; void*x103; SEL x104; SEL x105; void*x106; long x107; long x108; out BOOL x109; void*x110; void*x111; out const void*x112; short x113; void*x114; double x115; SEL x116; SEL x117; void*x118; void*x119; void*x120; SEL x121; SEL x122; void*x123; void*x124; int x125; const void*x126; BOOL x127; out in short x128; void*x129; void*x130; void*x131; void*x132; unsigned char x133; void*x134; void*x135; void*x136; unsigned int x137; long doublex138; void*x139; char *x140; BOOL x141; out in short x142; void*x143; void*x144; void*x145; void*x146; unsigned short x147; unsigned char x148; void*x149; long doublex150; void*x151; void*x152; void*x153; in double x154; void*x155; in BOOL x156; void*x157; void*x158; const void*x159; BOOL x160; void*x161; void*x162; const void*x163; out const void*x164; void*x165; long x166; void*x167; bycopy void*x168; in void*x169; const unsigned int x170; in float x171; out void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_178_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *> { struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> {} *x_1_3_1; } x_2_2_1; } x_178_1_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true> > { unsigned long x_3_2_1; } x_178_1_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true> > { float x_4_2_1; } x_178_1_4; } x178; }*)arg2 forUuid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg3;
- (void)removeCellRef:(const struct TSCEInternalCellReference { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; unsigned short x2; unsigned short x3; }*)arg1 forUuid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg2;

@end
