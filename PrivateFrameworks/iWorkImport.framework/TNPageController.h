/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TNPageController : NSObject {
    TNPrintProperties * _printProperties;
    NSMutableDictionary * mCachedAutoFitContentScaleDictionary;
    int  mCachedPageCountDuringDynamicContentScaleChange;
    BOOL  mComputingPageCounts;
    NSObject<TNPageControllerDelegate> * mDelegate;
    TNDocumentRoot * mDocumentRoot;
    TNPageCoordinateDictionary * mFooterLayerCache;
    float  mFooterTextHeight;
    TNPageCoordinateDictionary * mHeaderLayerCache;
    float  mHeaderTextHeight;
    TSUPointerKeyDictionary * mHintCacheDictionary;
    BOOL  mInDynamicContentScaleChange;
    struct TSUCellCoord { 
        unsigned short row; 
        unsigned char column; 
        unsigned char reserved; 
    }  mMaxPageCoordinate;
    BOOL  mMaxPageCoordinateValid;
    BOOL  mPageCountsValid;
    TNPageCoordinateDictionary * mPageLayoutCache;
    int  mPriorPageCount;
    TNSheet * mSheet;
    TSUPointerKeyDictionary * mSheetPageCountCache;
    int  mSubsequentPageCount;
    float  mUserViewScale;
}

@property (readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } contentFrame;
@property (readonly) float contentScale;
@property (nonatomic) NSObject<TNPageControllerDelegate> *delegate;
@property (nonatomic) TNDocumentRoot *documentRoot;
@property (nonatomic) float footerTextHeight;
@property (nonatomic) float headerTextHeight;
@property (nonatomic, readonly) BOOL inDynamicContentScaleChange;
@property (readonly) unsigned int numPages;
@property (readonly) struct CGSize { float x1; float x2; } pageSize;
@property (readonly) struct CGSize { float x1; float x2; } pageSizeWithGutter;
@property (getter=isPortrait, readonly) BOOL portrait;
@property (readonly) TNPrintProperties *printProperties;
@property (nonatomic) TNSheet *sheet;
@property (nonatomic) float userViewScale;

+ (float)autoFitContentScaleForSheet:(id)arg1;
+ (id)p_cachedAutoFitContentScaleDictionary;
+ (float)p_contentScaleAutoFitForSheet:(id)arg1;

- (void)canvasViewScaleDidChange:(float)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentFrame;
- (float)contentScale;
- (struct CGSize { float x1; float x2; })contentSizeForCanvasLayer;
- (void)dealloc;
- (id)delegate;
- (id)documentRoot;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstPartitionFrameForInfo:(id)arg1 outStartPageCoordinate:(out struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; }*)arg2;
- (float)footerTextHeight;
- (float)headerTextHeight;
- (void)i_invalidateHintCache;
- (void)i_invalidatePageLayoutCache;
- (id)i_layerForHeaderType:(int)arg1 fragment:(int)arg2 atPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg3;
- (void)i_setLayer:(id)arg1 forHeaderType:(int)arg2 fragment:(int)arg3 atPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg4;
- (BOOL)inDynamicContentScaleChange;
- (id)initWithDocumentRoot:(id)arg1;
- (void)invalidateCachedAutoFitContentScaleForSheet:(id)arg1;
- (void)invalidateDrawableLayouts;
- (void)invalidatePageLayout;
- (void)invalidatePageLayoutGeometries;
- (BOOL)isPagePlaceholderAtPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (BOOL)isPortrait;
- (void)layoutAtPageIndex:(unsigned int)arg1 forLayoutController:(id)arg2;
- (void)layoutInPageRange:(struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 forLayoutController:(id)arg2;
- (unsigned int)numPages;
- (void)p_clearHintCache;
- (void)p_computePriorPageCountForCurrentSheet;
- (void)p_computeSubsequentPageCountForCurrentSheet;
- (void)p_didEndDynamicContentScaleChange:(id)arg1;
- (void)p_enumerateOverPageRange:(struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 usingBlock:(id /* block */)arg2;
- (BOOL)p_headersOrFootersContainPageNumberRelatedAttachments;
- (id)p_hintCacheForInfo:(id)arg1;
- (void)p_invalidatePageCounts;
- (id)p_layoutForInfo:(id)arg1 atCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 parentLayout:(id)arg3;
- (void)p_layoutInfo:(id)arg1 intoPageLayout:(id)arg2 atPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg3;
- (void)p_layoutInfo:(id)arg1 intoPageRange:(struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg2;
- (void)p_measureHeadersAndFooters;
- (struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })p_pageCoordinateForPageLayoutAtDevicePoint:(struct CGPoint { float x1; float x2; })arg1;
- (int)p_pageCountForSheet:(id)arg1;
- (id)p_pageInfoForPageAtIndex:(unsigned int)arg1;
- (id)p_pageLayoutAtCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (float)p_printViewDefaultUserViewScale;
- (int)p_priorPageCount;
- (int)p_updateCachedPageCountForCurrentSheet;
- (void)p_updateVisiblePageRange:(struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 forLayoutController:(id)arg2;
- (void)p_willBeginDynamicContentScaleChange:(id)arg1;
- (struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })pageCoordinateForDrawableAtUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })pageCoordinateForMaxVisiblePage;
- (struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })pageCoordinateForPageIndex:(unsigned int)arg1;
- (struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })pageCoordinateForPageLayoutAtUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1;
- (unsigned int)pageCount;
- (id)pageInfoForPageIndex:(unsigned int)arg1;
- (id)pageLayoutGeometryForPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (id)pageLayoutGeometryForPrintingAtPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (unsigned int)pageNumberForPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })pageRangeForContent;
- (struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })pageRangeForContentWithUpperBound:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })pageRangeForInfo:(id)arg1 upperBound:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })pageRangeForPageIndex:(unsigned int)arg1;
- (struct { struct TSUCellCoord { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct TSUCellCoord { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })pageRangeWithPlaceholdersWithUpperBound:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (struct CGSize { float x1; float x2; })pageSize;
- (struct CGSize { float x1; float x2; })pageSizeWithGutter;
- (id)printProperties;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })printingLayoutRectForPageIndex:(unsigned int)arg1;
- (void)registerPageLayout:(id)arg1 atPageCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (void)removeLayoutsFromPages;
- (void)setDelegate:(id)arg1;
- (void)setDocumentRoot:(id)arg1;
- (void)setFooterTextHeight:(float)arg1;
- (void)setHeaderTextHeight:(float)arg1;
- (void)setSheet:(id)arg1;
- (void)setUserViewScale:(float)arg1;
- (id)sheet;
- (void)syncPositionOfLayout:(id)arg1 atCoordinate:(struct TSUCellCoord { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (void)updateContentScale;
- (void)updatePrintMargins;
- (void)updateUserViewScale;
- (void)updateViewScale;
- (float)userViewScale;
- (void)willExitPrintView;

@end
