/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TNUIState : NSObject <NSCopying> {
    NSMutableDictionary * mChartUIState;
    <TNUIStateDelegate> * mDelegate;
    struct CGSize { 
        float width; 
        float height; 
    }  mDesktopScreenSize;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  mDesktopWindowFrame;
    int  mDocumentMode;
    TSURetainedPointerKeyDictionary * mEditModeSheetUIStates;
    BOOL  mInspectorPaneAutoHidden;
    int  mInspectorPaneViewMode;
    BOOL  mInspectorPaneVisible;
    BOOL  mRemovedAllQuickCalcFunctions;
    NSArray * mSelectedQuickCalcFunctions;
    TSKSelectionPath * mSelectionPath;
    TSURetainedPointerKeyDictionary * mSheetUIStates;
    BOOL  mShowCanvasGuides;
    BOOL  mShowsComments;
    BOOL  mShowsRulers;
    BOOL  mShowsSidebar;
}

@property (nonatomic, readonly) NSMutableDictionary *chartUIState;
@property (nonatomic) <TNUIStateDelegate> *delegate;
@property (nonatomic) struct CGSize { float x1; float x2; } desktopScreenSize;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } desktopWindowFrame;
@property (nonatomic) int documentMode;
@property (nonatomic, readonly) BOOL hasPreviousVisibleRect;
@property (nonatomic, readonly) BOOL hasVisibleRect;
@property (nonatomic) int inspectorPaneHiddenState;
@property (nonatomic) int inspectorPaneViewMode;
@property (nonatomic, readonly) struct CGPoint { float x1; float x2; } previousScrollPosition;
@property (nonatomic, readonly) float previousViewScale;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } previousVisibleRect;
@property (nonatomic) BOOL removedAllQuickCalcFunctions;
@property (nonatomic, readonly) struct CGPoint { float x1; float x2; } scrollPosition;
@property (nonatomic, copy) NSArray *selectedQuickCalcFunctions;
@property (nonatomic, retain) TSKSelectionPath *selectionPath;
@property (nonatomic) BOOL showCanvasGuides;
@property (nonatomic) BOOL showsComments;
@property (nonatomic) BOOL showsRulers;
@property (nonatomic) BOOL showsSidebar;
@property (nonatomic, readonly) float viewScale;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } visibleRect;

+ (float)maximumViewScale;
+ (float)minimumViewScale;
+ (id)p_copyOfSheetUIStates:(id)arg1;

- (id)UIStateForChart:(id)arg1;
- (id)archivedUIStateInContext:(id)arg1;
- (id)chartUIState;
- (void)clearPreviousVisibleRect;
- (void)clearVisibleRect;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (struct CGSize { float x1; float x2; })desktopScreenSize;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })desktopWindowFrame;
- (int)documentMode;
- (void)enumerateSheetUIStatesWithBlock:(id /* block */)arg1;
- (void)fixupSelectionPathsForRestorationForcingUnpagination:(BOOL)arg1;
- (BOOL)hasPreviousVisibleRect;
- (BOOL)hasVisibleRect;
- (unsigned int)hash;
- (id)init;
- (id)initWithArchive:(const struct UIStateArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct RepeatedPtrField<TSP::Reference> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; unsigned int x7; unsigned int x8; struct SelectionArchive {} *x9; struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> { void **x_10_1_1; int x_10_1_2; int x_10_1_3; int x_10_1_4; } x10; int x11; int x12; unsigned int x13; unsigned int x14; struct ChartSelectionArchive {} *x15; struct Reference {} *x16; int x17; bool x18; bool x19; bool x20; bool x21; struct RepeatedField<unsigned int> { unsigned int *x_22_1_1; int x_22_1_2; int x_22_1_3; } x22; struct Point {} *x23; struct Size {} *x24; struct Size {} *x25; struct RepeatedPtrField<TSCH::ChartUIState> { void **x_26_1_1; int x_26_1_2; int x_26_1_3; int x_26_1_4; } x26; }*)arg1 unarchiver:(id)arg2;
- (int)inspectorPaneHiddenState;
- (int)inspectorPaneViewMode;
- (BOOL)isEqual:(id)arg1;
- (float)p_calculateViewScaleForVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)p_defaultViewScale;
- (void)p_enterPaginatedMode;
- (void)p_exitPaginatedMode;
- (id)p_fixedUpSelectionPathForRestoration:(id)arg1 forcingUnpagination:(BOOL)arg2;
- (id)p_uiStateForActiveSheet;
- (struct CGPoint { float x1; float x2; })previousScrollPosition;
- (float)previousViewScale;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })previousVisibleRect;
- (void)removeUIStateForSheet:(id)arg1;
- (BOOL)removedAllQuickCalcFunctions;
- (void)saveToArchive:(struct UIStateArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct RepeatedPtrField<TSP::Reference> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; unsigned int x7; unsigned int x8; struct SelectionArchive {} *x9; struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> { void **x_10_1_1; int x_10_1_2; int x_10_1_3; int x_10_1_4; } x10; int x11; int x12; unsigned int x13; unsigned int x14; struct ChartSelectionArchive {} *x15; struct Reference {} *x16; int x17; bool x18; bool x19; bool x20; bool x21; struct RepeatedField<unsigned int> { unsigned int *x_22_1_1; int x_22_1_2; int x_22_1_3; } x22; struct Point {} *x23; struct Size {} *x24; struct Size {} *x25; struct RepeatedPtrField<TSCH::ChartUIState> { void **x_26_1_1; int x_26_1_2; int x_26_1_3; int x_26_1_4; } x26; }*)arg1 archiver:(id)arg2 context:(id)arg3;
- (struct CGPoint { float x1; float x2; })scrollPosition;
- (id)selectedQuickCalcFunctions;
- (id)selectionPath;
- (void)setDelegate:(id)arg1;
- (void)setDesktopScreenSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setDesktopWindowFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDocumentMode:(int)arg1;
- (void)setInspectorPaneHiddenState:(int)arg1;
- (void)setInspectorPaneViewMode:(int)arg1;
- (void)setPreviousVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setPreviousVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forSheet:(id)arg2;
- (void)setRemovedAllQuickCalcFunctions:(BOOL)arg1;
- (void)setSelectedQuickCalcFunctions:(id)arg1;
- (void)setSelectionPath:(id)arg1;
- (void)setShowCanvasGuides:(BOOL)arg1;
- (void)setShowsComments:(BOOL)arg1;
- (void)setShowsRulers:(BOOL)arg1;
- (void)setShowsSidebar:(BOOL)arg1;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (void)setUIState:(id)arg1 forSheet:(id)arg2;
- (void)setVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forSheet:(id)arg2;
- (BOOL)showCanvasGuides;
- (BOOL)showsComments;
- (BOOL)showsRulers;
- (BOOL)showsSidebar;
- (id)uiStateForSheet:(id)arg1;
- (float)viewScale;
- (float)viewScaleForSheet:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRect;

@end
