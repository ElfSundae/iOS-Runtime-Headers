/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTVariableNode : TSTExpressionNode {
    NSString *mIdentifier;
    unsigned int mSymbol;
}

@property (nonatomic) NSString *identifier;
@property (nonatomic) unsigned int symbol;

- (void)buildASTNodeArray:(struct TSCEASTNodeArray { char *x1; unsigned int x2; unsigned int x3; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; const void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; short x37; void*x38; void*x39; union x40; void*x41; unsigned short x42; void*x43; short x44; void*x45; void*x46; void*x47; void*x48; unsigned long x49; int x50; unsigned int x51/* : ? */; const void*x52; const void*x53; void*x54; void*x55; const int x56; void x57; void*x58; void*x59; void*x60; void*x61; const void*x62; void*x63; void*x64; void*x65; out const void*x66; short x67; void*x68; unsigned short x69; void*x70; out const void*x71; void*x72; int x73; void*x74; void*x75; unsigned int x76; void*x77; float x78; const void*x79; void*x80; void*x81; void*x82; out const void*x83; void*x84; unsigned short x85; void*x86; out const void*x87; void*x88; int x89; void*x90; void*x91; unsigned int x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; bool x109; void*x110; unsigned int x111; unsigned short x112; BOOL x113; void*x114; in void*x115; void*x116; void*x117; double x118; void*x119; void*x120; void*x121; unsigned char x122; long x123; int x124; void*x125; in void*x126; unsigned short x127; void*x128; void*x129; void*x130; int x131; in void*x132; short x133; void*x134; void x135; void*x136; in void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; id x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; unsigned int x154; unsigned short x155; void*x156; void*x157; BOOL x158; void*x159; void*x160; double x161; bool x162; void*x163; const unsigned char x164; void*x165; long x166; long x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; id x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; unsigned short x183; unsigned int x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; const int x192; void*x193; void*x194; const void*x195; in short x196; float x197; out const void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; id x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; in void*x230; void*x231; void*x232; void*x233; out const int x234; void*x235; void*x236; void*x237; int x238; out in unsigned short x239; void*x240; void*x241; void*x242; void*x243; const void*x244; unsigned int x245; void*x246; void*x247; void*x248; short x249; unsigned char x250; void*x251; long x252; long x253; void*x254; void*x255; void*x256; void*x257; id x258; void*x259; void*x260; void*x261; void*x262; void*x263; long doublex264; void*x265; void*x266; void*x267; long x268; void*x269; void*x270; unsigned short x271; void*x272; const void x273; int x274; BOOL x275; void*x276; void*x277; void*x278; in void*x279; void*x280; void*x281; const void*x282; void*x283; void*x284; void*x285; id x286; void*x287; void*x288; void*x289; const void*x290; unsigned short x291; void*x292; void*x293; void*x294; oneway void*x295; long x296; void*x297; void*x298; inout out void*x299; int x300; float x301; void*x302; int x303; in void*x304; void*x305; void*x306; void*x307; void*x308; unsigned int x309/* : ? */; long x310; void*x311; unsigned char x312; out long x313; long x314; void*x315; BOOL x316; void*x317; int x318; out in void*x319; void*x320; void*x321; void*x322; void*x323; const void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; id x340; void*x341; void*x342; void*x343; in void*x344; void*x345; inout unsigned short x346; bycopy void*x347; void*x348; const void*x349; void*x350; int x351; out in unsigned int x352; in void*x353; void*x354; const in void*x355; long x356; void*x357; void*x358; void*x359; void*x360; void*x361; id x362; void*x363; void*x364; void*x365; long x366; void*x367; void*x368; void*x369; void*x370; const void*x371; void*x372; void*x373; void*x374; void*x375; in double x376; long x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; id x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; unsigned short x398; void*x399; void*x400; void*x401; long x402; void*x403; in BOOL x404; void*x405; void*x406; void*x407; in void*x408; void*x409; void*x410; const void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; id x418; void*x419; void*x420; void*x421; void*x422; void*x423; inout unsigned short x424; void*x425; void*x426; unsigned long x427; bool x428; long doublex429; bycopy in BOOL x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; id x446; void*x447; void*x448; void*x449; float x450; void*x451; void*x452; unsigned short x453; void*x454; void*x455; long x456; void*x457; void*x458; void*x459; void*x460; const int x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; id x475; void*x476; void*x477; void*x478; double x479; void*x480; bool x481; unsigned char x482; void*x483; void*x484; void*x485; void*x486; long x487; void*x488; out in unsigned char x489; void*x490; long x491; long x492; bool x493; void*x494; BOOL x495; void*x496; void*x497; const out void*x498; in double x499; oneway int x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; id x516; void*x517; void*x518; void*x519; void*x520; void*x521; unsigned short x522; void*x523; void*x524; unsigned short x525; void*x526; void*x527; BOOL x528; unsigned long x529; int x530; short x531; void*x532; unsigned short x533; void*x534; void*x535; long x536; void*x537; bool x538; out out long x539; void*x540; const void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; id x559; void*x560; void*x561; void*x562; void**x563; void*x564; long x565; unsigned long x566; out void*x567; void*x568; void*x569; short x570; void*x571; void*x572; const void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; id x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; bycopy void*x594; long doublex595; double x596; double x597; const void*x598; short x599; short x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; id x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; long doublex622; void*x623; void*x624; void*x625; long doublex626; void*x627; void*x628; void*x629; BOOL x630; void*x631; out const void*x632; void*x633; void*x634; BOOL x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; id x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; unsigned char x651; unsigned short x652; void*x653; void*x654; const int x655; in void*x656; void*x657; void*x658; void*x659; BOOL x660; void*x661; void*x662; short x663; void*x664; const void*x665; void*x666; BOOL x667; out const double x668; unsigned int x669; long doublex670; bycopy void*x671; void*x672; const void*x673; void*x674; int x675; out in void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; id x682; void*x683; void*x684; void*x685; void*x686; void*x687; unsigned int x688; void*x689; unsigned int x690; void*x691; void*x692; void*x693; const void*x694; void*x695; void*x696; void*x697; void*x698; unsigned short x699; void*x700; void*x701; void*x702; void*x703; short x704; oneway int x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; id x727; void*x728; void*x729; void*x730; void*x731; void*x732; unsigned short x733; void*x734; unsigned long x735; int x736; in void*x737; void*x738; double x739; void*x740; out int x741; in void*x742; void*x743; const unsigned short x744; void*x745; void*x746; void*x747; in void*x748; const void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; id x768; void*x769; void*x770; void*x771; bycopy void*x772; void*x773; unsigned int x774; long doublex775; void*x776; void x777; int x778; BOOL x779; void*x780; unsigned long x781; out BOOL x782; void*x783; void*x784; out const unsigned char x785; out in float x786; int x787; const void*x788; void*x789; void*x790; int x791; out in void*x792; void*x793; int x794; long x795; int x796; void*x797; int x798; void*x799; short x800; void*x801; void*x802; void*x803; void*x804; id x805; void*x806; void*x807; void*x808; unsigned long x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; unsigned char x817; out in void*x818; const out long x819; long x820; void*x821; const bool x822; void*x823; void*x824; void*x825; out in short x826; void*x827; const out void*x828; out unsigned int x829/* : ? */; void*x830; float x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; id x842; void*x843; void*x844; void*x845; unsigned int x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; unsigned int x853/* : ? */; long x854; void*x855; long doublex856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; id x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; unsigned char x881; void*x882; void*x883; void*x884; void*x885; const void*x886; unsigned char x887; out in void*x888; const out long x889; long x890; void*x891; const void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; id x898; void*x899; void*x900; void*x901; void*x902; void*x903; long doublex904; void*x905; void*x906; unsigned int x907/* : ? */; long x908; void*x909; void*x910; int x911; long x912; void*x913; void*x914; const unsigned char x915; out long x916; void*x917; void*x918; in void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; id x926; void*x927; void*x928; void*x929; unsigned char x930; void*x931; void*x932; unsigned short x933; long doublex934; void*x935; unsigned long x936; out void*x937; int x938; in void*x939; void*x940; in void*x941; void*x942; void*x943; const void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; id x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; oneway int x958; short x959; void*x960; void*x961; long x962; long x963; void*x964; const void*x965; unsigned short x966; bool x967; unsigned char x968; unsigned char x969; void*x970; long x971; void*x972; short x973; void*x974; long x975; int x976; void*x977; void*x978; void*x979; unsigned short x980; void*x981; void*x982; void*x983; int x984; in void*x985; void*x986; short x987; void*x988; void*x989; void*x990; const void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; id x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; unsigned int x1014; void*x1015; void*x1016; void*x1017; void*x1018; unsigned short x1019; void*x1020; void*x1021; long x1022; void*x1023; long doublex1024; void*x1025; short x1026; BOOL x1027; const int x1028; void*x1029; void*x1030; out const void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; id x1050; void*x1051; void*x1052; void*x1053; SEL x1054; void*x1055; unsigned short x1056; void*x1057; unsigned long x1058; int x1059; in void*x1060; void*x1061; double x1062; void*x1063; out int x1064; in void*x1065; void*x1066; const unsigned short x1067; void*x1068; void*x1069; void*x1070; in void*x1071; void*x1072; void*x1073; const void*x1074; void*x1075; out const void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; id x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; bool x1095; bool x1096; void*x1097; const out void*x1098; out long doublex1099; int x1100; double x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; out unsigned long x1108; out BOOL x1109; void*x1110; unsigned char x1111; void*x1112; out int x1113; BOOL x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; id x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; unsigned short x1136; unsigned int x1137; void*x1138; void*x1139; void*x1140; void*x1141; bool x1142; out void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; id x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; double x1166; double x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; in void*x1173; void*x1174; void*x1175; short x1176; short x1177; oneway int x1178; void*x1179; void*x1180; unsigned char x1181; out in void*x1182; const out long x1183; long x1184; void*x1185; const void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; id x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; long doublex1204; unsigned char x1205; out double x1206; void*x1207; unsigned int x1208/* : ? */; long x1209; void*x1210; void*x1211; out void*x1212; void*x1213; int x1214; in void*x1215; void*x1216; void*x1217; long long x1218; void*x1219; void*x1220; short x1221; void*x1222; void*x1223; void*x1224; short x1225; short x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; id x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; int x1253; short x1254; void*x1255; void*x1256; const void*x1257; out const void*x1258; void*x1259; void*x1260; void*x1261; unsigned char x1262; out in void*x1263; const out long x1264; long x1265; void*x1266; const void*x1267; void x1268; void*x1269; in void*x1270; short x1271; void*x1272; void*x1273; short x1274; short x1275; void*x1276; void*x1277; void*x1278; void*x1279; const out void*x1280; out unsigned int x1281/* : ? */; void*x1282; float x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; id x1293; void*x1294; void*x1295; void*x1296; union x1297; void*x1298; void*x1299; BOOL x1300; void*x1301; int x1302; void x1303; int x1304; void*x1305; void*x1306; unsigned short x1307; void*x1308; void*x1309; void*x1310; int x1311; short x1312; void*x1313; int x1314; BOOL x1315; short x1316; unsigned char x1317; void*x1318; void*x1319; const void*x1320; void*x1321; out int x1322; in void*x1323; unsigned short x1324; void*x1325; void*x1326; void*x1327; void*x1328; const void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; id x1335; void*x1336; void*x1337; void*x1338; char *x1339; void*x1340; long doublex1341; void*x1342; void*x1343; unsigned int x1344/* : ? */; long x1345; void*x1346; void*x1347; int x1348; long x1349; void*x1350; void*x1351; const void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; id x1365; void*x1366; void*x1367; void*x1368; Class x1369; void*x1370; unsigned int x1371; unsigned char x1372; int x1373; const BOOL x1374; long x1375; void*x1376; unsigned short x1377; void*x1378; long x1379; void*x1380; short x1381; void*x1382; long doublex1383; int x1384; short x1385; void*x1386; out const void*x1387; int x1388; out in void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; id x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; unsigned short x1413; unsigned char x1414; void*x1415; void*x1416; int x1417; void*x1418; void*x1419; const void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; id x1437; unsigned char x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; long x1446; void*x1447; void*x1448; void*x1449; in void*x1450; BOOL x1451; void*x1452; int x1453; out in void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; id x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; unsigned short x1470; unsigned char x1471; void*x1472; void*x1473; const void*x1474; short x1475; void*x1476; void*x1477; unsigned int x1478; void*x1479; void*x1480; void*x1481; void*x1482; const unsigned char x1483; out long x1484; void*x1485; void*x1486; in void*x1487; void*x1488; void*x1489; void*x1490; id x1491; void*x1492; void*x1493; void*x1494; void*x1495; unsigned short x1496; void*x1497; void*x1498; unsigned short x1499; void*x1500; void*x1501; BOOL x1502; unsigned short x1503; void*x1504; void*x1505; unsigned long x1506; int x1507; short x1508; void*x1509; unsigned short x1510; void*x1511; void*x1512; long x1513; void*x1514; bool x1515; out out long x1516; void*x1517; const void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; id x1533; void*x1534; void*x1535; unsigned long long x1536; void*x1537; void*x1538; bool x1539; void*x1540; unsigned int x1541; void*x1542; void*x1543; void*x1544; unsigned int x1545/* : ? */; out void*x1546; const double x1547; void*x1548; in void*x1549; unsigned int x1550/* : ? */; long x1551; void*x1552; void*x1553; void*x1554; in void*x1555; void*x1556; void*x1557; in void*x1558; void*x1559; void*x1560; const void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; id x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; bycopy void*x1581; long doublex1582; unsigned char x1583; void*x1584; void*x1585; void*x1586; int x1587; out in void*x1588; double x1589; void*x1590; void*x1591; out void*x1592; out void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; id x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; void*x1606; unsigned int x1607; unsigned short x1608; void*x1609; void x1610; void*x1611; void*x1612; out unsigned char x1613; void*x1614; void*x1615; void*x1616; const void*x1617; void*x1618; out long x1619; long x1620; BOOL x1621; void*x1622; int x1623; void x1624; int x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; id x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; short x1650; void*x1651; void*x1652; void*x1653; const void*x1654; in void*x1655; void*x1656; void*x1657; short x1658; void*x1659; void*x1660; void*x1661; const void*x1662; in void*x1663; short x1664; unsigned short x1665; in int x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; id x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; in void*x1693; long doublex1694; bool x1695; void*x1696; void*x1697; void*x1698; double x1699; short x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; void*x1727; void*x1728; id x1729; void*x1730; void*x1731; unsigned long long x1732; void*x1733; void*x1734; void*x1735; void*x1736; int x1737; short x1738; unsigned long x1739; void*x1740; unsigned int x1741/* : ? */; void*x1742; long x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; id x1759; void*x1760; short x1761; void*x1762; void*x1763; void*x1764; unsigned short x1765; void*x1766; short x1767; void*x1768; void*x1769; void*x1770; void*x1771; unsigned long x1772; int x1773; unsigned int x1774/* : ? */; const void*x1775; const void*x1776; void*x1777; void*x1778; const int x1779; void x1780; void*x1781; void*x1782; void*x1783; void*x1784; const void*x1785; void*x1786; void*x1787; void*x1788; out const void*x1789; short x1790; void*x1791; void*x1792; void*x1793; void*x1794; long x1795; void*x1796; void*x1797; void*x1798; unsigned int x1799; void*x1800; float x1801; const void*x1802; void*x1803; void*x1804; void*x1805; out const void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; long x1811; void*x1812; void*x1813; void*x1814; unsigned int x1815; void*x1816; void*x1817; void*x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; void*x1824; void*x1825; void*x1826; void*x1827; void*x1828; id x1829; void*x1830; void*x1831; void*x1832; void*x1833; void*x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; void*x1844; void*x1845; void*x1846; void*x1847; void*x1848; void*x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void x1858; void*x1859; void*x1860; void*x1861; void*x1862; void*x1863; void*x1864; void*x1865; inout unsigned short x1866; void*x1867; void*x1868; BOOL x1869; void*x1870; void*x1871; void*x1872; int x1873; out in void*x1874; void*x1875; void*x1876; void*x1877; void*x1878; void*x1879; void*x1880; void*x1881; void*x1882; void*x1883; void*x1884; void*x1885; void*x1886; void*x1887; void*x1888; void*x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; SEL x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; void*x1915; void*x1916; void*x1917; void*x1918; void*x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; void*x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; long long x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; void*x1943; void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; void*x1960; void*x1961; void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; id x1969; id x1970; void*x1971; void*x1972; void*x1973; void*x1974; void*x1975; void*x1976; void*x1977; void*x1978; void*x1979; void*x1980; void*x1981; void*x1982; void*x1983; void*x1984; void*x1985; void*x1986; void*x1987; void*x1988; void*x1989; void*x1990; void*x1991; void*x1992; void*x1993; void*x1994; void*x1995; void*x1996; void*x1997; void*x1998; id x1999; void*x2000; void*x2001; void*x2002; void*x2003; void*x2004; void*x2005; void*x2006; void*x2007; void*x2008; void*x2009; void*x2010; void*x2011; void*x2012; void*x2013; void*x2014; void*x2015; void*x2016; void*x2017; void*x2018; void*x2019; void*x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void x2028; void*x2029; void*x2030; void*x2031; void*x2032; void*x2033; void*x2034; void*x2035; void*x2036; void*x2037; void*x2038; void*x2039; void*x2040; void*x2041; void*x2042; void*x2043; void*x2044; void*x2045; id x2046; union x2047; void*x2048; void*x2049; void x2050; void*x2051; void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; id x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; void*x2079; void*x2080; void*x2081; void*x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; void*x2091; void*x2092; void*x2093; void*x2094; void*x2095; void x2096; void*x2097; void*x2098; void*x2099; void*x2100; void*x2101; void*x2102; void*x2103; void*x2104; void*x2105; void*x2106; void*x2107; void*x2108; void*x2109; void*x2110; void*x2111; void*x2112; void*x2113; void*x2114; void*x2115; void*x2116; void*x2117; void*x2118; void*x2119; void*x2120; void*x2121; void*x2122; void*x2123; void*x2124; void*x2125; void*x2126; void*x2127; void*x2128; void*x2129; void*x2130; void*x2131; void*x2132; long x2133; void*x2134; id x2135; void*x2136; void*x2137; void*x2138; void*x2139; void*x2140; void*x2141; void*x2142; void*x2143; void*x2144; void*x2145; void*x2146; void*x2147; void*x2148; void*x2149; void*x2150; void*x2151; void*x2152; void*x2153; void*x2154; void*x2155; void*x2156; void*x2157; void*x2158; void*x2159; void*x2160; id x2161; void*x2162; short x2163; void*x2164; void*x2165; void*x2166; unsigned char x2167; void*x2168; void*x2169; void*x2170; void*x2171; out const int x2172; void*x2173; short x2174; void*x2175; void*x2176; long long x2177; void*x2178; void*x2179; short x2180; void*x2181; void*x2182; void*x2183; void*x2184; void*x2185; void*x2186; void*x2187; void*x2188; id x2189; void*x2190; void*x2191; void*x2192; void*x2193; unsigned short x2194; void*x2195; short x2196; void*x2197; void*x2198; void*x2199; void*x2200; unsigned long x2201; int x2202; unsigned int x2203/* : ? */; const void*x2204; const void*x2205; void*x2206; void*x2207; const int x2208; void x2209; void*x2210; void*x2211; void*x2212; void*x2213; const void*x2214; void*x2215; void*x2216; void*x2217; out const void*x2218; short x2219; void*x2220; void*x2221; out void*x2222; void*x2223; void*x2224; unsigned int x2225/* : ? */; void*x2226; void*x2227; float x2228; const void*x2229; void*x2230; void*x2231; void*x2232; out const void*x2233; void*x2234; void*x2235; out void*x2236; void*x2237; void*x2238; unsigned int x2239/* : ? */; void*x2240; void*x2241; void*x2242; void*x2243; void*x2244; void*x2245; void*x2246; void*x2247; void*x2248; void*x2249; void*x2250; void*x2251; void*x2252; void*x2253; void x2254; void*x2255; void*x2256; void*x2257; void*x2258; void*x2259; void*x2260; void*x2261; void*x2262; long doublex2263; bool x2264; long x2265; void*x2266; void*x2267; unsigned int x2268; bool x2269; void*x2270; int x2271; long x2272; double x2273; unsigned short x2274; void*x2275; BOOL x2276; BOOL x2277; void*x2278; short x2279; short x2280; void*x2281; void*x2282; void*x2283; void*x2284; void*x2285; void*x2286; id x2287; void*x2288; long x2289; void*x2290; void*x2291; void*x2292; unsigned int x2293; unsigned char x2294; const void*x2295; short x2296; void*x2297; void*x2298; long x2299; long x2300; int x2301; void*x2302; void*x2303; void*x2304; void*x2305; void*x2306; void*x2307; void*x2308; void*x2309; void*x2310; void*x2311; void*x2312; void*x2313; void*x2314; void*x2315; void*x2316; id x2317; void*x2318; long x2319; void*x2320; void*x2321; void*x2322; bool x2323; unsigned short x2324; unsigned short x2325; int x2326; void*x2327; void*x2328; unsigned int x2329; BOOL x2330; out in void*x2331; void*x2332; void*x2333; unsigned char x2334; out long x2335; out const void*x2336; void*x2337; void*x2338; const void*x2339; BOOL x2340; void*x2341; out const void*x2342; void*x2343; void*x2344; void*x2345; void*x2346; void*x2347; void*x2348; void*x2349; void*x2350; void*x2351; void*x2352; void*x2353; void*x2354; void*x2355; id x2356; void*x2357; long x2358; void*x2359; void*x2360; void*x2361; inout unsigned short x2362; void*x2363; long x2364; void*x2365; BOOL x2366; void*x2367; void*x2368; out long x2369; double x2370; void*x2371; const long doublex2372; void*x2373; void*x2374; void*x2375; void*x2376; void*x2377; void*x2378; void*x2379; void*x2380; void*x2381; void*x2382; void*x2383; id x2384; void*x2385; long x2386; void*x2387; void*x2388; void*x2389; void*x2390; unsigned int x2391; void*x2392; void*x2393; void*x2394; void*x2395; void*x2396; in double x2397; out bycopy void*x2398; void*x2399; const void*x2400; void*x2401; int x2402; out in unsigned short x2403; void*x2404; void*x2405; void*x2406; void*x2407; const int x2408; unsigned int x2409/* : ? */; void*x2410; void*x2411; void*x2412; short x2413; void*x2414; void*x2415; void*x2416; void*x2417; void*x2418; void*x2419; void*x2420; void*x2421; void*x2422; id x2423; void*x2424; long x2425; void*x2426; void*x2427; void*x2428; void*x2429; long doublex2430; void*x2431; out short x2432; void*x2433; void*x2434; void*x2435; void*x2436; void*x2437; in short x2438; int x2439; out in unsigned char x2440; out in void*x2441; void*x2442; void*x2443; void*x2444; void*x2445; void*x2446; void*x2447; void*x2448; void*x2449; void*x2450; void*x2451; void*x2452; void*x2453; void*x2454; void*x2455; void*x2456; void*x2457; void*x2458; void*x2459; void*x2460; void*x2461; void*x2462; void*x2463; id x2464; void*x2465; long x2466; void*x2467; void*x2468; void*x2469; void*x2470; void*x2471; void*x2472; long long x2473; void*x2474; void*x2475; short x2476; void*x2477; unsigned long long x2478; void*x2479; void*x2480; void*x2481; void*x2482; void*x2483; void*x2484; void*x2485; void*x2486; void*x2487; void*x2488; void*x2489; void*x2490; void*x2491; void*x2492; void*x2493; void*x2494; id x2495; void*x2496; long x2497; void*x2498; void*x2499; void*x2500; void*x2501; bycopy void*x2502; long doublex2503; void*x2504; void*x2505; long x2506; void*x2507; int x2508; unsigned long x2509; out BOOL x2510; void*x2511; long x2512; int x2513; void*x2514; void*x2515; double x2516; unsigned short x2517; void*x2518; const int x2519; in void*x2520; void*x2521; void*x2522; void*x2523; void*x2524; void*x2525; void*x2526; void*x2527; void*x2528; void*x2529; void*x2530; void*x2531; void*x2532; void*x2533; void*x2534; void*x2535; void*x2536; void*x2537; id x2538; void*x2539; long x2540; void*x2541; void*x2542; unsigned short x2543; unsigned char x2544; void*x2545; unsigned long x2546; void*x2547; void*x2548; void*x2549; in double x2550; void*x2551; out double x2552; void*x2553; long x2554; unsigned char x2555; void*x2556; BOOL x2557; void*x2558; void*x2559; void*x2560; void*x2561; void*x2562; void*x2563; void*x2564; void*x2565; id x2566; void*x2567; void*x2568; void*x2569; void*x2570; void*x2571; unsigned short x2572; void*x2573; void*x2574; void*x2575; int x2576; in void*x2577; unsigned short x2578; void*x2579; out void*x2580; void*x2581; double x2582; void*x2583; void*x2584; const float x2585; out const void*x2586; unsigned short x2587; void*x2588; void*x2589; void*x2590; int x2591; in void*x2592; short x2593; BOOL x2594; void*x2595; int x2596; out in void*x2597; void*x2598; void*x2599; void*x2600; void*x2601; id x2602; void*x2603; void*x2604; void*x2605; void*x2606; void*x2607; void*x2608; void*x2609; void*x2610; short x2611; short x2612; void*x2613; int x2614; float x2615; void*x2616; unsigned char x2617; void*x2618; const double x2619; bool x2620; void*x2621; BOOL x2622; void*x2623; void*x2624; void*x2625; BOOL x2626; void*x2627; oneway int x2628; void*x2629; void*x2630; void*x2631; void*x2632; void*x2633; void*x2634; void*x2635; void*x2636; void*x2637; void*x2638; void*x2639; void*x2640; void*x2641; void*x2642; void*x2643; void*x2644; void*x2645; void*x2646; id x2647; long x2648; void*x2649; void*x2650; void*x2651; void*x2652; void*x2653; long doublex2654; void*x2655; bool x2656; void*x2657; double x2658; void*x2659; void*x2660; void*x2661; void*x2662; void*x2663; void*x2664; void*x2665; void*x2666; void*x2667; void*x2668; void*x2669; void*x2670; void*x2671; void*x2672; void*x2673; void*x2674; void*x2675; id x2676; void*x2677; void*x2678; unsigned long long x2679; void*x2680; void*x2681; unsigned short x2682; unsigned char x2683; void*x2684; unsigned long x2685; void*x2686; void*x2687; void*x2688; in double x2689; unsigned char x2690; void*x2691; long x2692; long x2693; void*x2694; out double x2695; void*x2696; long x2697; unsigned char x2698; void*x2699; BOOL x2700; void*x2701; void*x2702; void*x2703; void*x2704; void*x2705; void*x2706; void*x2707; void*x2708; void*x2709; void*x2710; void*x2711; void*x2712; void*x2713; void*x2714; void*x2715; void*x2716; void*x2717; void*x2718; void*x2719; void*x2720; id x2721; void*x2722; void*x2723; void*x2724; void*x2725; void*x2726; bool x2727; unsigned short x2728; unsigned short x2729; int x2730; void*x2731; void*x2732; void*x2733; void*x2734; void*x2735; void*x2736; double x2737; void*x2738; void*x2739; void*x2740; void*x2741; void*x2742; void*x2743; BOOL x2744; void*x2745; bycopy void*x2746; void*x2747; const void*x2748; void*x2749; int x2750; out in void*x2751; void*x2752; void*x2753; void*x2754; void*x2755; void*x2756; void*x2757; void*x2758; void*x2759; void*x2760; void*x2761; void*x2762; void*x2763; id x2764; void*x2765; void*x2766; void*x2767; void*x2768; void*x2769; void*x2770; void*x2771; unsigned int x2772; void*x2773; void*x2774; double x2775; void*x2776; void*x2777; void*x2778; unsigned short x2779; void*x2780; void*x2781; void*x2782; oneway int x2783; void*x2784; void*x2785; unsigned char x2786; out in void*x2787; const out long x2788; long x2789; void*x2790; const void*x2791; void*x2792; void*x2793; void*x2794; void*x2795; void*x2796; void*x2797; void*x2798; void*x2799; void*x2800; void*x2801; void*x2802; void*x2803; void*x2804; id x2805; void*x2806; out void*x2807; void*x2808; unsigned long x2809; void*x2810; long doublex2811; void*x2812; void*x2813; void*x2814; unsigned int x2815/* : ? */; void*x2816; short x2817; void*x2818; unsigned short x2819; void*x2820; void*x2821; void*x2822; void*x2823; void*x2824; void*x2825; in void*x2826; void*x2827; void*x2828; void*x2829; void*x2830; void*x2831; void*x2832; id x2833; void*x2834; long x2835; void*x2836; void*x2837; void*x2838; unsigned char x2839; void*x2840; const void*x2841; BOOL x2842; int x2843; in void*x2844; void*x2845; void*x2846; void*x2847; void*x2848; void*x2849; void*x2850; void*x2851; void*x2852; void*x2853; void*x2854; void*x2855; void*x2856; void*x2857; void*x2858; void*x2859; void*x2860; void*x2861; id x2862; void*x2863; void*x2864; void*x2865; void*x2866; long doublex2867; unsigned short x2868; unsigned short x2869; out BOOL x2870; void*x2871; void*x2872; void*x2873; void*x2874; void*x2875; int x2876; const unsigned short x2877; void*x2878; unsigned short x2879; void*x2880; void*x2881; void*x2882; void*x2883; void*x2884; void*x2885; short x2886; short x2887; void*x2888; void*x2889; void*x2890; void*x2891; void*x2892; void*x2893; void*x2894; void*x2895; void*x2896; void*x2897; void*x2898; void*x2899; void*x2900; void*x2901; void*x2902; void*x2903; void*x2904; void*x2905; id x2906; void*x2907; void*x2908; void*x2909; void*x2910; void*x2911; void*x2912; unsigned int x2913; void*x2914; void*x2915; short x2916; void*x2917; const BOOL x2918; void*x2919; int x2920; void x2921; int x2922; void*x2923; void*x2924; void*x2925; void*x2926; void*x2927; int x2928; in double x2929; void*x2930; const short x2931; unsigned long x2932; int x2933; short x2934; void*x2935; unsigned short x2936; BOOL x2937; void*x2938; void*x2939; double x2940; void*x2941; long x2942; void*x2943; double x2944; void*x2945; void*x2946; void*x2947; void*x2948; id x2949; void*x2950; void*x2951; void*x2952; void*x2953; void*x2954; unsigned long x2955; void*x2956; void*x2957; void*x2958; void*x2959; BOOL x2960; void*x2961; void*x2962; unsigned int x2963/* : ? */; int x2964; long x2965; int x2966; void*x2967; void*x2968; void*x2969; void*x2970; void*x2971; void*x2972; void*x2973; void*x2974; void*x2975; void*x2976; void*x2977; void*x2978; void*x2979; void*x2980; bycopy void*x2981; long x2982; void*x2983; void*x2984; void*x2985; void*x2986; void*x2987; void*x2988; void*x2989; void*x2990; void*x2991; void*x2992; void*x2993; void*x2994; void*x2995; void*x2996; void*x2997; void*x2998; void*x2999; void*x3000; void*x3001; void*x3002; void*x3003; void*x3004; void*x3005; void*x3006; void*x3007; void*x3008; void x3009; void*x3010; void*x3011; void*x3012; void*x3013; void*x3014; void*x3015; void*x3016; inout void*x3017; void*x3018; const void*x3019; void*x3020; void*x3021; void*x3022; long doublex3023; void*x3024; short x3025; BOOL x3026; const int x3027; void*x3028; void*x3029; int x3030; out in void*x3031; void*x3032; id x3033; void*x3034; void*x3035; void*x3036; void*x3037; void*x3038; void*x3039; void*x3040; void*x3041; void*x3042; void**x3043; void*x3044; void*x3045; void*x3046; void*x3047; void*x3048; void*x3049; void*x3050; void*x3051; void*x3052; void*x3053; void*x3054; void*x3055; void*x3056; void*x3057; void*x3058; void*x3059; void*x3060; void*x3061; void*x3062; void*x3063; void*x3064; void*x3065; void x3066; void*x3067; void*x3068; void*x3069; void*x3070; void*x3071; void*x3072; void*x3073; unsigned short x3074; void*x3075; void*x3076; int x3077; BOOL x3078; const out double x3079; void*x3080; void*x3081; void*x3082; unsigned int x3083; void*x3084; void*x3085; void*x3086; void*x3087; void*x3088; void*x3089; void*x3090; void*x3091; void*x3092; void*x3093; void*x3094; void*x3095; void x3096; void*x3097; void*x3098; void*x3099; void*x3100; void*x3101; void*x3102; void*x3103; void*x3104; unsigned short x3105; void*x3106; short x3107; void*x3108; void*x3109; void*x3110; void*x3111; unsigned long x3112; int x3113; unsigned int x3114/* : ? */; const void*x3115; const void*x3116; void*x3117; void*x3118; const int x3119; void x3120; void*x3121; void*x3122; void*x3123; void*x3124; const void*x3125; void*x3126; void*x3127; void*x3128; out const void*x3129; short x3130; void*x3131; unsigned char x3132; out const void*x3133; unsigned short x3134; void*x3135; void*x3136; void*x3137; void*x3138; short x3139; void*x3140; int x3141; out in short x3142; unsigned int x3143; in void*x3144; void*x3145; const in void*x3146; long x3147; short x3148; void*x3149; float x3150; const void*x3151; void*x3152; void*x3153; void*x3154; out const void*x3155; void*x3156; unsigned char x3157; out const void*x3158; unsigned short x3159; void*x3160; void*x3161; void*x3162; void*x3163; short x3164; void*x3165; int x3166; out in short x3167; unsigned int x3168; in void*x3169; void*x3170; const in void*x3171; long x3172; short x3173; void*x3174; void*x3175; void*x3176; void*x3177; void*x3178; void*x3179; void*x3180; void*x3181; void*x3182; void*x3183; void*x3184; void**x3185; void*x3186; void*x3187; void*x3188; void*x3189; void*x3190; void*x3191; void*x3192; void*x3193; void*x3194; void*x3195; void*x3196; void*x3197; void*x3198; void*x3199; void*x3200; long x3201; void*x3202; short x3203; void*x3204; void*x3205; long long x3206; void*x3207; void*x3208; void*x3209; void*x3210; void*x3211; void*x3212; void*x3213; void*x3214; void*x3215; void*x3216; void*x3217; void*x3218; void*x3219; void*x3220; void*x3221; void*x3222; void*x3223; void*x3224; void*x3225; void*x3226; void*x3227; void*x3228; void*x3229; void*x3230; BOOL x3231; void*x3232; long x3233; void*x3234; int x3235; void*x3236; void*x3237; void*x3238; long x3239; void*x3240; void*x3241; void*x3242; void*x3243; void*x3244; void*x3245; void*x3246; void*x3247; void x3248; void*x3249; void*x3250; void*x3251; void*x3252; void*x3253; void*x3254; void*x3255; void*x3256; unsigned int x3257; void*x3258; out void x3259; int x3260; void*x3261; unsigned short x3262; BOOL x3263; const void*x3264; unsigned int x3265/* : ? */; unsigned int x3266/* : ? */; void*x3267; const void*x3268; void*x3269; void*x3270; void*x3271; void*x3272; void*x3273; void*x3274; void*x3275; void*x3276; void*x3277; void*x3278; void*x3279; void*x3280; void*x3281; void*x3282; void*x3283; void*x3284; void*x3285; void*x3286; void*x3287; void*x3288; void*x3289; void*x3290; void*x3291; void*x3292; void*x3293; void*x3294; void*x3295; void*x3296; void*x3297; void*x3298; void*x3299; void*x3300; void*x3301; void*x3302; void*x3303; void*x3304; void*x3305; void*x3306; void*x3307; void*x3308; void*x3309; void*x3310; void*x3311; void*x3312; void*x3313; void*x3314; void*x3315; void*x3316; void*x3317; void*x3318; void*x3319; void*x3320; void*x3321; void*x3322; void*x3323; void*x3324; void*x3325; void*x3326; void*x3327; void*x3328; void*x3329; void*x3330; void*x3331; void*x3332; void*x3333; void*x3334; void*x3335; void*x3336; void*x3337; void*x3338; void*x3339; void*x3340; void*x3341; void*x3342; void*x3343; void*x3344; void*x3345; void*x3346; void*x3347; void*x3348; void*x3349; void*x3350; void*x3351; void*x3352; void*x3353; void*x3354; void*x3355; void*x3356; void x3357; void*x3358; void*x3359; void*x3360; void*x3361; void*x3362; void*x3363; void*x3364; void*x3365; void*x3366; bycopy void*x3367; void*x3368; void*x3369; void*x3370; double x3371; void*x3372; void*x3373; void*x3374; out void*x3375; double x3376; bool x3377; void*x3378; int x3379; long x3380; double x3381; void*x3382; const void*x3383; void*x3384; int x3385; void*x3386; out void*x3387; void*x3388; void*x3389; void*x3390; void*x3391; void*x3392; void*x3393; void*x3394; void*x3395; void*x3396; void*x3397; void*x3398; void*x3399; void*x3400; void*x3401; void*x3402; id x3403; struct x3404; void*x3405; void*x3406; void*x3407; void*x3408; void*x3409; void*x3410; void*x3411; void*x3412; void*x3413; void*x3414; void*x3415; void*x3416; void*x3417; void*x3418; void*x3419; void*x3420; void*x3421; void*x3422; void*x3423; void*x3424; void*x3425; void*x3426; void*x3427; void*x3428; void*x3429; void*x3430; id x3431; void*x3432; void*x3433; void*x3434; void*x3435; void*x3436; void*x3437; void*x3438; void*x3439; void*x3440; void*x3441; void*x3442; void*x3443; void*x3444; void*x3445; void*x3446; void*x3447; void*x3448; void*x3449; void*x3450; void*x3451; void*x3452; void*x3453; void*x3454; void*x3455; void*x3456; void*x3457; void*x3458; void*x3459; void*x3460; void*x3461; id x3462; id x3463; void*x3464; void*x3465; void*x3466; void*x3467; void*x3468; void*x3469; void*x3470; void*x3471; void*x3472; void*x3473; void*x3474; void*x3475; void*x3476; void*x3477; void*x3478; void*x3479; void*x3480; void*x3481; void*x3482; void*x3483; void*x3484; void*x3485; void*x3486; void*x3487; void*x3488; void*x3489; void x3490; void*x3491; void*x3492; void*x3493; void*x3494; void*x3495; void*x3496; void*x3497; void*x3498; void*x3499; void*x3500; void*x3501; void*x3502; void*x3503; void*x3504; void*x3505; void*x3506; void*x3507; id x3508; void*x3509; void*x3510; void*x3511; void*x3512; void*x3513; void*x3514; void*x3515; void*x3516; void*x3517; void*x3518; void*x3519; void*x3520; void x3521; void*x3522; void*x3523; void*x3524; void*x3525; void*x3526; void*x3527; void*x3528; void*x3529; void*x3530; void*x3531; void*x3532; void*x3533; void*x3534; void*x3535; void*x3536; void*x3537; void*x3538; id x3539; void*x3540; long x3541; void*x3542; void*x3543; void*x3544; void*x3545; void*x3546; void*x3547; void*x3548; void*x3549; void*x3550; void*x3551; void*x3552; void*x3553; void*x3554; void*x3555; void*x3556; void*x3557; void*x3558; void*x3559; void*x3560; void*x3561; void*x3562; void*x3563; void*x3564; void*x3565; void*x3566; void*x3567; void*x3568; void*x3569; void*x3570; void*x3571; void*x3572; void*x3573; void*x3574; void*x3575; void*x3576; void*x3577; void*x3578; void*x3579; void*x3580; void*x3581; void*x3582; void*x3583; void*x3584; void*x3585; void*x3586; void*x3587; void*x3588; void*x3589; void*x3590; void*x3591; void*x3592; void*x3593; void*x3594; void*x3595; void*x3596; void*x3597; void*x3598; void*x3599; void*x3600; void*x3601; void*x3602; void*x3603; unsigned int x3604; void*x3605; void*x3606; void*x3607; void*x3608; void*x3609; void*x3610; void*x3611; void*x3612; struct x3613; void*x3614; void*x3615; void*x3616; void*x3617; void*x3618; in void*x3619; short x3620; void*x3621; int x3622; void*x3623; void*x3624; void*x3625; in void*x3626; void*x3627; void*x3628; double x3629; void*x3630; void*x3631; void*x3632; short x3633; void*x3634; void*x3635; void*x3636; out void*x3637; const void*x3638; void*x3639; void*x3640; void*x3641; void*x3642; void*x3643; void*x3644; void*x3645; void*x3646; void*x3647; void*x3648; void*x3649; void*x3650; void*x3651; void*x3652; void*x3653; void*x3654; void*x3655; void*x3656; void*x3657; void*x3658; void*x3659; void*x3660; void*x3661; void*x3662; in void*x3663; short x3664; void*x3665; int x3666; void*x3667; void*x3668; void*x3669; in void*x3670; void*x3671; void*x3672; double x3673; void*x3674; void*x3675; void*x3676; BOOL x3677; void*x3678; void*x3679; void*x3680; void*x3681; void*x3682; const void*x3683; void*x3684; void*x3685; void*x3686; void*x3687; void*x3688; void*x3689; void*x3690; void*x3691; void*x3692; void*x3693; void*x3694; void*x3695; void*x3696; void*x3697; void*x3698; void*x3699; void*x3700; void*x3701; void*x3702; void*x3703; void*x3704; void*x3705; in void*x3706; short x3707; void*x3708; int x3709; void*x3710; void*x3711; void*x3712; in void*x3713; void*x3714; void*x3715; double x3716; void*x3717; void*x3718; void*x3719; BOOL x3720; void*x3721; void*x3722; void*x3723; void*x3724; void*x3725; const void*x3726; void*x3727; void*x3728; void*x3729; void*x3730; void*x3731; void*x3732; void*x3733; void*x3734; void*x3735; void*x3736; void*x3737; void*x3738; void*x3739; void*x3740; void*x3741; void*x3742; void*x3743; void*x3744; void*x3745; void*x3746; }*)arg1 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 symbolTable:(struct TSCESymbolTable { id x1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true> > { float x_4_3_1; } x_1_2_4; } x_2_1_1; } x2; struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > >, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_2; struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > *, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_3_2_1; } x_4_1_3; } x4; }*)arg3;
- (id)copyByResolvingIdentifiers:(id)arg1 hostTable:(id)arg2 forceReferenceInterpretation:(BOOL)arg3 symbolTable:(struct TSCESymbolTable { id x1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true> > { float x_4_3_1; } x_1_2_4; } x_2_1_1; } x2; struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > >, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_2; struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > *, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_3_2_1; } x_4_1_3; } x4; }*)arg4 oldToNewNodeMap:(id)arg5;
- (id)detokenizedText;
- (id)exportString;
- (id)formulaPlainText;
- (id)identifier;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initFromArchive:(const struct VariableNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct ExpressionNodeArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; unsigned int x7; }*)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned int)arg3 lastIndex:(unsigned int)arg4;
- (id)initWithContext:(id)arg1 identifier:(id)arg2 symbol:(unsigned int)arg3 firstIndex:(unsigned int)arg4 lastIndex:(unsigned int)arg5;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2;
- (BOOL)isEqualToExpressionNode:(id)arg1;
- (struct TSTCSENodeData { unsigned int x1; unsigned int x2; })recordHashesForSubexpressions:(id)arg1;
- (void)saveToArchive:(struct VariableNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct ExpressionNodeArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; unsigned int x7; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setSymbol:(unsigned int)arg1;
- (id)string;
- (unsigned int)symbol;
- (int)tokenType;

@end
