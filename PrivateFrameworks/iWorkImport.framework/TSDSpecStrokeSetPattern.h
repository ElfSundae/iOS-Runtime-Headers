/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDSpecStrokeSetPattern : TSDSpecStroke {
    TSUColor *_color;
    BOOL _definedColor;
    BOOL _definedLineCap;
    BOOL _definedLineJoin;
    BOOL _definedMiterLimit;
    BOOL _definedWidth;
    int _lineCap;
    int _lineJoin;
    double _miterLimit;
    TSDStrokePattern *_pattern;
    double _width;
}

+ (id)newFromArchive:(const struct SpecStrokeSetPatternArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; int x5; int x6; double x7; double x8; struct Color {} *x9; struct StrokePatternArchive {} *x10; }*)arg1 unarchiver:(id)arg2;
+ (void)saveObject:(id)arg1 toArchive:(struct SpecStrokeSetPatternArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; int x5; int x6; double x7; double x8; struct Color {} *x9; struct StrokePatternArchive {} *x10; }*)arg2 archiver:(id)arg3;

- (id)apply:(id)arg1;
- (BOOL)canApplyOnObject:(id)arg1;
- (id)initSpecStrokeSetPatternWithArchive:(const struct SpecStrokeSetPatternArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; int x5; int x6; double x7; double x8; struct Color {} *x9; struct StrokePatternArchive {} *x10; }*)arg1 unarchiver:(id)arg2;
- (id)initWithCurrentProperty:(id)arg1;
- (id)operationPropertyName;
- (void)saveSpecStrokeSetPatternToArchive:(struct SpecStrokeSetPatternArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; int x5; int x6; double x7; double x8; struct Color {} *x9; struct StrokePatternArchive {} *x10; }*)arg1 archiver:(id)arg2;
- (id)strokeModifiedFromStroke:(id)arg1;

@end
