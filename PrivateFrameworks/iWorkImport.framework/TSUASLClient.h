/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSUASLClient : NSObject {
    NSObject<OS_dispatch_queue> *_accessQueue;
    struct __asl_object_s { } *_client;
    int _filter;
    NSString *_identifier;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSString *_logFileMessageFormat;
    NSHashTable *_logFiles;
    NSMutableArray *_logSinks;
    BOOL _overrideReleaseFilteringLimit;
    NSString *_stderrMessageFormat;
}

@property int filter;

- (void).cxx_destruct;
- (void)_addLogFileToCompress:(id)arg1;
- (void)_addOldLogFile:(id)arg1;
- (void)_addOldLogFileImpl:(id)arg1 date:(id)arg2 originalPath:(id)arg3;
- (void)_cleanupOldLogFilesIfNeeded;
- (BOOL)_compressLogFilePath:(id)arg1;
- (void)_compressLogFilesIfNeeded;
- (void)_handleOldLogFilesAsync;
- (int)_limitFilterForReleaseBuilds:(int)arg1;
- (id)_logFilesToCompress;
- (id)_logFilesToCompressDefaultsKey;
- (id)_newLogFileURLForRotationUsingURL:(id)arg1;
- (id)_oldLogFiles;
- (id)_oldLogFilesDefaultsKey;
- (void)_populateAslmsg:(struct __asl_object_s { }*)arg1 category:(id)arg2 function:(const char *)arg3 file:(const char *)arg4 line:(long)arg5;
- (void)_setLogFilesToCompress:(id)arg1;
- (void)_setObject:(id)arg1 forUserDefaultsKey:(id)arg2;
- (void)_setOldLogFiles:(id)arg1;
- (id)addLogFileWithURL:(id)arg1 truncate:(BOOL)arg2 filterMask:(int)arg3;
- (void)addLogSink:(id /* block */)arg1;
- (void)dealloc;
- (int)filter;
- (id)init;
- (id)initWithIdentifier:(id)arg1 facility:(id)arg2 options:(unsigned int)arg3 filterMask:(int)arg4;
- (void)logWithLevel:(int)arg1 category:(id)arg2 function:(const char *)arg3 file:(const char *)arg4 line:(long)arg5 message:(id)arg6;
- (void)logWithLevel:(int)arg1 format:(id)arg2;
- (void)logWithLevel:(int)arg1 format:(id)arg2 arguments:(void*)arg3;
- (void)logWithLevel:(int)arg1 message:(id)arg2;
- (void)removeLogFile:(id)arg1;
- (void)setFilter:(int)arg1;
- (void)startLoggingToStderrWithFilterMask:(int)arg1;
- (void)stopLoggingToStderr;
- (void)synchronize;

@end
