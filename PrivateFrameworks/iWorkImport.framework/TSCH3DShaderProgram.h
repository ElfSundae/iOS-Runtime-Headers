/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DShaderProgram : NSObject {
    NSMutableString *mAccumulator;
    NSMutableArray *mConclusionSection;
    NSMutableArray *mDeclarationSection;
    NSString *mFragment;
    NSMutableSet *mFunctionNames;
    NSMutableArray *mFunctions;
    BOOL mIsLinked;
    NSMutableDictionary *mLinks;
    NSMutableArray *mOutcomeSection;
    NSMutableArray *mResolutionSection;
    NSMutableArray *mSections;
    NSMutableArray *mStatementSection;
    NSMutableArray *mTemporarySection;
    TSCH3DGLVersion *mVersion;
    NSString *mVertex;
}

@property (nonatomic, readonly) NSString *fragment;
@property (nonatomic, readonly) TSCH3DGLVersion *version;
@property (nonatomic, readonly) NSString *vertex;

- (void)accumulateSection:(id)arg1 intoArray:(id)arg2;
- (void)addAttributeVariable:(id)arg1;
- (void)addConclusion:(id)arg1;
- (void)addConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addConclusion:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addConclusion:(id)arg1 statement:(id)arg2;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addConclusionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1;
- (void)addDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addDeclaration:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addDeclaration:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addDeclarationWithSpace:(id)arg1 statement:(id)arg2;
- (void)addFragmentConclusion:(id)arg1;
- (void)addFragmentConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentConclusion:(id)arg1 statement:(id)arg2;
- (void)addFragmentConclusionWithFormat:(id)arg1;
- (void)addFragmentDeclaration:(id)arg1;
- (void)addFragmentDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentDeclaration:(id)arg1 statement:(id)arg2;
- (void)addFragmentDeclarationWithFormat:(id)arg1;
- (void)addFragmentOutcome:(id)arg1;
- (void)addFragmentOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentOutcome:(id)arg1 statement:(id)arg2;
- (void)addFragmentOutcomeWithFormat:(id)arg1;
- (void)addFragmentResolution:(id)arg1;
- (void)addFragmentResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentResolution:(id)arg1 statement:(id)arg2;
- (void)addFragmentResolutionWithFormat:(id)arg1;
- (void)addFragmentStatement:(id)arg1;
- (void)addFragmentStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentStatement:(id)arg1 statement:(id)arg2;
- (void)addFragmentStatementWithFormat:(id)arg1;
- (void)addFragmentTemporary:(id)arg1;
- (void)addFragmentTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentTemporary:(id)arg1 statement:(id)arg2;
- (void)addFragmentTemporaryWithFormat:(id)arg1;
- (void)addFunctionString:(id)arg1 name:(id)arg2;
- (void)addOutcome:(id)arg1;
- (void)addOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addOutcome:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addOutcome:(id)arg1 statement:(id)arg2;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addOutcomeWithSpace:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1;
- (void)addResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addResolution:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addResolution:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addResolutionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1;
- (void)addStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addStatement:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addStatement:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addStatementWithSpace:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1;
- (void)addTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addTemporary:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addTemporary:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addTemporaryWithSpace:(id)arg1 statement:(id)arg2;
- (void)addToSection:(id)arg1 statement:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3;
- (void)addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 format:(id)arg5 arguments:(void*)arg6;
- (void)addUniformVariable:(id)arg1;
- (void)addVertexConclusion:(id)arg1;
- (void)addVertexConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexConclusion:(id)arg1 statement:(id)arg2;
- (void)addVertexConclusionWithFormat:(id)arg1;
- (void)addVertexDeclaration:(id)arg1;
- (void)addVertexDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexDeclaration:(id)arg1 statement:(id)arg2;
- (void)addVertexDeclarationWithFormat:(id)arg1;
- (void)addVertexOutcome:(id)arg1;
- (void)addVertexOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexOutcome:(id)arg1 statement:(id)arg2;
- (void)addVertexOutcomeWithFormat:(id)arg1;
- (void)addVertexResolution:(id)arg1;
- (void)addVertexResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexResolution:(id)arg1 statement:(id)arg2;
- (void)addVertexResolutionWithFormat:(id)arg1;
- (void)addVertexStatement:(id)arg1;
- (void)addVertexStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexStatement:(id)arg1 statement:(id)arg2;
- (void)addVertexStatementWithFormat:(id)arg1;
- (void)addVertexTemporary:(id)arg1;
- (void)addVertexTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexTemporary:(id)arg1 statement:(id)arg2;
- (void)addVertexTemporaryWithFormat:(id)arg1;
- (void)assignVariable:(id)arg1 statement:(id)arg2 substitutes:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 toSection:(int)arg5;
- (void)dealloc;
- (id)existingLinkageOfVariable:(id)arg1;
- (id)fragment;
- (BOOL)hasFunction:(id)arg1;
- (id)init;
- (id)initWithVersion:(id)arg1;
- (BOOL)isSamplerVariable:(id)arg1;
- (void)link;
- (id)linkageOfVariable:(id)arg1;
- (void)p_addCompatibilityFunctions;
- (void)p_addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 format:(id)arg5 substitutes:(id)arg6;
- (void)p_generateGlobalsForType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generatePreprocessorDefinitionsForType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generateSection:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (id)p_generateType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generateType:(struct TSCH3DShaderType { unsigned int x1; })arg1 globalType:(struct TSCH3DShaderVariableScopeType { unsigned int x1; })arg2 storageQualifier:(id)arg3;
- (unsigned int)processSection:(id)arg1 accumulate:(id)arg2 conclusions:(id)arg3;
- (struct pair<signed char, TSCH3DShaderVariableLinkage *> { BOOL x1; id x2; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x3; void*x4; void*x5; void x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; bool x13; void*x14; void*x15; unsigned int x16; oneway int x17; void*x18; void*x19; unsigned short x20; void*x21; const void x22; int x23; BOOL x24; void*x25; oneway int x26; void*x27; void*x28; unsigned char x29; out in void*x30; const out long x31; long x32; void*x33; const bycopy void*x34; void*x35; const void*x36; void*x37; out const void*x38; void*x39; void*x40; void*x41; out void*x42; void*x43; oneway int x44; void*x45; void*x46; unsigned char x47; out in void*x48; const out long x49; long x50; void*x51; const unsigned int x52; in void*x53; void*x54; const float x55; void*x56; BOOL x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; })resultLinkageOfVariable:(id)arg1;
- (struct TSCH3DShaderType { unsigned int x1; })uniformLinkageFor:(id)arg1;
- (id)usedAttributeNameForVariable:(id)arg1;
- (id)usedNameForVariable:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 scope:(struct TSCH3DShaderVariableScopeType { unsigned int x1; })arg3;
- (id)usedUniformNameForVariable:(id)arg1;
- (id)version;
- (id)vertex;

@end
