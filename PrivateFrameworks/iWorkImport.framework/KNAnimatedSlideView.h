/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface KNAnimatedSlideView : NSObject <TSDCanvasDelegate, TSDConnectedInfoReplacing> {
    NSMutableSet * mActiveAnimatedBuilds;
    KNSlideNode * mAlternateDestinationSlideNode;
    KNAnimatedSlideModel * mAnimatedSlideModel;
    unsigned int  mAnimationsActive;
    unsigned int  mAnimationsStarted;
    TSUNoCopyDictionary * mBuildsToStartAfterMovieStartsMap;
    TSDCanvas * mCanvas;
    NSMutableArray * mChunks;
    unsigned int  mCurrentEventIndex;
    NSMutableArray * mDelayedAnimations;
    SEL  mEventAnimationActiveCallbackSelector;
    id  mEventAnimationActiveCallbackTarget;
    SEL  mEventEndCallbackSelector;
    id  mEventEndCallbackTarget;
    SEL  mEventImmediateEndCallbackSelector;
    id  mEventImmediateEndCallbackTarget;
    NSIndexSet * mEventIndexesToAnimate;
    SEL  mEventStartCallbackSelector;
    id  mEventStartCallbackTarget;
    BOOL  mEventTriggered;
    TSDTexturedRectangle * mIncomingTexture;
    BOOL  mIsInDelayBeforeActiveBuild;
    BOOL  mIsInDelayBeforeActiveTransition;
    int  mIsTexturePreloadingCancelled;
    SEL  mMovieEndCallbackSelector;
    id  mMovieEndCallbackTarget;
    NSMutableSet * mMovieRenderers;
    SEL  mMovieStartCallbackSelector;
    id  mMovieStartCallbackTarget;
    TSDTexturedRectangle * mOutgoingTexture;
    BOOL  mPlaysAutomaticTransitions;
    BOOL  mQueuedTrigger;
    KNPlaybackSession * mSession;
    BOOL  mShouldStopAnimations;
    KNSlide * mSlide;
    BOOL  mSlideIsBuildable;
    KNSlideNode * mSlideNode;
    unsigned int  mSlideNumber;
    TSUNoCopyDictionary * mTextureSetForRepMap;
    NSMutableSet * mTextureSets;
    BOOL  mTransitionInitialized;
    double  mTransitionStartTime;
}

@property (nonatomic, readonly) NSSet *activeAnimatedBuilds;
@property (nonatomic, readonly) TSDCanvas *canvas;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned int eventCount;
@property (nonatomic) BOOL eventHasTriggered;
@property (nonatomic) unsigned int eventIndex;
@property (nonatomic, copy) NSIndexSet *eventIndexesToAnimate;
@property (nonatomic, readonly) BOOL hasBuilds;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) TSDTexturedRectangle *incomingTexture;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly) BOOL isDoneAnimating;
@property (nonatomic, readonly) BOOL isInDelayBeforeActiveTransition;
@property (nonatomic, readonly) BOOL isMovieAnimating;
@property (nonatomic, readonly) BOOL isNonMovieAnimationActive;
@property (nonatomic, readonly) BOOL isNonMovieAnimationAnimating;
@property (nonatomic, readonly) KNAnimatedSlideModel *model;
@property (nonatomic, readonly) NSSet *movieRenderers;
@property (nonatomic, readonly) KNAnimatedSlideView *nextASV;
@property (nonatomic, retain) TSDTexturedRectangle *outgoingTexture;
@property (nonatomic) BOOL playsAutomaticTransitions;
@property (nonatomic, readonly) KNPlaybackSession *session;
@property (readonly) Class superclass;
@property (nonatomic) BOOL triggerQueued;

+ (void)initialize;
+ (void)registerUserDefaults;

- (id)activeAnimatedBuilds;
- (void)addActiveAnimatedBuild:(id)arg1;
- (void)buildHasFinishedAnimating:(id)arg1;
- (void)cancelTexturePreloading;
- (id)canvas;
- (void)clearActiveAnimatedBuilds;
- (void)dealloc;
- (id)documentRoot;
- (unsigned int)eventCount;
- (BOOL)eventHasTriggered;
- (unsigned int)eventIndex;
- (id)eventIndexesToAnimate;
- (BOOL)hasBuilds;
- (BOOL)hasTransitionAtEventIndex:(int)arg1;
- (id)incomingTexture;
- (id)infoToConnectToForConnectionLineConnectedToInfo:(id)arg1;
- (id)infosCurrentlyVisible;
- (id)infosVisibleAtEvent:(unsigned int)arg1 ignoreBuildVisibility:(BOOL)arg2;
- (id)initForSlideNode:(id)arg1 session:(id)arg2;
- (void)interruptAndReset;
- (BOOL)isAnimating;
- (BOOL)isAtFirstEvent;
- (BOOL)isCanvasDrawingIntoPDF:(id)arg1;
- (BOOL)isDoneAnimating;
- (BOOL)isInDelayBeforeActiveTransition;
- (BOOL)isMovieAnimating;
- (BOOL)isNonMovieAnimationActive;
- (BOOL)isNonMovieAnimationAnimating;
- (BOOL)isPrintingCanvas;
- (BOOL)isRenderingForKPF;
- (id)model;
- (void)movieHasFinishedPlayback:(id)arg1;
- (id)movieRenderers;
- (id)nextASV;
- (id)outgoingTexture;
- (void)p_addMovieRenderer:(id)arg1;
- (void)p_animateBuild:(id)arg1;
- (void)p_animateBuild:(id)arg1 afterDelay:(double)arg2;
- (void)p_animateBuild:(id)arg1 isMoviePlayback:(BOOL)arg2;
- (void)p_animateCurrentEventIgnoringDelays:(BOOL)arg1;
- (void)p_animateTransition:(id)arg1;
- (void)p_clearMovieRenderers;
- (id)p_getRenderersAtEventIndex:(int)arg1;
- (id)p_infosForSlide;
- (void)p_initializeTextureSetForRep:(id)arg1 info:(id)arg2 eventIndex:(unsigned int)arg3 shouldPrepareBuildAnimation:(BOOL)arg4 ignoreBuildVisibility:(BOOL)arg5 isRenderingToContext:(BOOL)arg6 buildInfos:(id)arg7 postInitBlock:(id /* block */)arg8;
- (double)p_minimumDelay;
- (void)p_movieStarted:(id)arg1;
- (void)p_performAnimationWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 delay:(double)arg4;
- (void)p_recursivelyRemoveCallbackObserversFromAnimatedBuilds:(id)arg1;
- (void)p_removeDelayedAnimation:(id)arg1;
- (void)p_removeMovieRenderer:(id)arg1;
- (void)p_renderTexturesOnBaseLayer:(id)arg1 atEvent:(unsigned int)arg2 shouldPrepareBuildAnimation:(BOOL)arg3 ignoreBuildVisibility:(BOOL)arg4;
- (void)p_resetMovieTextures;
- (void)p_setupTransitionStartTime;
- (BOOL)p_shouldAddInfoToTree:(id)arg1;
- (BOOL)p_shouldSkipActionBuild:(id)arg1 onMovieInfo:(id)arg2;
- (void)p_stopAllMovieRenderers;
- (void)p_tearDownTexturesIsExitingShow:(BOOL)arg1;
- (void)pauseAnimations;
- (BOOL)playAutomaticEvents;
- (BOOL)playsAutomaticTransitions;
- (void)preloadTexturesForEvent:(unsigned int)arg1 ignoreBuildVisibility:(BOOL)arg2 priority:(long)arg3 completionHandler:(id /* block */)arg4;
- (void)registerForEventAnimationActiveCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventImmediateEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventStartCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForMovieEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2;
- (void)removeActiveAnimatedBuild:(id)arg1;
- (void)renderCurrentEvent;
- (void)renderEvent:(unsigned int)arg1 intoContext:(struct CGContext { }*)arg2 ignoreBuildVisibility:(BOOL)arg3;
- (void)renderEvent:(unsigned int)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(BOOL)arg3;
- (id)repsCurrentlyVisible;
- (void)reset;
- (void)resumeAnimationsIfPaused;
- (id)session;
- (void)setEventHasTriggered:(BOOL)arg1;
- (void)setEventIndex:(unsigned int)arg1;
- (void)setEventIndexesToAnimate:(id)arg1;
- (void)setIncomingTexture:(id)arg1;
- (void)setNewDestinationSlideNode:(id)arg1;
- (void)setOutgoingTexture:(id)arg1;
- (void)setPlaysAutomaticTransitions:(BOOL)arg1;
- (void)setTexture:(id)arg1 forRep:(id)arg2;
- (void)setTriggerQueued:(BOOL)arg1;
- (void)setupTransition;
- (BOOL)shouldShowInstructionalText;
- (BOOL)shouldSuppressBackgrounds;
- (BOOL)slideContainsRepsThatMustDrawOnMainThread;
- (unsigned int)slideNumber;
- (void)stopAnimations;
- (id)textureSetForRep:(id)arg1;
- (void)transitionHasFinishedAnimating:(id)arg1;
- (void)transitionHasImmediatelyFinishedAnimating:(id)arg1;
- (void)triggerNextEvent;
- (void)triggerNextEventIgnoringDelay:(BOOL)arg1;
- (BOOL)triggerQueued;

@end
