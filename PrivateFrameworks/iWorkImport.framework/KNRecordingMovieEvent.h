/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface KNRecordingMovieEvent : KNRecordingEvent {
    int mMovieEventType;
    double mMovieEventValue;
    TSPLazyReference *mMovieInfoReference;
}

@property (nonatomic, readonly) BOOL beginsScrubbing;
@property (nonatomic, readonly) BOOL endsScrubbing;
@property (nonatomic, readonly) int movieEventType;
@property (nonatomic, readonly) double movieEventValue;
@property (nonatomic, readonly) TSDMovieInfo *movieInfo;
@property (nonatomic, readonly) double rate;
@property (nonatomic, readonly) double seekTime;
@property (nonatomic, readonly) BOOL startsPlayback;
@property (nonatomic, readonly) BOOL stopsPlayback;

- (BOOL)beginsScrubbing;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)endsScrubbing;
- (unsigned int)hash;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; double x5; struct RecordingNavigationEventArchive {} *x6; struct RecordingLaserEventArchive {} *x7; struct RecordingPauseEventArchive {} *x8; struct RecordingMovieEventArchive {} *x9; }*)arg2 unarchiver:(id)arg3;
- (id)initWithStartTime:(double)arg1;
- (id)initWithStartTime:(double)arg1 beginningScrubbingForMovieInfo:(id)arg2;
- (id)initWithStartTime:(double)arg1 endingScrubbingForMovieInfo:(id)arg2 withRate:(double)arg3;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 movieEventType:(int)arg3 movieEventValue:(double)arg4;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 rate:(double)arg3;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 seekTime:(double)arg3;
- (id)initWithStartTime:(double)arg1 startingPlaybackForMovieInfo:(id)arg2;
- (id)initWithStartTime:(double)arg1 stoppingPlaybackForMovieInfo:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isIgnoredWhenSeeking;
- (int)movieEventType;
- (double)movieEventValue;
- (id)movieInfo;
- (double)rate;
- (void)saveToArchive:(struct RecordingEventArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; double x5; struct RecordingNavigationEventArchive {} *x6; struct RecordingLaserEventArchive {} *x7; struct RecordingPauseEventArchive {} *x8; struct RecordingMovieEventArchive {} *x9; }*)arg1 archiver:(id)arg2;
- (double)seekTime;
- (BOOL)startsPlayback;
- (BOOL)stopsPlayback;

@end
