/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDTextureSet : NSObject <NSCopying> {
    BOOL _isFlippedHorizontally;
    int _objectType;
    int _stageIndex;
    float _textureAnimationPercent;
    struct _NSRange { 
        unsigned int location; 
        unsigned int length; 
    } mActiveChunkIndices;
    NSMutableArray *mAllTextures;
    CALayer *mAlternateLayer;
    NSDictionary *mBakedAttributes;
    TSDBitmapRenderingQualityInfo *mBitmapRenderingQualityInfo;
    NSMutableDictionary *mBoundingRectForStage;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mBounds;
    struct CGPoint { 
        float x; 
        float y; 
    } mCenter;
    unsigned int mChunkCount;
    struct CGColorSpace { } *mColorSpace;
    NSMutableDictionary *mFinalTextureForStage;
    TSUNoCopyDictionary *mFinalTexturesToStageMap;
    BOOL mIsBackground;
    BOOL mIsBaked;
    BOOL mIsMagicMove;
    CALayer *mLayer;
    int mMaxStageIndex;
    struct CGPoint { 
        float x; 
        float y; 
    } mOriginalPosition;
    TSDRep *mRep;
    NSMutableDictionary *mReverseFinalTextureForStage;
    TSUNoCopyDictionary *mReverseFinalTexturesToStageMap;
    BOOL mShouldIncludeFinalTexturesInVisibleSet;
    BOOL mShouldTransformUsingTextureCenter;
    TSUNoCopyDictionary *mStageIndexForTexture;
    float mTextureAngle;
    float mTextureOpacity;
    int mTextureZOrder;
    NSMutableArray *mTextures;
}

@property (nonatomic, readonly) NSArray *allTextures;
@property (nonatomic, retain) CALayer *alternateLayer;
@property (nonatomic, retain) TSDBitmapRenderingQualityInfo *bitmapRenderingQualityInfo;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } boundingRect;
@property (nonatomic, retain) NSDictionary *boundingRectForStage;
@property (nonatomic) struct CGPoint { float x1; float x2; } center;
@property (nonatomic, readonly) unsigned int chunkCount;
@property (nonatomic) struct CGColorSpace { }*colorSpace;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } frame;
@property (nonatomic) BOOL isBackground;
@property (nonatomic) BOOL isBaked;
@property (nonatomic) BOOL isFlippedHorizontally;
@property (nonatomic, readonly) BOOL isImageSource;
@property (nonatomic) BOOL isMagicMove;
@property (nonatomic, readonly) BOOL isRenderable;
@property (nonatomic, readonly) CALayer *layer;
@property (nonatomic, readonly) int maxStageIndex;
@property (nonatomic) int objectType;
@property (nonatomic) struct CGPoint { float x1; float x2; } originalPosition;
@property TSDRep *rep;
@property (nonatomic) BOOL shouldIncludeFinalTexturesInVisibleSet;
@property (nonatomic) BOOL shouldTransformUsingTextureCenter;
@property (nonatomic, readonly) int stageIndex;
@property (nonatomic) float textureAngle;
@property (nonatomic) float textureAnimationPercent;
@property (nonatomic) float textureOpacity;
@property (nonatomic) int textureZOrder;
@property (nonatomic, readonly) NSArray *visibleTextures;

+ (id)newFlattenedTextureFromTextures:(id)arg1 newRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;

- (void)addFinalTexture:(id)arg1 forStage:(int)arg2 reverse:(BOOL)arg3;
- (void)addPerspectiveLayerToTexture:(id)arg1 withShowSize:(struct CGSize { float x1; float x2; })arg2;
- (void)addRenderable:(id)arg1;
- (void)addRenderable:(id)arg1 forStage:(int)arg2;
- (void)adjustAnchorPointRelativeToCenterOfRotation;
- (id)allTextures;
- (id)alternateLayer;
- (void)applyActionEffect:(id)arg1 viewScale:(float)arg2 isMagicMove:(BOOL)arg3 shouldBake:(BOOL)arg4 applyScaleOnly:(BOOL)arg5 ignoreScale:(BOOL)arg6 shouldCheckActionKeys:(BOOL)arg7;
- (id)bitmapRenderingQualityInfo;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingRect;
- (id)boundingRectForStage;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingRectForStage:(int)arg1 isBuildIn:(BOOL)arg2;
- (struct CGPoint { float x1; float x2; })center;
- (unsigned int)chunkCount;
- (struct CGColorSpace { }*)colorSpace;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)finalTextureForStage:(int)arg1 reverse:(BOOL)arg2;
- (id)firstVisibleTextureForTextureType:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (void)hideLayersOfFinalTextures;
- (id)init;
- (BOOL)isBackground;
- (BOOL)isBackgroundTexture:(id)arg1;
- (BOOL)isBaked;
- (BOOL)isFlippedHorizontally;
- (BOOL)isImageSource;
- (BOOL)isMagicMove;
- (BOOL)isRenderable;
- (id)layer;
- (int)maxStageIndex;
- (id)newFlattenedTexture;
- (int)objectType;
- (struct CGPoint { float x1; float x2; })originalPosition;
- (void)p_applyPositionFromAttributes:(id)arg1 viewScale:(float)arg2;
- (void)p_resetAttributesWithViewScale:(float)arg1;
- (void)removeRenderable:(id)arg1;
- (void)renderIntoContext:(struct CGContext { }*)arg1 requiresTransparentBackground:(BOOL)arg2;
- (void)renderLayerContentsIfNeeded;
- (id)rep;
- (void)resetAnchorPoint;
- (void)resetToOriginalSource;
- (void)setAlternateLayer:(id)arg1;
- (void)setBitmapRenderingQualityInfo:(id)arg1;
- (void)setBoundingRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBoundingRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forStage:(int)arg2;
- (void)setBoundingRectForStage:(id)arg1;
- (void)setCenter:(struct CGPoint { float x1; float x2; })arg1;
- (void)setColorSpace:(struct CGColorSpace { }*)arg1;
- (void)setIsBackground:(BOOL)arg1;
- (void)setIsBaked:(BOOL)arg1;
- (void)setIsFlippedHorizontally:(BOOL)arg1;
- (void)setIsMagicMove:(BOOL)arg1;
- (void)setLayerGeometryFromRep:(id)arg1;
- (void)setObjectType:(int)arg1;
- (void)setOriginalPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)setRep:(id)arg1;
- (void)setShouldIncludeFinalTexturesInVisibleSet:(BOOL)arg1;
- (void)setShouldTransformUsingTextureCenter:(BOOL)arg1;
- (void)setTextureAngle:(float)arg1;
- (void)setTextureAnimationPercent:(float)arg1;
- (void)setTextureOpacity:(float)arg1;
- (void)setTextureZOrder:(int)arg1;
- (BOOL)shouldIncludeFinalTexturesInVisibleSet;
- (BOOL)shouldTransformUsingTextureCenter;
- (int)stageIndex;
- (int)stageIndexForTexture:(id)arg1;
- (void)teardown;
- (float)textureAngle;
- (float)textureAnimationPercent;
- (float)textureOpacity;
- (int)textureZOrder;
- (id)visibleTextures;
- (id)visibleTexturesForStage:(int)arg1 isBuildIn:(BOOL)arg2 shouldFlatten:(BOOL)arg3;
- (id)visibleTexturesWithTextureType:(int)arg1;

@end
