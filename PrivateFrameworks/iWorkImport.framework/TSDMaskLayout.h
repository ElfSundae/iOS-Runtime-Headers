/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDMaskLayout : TSDLayout {
    struct CGPath { } * mCachedPath;
    struct CGPath { } * mCachedPathNoScale;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  mCachedTightPathBounds;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  mCachedTightPathBoundsNoScale;
    TSDInfoGeometry * mDynamicInfoGeometry;
    TSDPathSource * mDynamicPathSource;
    struct { 
        unsigned int path : 1; 
        unsigned int tightPathBounds : 1; 
    }  mMaskInvalidFlags;
    float  mPathScale;
    BOOL  mScalingInMaskMode;
}

@property (nonatomic, readonly) TSDImageLayout *imageLayout;
@property (nonatomic) float pathScale;

- (id)computeInfoGeometryFromPureLayoutGeometry:(id)arg1;
- (id)computeLayoutGeometry;
- (void)dealloc;
- (id)dependentLayouts;
- (id)imageLayout;
- (id)infoGeometry;
- (id)initWithInfo:(id)arg1;
- (void)invalidate;
- (void)invalidatePath;
- (id)maskInfo;
- (struct CGPath { }*)p_cachedPath;
- (struct CGPath { }*)p_cachedPathNoScale;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_cachedTightPathBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_cachedTightPathBoundsNoScale;
- (void)p_calculateCachedPathIfNecessary;
- (void)p_calculateTightPathBoundsIfNecessary;
- (void)p_createDynamicCopies;
- (void)p_destroyDynamicCopies;
- (void)p_setDynamicInfoGeometry:(id)arg1;
- (struct CGPath { }*)path;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })pathBounds;
- (float)pathScale;
- (id)pathSource;
- (void)setPathScale:(float)arg1;

@end
