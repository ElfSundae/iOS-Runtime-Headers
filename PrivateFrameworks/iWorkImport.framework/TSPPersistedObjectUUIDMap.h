/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSPPersistedObjectUUIDMap : NSObject {
    struct hash_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation> > > { struct __hash_table<std::__1::pair<NSUUID *, TSP::ObjectLocation>, __gnu_cxx::__hash_map_hasher<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::pair<NSUUID *, TSP::ObjectLocation> > > { struct unique_ptr<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *> > > { struct __hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *> { struct __hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true> > { float x_4_2_1; } x_1_1_4; } x1; } *_map;
}

- (void)dealloc;
- (id)descriptionForComponentIdentifier:(long long)arg1 objectIdentifier:(long long)arg2 delegate:(id)arg3;
- (void)didUpdateObjectIdentifierDuringRead:(long long)arg1 forUUID:(id)arg2 componentIdentifier:(long long)arg3 originalObjectIdentifier:(long long)arg4 delegate:(id)arg5;
- (void)didUpdateUUIDDuringRead:(id)arg1 forComponentIdentifier:(long long)arg2 objectIdentifier:(long long)arg3 originalUUID:(id)arg4 delegate:(id)arg5;
- (id)initWithComponentsDictionary:(id)arg1 isLoadingDocument:(BOOL)arg2 delegate:(id)arg3;
- (struct ObjectLocation { long long x1; long long x2; })objectLocationForUUID:(id)arg1;
- (BOOL)setObjectLocation:(struct ObjectLocation { long long x1; long long x2; })arg1 forUUID:(id)arg2 delegate:(id)arg3;

@end
