/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTPostfixOperatorNode : TSTOperatorNode

- (void)buildASTNodeArray:(struct TSCEASTNodeArray { char *x1; unsigned int x2; unsigned int x3; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; long long x30; void*x31; void*x32; void*x33; long long x34; void*x35; void*x36; void*x37; long long x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; bycopy void*x61; void*x62; const void*x63; in short x64; int x65; void*x66; int x67; out in void*x68; void*x69; const void*x70; long x71; long x72; void*x73; void*x74; void*x75; void*x76; void x77; void*x78; void*x79; long x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; bycopy void*x103; void*x104; const void*x105; in short x106; int x107; void*x108; int x109; out in void*x110; void*x111; const void*x112; long x113; long x114; void*x115; void*x116; void*x117; void*x118; void x119; void*x120; void*x121; long x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; unsigned short x146; void*x147; short x148; void*x149; void*x150; void*x151; void*x152; unsigned long x153; int x154; unsigned int x155/* : ? */; const void*x156; const void*x157; void*x158; void*x159; const int x160; void x161; void*x162; void*x163; void*x164; void*x165; const void*x166; void*x167; void*x168; void*x169; out const void*x170; short x171; void*x172; unsigned short x173; long x174; int x175; double x176; void*x177; short x178; void*x179; out void*x180; void*x181; int x182; void*x183; void*x184; float x185; const void*x186; void*x187; void*x188; void*x189; out const void*x190; void*x191; void*x192; const void*x193; void*x194; void*x195; void*x196; out const void*x197; short x198; void*x199; bycopy void*x200; void*x201; short x202; void*x203; int x204; void*x205; void*x206; float x207; const void*x208; void*x209; void*x210; void*x211; out const void*x212; void*x213; bycopy void*x214; void*x215; short x216; void*x217; int x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void* x262[ /* ? */ ]; void*x263; void*x264; unsigned long long x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; union x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; unsigned short x379; void*x380; unsigned long x381; out BOOL x382; void*x383; long x384; int x385; void*x386; void*x387; void*x388; int x389; out in void*x390; void*x391; int x392; long x393; int x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; long long x408; void*x409; void*x410; void*x411; long long x412; void*x413; void*x414; void*x415; long long x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; unsigned short x440; void*x441; unsigned long x442; out BOOL x443; void*x444; long x445; int x446; void*x447; void*x448; void*x449; int x450; out in void*x451; void*x452; int x453; long x454; int x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; unsigned char x467; void*x468; unsigned short x469; void*x470; short x471; void*x472; void*x473; void*x474; void*x475; unsigned long x476; int x477; unsigned int x478/* : ? */; const void*x479; const void*x480; void*x481; void*x482; const int x483; void x484; void*x485; void*x486; void*x487; void*x488; const void*x489; void*x490; void*x491; void*x492; out const void*x493; short x494; void*x495; int x496; void*x497; out const void*x498; unsigned int x499; void*x500; void*x501; out const void*x502; void*x503; float x504; const void*x505; void*x506; void*x507; void*x508; out const void*x509; void*x510; int x511; void*x512; out const void*x513; unsigned int x514; void*x515; void*x516; out const void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; long doublex565; void*x566; void x567; int x568; BOOL x569; void*x570; void*x571; void*x572; void*x573; void*x574; in void*x575; int x576; BOOL x577; void*x578; void*x579; out const void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; long long x592; void*x593; void*x594; void*x595; long long x596; void*x597; void*x598; void*x599; long long x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; long doublex625; void*x626; void x627; int x628; BOOL x629; void*x630; void*x631; void*x632; void*x633; void*x634; in void*x635; int x636; BOOL x637; void*x638; void*x639; out const void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; unsigned short x652; void*x653; short x654; void*x655; void*x656; void*x657; void*x658; unsigned long x659; int x660; unsigned int x661/* : ? */; const void*x662; const void*x663; void*x664; void*x665; const int x666; void x667; void*x668; void*x669; void*x670; void*x671; const void*x672; void*x673; void*x674; void*x675; out const void*x676; short x677; void*x678; void*x679; out void*x680; void*x681; void*x682; unsigned int x683/* : ? */; void*x684; void*x685; float x686; const void*x687; void*x688; void*x689; void*x690; out const void*x691; void*x692; void*x693; out void*x694; void*x695; void*x696; unsigned int x697/* : ? */; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; unsigned char x752; void*x753; long doublex754; void*x755; void*x756; void*x757; oneway void*x758; long x759; void*x760; void*x761; long doublex762; int x763; short x764; void*x765; unsigned char x766; void*x767; BOOL x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; long long x832; void*x833; void*x834; void*x835; long long x836; void*x837; void*x838; void*x839; long long x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; unsigned char x863; void*x864; long doublex865; void*x866; void*x867; void*x868; oneway void*x869; long x870; void*x871; void*x872; long doublex873; int x874; short x875; void*x876; unsigned char x877; void*x878; BOOL x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; unsigned int x893; void*x894; unsigned short x895; void*x896; short x897; void*x898; void*x899; void*x900; void*x901; unsigned long x902; int x903; unsigned int x904/* : ? */; const void*x905; const void*x906; void*x907; void*x908; const int x909; void x910; void*x911; void*x912; void*x913; void*x914; const void*x915; void*x916; void*x917; void*x918; out const void*x919; short x920; void*x921; unsigned char x922; long x923; out void*x924; double x925; void*x926; int x927; void*x928; long doublex929; void*x930; void*x931; void*x932; out in void*x933; float x934; const void*x935; void*x936; void*x937; void*x938; out const void*x939; void*x940; unsigned char x941; long x942; out void*x943; double x944; void*x945; int x946; void*x947; long doublex948; void*x949; void*x950; void*x951; out in void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; out const void*x1010; short x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; const void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; char *x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; unsigned int x1058/* : ? */; char *x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; long long x1083; void*x1084; void*x1085; void*x1086; long long x1087; void*x1088; void*x1089; void*x1090; long long x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; out const void*x1117; short x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; const void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; unsigned short x1144; void*x1145; short x1146; void*x1147; void*x1148; void*x1149; void*x1150; unsigned long x1151; int x1152; unsigned int x1153/* : ? */; const void*x1154; const void*x1155; void*x1156; void*x1157; const int x1158; void x1159; void*x1160; void*x1161; void*x1162; void*x1163; const void*x1164; void*x1165; void*x1166; void*x1167; out const void*x1168; short x1169; void*x1170; bycopy float x1171; float x1172; int x1173; BOOL x1174; void*x1175; unsigned int x1176; void*x1177; void*x1178; out const void*x1179; void*x1180; float x1181; const void*x1182; void*x1183; void*x1184; void*x1185; out const void*x1186; void*x1187; bycopy float x1188; float x1189; int x1190; BOOL x1191; void*x1192; unsigned int x1193; void*x1194; void*x1195; out const void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; unsigned short x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; const void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; long long x1272; void*x1273; void*x1274; void*x1275; long long x1276; void*x1277; void*x1278; void*x1279; long long x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; unsigned short x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; const void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; unsigned short x1335; void*x1336; short x1337; void*x1338; void*x1339; void*x1340; void*x1341; unsigned long x1342; int x1343; unsigned int x1344/* : ? */; const void*x1345; const void*x1346; void*x1347; void*x1348; const int x1349; void x1350; void*x1351; void*x1352; void*x1353; void*x1354; const void*x1355; void*x1356; void*x1357; void*x1358; out const void*x1359; short x1360; void*x1361; bycopy float x1362; float x1363; int x1364; BOOL x1365; void*x1366; unsigned int x1367; void*x1368; void*x1369; out const void*x1370; void*x1371; float x1372; const void*x1373; void*x1374; void*x1375; void*x1376; out const void*x1377; void*x1378; bycopy float x1379; float x1380; int x1381; BOOL x1382; void*x1383; unsigned int x1384; void*x1385; void*x1386; out const void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; long long x1463; void*x1464; void*x1465; void*x1466; long long x1467; void*x1468; void*x1469; void*x1470; long long x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; short x1495; short x1496; void*x1497; void*x1498; void*x1499; const int x1500; void*x1501; void*x1502; const unsigned int x1503; in void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; long x1509; void*x1510; void*x1511; const void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; short x1537; short x1538; void*x1539; void*x1540; void*x1541; const int x1542; void*x1543; void*x1544; const unsigned int x1545; in void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; long x1551; void*x1552; void*x1553; const void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; unsigned short x1579; void*x1580; short x1581; void*x1582; void*x1583; void*x1584; void*x1585; unsigned long x1586; int x1587; unsigned int x1588/* : ? */; const void*x1589; const void*x1590; void*x1591; void*x1592; const void*x1593; void*x1594; void*x1595; void*x1596; out const void*x1597; short x1598; void*x1599; void*x1600; void*x1601; out void*x1602; in double x1603; void*x1604; void*x1605; int x1606; out in void*x1607; float x1608; const void*x1609; void*x1610; void*x1611; void*x1612; out const void*x1613; void*x1614; void*x1615; void*x1616; out void*x1617; in double x1618; void*x1619; void*x1620; int x1621; out in void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; long long x1653; void*x1654; void*x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; const void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; unsigned short x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; out void*x1707; out oneway int x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; void*x1732; long long x1733; void*x1734; void*x1735; void*x1736; long long x1737; void*x1738; void*x1739; void*x1740; long long x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; out void*x1768; out oneway int x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; void*x1775; void*x1776; void*x1777; void*x1778; void*x1779; void*x1780; void*x1781; void*x1782; void*x1783; void*x1784; void*x1785; void*x1786; void*x1787; void*x1788; void*x1789; void*x1790; void*x1791; void*x1792; void*x1793; unsigned short x1794; void*x1795; short x1796; void*x1797; void*x1798; void*x1799; void*x1800; unsigned long x1801; int x1802; unsigned int x1803/* : ? */; const void*x1804; const void*x1805; void*x1806; void*x1807; const void*x1808; void*x1809; void*x1810; void*x1811; out const void*x1812; short x1813; void*x1814; void*x1815; void*x1816; out void*x1817; out short x1818; void*x1819; unsigned int x1820; void*x1821; float x1822; const void*x1823; void*x1824; void*x1825; void*x1826; out const void*x1827; void*x1828; void*x1829; void*x1830; out void*x1831; out short x1832; void*x1833; unsigned int x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; void*x1844; void*x1845; void*x1846; void*x1847; void*x1848; void*x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; void*x1862; void*x1863; void*x1864; void*x1865; void*x1866; void*x1867; void*x1868; void*x1869; void*x1870; void*x1871; void*x1872; void*x1873; void*x1874; void*x1875; void*x1876; void*x1877; long long x1878; void*x1879; void*x1880; void*x1881; long long x1882; void*x1883; void*x1884; void*x1885; long long x1886; void*x1887; void*x1888; void*x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; unsigned short x1909; void*x1910; long doublex1911; void*x1912; float x1913; void*x1914; void*x1915; long x1916; void*x1917; void*x1918; int x1919; void*x1920; int x1921; bycopy in long x1922; void*x1923; long doublex1924; out void*x1925; in long x1926; out void*x1927; double x1928; void*x1929; out long x1930; int x1931; BOOL x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; void*x1943; void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; unsigned short x1951; void*x1952; long doublex1953; void*x1954; float x1955; void*x1956; void*x1957; long x1958; void*x1959; void*x1960; int x1961; void*x1962; int x1963; bycopy in long x1964; void*x1965; long doublex1966; out void*x1967; in long x1968; out void*x1969; double x1970; void*x1971; out long x1972; int x1973; BOOL x1974; void*x1975; void*x1976; void*x1977; void*x1978; void*x1979; void*x1980; void*x1981; void*x1982; void*x1983; void*x1984; void*x1985; void*x1986; void*x1987; void*x1988; void*x1989; void*x1990; void*x1991; void*x1992; void*x1993; unsigned short x1994; void*x1995; short x1996; void*x1997; void*x1998; void*x1999; void*x2000; unsigned long x2001; int x2002; unsigned int x2003/* : ? */; const void*x2004; const void*x2005; void*x2006; void*x2007; const int x2008; void x2009; void*x2010; void*x2011; void*x2012; void*x2013; const void*x2014; void*x2015; void*x2016; void*x2017; out const void*x2018; short x2019; void*x2020; unsigned short x2021; out float x2022; void*x2023; void*x2024; void*x2025; const void*x2026; void*x2027; void*x2028; double x2029; void*x2030; void*x2031; void*x2032; unsigned short x2033; void*x2034; const void x2035; int x2036; BOOL x2037; void*x2038; short x2039; void*x2040; float x2041; const void*x2042; void*x2043; void*x2044; void*x2045; out const void*x2046; void*x2047; unsigned short x2048; out float x2049; void*x2050; void*x2051; void*x2052; const void*x2053; void*x2054; void*x2055; double x2056; void*x2057; void*x2058; void*x2059; unsigned short x2060; void*x2061; const void x2062; int x2063; BOOL x2064; void*x2065; short x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; void*x2079; void*x2080; void*x2081; void*x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; void*x2091; void*x2092; void*x2093; void*x2094; void*x2095; void*x2096; void*x2097; void*x2098; void*x2099; void*x2100; void*x2101; void*x2102; void*x2103; void*x2104; void*x2105; void*x2106; void*x2107; void*x2108; void*x2109; void*x2110; void*x2111; void*x2112; void*x2113; }*)arg1 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 symbolTable:(struct TSCESymbolTable { id x1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *> { struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true> > { float x_4_3_1; } x_1_2_4; } x_2_1_1; } x2; struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::hash<unsigned int>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString> >, std::__1::equal_to<unsigned int>, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > >, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_1; struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_4_1_2; struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > *, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > > > { struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int> > > {} *x_3_2_1; } x_4_1_3; } x4; }*)arg3;
- (id)initFromArchive:(const struct PostfixOperatorNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct OperatorNodeArchive {} *x5; }*)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2;
- (void)saveToArchive:(struct PostfixOperatorNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct OperatorNodeArchive {} *x5; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;

@end
