/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDImageDataAttributes : TSPDataAttributes {
    BOOL  _hasImageIsSRGB;
    BOOL  _hasPixelSize;
    BOOL  _imageIsSRGB;
    struct CGSize { 
        float width; 
        float height; 
    }  _pixelSize;
    BOOL  _shouldBeInterpretedAsGenericIfUntagged;
}

@property (nonatomic, readonly) BOOL hasImageIsSRGB;
@property (nonatomic, readonly) BOOL hasPixelSize;
@property (nonatomic, readonly) BOOL imageIsSRGB;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } pixelSize;
@property (nonatomic, readonly) BOOL shouldBeInterpretedAsGenericIfUntagged;

- (id)copyWithIsSRGB:(BOOL)arg1;
- (id)copyWithPixelSize:(struct CGSize { float x1; float x2; })arg1;
- (id)copyWithShouldBeInterpretedAsGenericIfUntagged:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (BOOL)hasImageIsSRGB;
- (BOOL)hasPixelSize;
- (BOOL)imageIsSRGB;
- (id)init;
- (id)initWithIsSRGB:(BOOL)arg1;
- (id)initWithMessage:(const struct DataAttributes { int (**x1)(); struct ExtensionSet { struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_2_1_1; } x2; }*)arg1;
- (id)initWithPixelSize:(struct CGSize { float x1; float x2; })arg1;
- (id)initWithShouldBeInterpretedAsGenericIfUntagged:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })pixelSize;
- (void)saveToMessage:(struct DataAttributes { int (**x1)(); struct ExtensionSet { struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_2_1_1; } x2; }*)arg1;
- (BOOL)shouldBeInterpretedAsGenericIfUntagged;
- (struct CGSize { float x1; float x2; })size;

@end
