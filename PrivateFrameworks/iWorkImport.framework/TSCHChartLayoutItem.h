/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHChartLayoutItem : NSObject <TSCHUnretainedParent> {
    NSArray *mChildren;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mDrawingRectCache;
    BOOL mDrawingRectCacheValid;
    struct CGSize { 
        float width; 
        float height; 
    } mLayoutSize;
    BOOL mLayoutSizeSet;
    struct CGSize { 
        float width; 
        float height; 
    } mMinSizeCache;
    BOOL mMinSizeCacheValid;
    struct CGPoint { 
        float x; 
        float y; 
    } mOffset;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mOverhangRectCache;
    BOOL mOverhangRectCacheValid;
    TSCHChartLayoutItem *mParent;
    BOOL mTreeBuilt;
}

@property (nonatomic, readonly) TSCHChartInfo *chartInfo;
@property (nonatomic, readonly) unsigned int dataSetIndex;
@property (nonatomic, readonly) struct CGPoint { float x1; float x2; } drawingOffset;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } drawingRect;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } drawingSize;
@property (nonatomic, readonly) BOOL isInResize;
@property (nonatomic) struct CGPoint { float x1; float x2; } layoutOffset;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } layoutRect;
@property (nonatomic) struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; } layoutSettings;
@property (nonatomic) struct CGSize { float x1; float x2; } layoutSize;
@property (readonly) struct CGSize { float x1; float x2; } minSize;
@property (nonatomic, readonly) TSCHChartModel *model;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } overhangRect;
@property (nonatomic, readonly) TSCHChartLayoutItem *parent;
@property (nonatomic, readonly) TSCHChartRootLayoutItem *root;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } rootedDrawingRect;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } rootedLayoutRect;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } startingSize;

+ (id)chartLayoutWithChartInfo:(id)arg1;

- (void)buildSubTree;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })calcDrawingRect;
- (struct CGSize { float x1; float x2; })calcMinSize;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })calcOverhangRect;
- (id)chartInfo;
- (void)clearAll;
- (void)clearDrawingRect;
- (void)clearLayoutSize;
- (void)clearMinSize;
- (void)clearOverhangRect;
- (void)clearParent;
- (unsigned int)dataSetIndex;
- (void)dealloc;
- (id)description;
- (struct CGPoint { float x1; float x2; })drawingOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })drawingRect;
- (struct CGSize { float x1; float x2; })drawingSize;
- (id)hitChartElements:(struct CGPoint { float x1; float x2; })arg1 passingTest:(id /* block */)arg2;
- (id)initWithParent:(id)arg1;
- (BOOL)isInResize;
- (struct CGPoint { float x1; float x2; })layoutOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })layoutRect;
- (struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; })layoutSettings;
- (struct CGSize { float x1; float x2; })layoutSize;
- (void)layoutUsingMethod:(int)arg1;
- (struct CGSize { float x1; float x2; })minSize;
- (id)model;
- (struct CGPath { }*)newDragAndDropHighlightPathForSelection:(id)arg1;
- (float)overhangMagnitudeForEdge:(unsigned int)arg1;
- (struct CGPoint { float x1; float x2; })overhangOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })overhangRect;
- (struct CGSize { float x1; float x2; })overhangSize;
- (id)p_description;
- (void)p_iterateChildrenWithBlock:(id /* block */)arg1;
- (void)p_layoutInward;
- (void)p_layoutOutward;
- (id)parent;
- (void)protected_iterateHitChartElements:(struct CGPoint { float x1; float x2; })arg1 withBlock:(id /* block */)arg2;
- (id)renderersWithRep:(id)arg1;
- (id)root;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rootedDrawingRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rootedLayoutRect;
- (void)setLayoutOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setLayoutRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setLayoutSettings:(struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; })arg1;
- (void)setLayoutSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })startingSize;
- (BOOL)stopIteratingItemsContainingPoint:(struct CGPoint { float x1; float x2; })arg1 withBlock:(id /* block */)arg2;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;

@end
