/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTIntegerKeyDict : NSObject {
    struct hash_map<unsigned long, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, SFUtility::ObjcSharedPtr<NSObject> > > > { struct __hash_table<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, SFUtility::ObjcSharedPtr<NSObject> >, void *> *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; } x1; } * mMap;
}

- (id)allValues;
- (void)applyFunction:(int (*)arg1 withState:(void*)arg2;
- (void)applyFunction:(int (*)arg1 withState:(void*)arg2 andState:(void*)arg3;
- (int)count;
- (void)dealloc;
- (id)description;
- (void)enumerateObjectsUsingBlock:(id /* block */)arg1;
- (id)init;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (id)objectForKey:(unsigned long)arg1;
- (void)removeAllObjects;
- (void)removeFirstObject;
- (void)removeObjectForKey:(unsigned long)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned long)arg2;
- (void)transformWithFunction:(int (*)arg1 withState:(void*)arg2;

@end
