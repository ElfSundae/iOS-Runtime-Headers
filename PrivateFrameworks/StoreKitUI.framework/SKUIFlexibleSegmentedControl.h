/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@interface SKUIFlexibleSegmentedControl : UIView {
    <SKUIFlexibleSegmentedControlDelegate> * _delegate;
    float  _desiredSegmentWidth;
    BOOL  _isMoreListSelected;
    NSArray * _itemTitles;
    int  _maximumNumberOfVisibleItems;
    NSString * _moreListTitle;
    int  _previousSelectedSegmentIndex;
    UISegmentedControl * _segmentedControl;
    int  _selectedSegmentIndex;
    BOOL  _sizesSegmentsToFitWidth;
}

@property (nonatomic) <SKUIFlexibleSegmentedControlDelegate> *delegate;
@property (nonatomic) float desiredSegmentWidth;
@property (nonatomic, copy) NSArray *itemTitles;
@property (nonatomic) int maximumNumberOfVisibleItems;
@property (nonatomic, readonly) int moreListIndex;
@property (nonatomic, copy) NSString *moreListTitle;
@property (nonatomic) int selectedSegmentIndex;
@property (nonatomic) BOOL sizesSegmentsToFitWidth;

- (void).cxx_destruct;
- (void)_configureSegmentedControl:(id)arg1 withTitles:(id)arg2 boundingSize:(struct CGSize { float x1; float x2; })arg3;
- (void)_setTitles:(id)arg1 forSegmentedControl:(id)arg2;
- (void)_valueChangeAction:(id)arg1;
- (void)cancelMoreList;
- (void)dealloc;
- (id)delegate;
- (float)desiredSegmentWidth;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForSegmentWithIndex:(int)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)itemTitles;
- (void)layoutSubviews;
- (int)maximumNumberOfVisibleItems;
- (int)moreListIndex;
- (id)moreListTitle;
- (int)selectedSegmentIndex;
- (void)setDelegate:(id)arg1;
- (void)setDesiredSegmentWidth:(float)arg1;
- (void)setItemTitles:(id)arg1;
- (void)setMaximumNumberOfVisibleItems:(int)arg1;
- (void)setMoreListTitle:(id)arg1;
- (void)setSelectedSegmentIndex:(int)arg1;
- (void)setSizesSegmentsToFitWidth:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)sizesSegmentsToFitWidth;

@end
