/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@interface SKUIShelfPageSectionConfiguration : NSObject {
    SKUIViewElementLayoutContext *_cellLayoutContext;
    <SKUIShelfPageSectionConfigurationDataSource> *_dataSource;
    int _lockupType;
    BOOL _needsShelfCollectionViewLayout;
    BOOL _needsShelfCollectionViewReload;
    SKUIStorePageSectionContext *_pageSectionContext;
    BOOL _rendersWithParallax;
    BOOL _rendersWithPerspective;
    int _sectionIndex;
    UICollectionView *_shelfCollectionView;
    UIColor *_shelfCollectionViewBackgroundColor;
    <UICollectionViewDataSource> *_shelfCollectionViewDataSource;
    <UICollectionViewDelegate> *_shelfCollectionViewDelegate;
    SKUIShelfLayoutData *_shelfLayoutData;
    IKViewElementStyle *_shelfViewElementStyle;
    BOOL _topSection;
    BOOL _wantsZoomingShelfLayout;
    float _zoomingShelfLayoutFocusedItemHorizontalCenterOffset;
    float _zoomingShelfLayoutInterItemSpacing;
    float _zoomingShelfLayoutItemWidth;
    float _zoomingShelfLayoutScaledItemWidth;
}

@property (nonatomic, retain) SKUIViewElementLayoutContext *cellLayoutContext;
@property (nonatomic) <SKUIShelfPageSectionConfigurationDataSource> *dataSource;
@property (nonatomic, readonly) UICollectionView *existingShelfCollectionView;
@property (nonatomic) BOOL needsShelfCollectionViewLayout;
@property (nonatomic) BOOL needsShelfCollectionViewReload;
@property (nonatomic, readonly) unsigned int numberOfIterations;
@property (nonatomic, retain) SKUIStorePageSectionContext *pageSectionContext;
@property (nonatomic) BOOL rendersWithParallax;
@property (nonatomic) BOOL rendersWithPerspective;
@property (nonatomic) int sectionIndex;
@property (nonatomic, readonly) UICollectionView *shelfCollectionView;
@property (nonatomic, retain) UIColor *shelfCollectionViewBackgroundColor;
@property (nonatomic) <UICollectionViewDataSource> *shelfCollectionViewDataSource;
@property (nonatomic) <UICollectionViewDelegate> *shelfCollectionViewDelegate;
@property (nonatomic, readonly) SKUIShelfLayoutData *shelfLayoutData;
@property (nonatomic, retain) IKViewElementStyle *shelfViewElementStyle;
@property (getter=isTopSection, nonatomic) BOOL topSection;
@property (nonatomic, readonly) BOOL wantsZoomingShelfLayout;
@property (nonatomic, readonly) float zoomingShelfLayoutFocusedItemHorizontalCenterOffset;
@property (nonatomic, readonly) float zoomingShelfLayoutInterItemSpacing;
@property (nonatomic, readonly) float zoomingShelfLayoutItemWidth;
@property (nonatomic, readonly) float zoomingShelfLayoutScaledItemWidth;

- (void).cxx_destruct;
- (Class)_cellClassForEffectiveShelfItemViewElement:(id)arg1;
- (float)_columnSpacingForShelfItemViewElements:(id)arg1;
- (id)_dequeueCellForLockup:(id)arg1 collectionView:(id)arg2 indexPath:(id)arg3;
- (Class)_lockupCellClassWithLockup:(id)arg1;
- (float)_perspectiveHeightForContentSize:(float)arg1;
- (id)_reloadShelfLayoutDataWithNumberOfShelfItems:(int)arg1;
- (id)_shelfItemViewElementAtIndex:(int)arg1;
- (id)_styledShelfCollectionViewLayoutForExistingLayout:(id)arg1;
- (void)_updateShelfLayoutDataContentInset;
- (id)actualIndexPathOfShelfItemClosestToVisibleBoundsForNormalizedIndexPath:(id)arg1 numberOfShelfItems:(unsigned int)arg2;
- (id)backgroundColorForShelfViewElement:(id)arg1;
- (id)cellForShelfItemViewElement:(id)arg1 indexPath:(id)arg2;
- (id)cellForShelfViewElement:(id)arg1 indexPath:(id)arg2;
- (id)cellLayoutContext;
- (struct CGSize { float x1; float x2; })cellSizeForShelfViewElement:(id)arg1 indexPath:(id)arg2 numberOfShelfItems:(int)arg3;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (id)dataSource;
- (id)effectiveViewElementForShelfItemViewElement:(id)arg1;
- (id)existingShelfCollectionView;
- (BOOL)isTopSection;
- (int)lockupTypeForLockup:(id)arg1;
- (BOOL)needsShelfCollectionViewLayout;
- (BOOL)needsShelfCollectionViewReload;
- (id)normalizedShelfItemIndexPathFromActualIndexPath:(id)arg1 numberOfShelfItems:(unsigned int)arg2;
- (unsigned int)numberOfCellsForNumberOfShelfItems:(unsigned int)arg1;
- (unsigned int)numberOfIterations;
- (int)numberOfSectionCells;
- (id)pageSectionContext;
- (BOOL)prefetchResourcesForShelfItemViewElement:(id)arg1 reason:(int)arg2;
- (void)registerReusableClassesForCollectionView:(id)arg1;
- (void)reloadLockupTypeForShelfViewElement:(id)arg1;
- (void)reloadShelfLayoutDataForShelfViewElement:(id)arg1 withShelfItemViewElements:(id)arg2 requestCellLayouts:(BOOL)arg3 numberOfShelfItems:(int)arg4;
- (BOOL)rendersWithParallax;
- (BOOL)rendersWithPerspective;
- (void)requestCellLayoutForViewElement:(id)arg1 withColumnWidth:(float)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })sectionContentInsetAdjustedFromValue:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1 forShelfViewElement:(id)arg2 withSectionIndex:(int)arg3;
- (int)sectionIndex;
- (void)setCellLayoutContext:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setNeedsShelfCollectionViewLayout:(BOOL)arg1;
- (void)setNeedsShelfCollectionViewReload:(BOOL)arg1;
- (void)setPageSectionContext:(id)arg1;
- (void)setRendersWithParallax:(BOOL)arg1;
- (void)setRendersWithPerspective:(BOOL)arg1;
- (void)setSectionIndex:(int)arg1;
- (void)setShelfCollectionViewBackgroundColor:(id)arg1;
- (void)setShelfCollectionViewDataSource:(id)arg1;
- (void)setShelfCollectionViewDelegate:(id)arg1;
- (void)setShelfViewElementStyle:(id)arg1;
- (void)setTopSection:(BOOL)arg1;
- (id)shelfCollectionView;
- (id)shelfCollectionViewBackgroundColor;
- (id)shelfCollectionViewDataSource;
- (id)shelfCollectionViewDelegate;
- (void)shelfItemsCollectionView:(id)arg1 willApplyLayoutAttributes:(id)arg2 forViewElement:(id)arg3 withItemIndex:(int)arg4;
- (id)shelfLayoutData;
- (id)shelfViewElementStyle;
- (BOOL)supportsDuplicateShelfItems;
- (BOOL)wantsZoomingShelfLayout;
- (float)zoomingShelfLayoutFocusedItemHorizontalCenterOffset;
- (float)zoomingShelfLayoutInterItemSpacing;
- (float)zoomingShelfLayoutItemWidth;
- (float)zoomingShelfLayoutScaledItemWidth;

@end
