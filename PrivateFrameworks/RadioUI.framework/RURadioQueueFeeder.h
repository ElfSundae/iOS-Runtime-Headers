/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
 */

@interface RURadioQueueFeeder : MPQueueFeeder <MPUQueueBehaviorManaging> {
    RURadioAdObserver *_adObserver;
    NSMapTable *_adSlotToAllAdTracks;
    NSMapTable *_adSlotToInsertedAdTracks;
    NSMapTable *_adSlotToRadioTrack;
    BOOL _canSeek;
    MPAVItem *_currentItem;
    BOOL _didReceiveTracklistEnd;
    unsigned int _feederRevisionID;
    NSMapTable *_fetchingTracksCompletionHandlersByStation;
    BOOL _hasReceivedStreamTrack;
    BOOL _hasVerifiedCloudStatus;
    BOOL _isPreparingStation;
    int _maximumGetTracksRetryCount;
    MPPlaceholderAVItem *_placeholderAVItem;
    NSArray *_previousDatabaseTrackPlaybackDescriptorQueue;
    NSMapTable *_radioTrackToAdSlot;
    RadioStation *_station;
    RadioStationSkipController *_stationSkipController;
    NSMapTable *_stationTracklistRetrievalRetryCount;
    NSArray *_tracks;
    NSMutableSet *_visibleAdSlots;
    BOOL _wasUsingBackgroundNetwork;
}

@property (nonatomic, readonly, copy) NSArray *allPreparedAdSlotRadioTracks;
@property (nonatomic, readonly) BOOL allowsUserVisibleUpcomingItems;
@property (nonatomic, readonly) BOOL canSeek;
@property (nonatomic, readonly) BOOL canSkipToPreviousItem;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) int playbackMode;
@property (nonatomic, retain) RadioStation *station;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSArray *tracks;
@property (nonatomic, readonly) BOOL userCanChangeShuffleAndRepeatType;

// Image: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI

+ (void)_explicitContentAllowedDidChangeNotification:(id)arg1;
+ (id)_tracksByRemovingPromotionalContentFromTracks:(id)arg1;
+ (id)_tracksWithPromotionalContentFromTracks:(id)arg1;
+ (void)_updateIsExplicitContentRestrictedAndPostNotification:(BOOL)arg1 removeTracks:(BOOL)arg2;
+ (BOOL)isExplicitTracksEnabled;
+ (BOOL)isProfileExplicitContentRestricted;
+ (BOOL)isUserDefaultExplicitTracksEnabled;
+ (int)maximumNumberOfTracksToFetch;
+ (void)setIgnoresUserDefaultExplicitTracksEnabled:(BOOL)arg1;
+ (void)setUserDefaultExplicitTracksEnabled:(BOOL)arg1;

- (void).cxx_destruct;
- (id)MPU_contentItemIdentifierCollection;
- (void)_adSlotAdTracksDidChangeNotification:(id)arg1;
- (id)_adSlotForAdTrack:(id)arg1;
- (void)_adTrackActionDidFinishNotification:(id)arg1;
- (void)_adTrackActionWillBeginNotification:(id)arg1;
- (void)_adTrackDidFailToLoadNotification:(id)arg1;
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;
- (void)_applicationWillTerminateNotification:(id)arg1;
- (void)_applyTracksForAdSlot:(id)arg1 radioTrack:(id)arg2 currentPlayingItem:(id)arg3 toTracks:(id)arg4;
- (BOOL)_canHavePlaceholderTrack;
- (void)_configurePlaceholderAVItem;
- (id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(BOOL)arg2 skipDate:(id)arg3;
- (void)_fetchAdSlotIfNeededForRadioTrack:(id)arg1 inStation:(id)arg2;
- (void)_fetchAdditionalTracksWithBaseIndex:(int)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_fetchNextTrackAdSlotIfNeeded;
- (BOOL)_hasReceivedStreamTrack;
- (unsigned int)_indexOfCurrentItem;
- (unsigned int)_indexOfItem:(id)arg1;
- (unsigned int)_indexOfItem:(id)arg1 inTracks:(id)arg2;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_numberOfAvailableSkipsDidChangeNotification:(id)arg1;
- (void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(int)arg2;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_removeAllTracks;
- (void)_sendContentsDidChangeWithCurrentItem;
- (void)_setAdSlot:(id)arg1 forRadioTrack:(id)arg2;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (id)_trackAtIndex:(unsigned int)arg1 shouldFetchAddtionalTracks:(BOOL)arg2;
- (id)_tracksByRemovingPlayedTracks:(id)arg1;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (void)_updateTracksForAdSlot:(id)arg1 radioTrack:(id)arg2;
- (void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
- (void)_updateWithTracks:(id)arg1 tracklistActionType:(int)arg2 options:(int)arg3;
- (void)_verifyCloudStatusIfNeeded;
- (id)allPreparedAdSlotRadioTracks;
- (BOOL)allowsUserVisibleUpcomingItems;
- (id)audioSessionModeForItemAtIndex:(unsigned int)arg1;
- (BOOL)canReorder;
- (BOOL)canSeek;
- (BOOL)canSkipItem:(id)arg1;
- (BOOL)canSkipToPreviousItem;
- (id)copyRawItemAtIndex:(unsigned int)arg1;
- (void)dealloc;
- (BOOL)hasValidItemAtIndex:(unsigned int)arg1;
- (id)identifierAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfItemWithIdentifier:(id)arg1;
- (id)init;
- (unsigned int)initialPlaybackQueueDepthForStartingIndex:(unsigned int)arg1;
- (BOOL)isRadioQueueFeeder;
- (Class)itemClass;
- (unsigned int)itemCount;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)playbackInfoForIdentifier:(id)arg1;
- (void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2;
- (BOOL)player:(id)arg1 shouldContinuePlaybackForNetworkType:(int)arg2 returningError:(id*)arg3;
- (BOOL)playerPreparesItemsForPlaybackAsynchronously;
- (id)preparedAdSlotForRadioTrack:(id)arg1;
- (BOOL)preventsHardQueueModificationsForItem:(id)arg1;
- (unsigned int)realRepeatType;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setStation:(id)arg1;
- (void)setTracks:(id)arg1;
- (BOOL)shouldContinuePlaybackForNetworkType:(int)arg1 player:(id)arg2;
- (BOOL)shouldReuseQueueFeederForPlaybackContext:(id)arg1;
- (struct { int x1; int x2; double x3; })skipLimit;
- (id)station;
- (id)tracks;
- (BOOL)userCanChangeShuffleAndRepeatType;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (id)entityUniqueIdentifier;
- (id)imageURLForEntityArtworkProperty:(id)arg1 fittingSize:(struct CGSize { float x1; float x2; })arg2 destinationScale:(float)arg3;
- (id)valueForEntityProperty:(id)arg1;
- (id)valuesForEntityProperties:(id)arg1;

@end
