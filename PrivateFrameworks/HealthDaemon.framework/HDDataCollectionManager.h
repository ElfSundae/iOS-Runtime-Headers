/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDDataCollectionManager : NSObject <HDDiagnosticObject, HDHealthDaemonReadyObserver, HDHealthDataCollectionManager> {
    NSMutableDictionary *_activeDataClasses;
    NSMutableSet *_dataCollectors;
    <HDDataCollectionManagerDelegate> *_delegate;
    HDDemoManager *_demoManager;
    <HDHealthDaemon> *_healthDaemon;
    NSDate *_lastLaunchUpdate;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (nonatomic, retain) NSMutableDictionary *activeDataClasses;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HDDataCollectionManagerDelegate> *delegate;
@property (nonatomic, retain) HDDemoManager *demoManager;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) <HDHealthDaemon> *healthDaemon;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_activeClassesString;
- (id)_dataCollectorsDiagnosticDescription;
- (void)_demoObjectsReceived:(id)arg1;
- (void)_queue_addDataCollector:(id)arg1;
- (void)_queue_addObserver:(id)arg1 collectionInterval:(double)arg2 forType:(id)arg3;
- (void)_queue_alertCollectorsCollectionStartedForType:(id)arg1;
- (void)_queue_alertCollectorsCollectionStoppedForType:(id)arg1;
- (void)_queue_alertCollectorsOfTypesWithObservers;
- (BOOL)_queue_anyObserversExistForTypes:(id)arg1;
- (double)_queue_collectionIntervalForType:(id)arg1;
- (BOOL)_queue_dataReceived:(id)arg1 provenance:(id)arg2 isDemoData:(BOOL)arg3 error:(id*)arg4;
- (id)_queue_demoManagerCreatingIfNecessary;
- (BOOL)_queue_observersExistForType:(id)arg1;
- (void)_queue_removeObserver:(id)arg1 forType:(id)arg2;
- (void)_queue_setupUnprotectedDataDependantState;
- (void)_queue_updateCollectionPeriodForCollectorsOfType:(id)arg1;
- (void)_updateDataCollectorsWithPrivacySettings;
- (id)activeDataClasses;
- (void)daemonReady:(id)arg1;
- (id)dataCollectors;
- (void)dealloc;
- (id)delegate;
- (id)demoManager;
- (id)diagnosticDescription;
- (void)generateFakeDataForActivityType:(int)arg1 minutes:(double)arg2 completion:(id /* block */)arg3;
- (id)healthDaemon;
- (id)initWithHealthDaemon:(id)arg1 delegate:(id)arg2;
- (void)periodicUpdate;
- (id)queue;
- (void)sensorDataArrayReceived:(id)arg1 deviceEntity:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)sensorDataReceived:(id)arg1 deviceEntity:(id)arg2;
- (void)setActiveDataClasses:(id)arg1;
- (void)setDataCollectors:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDemoManager:(id)arg1;
- (void)setHealthDaemon:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)startDataCollectionForType:(id)arg1 observer:(id)arg2 collectionInterval:(double)arg3;
- (void)startFakingDataWithActivityType:(int)arg1 speed:(id)arg2;
- (void)startFakingWithHKWorkoutActivityType:(unsigned int)arg1;
- (void)startRecordingDataToFile:(id)arg1;
- (void)startReplayingDataFromFile:(id)arg1 repeat:(BOOL)arg2;
- (void)stopDataCollectionForType:(id)arg1 observer:(id)arg2;
- (void)stopFakingData;
- (void)stopRecordingData;
- (void)stopReplayingData;

@end
