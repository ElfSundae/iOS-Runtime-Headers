/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDServer : NSObject <HDActiveWorkoutServerDelegate, HDDiagnosticObject, HDProcessStateObserver, HDQueryServerDelegate, HDServer, HDUnitPreferencesManagerObserver> {
    HDAuthorizationServer *_authorizationServer;
    HDClient *_client;
    NSString *_clientIdentifier;
    NSString *_clientVersion;
    HDDaemon *_daemon;
    HDDataCollectionManager *_dataCollectMgr;
    HDDataManager *_dataMgr;
    HDDatabase *_database;
    HDHealthDeviceManager *_healthDeviceManager;
    HDIdentifierTable *_healthDeviceSessionServerIDs;
    NSMutableSet *_healthServiceClosedSessionClientIDs;
    NSMutableSet *_healthServiceClosedSessionServerIDs;
    NSMutableDictionary *_healthServiceDiscoveryClientIDs;
    HDIdentifierTable *_healthServiceDiscoveryServerIDs;
    NSMutableDictionary *_healthServiceSessionClientIDs;
    NSMutableSet *_processStateObservingQueryServerUUIDs;
    BOOL _processStateSuspended;
    NSMutableDictionary *_queryServersByUUID;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_serverID;
    NSMutableDictionary *_workoutServersByUUID;
}

@property (nonatomic, retain) HDAuthorizationServer *authorizationServer;
@property (nonatomic, retain) HDClient *client;
@property (nonatomic, retain) NSString *clientIdentifier;
@property (nonatomic) HDDaemon *daemon;
@property (nonatomic, retain) HDDataCollectionManager *dataCollectMgr;
@property (nonatomic, retain) HDDataManager *dataMgr;
@property (nonatomic, retain) HDDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) HDHealthDeviceManager *healthDeviceManager;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSString *serverID;
@property (readonly) Class superclass;

+ (BOOL)_isClientEntitled:(id)arg1 error:(id*)arg2;
+ (BOOL)_isDeviceSupportedWithError:(id*)arg1;
+ (id)serverWithClient:(id)arg1 healthDaemon:(id)arg2;

- (void).cxx_destruct;
- (id /* block */)_authorizationPromptHandler;
- (BOOL)_clientHasPrivateHealthKitEntitlementWithError:(id*)arg1;
- (BOOL)_clientHasUtilityEntitlementWithError:(id*)arg1;
- (id)_clientRemoteObjectProxy;
- (void)_closeDiscoveryBetweenServer:(unsigned int)arg1 andClient:(unsigned int)arg2;
- (void)_closeSessionBetweenServer:(unsigned int)arg1 andClient:(unsigned int)arg2;
- (unsigned int)_discoveryServerIdentifierForClientIdentifier:(unsigned int)arg1;
- (BOOL)_hasMedicalIDDataAccess;
- (unsigned int)_healthDeviceClientDiscoveryIdentifier:(unsigned int)arg1;
- (unsigned int)_healthDeviceClientSessionIdentifier:(unsigned int)arg1;
- (BOOL)_insertedObjects:(id)arg1 containsQuantitySampleWithType:(id)arg2;
- (BOOL)_isClientSessionValid:(unsigned int)arg1;
- (BOOL)_isServerSessionValid:(unsigned int)arg1;
- (void)_openAppForAuthorizationForSession:(id)arg1 completion:(id /* block */)arg2;
- (void)_performIfAuthorizedForMedicalID:(id /* block */)arg1 errorHandler:(id /* block */)arg2;
- (void)_performIfAuthorizedToDeleteObjects:(id)arg1 usingBlock:(id /* block */)arg2 errorHandler:(id /* block */)arg3;
- (void)_performIfAuthorizedToReadTypes:(id)arg1 usingBlock:(id /* block */)arg2 errorHandler:(id /* block */)arg3;
- (void)_performIfAuthorizedToSaveObjects:(id)arg1 usingBlock:(id /* block */)arg2 errorHandler:(id /* block */)arg3;
- (void)_queue_deactivateWorkoutServerWithUUID:(id)arg1;
- (BOOL)_queue_insertObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersion:(id)arg3 error:(id*)arg4;
- (void)_queue_registerForProcessStateUpdatesWithUUID:(id)arg1;
- (void)_queue_unregisterFromProcessStateUpdatesWithUUID:(id)arg1;
- (void)_remote_fetchAllDevicesWithCompletion:(id /* block */)arg1;
- (void)_remote_fetchDataTypesForDevice:(id)arg1 completion:(id /* block */)arg2;
- (void)_remote_fetchDataTypesForSource:(id)arg1 completion:(id /* block */)arg2;
- (void)_remote_fetchDevicesMatchingProperty:(id)arg1 values:(id)arg2 completion:(id /* block */)arg3;
- (void)_requireEntitlement:(id)arg1 usingBlock:(id /* block */)arg2 errorHandler:(id /* block */)arg3;
- (void)_requirePrivateHealthKitEntitlementUsingBlock:(id /* block */)arg1 errorHandler:(id /* block */)arg2;
- (void)_saveDataObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersion:(id)arg3 handler:(id /* block */)arg4;
- (unsigned int)_sessionClientIdentifierForServerIdentifier:(unsigned int)arg1;
- (unsigned int)_sessionServerIdentifierForClientIdentifier:(unsigned int)arg1;
- (id)_sourceForClient:(id)arg1 error:(id*)arg2;
- (void)_startQueryServer:(id)arg1 handler:(id /* block */)arg2;
- (void)addPairingForHealthService:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)addPeripheral:(id)arg1 name:(id)arg2 forServices:(id)arg3 withCompletion:(id /* block */)arg4;
- (void)addSamples:(id)arg1 toWorkout:(id)arg2 completion:(id /* block */)arg3;
- (void)addSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 completion:(id /* block */)arg3;
- (void)allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)allAuthorizationRecordsForType:(id)arg1 completion:(id /* block */)arg2;
- (void)allSourcesWithCompletion:(id /* block */)arg1;
- (void)associateSamplesWithUUIDs:(id)arg1 withWorkout:(id)arg2 completion:(id /* block */)arg3;
- (void)attachWorkoutServerWithClient:(id)arg1 workoutConfiguration:(id)arg2 handler:(id /* block */)arg3;
- (id)authorizationServer;
- (void)authorizationStatusForType:(id)arg1 completion:(id /* block */)arg2;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 handler:(id /* block */)arg2;
- (void)beginBluetoothStatusUpdates:(id /* block */)arg1;
- (id)client;
- (id)clientIdentifier;
- (void)closeTransactionWithDataType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 completion:(id /* block */)arg4;
- (void)createBluetoothSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 completion:(id /* block */)arg3;
- (void)currentlyPairedWatchIdentifierWithCompletion:(id /* block */)arg1;
- (id)daemon;
- (id)dataCollectMgr;
- (id)dataMgr;
- (id)database;
- (void)dealloc;
- (void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)deleteDataObjects:(id)arg1 handler:(id /* block */)arg2;
- (void)deleteDataObjectsOfType:(id)arg1 matchingPredicate:(id)arg2 handler:(id /* block */)arg3;
- (void)deleteMedicalIDDataWithCompletion:(id /* block */)arg1;
- (void)deleteSourceWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)deliverWorkoutSessionChangedToState:(int)arg1 fromState:(int)arg2 date:(id)arg3 forSessionUUID:(id)arg4;
- (void)deliverWorkoutSessionError:(id)arg1 forSessionUUID:(id)arg2;
- (id)diagnosticDescription;
- (void)dropEntitlement:(id)arg1;
- (void)endAuthorizationDelegateTransactionWithError:(id)arg1;
- (void)endBluetoothStatusUpdates;
- (void)endHealthServiceDiscovery:(unsigned int)arg1;
- (void)endHealthServiceSession:(unsigned int)arg1;
- (void)fetchCharacteristicWithDataType:(id)arg1 handler:(id /* block */)arg2;
- (void)fetchDiagnosticsWithKey:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchUnitPreferencesForTypes:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)forceNanoSyncWithPullRequest:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)generateFakeDataForActivityType:(int)arg1 minutes:(double)arg2 completion:(id /* block */)arg3;
- (void)getDatabaseSizeInBytesWithCompletion:(id /* block */)arg1;
- (void)getDefaultForKey:(id)arg1 withHandler:(id /* block */)arg2;
- (void)getEnabledStatusForPeripheral:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getHealthServicePairingsWithHandler:(id /* block */)arg1;
- (void)getHealthServiceProperty:(id)arg1 forSession:(unsigned int)arg2 withHandler:(id /* block */)arg3;
- (void)handleAuthorizationForExtensionWithCompletion:(id /* block */)arg1;
- (BOOL)hasActiveWorkouts;
- (void)hasAnyActiveWorkouts:(id /* block */)arg1;
- (void)hasSourceWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)healthDeviceManager;
- (id)initWithClient:(id)arg1 healthDaemon:(id)arg2;
- (void)invalidate;
- (void)invalidateActivityAlertSuppressionForIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)medicalIDDataCreateIfNecessary:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)nukeActiveWorkoutServers;
- (void)orderedSourcesForObjectType:(id)arg1 completion:(id /* block */)arg2;
- (void)pauseActiveWorkoutsWithCompletion:(id /* block */)arg1;
- (void)pauseAllActiveWorkoutsWithCompletion:(id /* block */)arg1;
- (void)performHealthServiceOperation:(id)arg1 onSession:(unsigned int)arg2 withParameters:(id)arg3 completion:(id /* block */)arg4;
- (void)performMigrationWithCompletion:(id /* block */)arg1;
- (void)processResumed:(id)arg1;
- (void)processSuspended:(id)arg1;
- (id)queryServer:(id)arg1 filterSamplesForReadAuthorization:(id)arg2;
- (BOOL)queryServer:(id)arg1 isAuthorizationStatusDeterminedForTypes:(id)arg2 error:(id*)arg3;
- (BOOL)queryServer:(id)arg1 isAuthorizedToReadType:(id)arg2 withRestrictedSourceIdentifier:(id*)arg3 authorizationAnchor:(id*)arg4;
- (void)queryServerDidDeactivate:(id)arg1;
- (void)queryServerDidStartDataCollection:(id)arg1;
- (void)queryServerDidStopDataCollection:(id)arg1;
- (BOOL)queryServerShouldObserveInBackground:(id)arg1;
- (id)queue;
- (void)registerKeepAliveWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)removeDefaultForKey:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)removePairingForHealthService:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)removePeripheral:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)resetNanoSyncWithCompletion:(id /* block */)arg1;
- (void)restoreEntitlement:(id)arg1;
- (void)saveDataObjects:(id)arg1 handler:(id /* block */)arg2;
- (void)saveDataObjects:(id)arg1 sourceBundleIdentifier:(id)arg2 sourceVersion:(id)arg3 handler:(id /* block */)arg4;
- (void)select:(id)arg1 from:(id)arg2 where:(id)arg3 groupBy:(id)arg4 orderBy:(id)arg5 limit:(int)arg6 completion:(id /* block */)arg7;
- (id)serverID;
- (void)setAuthorizationServer:(id)arg1;
- (void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)setBackgroundDeliveryFrequency:(int)arg1 forDataType:(id)arg2 handler:(id /* block */)arg3;
- (void)setCharacteristic:(id)arg1 forDataType:(id)arg2 handler:(id /* block */)arg3;
- (void)setClient:(id)arg1;
- (void)setClientIdentifier:(id)arg1;
- (void)setDaemon:(id)arg1;
- (void)setDataCollectMgr:(id)arg1;
- (void)setDataMgr:(id)arg1;
- (void)setDatabase:(id)arg1;
- (void)setDefaultValue:(id)arg1 forKey:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)setEnabledStatus:(BOOL)arg1 forPeripheral:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)setHealthDeviceManager:(id)arg1;
- (void)setIdentifier:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(id /* block */)arg3;
- (void)setPreferredUnit:(id)arg1 forType:(id)arg2 completion:(id /* block */)arg3;
- (void)setQueue:(id)arg1;
- (void)setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 prompt:(BOOL)arg4 completion:(id /* block */)arg5;
- (void)setServerID:(id)arg1;
- (void)splitTotalCalories:(double)arg1 timeInterval:(double)arg2 withCompletion:(id /* block */)arg3;
- (void)start;
- (void)startFakingDataWithActivityType:(int)arg1 speed:(id)arg2 completion:(id /* block */)arg3;
- (void)startHealthServiceDiscovery:(int)arg1 withCompletion:(id /* block */)arg2;
- (void)startHealthServiceSession:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)startQueryWithUUID:(id)arg1 serverDataObject:(id)arg2 queryClass:(Class)arg3 client:(id)arg4 handler:(id /* block */)arg5;
- (void)startRecordingDataToFile:(id)arg1 completion:(id /* block */)arg2;
- (void)startReplayingDataFromFile:(id)arg1 repeat:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)startWorkoutSession:(id)arg1 completion:(id /* block */)arg2;
- (void)stopFakingDataWithCompletion:(id /* block */)arg1;
- (void)stopRecordingDataWithCompletion:(id /* block */)arg1;
- (void)stopReplayingDataWithCompletion:(id /* block */)arg1;
- (void)stopWorkoutSessionWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)submitMetricsIgnoringAnchor:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(int)arg2 timeoutUntilDate:(id)arg3 completion:(id /* block */)arg4;
- (void)unitPreferencesManagerDidUpdateUnitPreferences:(id)arg1;
- (void)unregisterKeepAliveWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)updateMedicalIDData:(id)arg1 completion:(id /* block */)arg2;
- (void)weeklySummaryInfoForDate:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)workoutServerDidDeactivate:(id)arg1;

@end
