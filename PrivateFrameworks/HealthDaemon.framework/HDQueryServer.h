/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDQueryServer : NSObject <HDDataObserver, HDDatabaseProtectedDataObserver, HKQueryServer> {
    <NSXPCProxyCreating> *_clientProxy;
    <HDHealthDaemon> *_daemon;
    <HDQueryServerDelegate> *_delegate;
    BOOL _didEndActivationTransaction;
    _HKFilter *_filter;
    int _observingData;
    int _pauseRequested;
    NSObject<OS_dispatch_queue> *_queryQueue;
    int _queryState;
    NSUUID *_queryUUID;
    HKSampleType *_sampleType;
    int _shouldDeactivate;
}

@property (nonatomic, readonly) <NSXPCProxyCreating> *clientProxy;
@property (nonatomic, readonly) <HDHealthDaemon> *daemon;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <HDQueryServerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) _HKFilter *filter;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queryQueue;
@property (nonatomic) int queryState;
@property (nonatomic, readonly) NSUUID *queryUUID;
@property (nonatomic, readonly) HKSampleType *sampleType;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_activationTransactionString;
- (void)_batchSamplesWithLimit:(unsigned int)arg1 predicate:(id)arg2 anchor:(id)arg3 includeDeletedObjects:(BOOL)arg4 batchHandler:(id /* block */)arg5;
- (void)_batchSamplesWithLimit:(unsigned int)arg1 sortDescriptors:(id)arg2 predicate:(id)arg3 anchor:(id)arg4 batchHandler:(id /* block */)arg5;
- (BOOL)_isAuthorizedToReadType:(id)arg1 withRestrictedSourceIdentifier:(id*)arg2;
- (BOOL)_isAuthorizedToReadType:(id)arg1 withRestrictedSourceIdentifier:(id*)arg2 authorizationAnchor:(id*)arg3;
- (void)_pauseServerValidate:(BOOL)arg1 withCompletion:(id /* block */)arg2;
- (id)_predicateString;
- (id)_queryStateString;
- (void)_queue_closeActivationTransactionIfNecessary;
- (void)_queue_start;
- (void)_queue_startQueryIfNecessary;
- (void)_queue_stop;
- (void)_queue_transitionToDisabledState:(int)arg1;
- (void)_queue_transitionToPaused;
- (void)_queue_transitionToStarted;
- (void)_queue_transitionToStopped;
- (BOOL)_queue_validateConfiguration:(id*)arg1;
- (void)_scheduleStartQuery;
- (BOOL)_shouldExecuteWhenProtectedDataIsUnavailable;
- (BOOL)_shouldListenForUpdates;
- (BOOL)_shouldObserveOnPause;
- (BOOL)_shouldStopProcessingQuery;
- (BOOL)_shouldSuspendQuery;
- (void)activateServerWithCompletion:(id /* block */)arg1;
- (id)clientProxy;
- (id)daemon;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(BOOL)arg2;
- (void)deactivateServer;
- (void)deactivateServerWithCompletion:(id /* block */)arg1;
- (id)delegate;
- (id)diagnosticDescription;
- (id)filter;
- (id)initWithQueryUUID:(id)arg1 dataObject:(id)arg2 clientProxy:(id)arg3 client:(id)arg4 delegate:(id)arg5 healthDaemon:(id)arg6;
- (void)onQueue:(id /* block */)arg1;
- (void)pauseServer;
- (void)pauseServerValidateWithCompletion:(id /* block */)arg1;
- (id)queryQueue;
- (int)queryState;
- (id)queryUUID;
- (void)resumeServer;
- (id /* block */)sampleAuthorizationFilter;
- (id)sampleType;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)samplesOfTypeWereRemoved:(id)arg1 anchor:(id)arg2;
- (void)scheduleDatabaseAccessOnQueueWithBlock:(id /* block */)arg1;
- (void)setQueryQueue:(id)arg1;
- (void)setQueryState:(int)arg1;

@end
