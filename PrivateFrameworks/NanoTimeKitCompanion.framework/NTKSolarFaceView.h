/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKSolarFaceView : NTKDigitalFaceView <NTKTimeView, PUICCrownInputSequencerDelegate, UIGestureRecognizerDelegate> {
    NSMutableSet * _animatingReasons;
    UIView * _belowHorizonView;
    UIView * _borrowedCircleViewFromClockIcon;
    UIView * _borrowedTimeViewFromClockIcon;
    NSTimer * _buttonPressTimer;
    BOOL  _canHandleHardwareEvents;
    struct NSNumber { Class x1; } * _clockTimerToken;
    float  _currentSolarDiskPercentage;
    NTKComplicationController * _dateComplicationController;
    NTKDateComplicationLabel * _dateComplicationLabel;
    NTKLayoutRule * _dateComplicationLayoutRule;
    struct CGPoint { 
        float x; 
        float y; 
    }  _dateLabelZoomEndingCenter;
    UIView * _horizonGradientContainerView;
    UIImageView * _horizonGradientView;
    UIView * _horizonView;
    NSDateComponentsFormatter * _intervalDateFormatter;
    BOOL  _isContentLoaded;
    CLKFont * _labelFont;
    struct NSNumber { Class x1; } * _locationManagerToken;
    NTKColorCurve * _postNoonHorizonGradientColorCurve;
    NTKFloatCurve * _postNoonHorizonHeightCurve;
    NTKColorCurve * _postNoonSolarDiskColorCurve;
    NTKColorCurve * _preNoonHorizonGradientColorCurve;
    NTKFloatCurve * _preNoonHorizonHeightCurve;
    NTKColorCurve * _preNoonSolarDiskColorCurve;
    int  _previousViewMode;
    NTKBezierPathView * _solarBezierPathView;
    UIView * _solarDiskHaloMaskView;
    UIView * _solarDiskHaloParentView;
    UIImageView * _solarDiskHaloView;
    float  _solarDiskOverridePercentage;
    NTKSolarDiskView * _solarDiskView;
    struct CGPoint { 
        float x; 
        float y; 
    }  _solarDiskViewZoomEndingCenter;
    NTKSolarPath * _solarPath;
    BOOL  _solarPathNeedsUpdate;
    UIView * _solarPathObjectContainerView;
    NTKSolarTimeModel * _solarTimeModel;
    UILabel * _timeDifferenceScrubLabel;
    NTKLayoutRule * _timeDifferenceScrubLabelLayoutRule;
    NTKDigitalTimeLabel * _timeLabel;
    NTKDigitalTimeLabelStyle * _timeLabelDefaultStyle;
    NTKDigitalTimeLabelStyle * _timeLabelSmallInUpperRightCornerStyle;
    struct CGPoint { 
        float x; 
        float y; 
    }  _timeLabelZoomEndingCenter;
    NTKDigitalTimeLabel * _timeScrubLabel;
    NTKDigitalTimeLabelStyle * _timeScrubLabelStyle;
    UILabel * _timeScrubNowLabel;
    BOOL  _useLocationAwareInteractiveMode;
    UITapGestureRecognizer * _viewModeTapGesture;
    UILabel * _waypointLabel;
    id /* block */  _waypointSettleAnimationBlock;
    NSDictionary * _waypointViews;
    NSDictionary * _waypoints;
    NSTimer * _wheelDelayTimer;
    UIView * _wristRaiseBackgroundView;
    UIView * _wristRaiseSunMaskView;
    UIView * _wristRaiseSunView;
    UIView * _zoomMaskView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isFrozen, nonatomic) BOOL frozen;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_adjustUIForBoundsChange;
- (void)_animateSolarDiskFromPercentage:(float)arg1 toPercentage:(float)arg2 reason:(id)arg3;
- (void)_animateSolarDiskToRestPercentageIfNeeded;
- (void)_applyDataMode;
- (void)_applyShowContentForUnadornedSnapshot;
- (void)_beginAnimatingForReason:(id)arg1;
- (void)_buttonPressTimerFired;
- (BOOL)_canEnterInteractiveMode;
- (void)_cleanupAfterSettingViewMode:(int)arg1;
- (void)_cleanupAfterZoom;
- (id)_createSolarBezierPath;
- (id)_createWaypointView;
- (void)_disableCrown;
- (void)_enableCrown;
- (void)_endAnimatingForReason:(id)arg1;
- (id)_formatDateStringForIntervalBetweenReferenceDate:(id)arg1 andOverrideDate:(id)arg2;
- (BOOL)_handlePhysicalButton:(unsigned int)arg1 event:(unsigned int)arg2;
- (void)_handleViewModeTapGesture:(id)arg1;
- (BOOL)_isAnimating;
- (BOOL)_isAnimatingForReason:(id)arg1;
- (void)_layoutCrownLabelsForViewMode:(int)arg1;
- (void)_layoutDateComplicationForViewMode:(int)arg1;
- (void)_layoutHorizonForViewMode:(int)arg1;
- (void)_layoutSolarDiskViewForViewMode:(int)arg1;
- (void)_layoutSolarPathAndContainerForViewMode:(int)arg1;
- (void)_layoutTimeLabelForViewMode:(int)arg1;
- (void)_loadLayoutRules;
- (void)_loadSnapshotContentViews;
- (void)_localeChanged;
- (void)_makeLocationAwareInteractiveModeUIVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (float)_percentageForWaypoint:(int)arg1;
- (void)_performWristRaiseAnimation;
- (struct CGPoint { float x1; float x2; })_pointOnSolarPathForPercentage:(float)arg1;
- (void)_prepareForSettingViewMode:(int)arg1;
- (void)_prepareToZoomWithIconView:(id)arg1 minDiameter:(float)arg2 maxDiameter:(float)arg3;
- (void)_prepareWristRaiseAnimation;
- (void)_setSolarBezierPath:(id)arg1 animated:(BOOL)arg2;
- (void)_setViewMode:(int)arg1 animated:(BOOL)arg2;
- (void)_setZoomFraction:(float)arg1 iconDiameter:(float)arg2;
- (void)_sharedLocationManagerUpdatedLocation:(id)arg1 error:(id)arg2;
- (float)_solarDiskIdealizedDatePercentage;
- (void)_solarDiskPercentageChanged:(float)arg1;
- (float)_solarDiskRestPercentage;
- (BOOL)_solarPathRequiresUpdateForChangedLocation:(id)arg1;
- (void)_startClockUpdates;
- (void)_stopClockUpdates;
- (id)_timeLabelStyleForViewMode:(int)arg1;
- (void)_timeZoneChanged:(id)arg1;
- (void)_unloadSnapshotContentViews;
- (void)_updateColorCurves;
- (void)_updateSolarDiskHaloViewPosition;
- (void)_updateSolarHaloWithPercentage:(float)arg1;
- (void)_updateSolarHorizonGradientAlphaWithPercentage:(float)arg1;
- (void)_updateSolarHorizonGradientAlphaWithSolarDiskCenter:(struct CGPoint { float x1; float x2; })arg1;
- (void)_updateSolarHorizonGradientColorWithPercentage:(float)arg1;
- (void)_updateSolarPathForChangedDate:(id)arg1;
- (void)_updateSolarPathForChangedLocation:(id)arg1;
- (void)_updateTimeScrubbingContent;
- (void)_updateWaypointLabelForCrownMovement;
- (void)_updateWaypoints;
- (BOOL)_usesCustomZoom;
- (int)_waypointForPercentage:(float)arg1 withSmallThreshold:(float)arg2 largeThreshold:(float)arg3;
- (id)_waypointLabelTextForPercentage:(float)arg1;
- (BOOL)_wheelChangedWithEvent:(id)arg1;
- (void)_wheelDelayTimerFired;
- (void)dealloc;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)setOverrideDate:(id)arg1 duration:(double)arg2;
- (void)setTimeOffset:(double)arg1;
- (void)setViewMode:(int)arg1;

@end
