/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKStackedImagesComplicationImageView : UIView <NTKComplicationImageView, NTKLegibilityView> {
    NTKColoringImageView * _backgroundImageView;
    UIColor * _color;
    UIImageView * _foregroundAccentImageView;
    NTKColoringImageView * _foregroundImageView;
    CLKImageProvider * _imageProvider;
    float  _imageScaleFactor;
    BOOL  _isShadowImagesStale;
    BOOL  _isUsingLegibility;
    NTKColoringImageView * _monochromeImageView;
    UIImageView * _monochromeShadowView;
    float  _multicolorAlpha;
    UIImageView * _multipartShadowView;
    UIImage * _multipartShadowViewSource;
    UIColor * _overrideColor;
    float  _shadowBlur;
    UIColor * _shadowColor;
}

@property (nonatomic, retain) UIColor *color;
@property (nonatomic, readonly) UIColor *contentColor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) CLKImageProvider *imageProvider;
@property (nonatomic) BOOL legibilityEnabled;
@property (nonatomic) float multicolorAlpha;
@property (nonatomic, retain) UIColor *overrideColor;
@property (nonatomic) float shadowBlur;
@property (nonatomic, retain) UIColor *shadowColor;
@property (readonly) Class superclass;
@property (nonatomic) BOOL usesLegibility;

- (void).cxx_destruct;
- (void)_enumerateImageViewsWithBlock:(id /* block */)arg1;
- (void)_enumerateMultipartImageViewsWithBlock:(id /* block */)arg1;
- (BOOL)_hasMultipartImages;
- (BOOL)_hasShadowViews;
- (void)_loadImageViewsIfNecessary;
- (void)_updateAlpha;
- (void)_updateColors;
- (void)_updateImageSubviewsMaxSize;
- (void)_updateImages;
- (void)_updateShadow;
- (void)_updateShadowViewImages;
- (id)color;
- (id)contentColor;
- (BOOL)hasMonochromeImage;
- (id)imageProvider;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (BOOL)legibilityEnabled;
- (float)multicolorAlpha;
- (id)overrideColor;
- (void)setColor:(id)arg1;
- (void)setImageProvider:(id)arg1;
- (void)setLegibilityEnabled:(BOOL)arg1;
- (void)setMulticolorAlpha:(float)arg1;
- (void)setOverrideColor:(id)arg1;
- (void)setShadowBlur:(float)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setUsesLegibility:(BOOL)arg1;
- (float)shadowBlur;
- (id)shadowColor;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)usesLegibility;

@end
