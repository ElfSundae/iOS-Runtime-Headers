/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKComplicationDisplayWrapperView : UIControl <NTKComplicationDisplayObserver, NTKControl, NTKTimeTravel> {
    float  _alphaForDimmedState;
    UIView * _clipView;
    NSString * _complicationSlotIdentifier;
    CLKComplicationTemplate * _complicationTemplate;
    UIView * _currentComplicationView;
    UIView * _deferredComplicationView;
    BOOL  _didChangeLayoutOverride;
    BOOL  _dimmed;
    UIView<NTKComplicationDisplay> * _display;
    id /* block */  _displayConfigurationHandler;
    UIView * _earlierContainerView;
    BOOL  _editing;
    int  _family;
    BOOL  _hasLegacyDisplay;
    BOOL  _isAnimating;
    UIView * _laterContainerView;
    int  _layoutOverride;
    struct CGSize { 
        float width; 
        float height; 
    }  _maxSize;
    id /* block */  _needsResizeHandler;
    UIView * _nextComplicationView;
    BOOL  _paused;
    BOOL  _tapEnabled;
    id /* block */  _tapHandler;
    CLKComplicationTemplate * _template;
    NSDate * _timeTravelDate;
}

@property (nonatomic) float alphaForDimmedState;
@property (nonatomic, retain) NSString *complicationSlotIdentifier;
@property (nonatomic, readonly) CLKComplicationTemplate *complicationTemplate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDimmed, nonatomic) BOOL dimmed;
@property (nonatomic, readonly) UIView<NTKComplicationDisplay> *display;
@property (nonatomic, copy) id /* block */ displayConfigurationHandler;
@property (nonatomic) BOOL editing;
@property (nonatomic, readonly) int family;
@property (nonatomic, readonly) BOOL hasLegacyDisplay;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) int layoutOverride;
@property (nonatomic) struct CGSize { float x1; float x2; } maxSize;
@property (nonatomic, copy) id /* block */ needsResizeHandler;
@property (nonatomic) BOOL paused;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } preferredSize;
@property (readonly) Class superclass;
@property (nonatomic) BOOL tapEnabled;
@property (nonatomic, copy) id /* block */ tapHandler;

- (void).cxx_destruct;
- (void)_didSetDisplayFromDisplay:(id)arg1 withComplicationAnimation:(unsigned int)arg2;
- (void)_invokeNeedsResizeHandler;
- (void)_invokeTapHandler;
- (void)_prepareToSetDisplay:(id)arg1 withComplicationAnimation:(inout unsigned int*)arg2;
- (void)_removeDisplay:(id)arg1;
- (void)_resetComplicationViews;
- (void)_setDimmed:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setDisplay:(id)arg1 withComplicationAnimation:(unsigned int)arg2;
- (void)_setDisplayEditing:(BOOL)arg1;
- (void)_setDisplayMaxSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_tryToSetDisplayHighlighted:(BOOL)arg1;
- (float)alphaForDimmedState;
- (void)complicationDisplayNeedsResize:(id)arg1;
- (id)complicationSlotIdentifier;
- (id)complicationTemplate;
- (void)dealloc;
- (id)display;
- (id /* block */)displayConfigurationHandler;
- (BOOL)editing;
- (int)family;
- (BOOL)hasLegacyDisplay;
- (id)init;
- (id)initWithFamily:(int)arg1;
- (id)initWithLegacyDisplay:(id)arg1;
- (id)initWithLegacyDisplay:(id)arg1 layoutOverride:(int)arg2;
- (BOOL)isDimmed;
- (int)layoutOverride;
- (void)layoutSubviews;
- (struct CGSize { float x1; float x2; })maxSize;
- (void)needsResize;
- (id /* block */)needsResizeHandler;
- (BOOL)paused;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (struct CGSize { float x1; float x2; })preferredSize;
- (void)setAlphaForDimmedState:(float)arg1;
- (void)setComplicationSlotIdentifier:(id)arg1;
- (void)setComplicationTemplate:(id)arg1 withComplicationAnimation:(unsigned int)arg2;
- (void)setComplicationView:(id)arg1 withComplicationAnimation:(unsigned int)arg2;
- (void)setDimmed:(BOOL)arg1;
- (void)setDimmed:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setDisplayConfigurationHandler:(id /* block */)arg1;
- (void)setEditing:(BOOL)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setMaxSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setNeedsResizeHandler:(id /* block */)arg1;
- (void)setPaused:(BOOL)arg1;
- (void)setTapEnabled:(BOOL)arg1;
- (void)setTapHandler:(id /* block */)arg1;
- (void)setTimeTravelDate:(id)arg1 animated:(BOOL)arg2;
- (BOOL)shouldCancelTouchesInScrollview;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)tapEnabled;
- (id /* block */)tapHandler;

@end
