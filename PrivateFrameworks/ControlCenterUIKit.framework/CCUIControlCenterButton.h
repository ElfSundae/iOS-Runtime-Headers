/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
 */

@interface CCUIControlCenterButton : SBFButton <_UISettingsKeyObserver> {
    UIImageView * _alteredStateGlyphImageView;
    UILabel * _alteredStateLabel;
    BOOL  _animatesStateChanges;
    UIView * _backgroundFlatColorView;
    unsigned int  _buttonType;
    <CCUIControlCenterButtonDelegate> * _delegate;
    UIImage * _glyphImage;
    UIImageView * _glyphImageView;
    UILabel * _label;
    float  _naturalHeight;
    unsigned int  _roundCorners;
    UIColor * _selectedColor;
    UIImage * _selectedGlyphImage;
    BOOL  _showingMenu;
}

@property (nonatomic) BOOL animatesStateChanges;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CCUIControlCenterButtonDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIFont *font;
@property (nonatomic, retain) UIImage *glyphImage;
@property (readonly) unsigned int hash;
@property (getter=isInternal, nonatomic, readonly) BOOL internal;
@property (nonatomic) float naturalHeight;
@property (nonatomic) int numberOfLines;
@property (nonatomic) unsigned int roundCorners;
@property (nonatomic, retain) UIImage *selectedGlyphImage;
@property (getter=isShowingMenu, nonatomic) BOOL showingMenu;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *text;

+ (id)_buttonWithSelectedColor:(id)arg1 text:(id)arg2 type:(unsigned int)arg3;
+ (id)capsuleButtonWithText:(id)arg1;
+ (id)circularButtonWithSelectedColor:(id)arg1;
+ (id)roundRectButton;
+ (id)roundRectButtonWithText:(id)arg1;
+ (id)roundRectButtonWithText:(id)arg1 selectedGlyphColor:(id)arg2;
+ (id)smallCircularButtonWithSelectedColor:(id)arg1;

- (void).cxx_destruct;
- (void)_calculateRectForGlyph:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 rectForLabel:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 ignoringBounds:(BOOL)arg3;
- (id)_controlStateStringFromState:(int)arg1;
- (int)_currentState;
- (BOOL)_drawingAsSelected;
- (id)_effectiveSelectedColor;
- (id)_glyphImageForState:(int)arg1;
- (BOOL)_isCapsuleButton;
- (BOOL)_isCircleButton;
- (BOOL)_isRectButton;
- (BOOL)_isRectTextButton;
- (BOOL)_isTextButton;
- (void)_pressAction;
- (void)_setButtonType:(unsigned int)arg1;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)_updateBackgroundForStateChange;
- (void)_updateEffects;
- (void)_updateForDarkerSystemColorsChange:(id)arg1;
- (void)_updateForReduceTransparencyChange;
- (void)_updateForStateChange;
- (void)_updateGlyphAndTextForStateChange;
- (void)_updateNaturalHeight;
- (BOOL)animatesStateChanges;
- (id)ccuiPunchOutMaskForView:(id)arg1;
- (float)cornerRadius;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToSuperview;
- (id)font;
- (id)glyphImage;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 selectedColor:(id)arg2 text:(id)arg3 type:(unsigned int)arg4;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (BOOL)isInternal;
- (BOOL)isShowingMenu;
- (void)layoutSubviews;
- (float)naturalHeight;
- (int)numberOfLines;
- (unsigned int)roundCorners;
- (id)selectedGlyphImage;
- (void)setAnimatesStateChanges:(BOOL)arg1;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setGlyphImage:(id)arg1;
- (void)setGlyphImage:(id)arg1 selectedGlyphImage:(id)arg2 name:(id)arg3;
- (void)setImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setNaturalHeight:(float)arg1;
- (void)setNumberOfLines:(int)arg1;
- (void)setRoundCorners:(unsigned int)arg1;
- (void)setSelectedGlyphImage:(id)arg1;
- (void)setShowingMenu:(BOOL)arg1;
- (void)setText:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (id)text;

@end
