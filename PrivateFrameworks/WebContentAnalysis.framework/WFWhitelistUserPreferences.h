/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
 */

@interface WFWhitelistUserPreferences : NSObject {
    BOOL  alwaysAllowHTTPS;
    WFWhitelistSiteBuffer * filterBlacklist;
    BOOL  filterEnabled;
    WFWhitelistSiteBuffer * filterWhitelist;
    NSString * username;
    WFWhitelistSiteBuffer * webWhitelist;
    BOOL  whitelistEnabled;
}

@property BOOL alwaysAllowHTTPS;
@property (readonly) WFWhitelistSiteBuffer *filterBlacklist;
@property BOOL filterEnabled;
@property (readonly) WFWhitelistSiteBuffer *filterWhitelist;
@property (retain) NSString *username;
@property (readonly) WFWhitelistSiteBuffer *webWhitelist;
@property BOOL whitelistEnabled;

+ (id)_arrayByConvertingLinesInStringsAtPath:(id)arg1;
+ (id)_cachedWhitelistForPath:(id)arg1 username:(id)arg2;
+ (BOOL)_isURLMetasite:(id)arg1;
+ (id)_metasiteDomainNamesArray;
+ (id)_modificationDateForFileAtPath:(id)arg1;
+ (id)_sharedMetasiteDomainNamesDictionary;
+ (id)_sharedMetasiteExceptionsDomainNamesArray;
+ (id)defaultWhitelistForUser:(id)arg1;
+ (id)metasitesExceptionPath;
+ (id)metasitesPath;
+ (id)preferencesPathForUsername:(id)arg1;
+ (id)whitelistForUser:(id)arg1;
+ (id)whitelistWithPreferences:(id)arg1;

- (BOOL)alwaysAllowHTTPS;
- (void)dealloc;
- (id)description;
- (id)filterBlacklist;
- (BOOL)filterEnabled;
- (id)filterWhitelist;
- (id)init;
- (id)initWithPreferences:(id)arg1;
- (BOOL)isURL:(id)arg1 onList:(id)arg2;
- (BOOL)isURLAllowed:(id)arg1;
- (BOOL)isURLAllowed:(id)arg1 reason:(id*)arg2 shouldFilter:(BOOL*)arg3 foundOnList:(BOOL*)arg4;
- (id)pronounceOnPageURLString:(id)arg1 shouldFilter:(BOOL*)arg2;
- (void)setAlwaysAllowHTTPS:(BOOL)arg1;
- (void)setFilterEnabled:(BOOL)arg1;
- (void)setUsername:(id)arg1;
- (void)setWhitelistEnabled:(BOOL)arg1;
- (id)username;
- (id)webWhitelist;
- (BOOL)whitelistEnabled;

@end
