/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport
 */

@interface NTPBTagRecord : PBCodable <NSCopying> {
    long long  _allowedAdTypes;
    NSMutableArray * _allowedStorefrontIDs;
    NTPBRecordBase * _base;
    NSMutableArray * _blockedStorefrontIDs;
    NSString * _channelDefaultSectionID;
    NSMutableArray * _channelSectionFeedConfigurations;
    NSMutableArray * _channelSectionIDs;
    long long  _contentProvider;
    NSString * _coverArticleListID;
    NSString * _coverImageURL;
    NTPBFeedConfiguration * _feedConfiguration;
    unsigned long long  _forYouCutoffTime;
    unsigned long long  _forYouMaximumArticleCount;
    struct { 
        unsigned int allowedAdTypes : 1; 
        unsigned int contentProvider : 1; 
        unsigned int forYouCutoffTime : 1; 
        unsigned int forYouMaximumArticleCount : 1; 
        unsigned int minimumNewsVersion : 1; 
        unsigned int score : 1; 
        unsigned int tagNameImageBaselineShift : 1; 
        unsigned int tagNameImageScaleFactor : 1; 
        unsigned int type : 1; 
        unsigned int hideAccessoryText : 1; 
        unsigned int isDeprecated : 1; 
        unsigned int isExplicitContent : 1; 
        unsigned int isNotificationEnabled : 1; 
        unsigned int isPublic : 1; 
        unsigned int publisherPaidLeakyPaywallOptOut : 1; 
        unsigned int publisherPaidWebOptIn : 1; 
    }  _has;
    BOOL  _hideAccessoryText;
    NSMutableArray * _iAdCategories;
    NSMutableArray * _iAdKeywords;
    BOOL  _isDeprecated;
    BOOL  _isExplicitContent;
    BOOL  _isNotificationEnabled;
    BOOL  _isPublic;
    NSString * _logoURL;
    long long  _minimumNewsVersion;
    NSString * _name;
    NSString * _nameImageForDarkBackgroundURL;
    NSString * _nameImageMaskURL;
    NSString * _nameImageMaskWidgetHQURL;
    NSString * _nameImageMaskWidgetLQURL;
    NSData * _nameImageMetadata;
    NSString * _nameImageURL;
    NSString * _parentID;
    NSMutableArray * _pinnedArticleIDs;
    NSString * _primaryAudience;
    NSString * _publisherPaidAuthorizationURL;
    NSMutableArray * _publisherPaidFeldsparablePurchaseIDs;
    BOOL  _publisherPaidLeakyPaywallOptOut;
    NSString * _publisherPaidVerificationURL;
    BOOL  _publisherPaidWebOptIn;
    NSString * _publisherPaidWebaccessURL;
    NSMutableArray * _purchaseOfferableConfigurations;
    NSMutableArray * _relatedChannelIDs;
    NSMutableArray * _relatedChannelIDsForOnboardings;
    NSMutableArray * _relatedTopicIDs;
    NSMutableArray * _relatedTopicIDsForOnboardings;
    NSString * _replacementID;
    long long  _score;
    unsigned long long  _tagNameImageBaselineShift;
    double  _tagNameImageScaleFactor;
    NSString * _templateJson;
    int  _type;
}

@property (nonatomic) long long allowedAdTypes;
@property (nonatomic, retain) NSMutableArray *allowedStorefrontIDs;
@property (nonatomic, retain) NTPBRecordBase *base;
@property (nonatomic, retain) NSMutableArray *blockedStorefrontIDs;
@property (nonatomic, retain) NSString *channelDefaultSectionID;
@property (nonatomic, retain) NSMutableArray *channelSectionFeedConfigurations;
@property (nonatomic, retain) NSMutableArray *channelSectionIDs;
@property (nonatomic) long long contentProvider;
@property (nonatomic, retain) NSString *coverArticleListID;
@property (nonatomic, retain) NSString *coverImageURL;
@property (nonatomic, retain) NTPBFeedConfiguration *feedConfiguration;
@property (nonatomic) unsigned long long forYouCutoffTime;
@property (nonatomic) unsigned long long forYouMaximumArticleCount;
@property (nonatomic) BOOL hasAllowedAdTypes;
@property (nonatomic, readonly) BOOL hasBase;
@property (nonatomic, readonly) BOOL hasChannelDefaultSectionID;
@property (nonatomic) BOOL hasContentProvider;
@property (nonatomic, readonly) BOOL hasCoverArticleListID;
@property (nonatomic, readonly) BOOL hasCoverImageURL;
@property (nonatomic, readonly) BOOL hasFeedConfiguration;
@property (nonatomic) BOOL hasForYouCutoffTime;
@property (nonatomic) BOOL hasForYouMaximumArticleCount;
@property (nonatomic) BOOL hasHideAccessoryText;
@property (nonatomic) BOOL hasIsDeprecated;
@property (nonatomic) BOOL hasIsExplicitContent;
@property (nonatomic) BOOL hasIsNotificationEnabled;
@property (nonatomic) BOOL hasIsPublic;
@property (nonatomic, readonly) BOOL hasLogoURL;
@property (nonatomic) BOOL hasMinimumNewsVersion;
@property (nonatomic, readonly) BOOL hasName;
@property (nonatomic, readonly) BOOL hasNameImageForDarkBackgroundURL;
@property (nonatomic, readonly) BOOL hasNameImageMaskURL;
@property (nonatomic, readonly) BOOL hasNameImageMaskWidgetHQURL;
@property (nonatomic, readonly) BOOL hasNameImageMaskWidgetLQURL;
@property (nonatomic, readonly) BOOL hasNameImageMetadata;
@property (nonatomic, readonly) BOOL hasNameImageURL;
@property (nonatomic, readonly) BOOL hasParentID;
@property (nonatomic, readonly) BOOL hasPrimaryAudience;
@property (nonatomic, readonly) BOOL hasPublisherPaidAuthorizationURL;
@property (nonatomic) BOOL hasPublisherPaidLeakyPaywallOptOut;
@property (nonatomic, readonly) BOOL hasPublisherPaidVerificationURL;
@property (nonatomic) BOOL hasPublisherPaidWebOptIn;
@property (nonatomic, readonly) BOOL hasPublisherPaidWebaccessURL;
@property (nonatomic, readonly) BOOL hasReplacementID;
@property (nonatomic) BOOL hasScore;
@property (nonatomic) BOOL hasTagNameImageBaselineShift;
@property (nonatomic) BOOL hasTagNameImageScaleFactor;
@property (nonatomic, readonly) BOOL hasTemplateJson;
@property (nonatomic) BOOL hasType;
@property (nonatomic) BOOL hideAccessoryText;
@property (nonatomic, retain) NSMutableArray *iAdCategories;
@property (nonatomic, retain) NSMutableArray *iAdKeywords;
@property (nonatomic) BOOL isDeprecated;
@property (nonatomic) BOOL isExplicitContent;
@property (nonatomic) BOOL isNotificationEnabled;
@property (nonatomic) BOOL isPublic;
@property (nonatomic, retain) NSString *logoURL;
@property (nonatomic) long long minimumNewsVersion;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSString *nameImageForDarkBackgroundURL;
@property (nonatomic, retain) NSString *nameImageMaskURL;
@property (nonatomic, retain) NSString *nameImageMaskWidgetHQURL;
@property (nonatomic, retain) NSString *nameImageMaskWidgetLQURL;
@property (nonatomic, retain) NSData *nameImageMetadata;
@property (nonatomic, retain) NSString *nameImageURL;
@property (nonatomic, retain) NSString *parentID;
@property (nonatomic, retain) NSMutableArray *pinnedArticleIDs;
@property (nonatomic, retain) NSString *primaryAudience;
@property (nonatomic, retain) NSString *publisherPaidAuthorizationURL;
@property (nonatomic, retain) NSMutableArray *publisherPaidFeldsparablePurchaseIDs;
@property (nonatomic) BOOL publisherPaidLeakyPaywallOptOut;
@property (nonatomic, retain) NSString *publisherPaidVerificationURL;
@property (nonatomic) BOOL publisherPaidWebOptIn;
@property (nonatomic, retain) NSString *publisherPaidWebaccessURL;
@property (nonatomic, retain) NSMutableArray *purchaseOfferableConfigurations;
@property (nonatomic, retain) NSMutableArray *relatedChannelIDs;
@property (nonatomic, retain) NSMutableArray *relatedChannelIDsForOnboardings;
@property (nonatomic, retain) NSMutableArray *relatedTopicIDs;
@property (nonatomic, retain) NSMutableArray *relatedTopicIDsForOnboardings;
@property (nonatomic, retain) NSString *replacementID;
@property (nonatomic) long long score;
@property (nonatomic) unsigned long long tagNameImageBaselineShift;
@property (nonatomic) double tagNameImageScaleFactor;
@property (nonatomic, retain) NSString *templateJson;
@property (nonatomic) int type;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

+ (Class)allowedStorefrontIDsType;
+ (Class)blockedStorefrontIDsType;
+ (Class)channelSectionFeedConfigurationsType;
+ (Class)channelSectionIDsType;
+ (Class)iAdCategoriesType;
+ (Class)iAdKeywordsType;
+ (Class)pinnedArticleIDsType;
+ (Class)publisherPaidFeldsparablePurchaseIDsType;
+ (Class)purchaseOfferableConfigurationType;
+ (Class)relatedChannelIDsForOnboardingType;
+ (Class)relatedChannelIDsType;
+ (Class)relatedTopicIDsForOnboardingType;
+ (Class)relatedTopicIDsType;

- (void)addAllowedStorefrontIDs:(id)arg1;
- (void)addBlockedStorefrontIDs:(id)arg1;
- (void)addChannelSectionFeedConfigurations:(id)arg1;
- (void)addChannelSectionIDs:(id)arg1;
- (void)addIAdCategories:(id)arg1;
- (void)addIAdKeywords:(id)arg1;
- (void)addPinnedArticleIDs:(id)arg1;
- (void)addPublisherPaidFeldsparablePurchaseIDs:(id)arg1;
- (void)addPurchaseOfferableConfiguration:(id)arg1;
- (void)addRelatedChannelIDs:(id)arg1;
- (void)addRelatedChannelIDsForOnboarding:(id)arg1;
- (void)addRelatedTopicIDs:(id)arg1;
- (void)addRelatedTopicIDsForOnboarding:(id)arg1;
- (long long)allowedAdTypes;
- (id)allowedStorefrontIDs;
- (id)allowedStorefrontIDsAtIndex:(unsigned int)arg1;
- (unsigned int)allowedStorefrontIDsCount;
- (id)base;
- (id)blockedStorefrontIDs;
- (id)blockedStorefrontIDsAtIndex:(unsigned int)arg1;
- (unsigned int)blockedStorefrontIDsCount;
- (id)channelDefaultSectionID;
- (id)channelSectionFeedConfigurations;
- (id)channelSectionFeedConfigurationsAtIndex:(unsigned int)arg1;
- (unsigned int)channelSectionFeedConfigurationsCount;
- (id)channelSectionIDs;
- (id)channelSectionIDsAtIndex:(unsigned int)arg1;
- (unsigned int)channelSectionIDsCount;
- (void)clearAllowedStorefrontIDs;
- (void)clearBlockedStorefrontIDs;
- (void)clearChannelSectionFeedConfigurations;
- (void)clearChannelSectionIDs;
- (void)clearIAdCategories;
- (void)clearIAdKeywords;
- (void)clearPinnedArticleIDs;
- (void)clearPublisherPaidFeldsparablePurchaseIDs;
- (void)clearPurchaseOfferableConfigurations;
- (void)clearRelatedChannelIDs;
- (void)clearRelatedChannelIDsForOnboardings;
- (void)clearRelatedTopicIDs;
- (void)clearRelatedTopicIDsForOnboardings;
- (long long)contentProvider;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverArticleListID;
- (id)coverImageURL;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)feedConfiguration;
- (unsigned long long)forYouCutoffTime;
- (unsigned long long)forYouMaximumArticleCount;
- (BOOL)hasAllowedAdTypes;
- (BOOL)hasBase;
- (BOOL)hasChannelDefaultSectionID;
- (BOOL)hasContentProvider;
- (BOOL)hasCoverArticleListID;
- (BOOL)hasCoverImageURL;
- (BOOL)hasFeedConfiguration;
- (BOOL)hasForYouCutoffTime;
- (BOOL)hasForYouMaximumArticleCount;
- (BOOL)hasHideAccessoryText;
- (BOOL)hasIsDeprecated;
- (BOOL)hasIsExplicitContent;
- (BOOL)hasIsNotificationEnabled;
- (BOOL)hasIsPublic;
- (BOOL)hasLogoURL;
- (BOOL)hasMinimumNewsVersion;
- (BOOL)hasName;
- (BOOL)hasNameImageForDarkBackgroundURL;
- (BOOL)hasNameImageMaskURL;
- (BOOL)hasNameImageMaskWidgetHQURL;
- (BOOL)hasNameImageMaskWidgetLQURL;
- (BOOL)hasNameImageMetadata;
- (BOOL)hasNameImageURL;
- (BOOL)hasParentID;
- (BOOL)hasPrimaryAudience;
- (BOOL)hasPublisherPaidAuthorizationURL;
- (BOOL)hasPublisherPaidLeakyPaywallOptOut;
- (BOOL)hasPublisherPaidVerificationURL;
- (BOOL)hasPublisherPaidWebOptIn;
- (BOOL)hasPublisherPaidWebaccessURL;
- (BOOL)hasReplacementID;
- (BOOL)hasScore;
- (BOOL)hasTagNameImageBaselineShift;
- (BOOL)hasTagNameImageScaleFactor;
- (BOOL)hasTemplateJson;
- (BOOL)hasType;
- (unsigned int)hash;
- (BOOL)hideAccessoryText;
- (id)iAdCategories;
- (id)iAdCategoriesAtIndex:(unsigned int)arg1;
- (unsigned int)iAdCategoriesCount;
- (id)iAdKeywords;
- (id)iAdKeywordsAtIndex:(unsigned int)arg1;
- (unsigned int)iAdKeywordsCount;
- (BOOL)isDeprecated;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isExplicitContent;
- (BOOL)isNotificationEnabled;
- (BOOL)isPublic;
- (id)logoURL;
- (void)mergeFrom:(id)arg1;
- (long long)minimumNewsVersion;
- (id)name;
- (id)nameImageForDarkBackgroundURL;
- (id)nameImageMaskURL;
- (id)nameImageMaskWidgetHQURL;
- (id)nameImageMaskWidgetLQURL;
- (id)nameImageMetadata;
- (id)nameImageURL;
- (id)parentID;
- (id)pinnedArticleIDs;
- (id)pinnedArticleIDsAtIndex:(unsigned int)arg1;
- (unsigned int)pinnedArticleIDsCount;
- (id)primaryAudience;
- (id)publisherPaidAuthorizationURL;
- (id)publisherPaidFeldsparablePurchaseIDs;
- (id)publisherPaidFeldsparablePurchaseIDsAtIndex:(unsigned int)arg1;
- (unsigned int)publisherPaidFeldsparablePurchaseIDsCount;
- (BOOL)publisherPaidLeakyPaywallOptOut;
- (id)publisherPaidVerificationURL;
- (BOOL)publisherPaidWebOptIn;
- (id)publisherPaidWebaccessURL;
- (id)purchaseOfferableConfigurationAtIndex:(unsigned int)arg1;
- (id)purchaseOfferableConfigurations;
- (unsigned int)purchaseOfferableConfigurationsCount;
- (BOOL)readFrom:(id)arg1;
- (id)relatedChannelIDs;
- (id)relatedChannelIDsAtIndex:(unsigned int)arg1;
- (unsigned int)relatedChannelIDsCount;
- (id)relatedChannelIDsForOnboardingAtIndex:(unsigned int)arg1;
- (id)relatedChannelIDsForOnboardings;
- (unsigned int)relatedChannelIDsForOnboardingsCount;
- (id)relatedTopicIDs;
- (id)relatedTopicIDsAtIndex:(unsigned int)arg1;
- (unsigned int)relatedTopicIDsCount;
- (id)relatedTopicIDsForOnboardingAtIndex:(unsigned int)arg1;
- (id)relatedTopicIDsForOnboardings;
- (unsigned int)relatedTopicIDsForOnboardingsCount;
- (id)replacementID;
- (long long)score;
- (void)setAllowedAdTypes:(long long)arg1;
- (void)setAllowedStorefrontIDs:(id)arg1;
- (void)setBase:(id)arg1;
- (void)setBlockedStorefrontIDs:(id)arg1;
- (void)setChannelDefaultSectionID:(id)arg1;
- (void)setChannelSectionFeedConfigurations:(id)arg1;
- (void)setChannelSectionIDs:(id)arg1;
- (void)setContentProvider:(long long)arg1;
- (void)setCoverArticleListID:(id)arg1;
- (void)setCoverImageURL:(id)arg1;
- (void)setFeedConfiguration:(id)arg1;
- (void)setForYouCutoffTime:(unsigned long long)arg1;
- (void)setForYouMaximumArticleCount:(unsigned long long)arg1;
- (void)setHasAllowedAdTypes:(BOOL)arg1;
- (void)setHasContentProvider:(BOOL)arg1;
- (void)setHasForYouCutoffTime:(BOOL)arg1;
- (void)setHasForYouMaximumArticleCount:(BOOL)arg1;
- (void)setHasHideAccessoryText:(BOOL)arg1;
- (void)setHasIsDeprecated:(BOOL)arg1;
- (void)setHasIsExplicitContent:(BOOL)arg1;
- (void)setHasIsNotificationEnabled:(BOOL)arg1;
- (void)setHasIsPublic:(BOOL)arg1;
- (void)setHasMinimumNewsVersion:(BOOL)arg1;
- (void)setHasPublisherPaidLeakyPaywallOptOut:(BOOL)arg1;
- (void)setHasPublisherPaidWebOptIn:(BOOL)arg1;
- (void)setHasScore:(BOOL)arg1;
- (void)setHasTagNameImageBaselineShift:(BOOL)arg1;
- (void)setHasTagNameImageScaleFactor:(BOOL)arg1;
- (void)setHasType:(BOOL)arg1;
- (void)setHideAccessoryText:(BOOL)arg1;
- (void)setIAdCategories:(id)arg1;
- (void)setIAdKeywords:(id)arg1;
- (void)setIsDeprecated:(BOOL)arg1;
- (void)setIsExplicitContent:(BOOL)arg1;
- (void)setIsNotificationEnabled:(BOOL)arg1;
- (void)setIsPublic:(BOOL)arg1;
- (void)setLogoURL:(id)arg1;
- (void)setMinimumNewsVersion:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setNameImageForDarkBackgroundURL:(id)arg1;
- (void)setNameImageMaskURL:(id)arg1;
- (void)setNameImageMaskWidgetHQURL:(id)arg1;
- (void)setNameImageMaskWidgetLQURL:(id)arg1;
- (void)setNameImageMetadata:(id)arg1;
- (void)setNameImageURL:(id)arg1;
- (void)setParentID:(id)arg1;
- (void)setPinnedArticleIDs:(id)arg1;
- (void)setPrimaryAudience:(id)arg1;
- (void)setPublisherPaidAuthorizationURL:(id)arg1;
- (void)setPublisherPaidFeldsparablePurchaseIDs:(id)arg1;
- (void)setPublisherPaidLeakyPaywallOptOut:(BOOL)arg1;
- (void)setPublisherPaidVerificationURL:(id)arg1;
- (void)setPublisherPaidWebOptIn:(BOOL)arg1;
- (void)setPublisherPaidWebaccessURL:(id)arg1;
- (void)setPurchaseOfferableConfigurations:(id)arg1;
- (void)setRelatedChannelIDs:(id)arg1;
- (void)setRelatedChannelIDsForOnboardings:(id)arg1;
- (void)setRelatedTopicIDs:(id)arg1;
- (void)setRelatedTopicIDsForOnboardings:(id)arg1;
- (void)setReplacementID:(id)arg1;
- (void)setScore:(long long)arg1;
- (void)setTagNameImageBaselineShift:(unsigned long long)arg1;
- (void)setTagNameImageScaleFactor:(double)arg1;
- (void)setTemplateJson:(id)arg1;
- (void)setType:(int)arg1;
- (unsigned long long)tagNameImageBaselineShift;
- (double)tagNameImageScaleFactor;
- (id)templateJson;
- (int)type;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (id)generateCoverImageAssetHandleForURLString:(id)arg1 withAssetManager:(id)arg2;
- (id)generateCoverImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateLogoImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageForDarkBackgroundAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageMaskAssetHandleForURL:(id)arg1 withAssetManager:(id)arg2;

@end
