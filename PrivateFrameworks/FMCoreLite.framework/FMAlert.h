/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite
 */

@interface FMAlert : NSObject <NSSecureCoding> {
    NSDictionary *_additionalSettings;
    NSUUID *_alertId;
    id /* block */ _alternateButtonAction;
    NSString *_alternateButtonTitle;
    unsigned int _category;
    id /* block */ _defaultButtonAction;
    NSString *_defaultButtonTitle;
    BOOL _dismissMsgOnLock;
    BOOL _dismissMsgOnUnlock;
    NSString *_msgText;
    NSString *_msgTitle;
    BOOL _showMsgInLockScreen;
    double _timeout;
}

@property (nonatomic, retain) NSDictionary *additionalSettings;
@property (nonatomic, retain) NSUUID *alertId;
@property (nonatomic, copy) id /* block */ alternateButtonAction;
@property (nonatomic, retain) NSString *alternateButtonTitle;
@property (nonatomic) unsigned int category;
@property (nonatomic, copy) id /* block */ defaultButtonAction;
@property (nonatomic, retain) NSString *defaultButtonTitle;
@property (nonatomic) BOOL dismissMsgOnLock;
@property (nonatomic) BOOL dismissMsgOnUnlock;
@property (nonatomic, retain) NSString *msgText;
@property (nonatomic, retain) NSString *msgTitle;
@property (nonatomic) BOOL showMsgInLockScreen;
@property (nonatomic) double timeout;

+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (id)additionalSettings;
- (id)alertId;
- (id /* block */)alternateButtonAction;
- (id)alternateButtonTitle;
- (unsigned int)category;
- (id /* block */)defaultButtonAction;
- (id)defaultButtonTitle;
- (id)description;
- (BOOL)dismissMsgOnLock;
- (BOOL)dismissMsgOnUnlock;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)msgText;
- (id)msgTitle;
- (void)setAdditionalSettings:(id)arg1;
- (void)setAlertId:(id)arg1;
- (void)setAlternateButtonAction:(id /* block */)arg1;
- (void)setAlternateButtonTitle:(id)arg1;
- (void)setCategory:(unsigned int)arg1;
- (void)setDefaultButtonAction:(id /* block */)arg1;
- (void)setDefaultButtonTitle:(id)arg1;
- (void)setDismissMsgOnLock:(BOOL)arg1;
- (void)setDismissMsgOnUnlock:(BOOL)arg1;
- (void)setMsgText:(id)arg1;
- (void)setMsgTitle:(id)arg1;
- (void)setShowMsgInLockScreen:(BOOL)arg1;
- (void)setTimeout:(double)arg1;
- (BOOL)showMsgInLockScreen;
- (double)timeout;

@end
