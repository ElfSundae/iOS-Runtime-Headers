/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@interface PLXPCService : PLService {
    NSArray *_clientIDs;
    NSDictionary *_clientNames;
    PLNSNotificationOperatorComposition *_dailyTaskNotification;
    NSDictionary *_permissionCache;
    NSMutableDictionary *_registeredListeners;
    NSMutableDictionary *_registeredResponders;
    PLNSNotificationOperatorComposition *_registrationNotification;
    PLTimer *_resetPermissionsForClientsTimer;
    PLSemaphore *_satelliteProcessSemaphore;
    NSObject<OS_xpc_object> *_xpcConnection;
}

@property (retain) NSArray *clientIDs;
@property (retain) NSDictionary *clientNames;
@property (retain) PLNSNotificationOperatorComposition *dailyTaskNotification;
@property (retain) NSDictionary *permissionCache;
@property (retain) NSMutableDictionary *registeredListeners;
@property (retain) NSMutableDictionary *registeredResponders;
@property (retain) PLNSNotificationOperatorComposition *registrationNotification;
@property (retain) PLTimer *resetPermissionsForClientsTimer;
@property (retain) PLSemaphore *satelliteProcessSemaphore;
@property (retain) NSObject<OS_xpc_object> *xpcConnection;

+ (id)defaults;
+ (id)entryAggregateDefinitionXPCEvent;
+ (id)entryAggregateDefinitions;
+ (id)entryEventIntervalDefinitionResponderEvent;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventPointDefinitionClientLogging;
+ (id)entryEventPointDefinitionClientLoggingDrops;
+ (id)entryEventPointDefinitions;
+ (void)load;

- (void).cxx_destruct;
- (id)clientIDs;
- (id)clientNames;
- (id)dailyTaskNotification;
- (void)dailyTasks;
- (void)handlePeer:(id)arg1 forEvent:(id)arg2;
- (void)handlePeerListenerEvent:(id)arg1 withMessage:(id)arg2 withClientID:(short)arg3 withProcessName:(id)arg4 withKey:(id)arg5 withPayload:(id)arg6;
- (void)handlePeerResponderEvent:(id)arg1 withMessage:(id)arg2 withClientID:(short)arg3 withProcessName:(id)arg4 withKey:(id)arg5 withPayload:(id)arg6;
- (void)handlePeerShouldLogEvent:(id)arg1 withMessage:(id)arg2 withClientID:(short)arg3 withProcessName:(id)arg4 withKey:(id)arg5;
- (void)handleSingleMessage:(id)arg1 fromPeer:(id)arg2 forEvent:(id)arg3;
- (id)init;
- (void)initOperatorDependancies;
- (void)initSatelliteProcessSemaphore;
- (void)logMessage:(id)arg1 withPayload:(id)arg2;
- (id)permissionCache;
- (short)permissionForClientID:(short)arg1 withKey:(id)arg2 withType:(id)arg3 withProcessName:(id)arg4;
- (id)registeredListeners;
- (id)registeredOperatorFromDictionary:(id)arg1 forMessage:(id)arg2;
- (id)registeredResponders;
- (id)registrationNotification;
- (void)resetPermissionsForClients;
- (id)resetPermissionsForClientsTimer;
- (void)respondToEvent:(id)arg1 withResponse:(id)arg2;
- (id)satelliteProcessSemaphore;
- (void)setClientIDs:(id)arg1;
- (void)setClientNames:(id)arg1;
- (void)setDailyTaskNotification:(id)arg1;
- (void)setPermissionCache:(id)arg1;
- (void)setRegisteredListeners:(id)arg1;
- (void)setRegisteredResponders:(id)arg1;
- (void)setRegistrationNotification:(id)arg1;
- (void)setResetPermissionsForClientsTimer:(id)arg1;
- (void)setSatelliteProcessExit;
- (void)setSatelliteProcessExitWithTime:(double)arg1;
- (void)setSatelliteProcessSemaphore:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)stopPowerlogHelperd:(id)arg1;
- (id)xpcConnection;

@end
