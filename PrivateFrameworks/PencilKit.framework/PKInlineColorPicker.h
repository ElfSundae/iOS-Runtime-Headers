/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
 */

@interface PKInlineColorPicker : UIView <PKColorPickerDelegatePrivate, UIPopoverPresentationControllerDelegate, UIScrollViewDelegate, _PKAllowDrawingWhilePresentingPopoverViewDelegate> {
    <_PKInlineColorPickerAllowDrawingWithPopoverDelegate> * __allowDrawingWithPopoverDelegate;
    UIColor * __pickerColor;
    NSArray * _buttonItems;
    unsigned long long  _colorSet;
    NSArray * _colors;
    <PKInlineColorPickerDelegate> * _delegate;
    bool  _didSelectColorUsingSpringLoadedSelection;
    bool  _isUsedOnDarkBackground;
    UIView * _leftOverflowView;
    PKColorPicker * _presentedColorPicker;
    UIView * _rightOverflowView;
    UIScrollView * _scrollView;
    double  _selectedColorAlpha;
    UIColor * _selectedColorBeforeSpringLoadedSelection;
    unsigned long long  _selectedColorIndex;
    unsigned long long  _selectionState;
    bool  _shouldEmboss;
    unsigned long long  _sizeState;
}

@property (nonatomic) <_PKInlineColorPickerAllowDrawingWithPopoverDelegate> *_allowDrawingWithPopoverDelegate;
@property (nonatomic, retain) UIColor *_pickerColor;
@property (nonatomic, retain) NSArray *buttonItems;
@property (nonatomic) unsigned long long colorSet;
@property (nonatomic, retain) NSArray *colors;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKInlineColorPickerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didSelectColorUsingSpringLoadedSelection;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isUsedOnDarkBackground;
@property (nonatomic, retain) UIView *leftOverflowView;
@property (nonatomic, retain) PKColorPicker *presentedColorPicker;
@property (nonatomic, retain) UIView *rightOverflowView;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (nonatomic, retain) UIColor *selectedColor;
@property (nonatomic) double selectedColorAlpha;
@property (nonatomic, retain) UIColor *selectedColorBeforeSpringLoadedSelection;
@property (nonatomic) unsigned long long selectedColorIndex;
@property (nonatomic) unsigned long long selectionState;
@property (nonatomic) bool shouldEmboss;
@property (nonatomic) unsigned long long sizeState;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_allowDrawingWhilePresentingPopoverViewDidBeginDrawing:(id)arg1;
- (id)_allowDrawingWithPopoverDelegate;
- (void)_axHandleLongPressOnColorButtonForLargeTextHUD:(id)arg1;
- (id)_axLabelForColorButton:(id)arg1;
- (void)_colorPicker:(id)arg1 willDismissAnimated:(bool)arg2;
- (void)_colorPickerUserDidTouchUpInside:(id)arg1;
- (void)_colorPickerWillDismiss:(id)arg1;
- (void)_commonInit;
- (void)_dismissColorPickerPopover:(bool)arg1;
- (id)_effectiveViewControllerForPopoverPresentation;
- (void)_forceSetColorSet:(unsigned long long)arg1;
- (id)_pickerColor;
- (void)_presentColorPickerPopover:(bool)arg1;
- (id)_representableColorForColor:(id)arg1;
- (void)_selectColorWithButton:(id)arg1;
- (void)_showColorPickerFromButton:(id)arg1 animated:(bool)arg2;
- (void)_toggleColorPickerPopoverPresentation:(bool)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (id)buttonItems;
- (void)colorButtonTapHandler:(id)arg1;
- (id)colorForIndex:(long long)arg1;
- (unsigned long long)colorIndexMatchingColor:(id)arg1;
- (long long)colorPickerButtonIndex;
- (void)colorPickerDidChangeSelectedColor:(id)arg1;
- (unsigned long long)colorSet;
- (id)colors;
- (id)colorsForColorSet:(unsigned long long)arg1;
- (id)createColorButtonItemWithColor:(id)arg1 shouldEmboss:(bool)arg2;
- (id)createColorPickerButtonShouldEmboss:(bool)arg1;
- (long long)defaultColorIndex;
- (id)delegate;
- (bool)didSelectColorUsingSpringLoadedSelection;
- (id)initWithEmbossing:(bool)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isUsedOnDarkBackground;
- (void)layoutSubviews;
- (id)leftOverflowView;
- (void)notifiyDelegateDidSelectColor:(bool)arg1;
- (void)notifyDelegateDidSelectColorInCompactChooseToolState;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (id)presentedColorPicker;
- (id)rightOverflowView;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (id)selectedColor;
- (double)selectedColorAlpha;
- (id)selectedColorBeforeSpringLoadedSelection;
- (unsigned long long)selectedColorIndex;
- (unsigned long long)selectionState;
- (void)setButtonItems:(id)arg1;
- (void)setColorSet:(unsigned long long)arg1;
- (void)setColors:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidSelectColorUsingSpringLoadedSelection:(bool)arg1;
- (void)setIsUsedOnDarkBackground:(bool)arg1;
- (void)setLeftOverflowView:(id)arg1;
- (void)setPresentedColorPicker:(id)arg1;
- (void)setRightOverflowView:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSelectedColor:(id)arg1;
- (void)setSelectedColorAlpha:(double)arg1;
- (void)setSelectedColorBeforeSpringLoadedSelection:(id)arg1;
- (void)setSelectedColorIndex:(unsigned long long)arg1;
- (void)setSelectionState:(unsigned long long)arg1;
- (void)setShouldEmboss:(bool)arg1;
- (void)setSizeState:(unsigned long long)arg1;
- (void)set_allowDrawingWithPopoverDelegate:(id)arg1;
- (void)set_pickerColor:(id)arg1;
- (bool)shouldEmboss;
- (void)showOverflowViewsIfNeeded;
- (unsigned long long)sizeState;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1 sizeState:(unsigned long long)arg2 selectionState:(unsigned long long)arg3;
- (void)springLoadingGestureHandler:(id)arg1;

@end
