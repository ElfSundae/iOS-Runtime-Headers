/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@interface SBFDashBoardViewMetrics : NSObject

+ (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_cachedGlyphInsetsForString:(id)arg1 withFont:(id)arg2;
+ (BOOL)_isPortrait;
+ (float)_listToWeatherIndentX;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_reducedPageBoundsFromBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forPage:(unsigned int)arg2;
+ (id)callToActionFont;
+ (float)clipProgressForScrollOffset:(float)arg1 withPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (float)clippingLineHeight;
+ (float)dateAlphaProgressForScrollOffset:(float)arg1 withPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (float)dateBaselineToListY;
+ (id)dateFont;
+ (float)dateOnlyLabelToLunarDateLabelBaselineDifferenceY;
+ (id)dateOnlyLunarDateFont;
+ (unsigned int)dateTimeLayoutForPage:(unsigned int)arg1;
+ (id)dateTimeLunarDateFont;
+ (float)dateTimeMinimumInset;
+ (BOOL)layoutCentersContent:(unsigned int)arg1;
+ (BOOL)layoutHitsMaximumWidth:(unsigned int)arg1;
+ (BOOL)layoutUsesMargin:(unsigned int)arg1;
+ (float)listInsetXForPage:(unsigned int)arg1;
+ (unsigned int)listLayoutForPage:(unsigned int)arg1;
+ (float)listMinY;
+ (unsigned int)listScrollsDateTimeForPage:(unsigned int)arg1;
+ (float)listToPageBottomInsetYForPage:(unsigned int)arg1;
+ (float)listWidthForNotificationCenter;
+ (float)listWidthForPage:(unsigned int)arg1;
+ (float)searchBarWidth;
+ (float)searchClippingLineMaxY;
+ (BOOL)searchSizeUsesMargins;
+ (float)singleLineDateViewBaselineDifferenceY;
+ (float)subtitleLabelToLunarDateLabelBaselineDifferenceY;
+ (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })suggestedContentInsetsForListForPage:(unsigned int)arg1 pageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })suggestedContentInsetsForTodayPageWithMultiLineDate:(BOOL)arg1 pageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForCallToActionLabel:(id)arg1 yOffset:(float)arg2 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForDateOnlyViewInScreenCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 multiLineDate:(BOOL)arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForDateTimeViewInScreenCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 centeredX:(BOOL)arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForListForPage:(unsigned int)arg1 pageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForListForPage:(unsigned int)arg1 pageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 insets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg3;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForMediaArtworkForControlsFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 bottomInset:(float)arg2 inPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForMediaControlsForPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForPageControlForPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 desiredSize:(struct CGSize { float x1; float x2; })arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForSearchControllerForPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })suggestedFrameForStatusView:(id)arg1 inView:(id)arg2 withInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg3;
+ (struct CGPoint { float x1; float x2; })suggestedLeadingBottomCornerForWeatherViewForPageBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
+ (id)timeFont;
+ (float)timeLabelBaselineY;
+ (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })timeLabelInsetsForTimeString:(id)arg1;
+ (float)timeLabelOffsetForScrollPercent:(float)arg1;
+ (float)timeLabelScrollPercentForPage:(unsigned int)arg1;
+ (float)timeLabelToLunarDateLabelDifferenceY;
+ (float)timeLabelToSubtitleLabelDifferenceY;
+ (float)timeSubtitleBaselineY;
+ (id)timeSubtitleFont;
+ (float)timeToListInsetXforPage:(unsigned int)arg1;
+ (float)timeToSubtitleLabelBaselineDifferenceY;
+ (BOOL)usesSideAlignedMainPageLayout;

@end
