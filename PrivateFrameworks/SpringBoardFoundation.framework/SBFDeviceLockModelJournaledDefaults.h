/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@interface SBFDeviceLockModelJournaledDefaults : NSObject <SBFDeviceLockModel> {
    <SBFDeviceLockModelDelegate> *_delegate;
    NSString *_journalPath;
    NSDictionary *_originalDefaultsForRollback;
    BOOL _pendingWipe;
    BOOL _permanentlyBlocked;
    NSObject<OS_dispatch_queue> *_persistentStateQueue;
    SBSecurityDefaults *_securityDefaults;
    BOOL _speculativePasscodeFailureChargeOutstanding;
    double _unblockTime;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBFDeviceLockModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (getter=isPermanentlyBlocked, nonatomic, readonly) BOOL permanentlyBlocked;
@property (readonly) Class superclass;
@property (getter=isTemporarilyBlocked, nonatomic, readonly) BOOL temporarilyBlocked;
@property (nonatomic, readonly) double timeUntilUnblockedSinceReferenceDate;

+ (id)_journaledDefaultsAndTypes;

- (void).cxx_destruct;
- (id)_copyLockControllerDefaults;
- (void)_evaluatePendingWipe;
- (BOOL)_isDeviceWipePreferenceEnabled;
- (void)_loadLockControllerDefaults:(id)arg1;
- (void)_loadLockControllerDefaultsJournalIfNecessary;
- (void)_persistentStateQueue_beginSpeculativeFailureCharge;
- (void)_persistentStateQueue_cancelSpeculativeFailureCharge;
- (void)_persistentStateQueue_clearBlockedState;
- (void)_persistentStateQueue_evaluatePendingWipe;
- (void)_persistentStateQueue_loadLockState;
- (void)_persistentStateQueue_unlockFailedWithError:(id)arg1;
- (void)_persistentStateQueue_unlockSucceeded;
- (void)_updateLockControllerDefaultsJournal;
- (void)clearBlockedState;
- (id)delegate;
- (id)init;
- (id)initWithJournalPath:(id)arg1;
- (BOOL)isPermanentlyBlocked;
- (BOOL)isTemporarilyBlocked;
- (void)notePasscodeEntryBegan;
- (void)notePasscodeEntryCancelled;
- (void)notePasscodeUnlockFailedWithError:(id)arg1;
- (void)notePasscodeUnlockSucceeded;
- (void)performPasswordTest:(id /* block */)arg1;
- (void)setDelegate:(id)arg1;
- (void)synchronize;
- (double)timeUntilUnblockedSinceReferenceDate;
- (id)updateLockControllerDefaultsWithBlock:(id /* block */)arg1 journaled:(BOOL)arg2;

@end
