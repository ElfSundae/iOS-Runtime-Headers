/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 */

@interface NCNotificationExtensionContainerViewController : UIViewController <NCNotificationCustomContent, _UNNotificationExtensionHostDelegate> {
    BOOL  _allowManualDismiss;
    UIView * _blockingView;
    <NCNotificationCustomContentDelegate> * _delegate;
    NSExtension * _extension;
    _UNNotificationExtensionHostViewController * _extensionViewController;
    NCMediaPlayPauseButton * _mediaPlayPauseButton;
    NCNotificationRequest * _notificationRequest;
    NSMutableArray * _queuedRequests;
    <_UNNotificationExtensionRemoteInterface> * _remoteService;
    BOOL  _userInteractionEnabled;
}

@property (nonatomic) BOOL allowManualDismiss;
@property (nonatomic, retain) UIView *blockingView;
@property (nonatomic, readonly) NSString *contentExtensionIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NCNotificationCustomContentDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSExtension *extension;
@property (nonatomic, retain) _UNNotificationExtensionHostViewController *extensionViewController;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NCMediaPlayPauseButton *mediaPlayPauseButton;
@property (nonatomic, retain) NCNotificationRequest *notificationRequest;
@property (nonatomic) NCNotificationAction *presentationSourceAction;
@property (nonatomic, retain) NSMutableArray *queuedRequests;
@property (nonatomic, retain) <_UNNotificationExtensionRemoteInterface> *remoteService;
@property (readonly) Class superclass;
@property (getter=isUserInteractionEnabled, nonatomic) BOOL userInteractionEnabled;

- (void).cxx_destruct;
- (void)_addExtensionViewFromViewController:(id)arg1;
- (float)_contentHeightForWidth:(float)arg1;
- (void)_flushQueuedRequests;
- (void)_loadViewControllerForExtension:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_mediaPlayPauseButtonTapped:(id)arg1;
- (id)_requestActionForActionIdentifier:(id)arg1;
- (id)_responseForAction:(id)arg1 notification:(id)arg2 response:(id)arg3;
- (void)_setupExtensionViewController:(id)arg1;
- (void)_setupMediaButton;
- (void)_setupRemoteServiceInterface:(id)arg1;
- (BOOL)allowManualDismiss;
- (BOOL)becomeFirstResponder;
- (id)blockingView;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canResignFirstResponder;
- (id)contentExtensionIdentifier;
- (unsigned int)customContentLocation;
- (void)dealloc;
- (BOOL)defaultContentHidden;
- (id)delegate;
- (void)didReceiveNotificationRequest:(id)arg1;
- (id)extension;
- (id)extensionViewController;
- (id)initWithExtension:(id)arg1 forNotificationRequest:(id)arg2;
- (BOOL)isUserInteractionEnabled;
- (void)loadAudioAccessoryView;
- (void)loadExtension;
- (id)mediaPlayPauseButton;
- (void)notificationHost:(id)arg1 extensionDidCompleteResponse:(id)arg2 withOption:(unsigned int)arg3;
- (void)notificationHostExtension:(id)arg1 audioAccessoryViewLayerContextId:(unsigned int)arg2;
- (void)notificationHostExtension:(id)arg1 setDismissEnabled:(BOOL)arg2;
- (void)notificationHostExtensionDidUpdateControls:(id)arg1;
- (void)notificationHostExtensionMediaPlayingDidPause:(id)arg1;
- (void)notificationHostExtensionMediaPlayingDidStart:(id)arg1;
- (void)notificationHostExtensionRequestsDismiss:(id)arg1;
- (id)notificationRequest;
- (BOOL)performAction:(id)arg1 forNotification:(id)arg2;
- (BOOL)performAction:(id)arg1 forNotification:(id)arg2 withUserInfo:(id)arg3;
- (void)playAudioMessage;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (id)queuedRequests;
- (id)remoteService;
- (BOOL)resignFirstResponder;
- (void)setAllowManualDismiss:(BOOL)arg1;
- (void)setBlockingView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExtension:(id)arg1;
- (void)setExtensionViewController:(id)arg1;
- (void)setMediaPlayPauseButton:(id)arg1;
- (void)setNotificationRequest:(id)arg1;
- (void)setQueuedRequests:(id)arg1;
- (void)setRemoteService:(id)arg1;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { float x1; float x2; })arg2;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;

@end
