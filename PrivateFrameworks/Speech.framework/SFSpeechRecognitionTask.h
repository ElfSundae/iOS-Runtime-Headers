/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Speech.framework/Speech
 */

@interface SFSpeechRecognitionTask : NSObject <AFDictationDelegate, SFSpeechRecognitionBufferDelegate> {
    BOOL _cancelled;
    BOOL _completed;
    NSObject<OS_dispatch_queue> *_connectionQueue;
    AFDictationConnection *_dictationConnection;
    NSError *_error;
    BOOL _finishing;
    NSString *_languageCode;
    BOOL _powerAvailable;
    NSOperationQueue *_queue;
    SFSpeechRecognitionRequest *_request;
    NSString *_requestIdentifier;
    BOOL _running;
    int _taskHint;
}

@property (nonatomic, readonly) int _taskHint;
@property (nonatomic, readonly) float averagePower;
@property (getter=isCancelled, nonatomic, readonly) BOOL cancelled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSError *error;
@property (getter=isFinishing, nonatomic, readonly) BOOL finishing;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) float peakPower;
@property (getter=isPowerAvailable, nonatomic, readonly) BOOL powerAvailable;
@property (nonatomic, readonly, copy) NSString *requestIdentifier;
@property (nonatomic, readonly) int state;
@property (readonly) Class superclass;

+ (id)recognizedUtteranceFromSpeechPhrases:(id)arg1 final:(BOOL)arg2;
+ (id)transcriptions:(id)arg1;

- (void).cxx_destruct;
- (id)_initWithRequest:(id)arg1 queue:(id)arg2 languageCode:(id)arg3 taskHint:(int)arg4;
- (void)_start;
- (int)_taskHint;
- (void)addRecordedSpeechSampleData:(id)arg1;
- (float)averagePower;
- (void)cancel;
- (void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;
- (void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)dictationConnectionSpeechRecordingDidBegin:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidEnd:(id)arg1;
- (id)error;
- (void)finish;
- (BOOL)isCancelled;
- (BOOL)isFinishing;
- (BOOL)isPowerAvailable;
- (float)peakPower;
- (id)requestIdentifier;
- (int)state;
- (void)stopSpeech;

@end
