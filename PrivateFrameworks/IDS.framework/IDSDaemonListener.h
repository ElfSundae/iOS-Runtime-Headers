/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IDS.framework/IDS
 */

@interface IDSDaemonListener : NSObject <IDSDaemonListenerProtocol> {
    NSMutableDictionary * _accountToActiveDeviceUniqueID;
    NSMutableDictionary * _accountToDevices;
    BOOL  _connectionComplete;
    NSString * _deviceIdentifier;
    NSHashTable * _handlers;
    BOOL  _hidingDisconnect;
    NSObject<OS_dispatch_queue> * _ivarQueue;
    BOOL  _postedSetupComplete;
    NSProtocolChecker * _protocol;
    BOOL  _setupComplete;
    BOOL  _setupInfoComplete;
    NSMutableDictionary * _topicToAccountDictionaries;
    NSMutableDictionary * _topicToEnabledAccounts;
}

@property (setter=_setHidingDisconnect:, nonatomic) BOOL _hidingDisconnect;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, retain) NSString *deviceIdentifier;
@property (nonatomic, readonly) BOOL hasPostedSetupComplete;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) BOOL isSetupComplete;
@property (readonly) Class superclass;

- (void)__postSetupComplete;
- (void)_callHandlersAsyncWithBlock:(id /* block */)arg1;
- (void)_callHandlersWithBlock:(id /* block */)arg1;
- (void)_callHandlersWithBlockOnIvarQueue:(id /* block */)arg1;
- (void)_callHandlersWithBlockOnIvarQueue:(id /* block */)arg1 cleanup:(id /* block */)arg2;
- (BOOL)_hidingDisconnect;
- (void)_internalDidSwitchActivePairedDevice:(id)arg1 forService:(id)arg2;
- (void)_internalSwitchActivePairedDevice:(id)arg1 forAccount:(id)arg2;
- (void)_noteDisconnected;
- (void)_performSyncBlock:(id /* block */)arg1;
- (void)_removeAccountOnIvarQueue:(id)arg1;
- (void)_setHidingDisconnect:(BOOL)arg1;
- (id)_uniqueIDForDevice:(id)arg1;
- (void)account:(id)arg1 accountInfoChanged:(id)arg2;
- (void)account:(id)arg1 aliasesChanged:(id)arg2;
- (void)account:(id)arg1 dependentDevicesUpdated:(id)arg2;
- (void)account:(id)arg1 displayNameChanged:(id)arg2;
- (void)account:(id)arg1 localDeviceAdded:(id)arg2;
- (void)account:(id)arg1 localDeviceRemoved:(id)arg2;
- (void)account:(id)arg1 loginChanged:(id)arg2;
- (void)account:(id)arg1 profileChanged:(id)arg2;
- (void)account:(id)arg1 registrationStatusInfoChanged:(id)arg2;
- (void)account:(id)arg1 vettedAliasesChanged:(id)arg2;
- (void)accountAdded:(id)arg1;
- (id)accountDictionariesForService:(id)arg1;
- (void)accountDisabled:(id)arg1 onService:(id)arg2;
- (void)accountEnabled:(id)arg1 onService:(id)arg2;
- (void)accountRemoved:(id)arg1;
- (void)addHandler:(id)arg1;
- (void)connectionComplete:(BOOL)arg1;
- (void)continuityDidConnectToPeer:(id)arg1 withError:(id)arg2;
- (void)continuityDidDisconnectFromPeer:(id)arg1 withError:(id)arg2;
- (void)continuityDidDiscoverPeerWithData:(id)arg1 fromPeer:(id)arg2;
- (void)continuityDidDiscoverType:(int)arg1 withData:(id)arg2 fromPeer:(id)arg3;
- (void)continuityDidFailToStartAdvertisingOfType:(int)arg1 withError:(id)arg2;
- (void)continuityDidFailToStartScanningForType:(int)arg1 withError:(id)arg2;
- (void)continuityDidLosePeer:(id)arg1;
- (void)continuityDidStartAdvertisingOfType:(int)arg1;
- (void)continuityDidStartScanningForType:(int)arg1;
- (void)continuityDidStopAdvertisingOfType:(int)arg1;
- (void)continuityDidStopScanningForType:(int)arg1;
- (void)continuityDidUpdateState:(int)arg1;
- (void)deactivatePairedDevices;
- (void)dealloc;
- (id)dependentDevicesForAccount:(id)arg1;
- (void)device:(id)arg1 nsuuidChanged:(id)arg2;
- (id)deviceIdentifier;
- (void)deviceIdentifierDidChange:(id)arg1;
- (void)didSwitchActivePairedDevice:(id)arg1;
- (id)enabledAccountsForService:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (BOOL)hasPostedSetupComplete;
- (id)init;
- (BOOL)isSetupComplete;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)refreshRegistrationForAccount:(id)arg1;
- (void)registrationFailedForAccount:(id)arg1 needsDeletion:(id)arg2;
- (void)removeHandler:(id)arg1;
- (void)setupCompleteWithInfo:(id)arg1;
- (void)switchActivePairedDevice:(id)arg1 forAccount:(id)arg2;
- (void)xpcObject:(id)arg1 objectContext:(id)arg2;

@end
