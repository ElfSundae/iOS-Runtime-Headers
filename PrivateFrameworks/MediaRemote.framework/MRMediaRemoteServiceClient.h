/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRMediaRemoteServiceClient : NSObject {
    NSArray *_externalScreenTypeNotificationObservers;
    NSArray *_nowPlayingNotificationObservers;
    NSArray *_originNotificationObservers;
    BOOL _receivesExternalScreenTypeChangedNotifications;
    BOOL _receivesOriginChangedNotifications;
    BOOL _receivesPlaybackErrorNotifications;
    BOOL _receivesRoutesChangedNotifications;
    BOOL _receivesSupportedCommandsNotifications;
    unsigned int _registeredNowPlayingObservers;
    NSMutableArray *_registeredOrigins;
    MRAVRoutingClientController *_routingClientController;
    NSArray *_routingNotificationObservers;
    NSObject<OS_dispatch_queue> *_serialQueue;
    struct MRMediaRemoteService { } *_service;
}

@property (nonatomic, retain) NSArray *externalScreenTypeNotificationObservers;
@property (nonatomic, retain) NSArray *nowPlayingNotificationObservers;
@property (nonatomic, retain) NSArray *originNotificationObservers;
@property (nonatomic) BOOL receivesExternalScreenTypeChangedNotifications;
@property (nonatomic) BOOL receivesOriginChangedNotifications;
@property (nonatomic) BOOL receivesPlaybackErrorNotifications;
@property (nonatomic) BOOL receivesRoutesChangedNotifications;
@property (nonatomic) BOOL receivesSupportedCommandsNotifications;
@property (getter=isRegisteredForNowPlayingNotifications, nonatomic, readonly) BOOL registeredForNowPlayingNotifications;
@property (nonatomic, readonly) NSArray *registeredOrigins;
@property (nonatomic, retain) NSArray *routingNotificationObservers;
@property (nonatomic, readonly) struct MRMediaRemoteService { }*service;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *serviceQueue;

+ (id)sharedServiceClient;

- (void)dealloc;
- (id)externalScreenTypeNotificationObservers;
- (void)fetchPickableRoutesWithCategory:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (BOOL)isRegisteredForNowPlayingNotifications;
- (id)nowPlayingNotificationObservers;
- (id)originNotificationObservers;
- (BOOL)receivesExternalScreenTypeChangedNotifications;
- (BOOL)receivesOriginChangedNotifications;
- (BOOL)receivesPlaybackErrorNotifications;
- (BOOL)receivesRoutesChangedNotifications;
- (BOOL)receivesSupportedCommandsNotifications;
- (void)registerForNowPlayingNotificationsWithQueue:(id)arg1;
- (BOOL)registerOrigin:(struct _MROrigin { }*)arg1;
- (id)registeredOrigins;
- (id)routingNotificationObservers;
- (struct MRMediaRemoteService { }*)service;
- (id)serviceQueue;
- (void)setExternalScreenTypeNotificationObservers:(id)arg1;
- (void)setNowPlayingNotificationObservers:(id)arg1;
- (void)setOriginNotificationObservers:(id)arg1;
- (void)setReceivesExternalScreenTypeChangedNotifications:(BOOL)arg1;
- (void)setReceivesOriginChangedNotifications:(BOOL)arg1;
- (void)setReceivesPlaybackErrorNotifications:(BOOL)arg1;
- (void)setReceivesRoutesChangedNotifications:(BOOL)arg1;
- (void)setReceivesSupportedCommandsNotifications:(BOOL)arg1;
- (void)setRoutingNotificationObservers:(id)arg1;
- (void)unregisterAllOrigins;
- (void)unregisterForNowPlayingNotifications;
- (BOOL)unregisterOrigin:(struct _MROrigin { }*)arg1;

@end
