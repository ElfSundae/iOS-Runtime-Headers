/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRTelevision : NSObject <MRTelevisionClientConnectionDelegate> {
    NSString *_authToken;
    NSLock *_callbacksLock;
    MRTelevisionClientConnection *_connection;
    unsigned int _connectionState;
    id /* block */ _connectionStateCallback;
    NSObject<OS_dispatch_queue> *_connectionStateCallbackQueue;
    struct _MROrigin { } *_customOrigin;
    MRDeviceInfo *_deviceInfo;
    id /* block */ _gameControllerClientInputModeCallback;
    unsigned int _gameControllerInputMode;
    NSObject<OS_dispatch_queue> *_gameControllerInputModeCallbackQueue;
    BOOL _isCoalescingClientStateUpdatesConfigMessages;
    NSNetService *_netService;
    NSData *_nowPlayingArtwork;
    NSMutableDictionary *_nowPlayingInfo;
    void *_playbackQueue;
    id /* block */ _recordingStateCallback;
    NSObject<OS_dispatch_queue> *_recordingStateCallbackQueue;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSNetService *_service;
    id /* block */ _textInputCallback;
    NSObject<OS_dispatch_queue> *_textInputCallbackQueue;
    MSVDistributedNotificationObserver *_volumeControlNotificationObserver;
    BOOL _wantsNowPlayingArtworkNotifications;
    BOOL _wantsNowPlayingNotifications;
    BOOL _wantsVolumeNotifications;
}

@property (nonatomic, copy) NSString *authToken;
@property (nonatomic, retain) MRTelevisionClientConnection *connection;
@property (nonatomic, readonly) unsigned int connectionState;
@property (nonatomic, copy) id /* block */ connectionStateCallback;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue;
@property (nonatomic) struct _MROrigin { }*customOrigin;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) MRDeviceInfo *deviceInfo;
@property (nonatomic, copy) id /* block */ gameControllerClientInputModeCallback;
@property (nonatomic) unsigned int gameControllerInputMode;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *gameControllerInputModeCallbackQueue;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) NSString *hostName;
@property (nonatomic, readonly) NSInputStream *inputStream;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, copy) NSData *nowPlayingArtwork;
@property (nonatomic, retain) NSMutableDictionary *nowPlayingInfo;
@property (nonatomic, readonly) NSOutputStream *outputStream;
@property (nonatomic) void*playbackQueue;
@property (nonatomic, readonly) int port;
@property (nonatomic, copy) id /* block */ recordingStateCallback;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *recordingStateCallbackQueue;
@property (nonatomic, readonly) NSNetService *service;
@property (readonly) Class superclass;
@property (nonatomic, copy) id /* block */ textInputCallback;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *textInputCallbackQueue;
@property (nonatomic, retain) MSVDistributedNotificationObserver *volumeControlNotificationObserver;
@property (nonatomic) BOOL wantsNowPlayingArtworkNotifications;
@property (nonatomic) BOOL wantsNowPlayingNotifications;
@property (nonatomic) BOOL wantsVolumeNotifications;

+ (id)_deviceInfoFromTXTRecordData:(id)arg1;

- (void)_addArtwork:(id)arg1 toNowPlayingInfo:(id)arg2;
- (id)_authenticateWithKey:(id)arg1;
- (void)_callClientConnectionStateCallback:(id)arg1;
- (void)_callClientGameControllerInputModeCallback;
- (void)_callClientRecordingStateCallback;
- (id)_errorForCurrentState;
- (void)_handleContentItemsChangedNotificationMessage:(id)arg1;
- (void)_handleKeyboardMessage:(id)arg1;
- (void)_handleNotificationMessage:(id)arg1;
- (void)_handleRemoteCommand:(unsigned int)arg1 withOptions:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleSetArtworkMessage:(id)arg1;
- (void)_handleSetStateMessage:(id)arg1;
- (void)_handleSetVolumeControlAvailabilityMessage:(id)arg1;
- (id)_initializeConnection;
- (id)_loadDeviceInfo;
- (void)_registerPlaybackQueueCallback;
- (void)_scheduleClientStateUpdatesConfigMessage;
- (void)_sendTextInputMessageWithActionType:(unsigned int)arg1 text:(id)arg2;
- (id)_setupCustomOrigin;
- (void)_setupCustomOriginWithReplyQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateNowPlayingInfo;
- (id)authToken;
- (void)clearActiveTextEditingSessionData;
- (void)clientConnection:(id)arg1 didReceiveMessage:(id)arg2;
- (void)clientDidDisconnect:(id)arg1;
- (void)connectUsingAuthenticationKey:(id)arg1;
- (id)connection;
- (unsigned int)connectionState;
- (id /* block */)connectionStateCallback;
- (id)connectionStateCallbackQueue;
- (struct _MROrigin { }*)customOrigin;
- (void)dealloc;
- (void)deleteBackwardInActiveTextEditingSession;
- (id)description;
- (id)deviceInfo;
- (void)disconnect;
- (id /* block */)gameControllerClientInputModeCallback;
- (unsigned int)gameControllerInputMode;
- (id)gameControllerInputModeCallbackQueue;
- (void)getTextEditingSessionWithReplyQueue:(id)arg1 completion:(id /* block */)arg2;
- (id)hostName;
- (id)initWithNetService:(id)arg1;
- (id)inputStream;
- (void)insertTextIntoActiveTextEditingSessionWithText:(id)arg1;
- (BOOL)isConnected;
- (id)name;
- (id)nowPlayingArtwork;
- (id)nowPlayingInfo;
- (id)outputStream;
- (void*)playbackQueue;
- (int)port;
- (void)processVoiceInputAudioDataForDeviceID:(unsigned int)arg1 withBuffer:(id)arg2 time:(struct { double x1; double x2; })arg3 gain:(float)arg4;
- (id /* block */)recordingStateCallback;
- (id)recordingStateCallbackQueue;
- (void)registerGameControllerWithProfile:(int)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (void)registerTouchDeviceWithDescriptor:(id)arg1 replyQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)registerVoiceInputDeviceWithDescriptor:(id)arg1 replyQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)sendGameControllerEvent:(const struct { int x1; union { struct { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; } x_1_2_1; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; } x_1_2_2; } x_2_1_1; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; } x_2_1_2; struct { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; } x_3_2_1; float x_3_2_2; float x_3_2_3; float x_3_2_4; float x_3_2_5; float x_3_2_6; float x_3_2_7; float x_3_2_8; float x_3_2_9; float x_3_2_10; float x_3_2_11; float x_3_2_12; float x_3_2_13; } x_2_1_3; struct { float x_4_2_1; float x_4_2_2; bool x_4_2_3; } x_2_1_4; } x2; }*)arg1 controllerID:(unsigned long long)arg2;
- (void)sendHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)sendTouchEvent:(struct _MRHIDTouchEvent { union _MRHIDPoint { struct { float x_1_2_1; float x_1_2_2; } x_1_1_1; float x_1_1_2[2]; } x1; unsigned int x2; })arg1 toVirtualDeviceWithID:(unsigned long long)arg2;
- (id)service;
- (void)setAuthToken:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setConnectionState:(unsigned int)arg1 error:(id)arg2;
- (void)setConnectionStateCallback:(id /* block */)arg1;
- (void)setConnectionStateCallback:(id /* block */)arg1 withQueue:(id)arg2;
- (void)setConnectionStateCallbackQueue:(id)arg1;
- (void)setCustomOrigin:(struct _MROrigin { }*)arg1;
- (void)setDeviceInfo:(id)arg1;
- (void)setGameControllerClientInputModeCallback:(id /* block */)arg1;
- (void)setGameControllerInputMode:(unsigned int)arg1;
- (void)setGameControllerInputModeCallback:(id /* block */)arg1 withQueue:(id)arg2;
- (void)setGameControllerInputModeCallbackQueue:(id)arg1;
- (void)setNowPlayingArtwork:(id)arg1;
- (void)setNowPlayingInfo:(id)arg1;
- (void)setPlaybackQueue:(void*)arg1;
- (void)setRecordingStateCallback:(id /* block */)arg1;
- (void)setRecordingStateCallbackQueue:(id)arg1;
- (void)setTextEditingCallback:(id /* block */)arg1 withQueue:(id)arg2;
- (void)setTextInputCallback:(id /* block */)arg1;
- (void)setTextInputCallbackQueue:(id)arg1;
- (void)setTextOnActiveTextEditingSessionWithText:(id)arg1;
- (void)setVoiceRecordingState:(unsigned int)arg1;
- (void)setVoiceRecordingStateCallback:(id /* block */)arg1 withQueue:(id)arg2;
- (void)setVolumeControlNotificationObserver:(id)arg1;
- (void)setWantsNowPlayingArtworkNotifications:(BOOL)arg1;
- (void)setWantsNowPlayingNotifications:(BOOL)arg1;
- (void)setWantsVolumeNotifications:(BOOL)arg1;
- (id /* block */)textInputCallback;
- (id)textInputCallbackQueue;
- (void)unregisterGameController:(unsigned long long)arg1;
- (id)volumeControlNotificationObserver;
- (BOOL)wantsNowPlayingArtworkNotifications;
- (BOOL)wantsNowPlayingNotifications;
- (BOOL)wantsVolumeNotifications;

@end
