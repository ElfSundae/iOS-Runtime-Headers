/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Network.framework/Network
 */

@interface NWParameters : NSObject <NSCopying, NSSecureCoding, NWPrettyDescription> {
    NSObject<OS_nw_parameters> * _internalParameters;
}

@property (nonatomic, copy) NSSet *SSLCipherSuites;
@property (nonatomic, copy) NSData *TLSSessionID;
@property (nonatomic, copy) NSString *account;
@property (nonatomic) BOOL connectedBySocket;
@property (nonatomic) BOOL customProtocolsOnly;
@property (nonatomic) unsigned int dataMode;
@property (nonatomic) BOOL disableBlackHoleDetection;
@property (nonatomic) BOOL disableNagleAlgorithm;
@property (nonatomic, copy) NSString *effectiveBundleID;
@property (nonatomic, copy) NSUUID *effectiveProcessUUID;
@property (nonatomic) BOOL enableExtendedBackgroundIdle;
@property (nonatomic) BOOL enableHWChecksum;
@property (nonatomic) BOOL enableSFO;
@property (nonatomic) BOOL enableTFO;
@property (nonatomic) BOOL enableTLS;
@property (nonatomic) BOOL enableTLSSessionTicket;
@property double fallbackTimeout;
@property (nonatomic) BOOL indefinite;
@property (retain) NSObject<OS_nw_parameters> *internalParameters;
@property (nonatomic) unsigned char ipProtocol;
@property (nonatomic) BOOL keepAlive;
@property (nonatomic) unsigned int keepAliveIdleTime;
@property (nonatomic) unsigned int keepAliveInterval;
@property (nonatomic) BOOL keepAliveOffload;
@property (nonatomic, retain) NWAddressEndpoint *localAddress;
@property (nonatomic) unsigned int maximumSSLProtocolVersion;
@property (nonatomic) NSData *metadata;
@property (nonatomic) unsigned int minimumSSLProtocolVersion;
@property (nonatomic) BOOL multipath;
@property (nonatomic) BOOL noProxy;
@property (nonatomic, retain) NSUUID *parentID;
@property (nonatomic) int pid;
@property (nonatomic, readonly, copy) NSString *privateDescription;
@property (nonatomic, copy) NSUUID *processUUID;
@property (nonatomic, readonly) BOOL prohibitCellular;
@property (nonatomic) BOOL prohibitExpensivePaths;
@property (nonatomic) BOOL prohibitFallback;
@property (nonatomic, copy) NSDictionary *proxyConfiguration;
@property (nonatomic) BOOL reduceBuffering;
@property (nonatomic) unsigned char requiredAddressFamily;
@property (nonatomic, readonly) NSString *requiredCellularService;
@property (nonatomic, retain) NWInterface *requiredInterface;
@property (nonatomic) int requiredInterfaceType;
@property (nonatomic) BOOL resolvePTR;
@property (nonatomic) BOOL reuseLocalAddress;
@property (retain) NSString *serviceName;
@property (nonatomic) unsigned int trafficClass;
@property (nonatomic) BOOL trustInvalidCertificates;
@property (nonatomic) unsigned int uid;
@property (nonatomic, copy) NSURL *url;
@property (nonatomic) BOOL useAWDL;
@property (nonatomic) BOOL useLongOutstandingQueries;
@property (nonatomic) BOOL useP2P;
@property (getter=isValid, nonatomic, readonly) BOOL valid;

// Image: /System/Library/PrivateFrameworks/Network.framework/Network

+ (id)parametersWithCParameters:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (id)SSLCipherSuites;
- (id)TLSSessionID;
- (id)account;
- (id)applicationProtocols;
- (BOOL)connectedBySocket;
- (id)copyCParameters;
- (BOOL)copyEffectiveAuditToken:(struct { unsigned int x1[8]; }*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)customProtocolsOnly;
- (unsigned int)dataMode;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 showFullContent:(BOOL)arg2;
- (BOOL)disableBlackHoleDetection;
- (BOOL)disableNagleAlgorithm;
- (id)effectiveBundleID;
- (id)effectiveProcessUUID;
- (BOOL)enableExtendedBackgroundIdle;
- (BOOL)enableHWChecksum;
- (BOOL)enableSFO;
- (BOOL)enableTFO;
- (BOOL)enableTLS;
- (BOOL)enableTLSSessionTicket;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)hasDelegatedPIDForOriginatingPID:(int)arg1;
- (BOOL)hasDelegatedProcessUUID;
- (BOOL)hasNonEmptyProxyConfiguration;
- (BOOL)hasPreferredNetworkAgents;
- (BOOL)hasProhibitedNetworkAgents;
- (BOOL)hasRequiredNetworkAgents;
- (BOOL)indefinite;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithParameters:(id)arg1;
- (id)internalParameters;
- (id)internetProtocols;
- (unsigned char)ipProtocol;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (BOOL)keepAlive;
- (unsigned int)keepAliveIdleTime;
- (unsigned int)keepAliveInterval;
- (BOOL)keepAliveOffload;
- (id)localAddress;
- (unsigned int)maximumSSLProtocolVersion;
- (id)metadata;
- (unsigned int)minimumSSLProtocolVersion;
- (BOOL)multipath;
- (BOOL)noProxy;
- (id)parentID;
- (int)pid;
- (void)preferNetworkAgentWithDomain:(id)arg1 type:(id)arg2;
- (void)preferNetworkAgentWithUUID:(id)arg1;
- (id)privateDescription;
- (id)processUUID;
- (BOOL)prohibitCellular;
- (BOOL)prohibitExpensivePaths;
- (BOOL)prohibitFallback;
- (void)prohibitInterface:(id)arg1;
- (void)prohibitInterfaceSubtype:(int)arg1;
- (void)prohibitInterfaceType:(int)arg1;
- (void)prohibitNetworkAgentWithUUID:(id)arg1;
- (void)prohibitNetworkAgentsWithDomain:(id)arg1 type:(id)arg2;
- (id)protocolsAtLevel:(int)arg1;
- (id)proxyConfiguration;
- (BOOL)reduceBuffering;
- (void)requireNetworkAgentWithDomain:(id)arg1 type:(id)arg2;
- (void)requireNetworkAgentWithUUID:(id)arg1;
- (unsigned char)requiredAddressFamily;
- (id)requiredCellularService;
- (id)requiredInterface;
- (int)requiredInterfaceType;
- (BOOL)resolvePTR;
- (BOOL)reuseLocalAddress;
- (void)setAccount:(id)arg1;
- (void)setConnectedBySocket:(BOOL)arg1;
- (void)setCustomProtocolsOnly:(BOOL)arg1;
- (void)setDataMode:(unsigned int)arg1;
- (void)setDisableBlackHoleDetection:(BOOL)arg1;
- (void)setDisableNagleAlgorithm:(BOOL)arg1;
- (void)setEffectiveBundleID:(id)arg1;
- (void)setEffectiveProcessUUID:(id)arg1;
- (void)setEnableExtendedBackgroundIdle:(BOOL)arg1;
- (void)setEnableHWChecksum:(BOOL)arg1;
- (void)setEnableSFO:(BOOL)arg1;
- (void)setEnableTFO:(BOOL)arg1;
- (void)setEnableTLS:(BOOL)arg1;
- (void)setEnableTLSSessionTicket:(BOOL)arg1;
- (void)setIndefinite:(BOOL)arg1;
- (void)setInitialDataPayload:(id)arg1;
- (void)setInternalParameters:(id)arg1;
- (void)setIpProtocol:(unsigned char)arg1;
- (void)setKeepAlive:(BOOL)arg1;
- (void)setKeepAliveIdleTime:(unsigned int)arg1;
- (void)setKeepAliveInterval:(unsigned int)arg1;
- (void)setKeepAliveOffload:(BOOL)arg1;
- (void)setLocalAddress:(id)arg1;
- (void)setMaximumSSLProtocolVersion:(unsigned int)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMinimumSSLProtocolVersion:(unsigned int)arg1;
- (void)setMultipath:(BOOL)arg1;
- (void)setNoProxy:(BOOL)arg1;
- (void)setParentID:(id)arg1;
- (void)setPid:(int)arg1;
- (void)setProcessUUID:(id)arg1;
- (void)setProhibitExpensivePaths:(BOOL)arg1;
- (void)setProhibitFallback:(BOOL)arg1;
- (void)setProtocolAtLevel:(unsigned int)arg1 protocol:(struct nw_protocol_identifier { BOOL x1[32]; int x2; int x3; }*)arg2;
- (void)setProxyConfiguration:(id)arg1;
- (void)setReduceBuffering:(BOOL)arg1;
- (void)setRequiredAddressFamily:(unsigned char)arg1;
- (void)setRequiredInterface:(id)arg1;
- (void)setRequiredInterfaceType:(int)arg1;
- (void)setResolvePTR:(BOOL)arg1;
- (void)setReuseLocalAddress:(BOOL)arg1;
- (void)setSSLCipherSuites:(id)arg1;
- (void)setSourceApplicationWithBundleID:(id)arg1;
- (void)setSourceApplicationWithToken:(struct { unsigned int x1[8]; })arg1;
- (void)setTLSSessionID:(id)arg1;
- (void)setTrafficClass:(unsigned int)arg1;
- (void)setTrustInvalidCertificates:(BOOL)arg1;
- (void)setUid:(unsigned int)arg1;
- (void)setUrl:(id)arg1;
- (void)setUseAWDL:(BOOL)arg1;
- (void)setUseLongOutstandingQueries:(BOOL)arg1;
- (void)setUseP2P:(BOOL)arg1;
- (int)sslProtocolWithTLSVersion:(unsigned short)arg1;
- (unsigned short)tlsVersionWithSSLProtocol:(int)arg1;
- (unsigned int)trafficClass;
- (id)transportProtocols;
- (BOOL)trustInvalidCertificates;
- (unsigned int)uid;
- (id)url;
- (BOOL)useAWDL;
- (BOOL)useLongOutstandingQueries;
- (BOOL)useP2P;

// Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy

- (double)fallbackTimeout;
- (id)initForNetworkServiceProxy;
- (id)serviceName;
- (void)setFallbackTimeout:(double)arg1;
- (void)setServiceName:(id)arg1;

@end
