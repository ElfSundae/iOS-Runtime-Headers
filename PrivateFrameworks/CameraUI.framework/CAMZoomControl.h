/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

@interface CAMZoomControl : UIControl <CAMZoomButtonDelegate> {
    CAMZoomControlButtonMaskView * __buttonMaskView;
    UIView * __dialClippingView;
    BOOL  __eligibleForTapInEmptySpace;
    struct CGPoint { 
        float x; 
        float y; 
    }  __previousTouchLocation;
    double  __previousTouchTime;
    BOOL  __shouldShowZoomDial;
    struct CGPoint { 
        float x; 
        float y; 
    }  __startTouchLocation;
    CAMZoomButton * __zoomButton;
    CAMZoomDial * __zoomDial;
    NSTimer * __zoomDialVisibilityTimer;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _contentInsets;
    <CAMZoomControlDelegate> * _delegate;
    int  _layoutStyle;
    int  _orientation;
    BOOL  _zoomDialEnabled;
}

@property (nonatomic, readonly) CAMZoomControlButtonMaskView *_buttonMaskView;
@property (nonatomic, readonly) UIView *_dialClippingView;
@property (getter=_isEligibleForTapInEmptySpace, setter=_setEligibleForTapInEmptySpace:, nonatomic) BOOL _eligibleForTapInEmptySpace;
@property (setter=_setPreviousTouchLocation:, nonatomic) struct CGPoint { float x1; float x2; } _previousTouchLocation;
@property (setter=_setPreviousTouchTime:, nonatomic) double _previousTouchTime;
@property (setter=_setShouldShowZoomDial:, nonatomic) BOOL _shouldShowZoomDial;
@property (setter=_setStartTouchLocation:, nonatomic) struct CGPoint { float x1; float x2; } _startTouchLocation;
@property (nonatomic, readonly) CAMZoomButton *_zoomButton;
@property (nonatomic, readonly) CAMZoomDial *_zoomDial;
@property (setter=_setZoomDialVisibilityTimer:, nonatomic, retain) NSTimer *_zoomDialVisibilityTimer;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contentInsets;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CAMZoomControlDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) int layoutStyle;
@property (nonatomic) float maximumZoomFactor;
@property (nonatomic) float minimumZoomFactor;
@property (nonatomic) int orientation;
@property (nonatomic) BOOL shouldDisableValuesBelow2x;
@property (nonatomic) BOOL shouldShowLabelAt2x;
@property (readonly) Class superclass;
@property (getter=isZoomDialEnabled, nonatomic) BOOL zoomDialEnabled;
@property (nonatomic) float zoomFactor;

- (void).cxx_destruct;
- (float)_accelerationForMovementFromPointFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 elapsedTime:(double)arg3;
- (float)_additionalAccelerationForMovementFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 deltaX:(double)arg3;
- (id)_buttonMaskView;
- (void)_cancelDelayedZoomDialVisibilityChange;
- (float)_dampingFactorForDistanceFromDialForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (float)_dampingFactorForMovementFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
- (float)_dampingFactorForPerpendicularityFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
- (id)_dialClippingView;
- (float)_distanceFromDialClippingViewToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_handleZoomDialVisibilityTimerFiredWithUserInfo:(id)arg1;
- (BOOL)_isEligibleForTapInEmptySpace;
- (BOOL)_isHidingZoomDial;
- (BOOL)_isWithinZoomButtonBoundsWithTouch:(id)arg1;
- (float)_normalizeValue:(float)arg1 betweenMinimumValue:(float)arg2 maximumValue:(float)arg3;
- (struct CGPoint { float x1; float x2; })_previousTouchLocation;
- (double)_previousTouchTime;
- (void)_setEligibleForTapInEmptySpace:(BOOL)arg1;
- (void)_setPreviousTouchLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setPreviousTouchTime:(double)arg1;
- (void)_setShouldShowZoomDial:(BOOL)arg1;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2 afterDelay:(double)arg3;
- (void)_setStartTouchLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setZoomDialVisibilityTimer:(id)arg1;
- (void)_setZoomFactor:(float)arg1 shouldNotifyDelegate:(BOOL)arg2;
- (BOOL)_shouldShowZoomDial;
- (struct CGPoint { float x1; float x2; })_startTouchLocation;
- (void)_updateMaskViewForZoomButtonHighlightingTransform;
- (id)_zoomButton;
- (id)_zoomDial;
- (id)_zoomDialVisibilityTimer;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentInsets;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)delegate;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)initWithLayoutStyle:(int)arg1;
- (BOOL)isZoomDialEnabled;
- (int)layoutStyle;
- (void)layoutSubviews;
- (float)maximumZoomFactor;
- (float)minimumZoomFactor;
- (int)orientation;
- (void)setContentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setLayoutStyle:(int)arg1;
- (void)setMaximumZoomFactor:(float)arg1;
- (void)setMinimumZoomFactor:(float)arg1;
- (void)setOrientation:(int)arg1;
- (void)setOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)setShouldDisableValuesBelow2x:(BOOL)arg1;
- (void)setShouldShowLabelAt2x:(BOOL)arg1;
- (void)setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2 afterDelay:(double)arg3;
- (void)setZoomDialEnabled:(BOOL)arg1;
- (void)setZoomDialEnabled:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setZoomFactor:(float)arg1;
- (BOOL)shouldDisableValuesBelow2x;
- (BOOL)shouldShowLabelAt2x;
- (void)zoomButtonDidLayout;
- (float)zoomFactor;

@end
