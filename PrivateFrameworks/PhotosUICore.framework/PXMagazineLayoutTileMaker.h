/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXMagazineLayoutTileMaker : NSObject {
    NSMutableArray * _allFrames;
    PXMagazineRectArray * _cachedTileRects;
    struct CGSize { 
        float width; 
        float height; 
    }  _defaultTileSize;
    float  _height;
    float  _interTileSpacing;
    float  _lastTileWidthPadding;
    BOOL  _layoutFromRightToLeft;
    float  _maxFrameAspectRatio;
    unsigned int  _maxTilesInFrame;
    float  _minFrameAspectRatio;
    float * _normalizedWeights;
    unsigned int  _numberOfColumns;
    struct CGSize { 
        float width; 
        float height; 
    }  _referenceSize;
    NSMutableArray * _sharedTempArray;
    BOOL  _startLastPadding;
    float  _tileAspectRatio;
    PXMagazineGrid * _tileGrid;
}

@property (nonatomic, readonly) struct CGSize { float x1; float x2; } defaultTileSize;
@property (nonatomic, readonly) float height;
@property (nonatomic) float interTileSpacing;
@property (nonatomic) BOOL layoutFromRightToLeft;
@property (nonatomic) unsigned int maxTilesInFrame;
@property (nonatomic, readonly) unsigned int numberOfColumns;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } referenceSize;
@property (nonatomic, readonly) float tileAspectRatio;

+ (void)printInputs:(id)arg1;
+ (void)printLayout:(id)arg1 numOfColumns:(unsigned int)arg2;
+ (void)printPossibleFrames:(unsigned int)arg1 cellAspectRatio:(float)arg2 maxAspectRatio:(float)arg3 minAspectRato:(float)arg4;

- (void).cxx_destruct;
- (int)_availableFrames:(id*)arg1 maxReturnCount:(unsigned int)arg2 forAspectRatio:(float)arg3 weight:(float)arg4 maxWidth:(unsigned int)arg5;
- (void)_findNextChunkWithInputs:(id)arg1 fromIndex:(unsigned int)arg2 outArray:(id)arg3;
- (BOOL)_findNextTileWithInputs:(id)arg1 atIndex:(unsigned int)arg2 baseIndex:(unsigned int)arg3 coordinator:(id)arg4;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_frameFromTileFrame:(struct PXMagazineRect { struct PXMagazineOrigin { int x_1_1_1; int x_1_1_2; } x1; struct PXMagazineSize { int x_2_1_1; int x_2_1_2; } x2; })arg1;
- (id)_generateLastTilesWithInputs:(id)arg1 baseIndex:(unsigned int)arg2 returnFallback:(BOOL)arg3;
- (id)_generateTilesWithInputs:(id)arg1;
- (BOOL)_generateTilesWithInputs:(id)arg1 atIndex:(unsigned int)arg2 forMaxY:(unsigned int)arg3 reserveNumberForPadding:(unsigned int)arg4 outArray:(id)arg5;
- (id)_getAllFramesInOrder;
- (float*)_normalizeWeightsByInputs:(id)arg1;
- (unsigned int)_numberOfInputsForLastPadding;
- (void)_resetWithNumberOfAssets:(unsigned int)arg1;
- (void)_setRandomSeedWithInputs:(id)arg1;
- (void)_updateDimensionInfos;
- (BOOL)checkAndPrintResults:(BOOL)arg1;
- (void)dealloc;
- (struct CGSize { float x1; float x2; })defaultTileSize;
- (id)description;
- (void)getFrames:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 withInputs:(id)arg2;
- (float)height;
- (id)initWithReferenceSize:(struct CGSize { float x1; float x2; })arg1 numberOfColumns:(unsigned int)arg2;
- (float)interTileSpacing;
- (BOOL)layoutFromRightToLeft;
- (unsigned int)maxTilesInFrame;
- (unsigned int)numberOfColumns;
- (struct CGSize { float x1; float x2; })referenceSize;
- (void)setInterTileSpacing:(float)arg1;
- (void)setLayoutFromRightToLeft:(BOOL)arg1;
- (void)setMaxTilesInFrame:(unsigned int)arg1;
- (float)tileAspectRatio;

@end
