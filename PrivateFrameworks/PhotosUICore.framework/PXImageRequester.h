/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXImageRequester : PXObservable <PXMutableImageRequester> {
    <PXDisplayAsset> * __currentImageSourceAsset;
    PXImageRequest * __currentRequest;
    struct CGSize { 
        float width; 
        float height; 
    }  __targetSize;
    <PXDisplayAsset> * _asset;
    struct CGSize { 
        float width; 
        float height; 
    }  _contentSize;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _contentsRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _desiredContentsRect;
    BOOL  _hasFullQuality;
    UIImage * _image;
    BOOL  _isInCloud;
    PXUIMediaProvider * _mediaProvider;
    struct { 
        BOOL targetSize; 
        BOOL imageRequest; 
        BOOL isInCloud; 
    }  _needsUpdateFlags;
    UIImage * _opportunisticImage;
    float  _scale;
    struct CGSize { 
        float width; 
        float height; 
    }  _viewportSize;
}

@property (setter=_setCurrentImageSourceAsset:, nonatomic, retain) <PXDisplayAsset> *_currentImageSourceAsset;
@property (setter=_setCurrentRequest:, nonatomic, retain) PXImageRequest *_currentRequest;
@property (setter=_setTargetSize:, nonatomic) struct CGSize { float x1; float x2; } _targetSize;
@property (nonatomic, readonly) <PXDisplayAsset> *asset;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } contentSize;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } contentsRect;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } desiredContentsRect;
@property (setter=_setHasFullQuality:, nonatomic) BOOL hasFullQuality;
@property (readonly) unsigned int hash;
@property (setter=_setImage:, nonatomic, retain) UIImage *image;
@property (setter=_setIsInCloud:, nonatomic) BOOL isInCloud;
@property (nonatomic, readonly) PXUIMediaProvider *mediaProvider;
@property (setter=_setOpportunisticImage:, nonatomic, retain) UIImage *opportunisticImage;
@property (nonatomic, readonly) float scale;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } viewportSize;

+ (id)defaultOptions;

- (void).cxx_destruct;
- (void)_cancelRequests;
- (id)_currentImageSourceAsset;
- (id)_currentRequest;
- (void)_handleResultOfImageRequest:(id)arg1 image:(id)arg2 info:(id)arg3;
- (void)_invalidateImageRequest;
- (void)_invalidateIsInCloud;
- (void)_invalidateTargetSize;
- (BOOL)_needsUpdate;
- (void)_setCurrentImageSourceAsset:(id)arg1;
- (void)_setCurrentRequest:(id)arg1;
- (void)_setHasFullQuality:(BOOL)arg1;
- (void)_setImage:(id)arg1;
- (void)_setIsInCloud:(BOOL)arg1;
- (void)_setOpportunisticImage:(id)arg1;
- (void)_setTargetSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })_targetSize;
- (void)_updateIfNeeded;
- (void)_updateImageRequestIfNeeded;
- (void)_updateIsInCloudIfNeeded;
- (void)_updateTargetSizeIfNeeded;
- (id)asset;
- (struct CGSize { float x1; float x2; })contentSize;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentsRect;
- (void)dealloc;
- (id)description;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })desiredContentsRect;
- (void)didPerformChanges;
- (void)handlePreloadedImage:(id)arg1;
- (void)handlePreloadedImageRequester:(id)arg1;
- (BOOL)hasFullQuality;
- (id)image;
- (id)init;
- (id)initWithMediaProvider:(id)arg1 asset:(id)arg2;
- (BOOL)isInCloud;
- (id)mediaProvider;
- (id)mutableChangeObject;
- (id)opportunisticImage;
- (void)performChanges:(id /* block */)arg1;
- (float)scale;
- (void)setAsset:(id)arg1;
- (void)setContentSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setContentsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDesiredContentsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setMediaProvider:(id)arg1;
- (void)setScale:(float)arg1;
- (void)setViewportSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })viewportSize;

@end
