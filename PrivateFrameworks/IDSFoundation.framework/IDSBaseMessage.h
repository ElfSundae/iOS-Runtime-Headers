/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
 */

@interface IDSBaseMessage : NSObject <NSCopying> {
    BOOL  _alwaysForceCelluar;
    NSDictionary * _cachedBody;
    NSDictionary * _clientInfo;
    id /* block */  _completionBlock;
    id  _context;
    NSDate * _creationDate;
    NSString * _dataUsageBundleIdentifier;
    id /* block */  _deliveryAcknowledgementBlock;
    int  _deliveryMechanism;
    NSString * _dsAuthID;
    BOOL  _forceCellular;
    BOOL  _hasAttemptedAPSDelivery;
    BOOL  _hasReceivedPushAck;
    BOOL  _highPriority;
    int  _importanceLevel;
    NSDictionary * _responseAlert;
    NSNumber * _retryCount;
    NSString * _service;
    NSData * _serviceData;
    NSString * _subService;
    double  _timeSent;
    double  _timeout;
    int  _timeoutRetries;
    NSString * _topic;
    NSString * _underlyingService;
    unsigned int  _uniqueID;
    NSDictionary * _userInfo;
    BOOL  _usingOutgoingPush;
    BOOL  _wantsBinaryPush;
    BOOL  _wantsIntegerUniqueIDs;
    BOOL  _wantsMultipleResponses;
    BOOL  _wantsResponse;
}

@property (nonatomic, readonly, copy) NSData *IDCertificate;
@property (setter=_setCachedBody:, retain) NSDictionary *_cachedBody;
@property (setter=_setUsingOutgoingPush:) BOOL _usingOutgoingPush;
@property (readonly, retain) NSDictionary *additionalInternalHeaders;
@property (readonly, retain) NSDictionary *additionalMessageHeaders;
@property (readonly, retain) NSDictionary *additionalMessageHeadersForOutgoingPush;
@property (readonly, retain) NSDictionary *additionalQueryStringParameters;
@property (readonly) BOOL allowDualDelivery;
@property BOOL alwaysForceCelluar;
@property (readonly) double anisetteHeadersTimeout;
@property (readonly, retain) NSString *bagKey;
@property (nonatomic, copy) NSMutableArray *certDataArray;
@property (copy) NSDictionary *clientInfo;
@property (readonly) int command;
@property (copy) id /* block */ completionBlock;
@property (retain) id context;
@property (retain) NSDate *creationDate;
@property (readonly) double customRetryInterval;
@property (readonly, retain) NSString *dataUsageBundleIdentifier;
@property (copy) id /* block */ deliveryAcknowledgementBlock;
@property int deliveryMechanism;
@property (setter=setDSAuthID:, nonatomic, copy) NSString *dsAuthID;
@property BOOL forceCellular;
@property BOOL hasAttemptedAPSDelivery;
@property BOOL hasReceivedPushAck;
@property BOOL highPriority;
@property (nonatomic, readonly) struct __SecKey { }*identityPrivateKey;
@property (nonatomic, readonly) struct __SecKey { }*identityPublicKey;
@property (readonly) BOOL ignoresNetworkConnectivity;
@property int importanceLevel;
@property (readonly) BOOL isValidMessage;
@property (readonly) BOOL isWebTunnelMessage;
@property (readonly) int maxTimeoutRetries;
@property (readonly, retain) NSDictionary *messageBody;
@property (readonly, retain) NSDictionary *messageBodyUsingCache;
@property (readonly, retain) NSDictionary *nonStandardMessageHeadersForOutgoingPush;
@property (readonly) BOOL payloadCanBeLogged;
@property (nonatomic, copy) NSMutableArray *privateKeyArray;
@property (nonatomic, copy) NSMutableArray *publicKeyArray;
@property (nonatomic, copy) NSData *pushCertificate;
@property (nonatomic) struct __SecKey { }*pushPrivateKey;
@property (nonatomic) struct __SecKey { }*pushPublicKey;
@property (nonatomic, copy) NSData *pushToken;
@property (readonly, retain) NSArray *requiredKeys;
@property (copy) NSDictionary *responseAlertInfo;
@property (readonly) int responseCommand;
@property (nonatomic, copy) NSNumber *retryCount;
@property (nonatomic, copy) NSNumber *serverTimestamp;
@property (nonatomic, copy) NSNumber *serverTimestampReceivedDate;
@property (copy) NSString *service;
@property (copy) NSData *serviceData;
@property (copy) NSString *subService;
@property double timeSent;
@property double timeout;
@property int timeoutRetries;
@property (retain) NSString *topic;
@property (copy) NSString *underlyingService;
@property unsigned int uniqueID;
@property (readonly, retain) NSString *uniqueIDString;
@property (readonly, retain) NSString *userAgentHeaderString;
@property (nonatomic, copy) NSMutableArray *userIDArray;
@property (copy) NSDictionary *userInfo;
@property (readonly) BOOL wantsAPSRetries;
@property (readonly) BOOL wantsAnisetteHeaders;
@property (readonly) BOOL wantsBagKey;
@property BOOL wantsBinaryPush;
@property (readonly) BOOL wantsBodySignature;
@property (readonly) BOOL wantsCFNetworkTimeout;
@property (readonly) BOOL wantsCompressedBody;
@property (readonly) BOOL wantsCustomRetryInterval;
@property (readonly) BOOL wantsExtraTimeoutRetry;
@property (readonly) BOOL wantsHTTPGet;
@property (readonly) BOOL wantsHTTPHeaders;
@property (readonly) BOOL wantsIDSServer;
@property BOOL wantsIntegerUniqueIDs;
@property (readonly) BOOL wantsJSONBody;
@property (readonly) BOOL wantsManagedRetries;
@property BOOL wantsMultipleResponses;
@property BOOL wantsResponse;
@property (readonly) BOOL wantsSignature;
@property (readonly) BOOL wantsUserAgentInHeaders;

- (id)IDCertificate;
- (void)_cacheBody;
- (id)_cachedBody;
- (void)_clearCache;
- (void)_setCachedBody:(id)arg1;
- (void)_setUsingOutgoingPush:(BOOL)arg1;
- (BOOL)_usingOutgoingPush;
- (id)additionalInternalHeaders;
- (id)additionalMessageHeaders;
- (id)additionalMessageHeadersForOutgoingPush;
- (id)additionalQueryStringParameters;
- (BOOL)allowDualDelivery;
- (BOOL)alwaysForceCelluar;
- (double)anisetteHeadersTimeout;
- (id)bagKey;
- (id)certDataArray;
- (id)clientInfo;
- (int)command;
- (id /* block */)completionBlock;
- (id)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (double)customRetryInterval;
- (id)dataUsageBundleIdentifier;
- (void)dealloc;
- (id /* block */)deliveryAcknowledgementBlock;
- (int)deliveryMechanism;
- (id)dsAuthID;
- (BOOL)forceCellular;
- (void)handleResponseDictionary:(id)arg1;
- (void)handleResponseHeaders:(id)arg1;
- (BOOL)hasAttemptedAPSDelivery;
- (BOOL)hasReceivedPushAck;
- (BOOL)hasRequiredKeys:(id*)arg1;
- (BOOL)highPriority;
- (struct __SecKey { }*)identityPrivateKey;
- (struct __SecKey { }*)identityPublicKey;
- (BOOL)ignoresNetworkConnectivity;
- (int)importanceLevel;
- (id)init;
- (BOOL)isValidMessage;
- (BOOL)isWebTunnelMessage;
- (void)logFailureInfo;
- (int)maxTimeoutRetries;
- (id)messageBody;
- (id)messageBodyUsingCache;
- (id)nonStandardMessageHeadersForOutgoingPush;
- (BOOL)payloadCanBeLogged;
- (id)privateKeyArray;
- (id)publicKeyArray;
- (id)pushCertificate;
- (struct __SecKey { }*)pushPrivateKey;
- (struct __SecKey { }*)pushPublicKey;
- (id)pushToken;
- (id)requiredKeys;
- (id)responseAlertInfo;
- (int)responseCommand;
- (id)retryCount;
- (id)serverTimestamp;
- (id)serverTimestampReceivedDate;
- (id)service;
- (id)serviceData;
- (void)setAlwaysForceCelluar:(BOOL)arg1;
- (void)setCertDataArray:(id)arg1;
- (void)setClientInfo:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setContext:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDSAuthID:(id)arg1;
- (void)setDeliveryAcknowledgementBlock:(id /* block */)arg1;
- (void)setDeliveryMechanism:(int)arg1;
- (void)setForceCellular:(BOOL)arg1;
- (void)setHasAttemptedAPSDelivery:(BOOL)arg1;
- (void)setHasReceivedPushAck:(BOOL)arg1;
- (void)setHighPriority:(BOOL)arg1;
- (void)setImportanceLevel:(int)arg1;
- (void)setPrivateKeyArray:(id)arg1;
- (void)setPublicKeyArray:(id)arg1;
- (void)setPushCertificate:(id)arg1;
- (void)setPushPrivateKey:(struct __SecKey { }*)arg1;
- (void)setPushPublicKey:(struct __SecKey { }*)arg1;
- (void)setPushToken:(id)arg1;
- (void)setResponseAlertInfo:(id)arg1;
- (void)setRetryCount:(id)arg1;
- (void)setServerTimestamp:(id)arg1;
- (void)setServerTimestampReceivedDate:(id)arg1;
- (void)setService:(id)arg1;
- (void)setServiceData:(id)arg1;
- (void)setSubService:(id)arg1;
- (void)setTimeSent:(double)arg1;
- (void)setTimeout:(double)arg1;
- (void)setTimeoutRetries:(int)arg1;
- (void)setTopic:(id)arg1;
- (void)setUnderlyingService:(id)arg1;
- (void)setUniqueID:(unsigned int)arg1;
- (void)setUserIDArray:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setWantsBinaryPush:(BOOL)arg1;
- (void)setWantsIntegerUniqueIDs:(BOOL)arg1;
- (void)setWantsMultipleResponses:(BOOL)arg1;
- (void)setWantsResponse:(BOOL)arg1;
- (id)subService;
- (double)timeSent;
- (double)timeout;
- (int)timeoutRetries;
- (id)topic;
- (id)underlyingService;
- (unsigned int)uniqueID;
- (id)uniqueIDString;
- (id)userAgentHeaderString;
- (id)userIDArray;
- (id)userInfo;
- (BOOL)wantsAPSRetries;
- (BOOL)wantsAnisetteHeaders;
- (BOOL)wantsBagKey;
- (BOOL)wantsBinaryPush;
- (BOOL)wantsBodySignature;
- (BOOL)wantsCFNetworkTimeout;
- (BOOL)wantsCompressedBody;
- (BOOL)wantsCustomRetryInterval;
- (BOOL)wantsExtraTimeoutRetry;
- (BOOL)wantsHTTPGet;
- (BOOL)wantsHTTPHeaders;
- (BOOL)wantsIDSServer;
- (BOOL)wantsIntegerUniqueIDs;
- (BOOL)wantsJSONBody;
- (BOOL)wantsManagedRetries;
- (BOOL)wantsMultipleResponses;
- (BOOL)wantsResponse;
- (BOOL)wantsSignature;
- (BOOL)wantsUserAgentInHeaders;

@end
