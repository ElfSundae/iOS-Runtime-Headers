/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PDFKit.framework/PDFKit
 */

@interface PDFPage : NSObject <NSCopying> {
    PDFPagePrivate * _private;
}

@property (nonatomic, readonly) NSArray *annotations;
@property (nonatomic, readonly) NSAttributedString *attributedString;
@property (nonatomic, readonly) NSData *dataRepresentation;
@property (nonatomic) BOOL displaysAnnotations;
@property (nonatomic, readonly) PDFDocument *document;
@property (nonatomic, readonly) NSString *label;
@property (nonatomic, readonly) unsigned int numberOfCharacters;
@property (nonatomic, readonly) struct CGPDFPage { }*pageRef;
@property (nonatomic) int rotation;
@property (nonatomic, readonly) NSString *string;

+ (id)fontWithPDFFont:(struct CGPDFFont { }*)arg1 size:(float)arg2;
+ (BOOL)isNativeRotationDrawingEnabledForThisThread;
+ (void)setNativeRotationDrawingEnabledForThisThread:(BOOL)arg1;

- (void).cxx_destruct;
- (void)_addBox:(int)arg1 toDictionary:(struct __CFDictionary { }*)arg2 offset:(struct CGPoint { float x1; float x2; })arg3;
- (void)_commonInit;
- (void)_drawWithBox:(int)arg1 inContext:(struct CGContext { }*)arg2 withRotation:(bool)arg3 withAntialiasing:(bool)arg4 isThumbnail:(bool)arg5 withAnnotations:(bool)arg6 withDelegate:(id)arg7;
- (struct CGImage { }*)_newCGImageWithBox:(int)arg1 bitmapSize:(struct CGSize { float x1; float x2; })arg2 scale:(float)arg3 offset:(struct CGPoint { float x1; float x2; })arg4 fillBackground:(bool)arg5 withRotation:(bool)arg6 withAntialiasing:(bool)arg7 withAnnotations:(bool)arg8 withDelegate:(id)arg9;
- (void)addAnnotation:(id)arg1;
- (void)addScannedAnnotation:(id)arg1;
- (id)allAnnotations;
- (id)annotationAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)annotations;
- (id)attributedString;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundsForBox:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })characterBoundsAtIndex:(int)arg1;
- (int)characterIndexAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)columnAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)columnAtPointIfAvailable:(struct CGPoint { float x1; float x2; })arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)createAttributedStringCP;
- (id)dataRepresentation;
- (void)dealloc;
- (BOOL)displaysAnnotations;
- (id)document;
- (void)drawAnnotationsWithBox:(int)arg1;
- (void)drawAnnotationsWithBox:(int)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawBurnedInAnnotationsWithBox:(int)arg1;
- (void)drawWithBox:(int)arg1;
- (void)drawWithBox:(int)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawWithBox:(int)arg1 inContext:(struct CGContext { }*)arg2 isThumbnail:(bool)arg3;
- (void)drawWithBox:(int)arg1 toContext:(struct CGContext { }*)arg2;
- (BOOL)enqueuedForDataDetection;
- (BOOL)enqueuedForLayout;
- (void)fetchPageLayoutOnThread:(id)arg1;
- (struct __CFDictionary { }*)gcCreateBoxDictionary;
- (void)getAnnotations;
- (void)getAnnotationsWithView:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })getDrawingTransformForBox:(int)arg1;
- (BOOL)hasArtBox;
- (BOOL)hasBleedBox;
- (BOOL)hasCropBox;
- (BOOL)hasRunDataDetectors;
- (BOOL)hasTrimBox;
- (id)image;
- (id)imageOfSize:(struct CGSize { float x1; float x2; })arg1 forBox:(int)arg2 withRotation:(bool)arg3 withAntialiasing:(bool)arg4;
- (id)imageOfSize:(struct CGSize { float x1; float x2; })arg1 forBox:(int)arg2 withRotation:(bool)arg3 withAntialiasing:(bool)arg4 withAnnotations:(bool)arg5;
- (id)imageOfSize:(struct CGSize { float x1; float x2; })arg1 forBox:(int)arg2 withRotation:(bool)arg3 withAntialiasing:(bool)arg4 withAnnotations:(bool)arg5 withDelegate:(id)arg6;
- (id)init;
- (id)initWithImage:(id)arg1;
- (id)initWithPageRef:(struct CGPDFPage { }*)arg1;
- (bool)isBookmarked;
- (id)label;
- (void)lazilyLoadAnnotations;
- (void)lazilyLoadAnnotationsWithView:(id)arg1;
- (void)loadTextChars;
- (id)noFillthumbnailOfSize:(struct CGSize { float x1; float x2; })arg1 forBox:(int)arg2;
- (void)noteUnsupportedFeature:(id)arg1;
- (unsigned int)numberOfCharacters;
- (struct CGPDFLayout { }*)pageLayout;
- (struct CGPDFLayout { }*)pageLayoutIfAvail;
- (void)pageLayoutInvokation;
- (struct CGPDFPage { }*)pageRef;
- (void)purgeAll;
- (void)purgePageLayout;
- (void)removeAnnotation:(id)arg1;
- (void)resetAnnotations;
- (int)rotation;
- (void)scanAddedAnnotations;
- (void)scanData:(id)arg1;
- (id)scannedAnnotationAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)scannedAnnotations;
- (id)selectionForAll;
- (id)selectionForCodeRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)selectionForLineAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)selectionForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)selectionForRangeCommon:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 isCodeRange:(bool)arg2;
- (id)selectionForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)selectionForWordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)selectionFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
- (id)selectionFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 type:(int)arg3;
- (id)selectionFromPointToBottom:(struct CGPoint { float x1; float x2; })arg1 type:(int)arg2;
- (id)selectionFromTopToPoint:(struct CGPoint { float x1; float x2; })arg1 type:(int)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forBox:(int)arg2;
- (void)setDisplaysAnnotations:(BOOL)arg1;
- (void)setDisplaysMarkupAnnotations:(BOOL)arg1;
- (void)setDocument:(id)arg1;
- (void)setEnqueuedForDataDetection:(BOOL)arg1;
- (void)setEnqueuedForLayout:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)setIsBookmarked:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setPageLayout:(struct CGPDFLayout { }*)arg1;
- (BOOL)setPageRef:(struct CGPDFPage { }*)arg1;
- (void)setRotation:(int)arg1;
- (void)setThreadFetchingLayout:(struct _opaque_pthread_t { long x1; struct __darwin_pthread_handler_rec {} *x2; BOOL x3[4088]; }*)arg1;
- (void)setView:(id)arg1;
- (void)sortAnnotations:(id)arg1;
- (id)string;
- (id)thumbnailOfSize:(struct CGSize { float x1; float x2; })arg1 forBox:(int)arg2;
- (void)transformContext:(struct CGContext { }*)arg1 forBox:(int)arg2;
- (void)transformContextForBox:(int)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })transformForBox:(int)arg1;
- (id)unsupportedFeatures;
- (id)view;
- (BOOL)writeToConsumer:(struct CGDataConsumer { }*)arg1;

@end
