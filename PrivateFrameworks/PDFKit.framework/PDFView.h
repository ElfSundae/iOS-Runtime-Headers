/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PDFKit.framework/PDFKit
 */

@interface PDFView : UIView <UIGestureRecognizerDelegate> {
    PDFViewPrivate * _private;
}

@property (nonatomic) BOOL allowsDragging;
@property (nonatomic) BOOL autoScales;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic, readonly) PDFDestination *currentDestination;
@property (nonatomic, readonly) PDFPage *currentPage;
@property (nonatomic, retain) PDFSelection *currentSelection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PDFViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) int displayBox;
@property (nonatomic) int displayMode;
@property (nonatomic) BOOL displaysAsBook;
@property (nonatomic) BOOL displaysPageBreaks;
@property (nonatomic, retain) PDFDocument *document;
@property (nonatomic, readonly) UIView *documentView;
@property (nonatomic) BOOL enableDataDetectors;
@property (nonatomic) float greekingThreshold;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NSArray *highlightedSelections;
@property (nonatomic) int interpolationQuality;
@property (nonatomic) float scaleFactor;
@property (nonatomic) BOOL shouldAntiAlias;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)PDFLayout;
- (float)PDFViewWillChangeScaleFactor:(id)arg1 toScale:(float)arg2;
- (void)PDFViewWillClickOnLink:(id)arg1 withURL:(id)arg2;
- (void)_commonInit;
- (void)_doNotQueryScaleFactor;
- (void)_releaseDocument;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })_transformFromPageToPageView:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })_transformFromPageViewToPage:(id)arg1;
- (BOOL)allowsDragging;
- (void)animateTransitionFromPage:(id)arg1 toPage:(id)arg2;
- (void)annotationsChangedOnPage:(id)arg1;
- (void)appendPasswordUI;
- (int)areaOfInterestForMouse:(id)arg1;
- (int)areaOfInterestForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (float)autoScaleFactor;
- (float)autoScaleFactorForPage:(id)arg1;
- (BOOL)autoScales;
- (BOOL)automaticallyHandleGutter;
- (id)backgroundColor;
- (void)buildDebugDotFile;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (BOOL)canGoToFirstPage;
- (BOOL)canGoToLastPage;
- (BOOL)canGoToNextPage;
- (BOOL)canGoToPreviousPage;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (BOOL)canZoomIn;
- (BOOL)canZoomOut;
- (void)clearSelection;
- (void)constrainedScrollToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromPage:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toPage:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromPage:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toPage:(id)arg2;
- (void)copy:(id)arg1;
- (id)currentDestination;
- (int)currentHistoryIndex;
- (id)currentPage;
- (id)currentSelection;
- (void)dealloc;
- (float)defaultGutterWidth;
- (id)delegate;
- (id)determineCurrentPage;
- (BOOL)disableInterpageSpacing;
- (int)displayBox;
- (int)displayMode;
- (BOOL)displaysAsBook;
- (BOOL)displaysMarkupAnnotations;
- (BOOL)displaysPageBreaks;
- (BOOL)displaysRTL;
- (BOOL)displaysSoloPagesCentered;
- (BOOL)doPeriodicFlush;
- (id)document;
- (id)documentScrollView;
- (id)documentView;
- (void)documentWasUnlocked;
- (void)drawPage:(id)arg1;
- (void)drawPage:(id)arg1 toContext:(struct CGContext { }*)arg2;
- (void)drawPagePost:(id)arg1;
- (void)drawPagePost:(id)arg1 toContext:(struct CGContext { }*)arg2;
- (BOOL)enableDataDetectors;
- (void)encodeWithCoder:(id)arg1;
- (void)endEditingAnnotation;
- (void)findVisiblePages;
- (void)forceWebKitMainThread:(bool)arg1;
- (void)gestureInit;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)goBack:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goToDestination:(id)arg1;
- (void)goToDestinationNoPush:(id)arg1;
- (void)goToFirstPage:(id)arg1;
- (void)goToLastPage:(id)arg1;
- (void)goToNextPage:(id)arg1;
- (void)goToPage:(id)arg1;
- (void)goToPageNoPush:(id)arg1;
- (void)goToPreviousPage:(id)arg1;
- (void)goToRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 onPage:(id)arg2;
- (void)goToSelection:(id)arg1;
- (float)greekingThreshold;
- (float)gutterWidth;
- (void)handleLongPress:(id)arg1;
- (id)highlightedSelections;
- (id)history;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)installTileStats:(bool)arg1;
- (void)internalSetScaleFactor:(float)arg1;
- (int)interpolationQuality;
- (bool)isForcingWebKitMainThread;
- (BOOL)isOverLinkAnnotation:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)isRectVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 onPage:(id)arg2;
- (unsigned int)lastPageIndex;
- (void)layoutDocumentView;
- (float)lineWidthThreshold;
- (id)longPressGestureRecognizer;
- (float)maxScaleFactor;
- (float)minScaleFactor;
- (id)nextPage;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })normalizedPageBounds:(id)arg1;
- (id)pageColor;
- (id)pageForPoint:(struct CGPoint { float x1; float x2; })arg1 nearest:(BOOL)arg2;
- (id)pageViewForPageAtIndex:(unsigned int)arg1;
- (float)pageViewHeight:(id)arg1;
- (struct CGSize { float x1; float x2; })pageViewSizeForPage:(id)arg1;
- (id)panGestureRecognizer;
- (struct _PDFMargins { float x1; float x2; float x3; float x4; })pdfMargins;
- (void)performAction:(id)arg1;
- (void)performBeep;
- (id)popupManager;
- (void)positionInternalViews:(id)arg1;
- (id)previousPage;
- (void)pushDestination:(id)arg1;
- (void)reflectNewPageOn;
- (void)removeFromSuperview;
- (void)resizeDisplayView:(id)arg1;
- (struct CGSize { float x1; float x2; })rowSizeForPage:(id)arg1;
- (float)scaleFactor;
- (void)scrollByPage:(BOOL)arg1;
- (void)scrollHorizontalBy:(float)arg1;
- (struct CGPoint { float x1; float x2; })scrollOriginForPageTopLeft:(id)arg1;
- (void)scrollSelectionToVisible:(id)arg1;
- (void)scrollVerticalBy:(float)arg1;
- (void)scrollViewSaysPageMayHaveChanged:(id)arg1;
- (BOOL)scrollingChangesPages;
- (void)selectAll:(id)arg1;
- (void)selfDidResize:(id)arg1;
- (void)setAllowsDragging:(BOOL)arg1;
- (void)setAutoScales:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setCurrentSelection:(id)arg1;
- (void)setCurrentSelection:(id)arg1 animate:(BOOL)arg2;
- (void)setCursorForAreaOfInterest:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableInterpageSpacing:(BOOL)arg1;
- (void)setDisplayBox:(int)arg1;
- (void)setDisplayMode:(int)arg1;
- (void)setDisplaysAsBook:(BOOL)arg1;
- (void)setDisplaysPageBreaks:(BOOL)arg1;
- (void)setDisplaysSoloPagesCentered:(BOOL)arg1;
- (void)setDoPeriodicFlush:(BOOL)arg1;
- (void)setDocument:(id)arg1;
- (void)setDocument:(id)arg1 waitDuration:(double)arg2;
- (void)setEnableDataDetectors:(BOOL)arg1;
- (void)setEnablePageShadows:(bool)arg1;
- (void)setForcesTopAlignment:(bool)arg1;
- (void)setGreekingThreshold:(float)arg1;
- (void)setGutterWidth:(float)arg1;
- (void)setHighlightedSelections:(id)arg1;
- (void)setInterpolationQuality:(int)arg1;
- (void)setLineWidthThreshold:(float)arg1;
- (void)setMaxScaleFactor:(float)arg1;
- (void)setMinScaleFactor:(float)arg1;
- (void)setPageColor:(id)arg1;
- (void)setPopupManager:(id)arg1;
- (void)setScaleFactor:(float)arg1;
- (void)setScaleFactor:(float)arg1 anchorPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setScrollingChangesPages:(BOOL)arg1;
- (void)setShouldAntiAlias:(BOOL)arg1;
- (void)setUsesPageLabels:(BOOL)arg1;
- (BOOL)shouldAntiAlias;
- (id)swipeGestureRecognizer;
- (void)syncPageIndexToScrollView;
- (void)takeBackgroundColorFrom:(id)arg1;
- (void)takePasswordFrom:(id)arg1;
- (id)tapGestureRecognizer;
- (void)tapPress:(id)arg1;
- (void)touchPan:(id)arg1;
- (void)touchSwipe:(id)arg1;
- (void)updateCurrentPageUsingViewCenter;
- (void)updateTileStats;
- (BOOL)usesPageLabels;
- (id)viewForPage:(id)arg1;
- (id)visiblePages;
- (void)zoomIn:(id)arg1;
- (void)zoomOut:(id)arg1;

@end
