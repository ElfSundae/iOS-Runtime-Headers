/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCameraStreamControlMessageHandler : NSObject <HMDCameraSettingsControlManagerDelegate, HMDCameraStreamControlManagerDelegate, HMFLogging, HMFTimerDelegate> {
    HMDAccessory * _accessory;
    id /* block */  _messageSender;
    HMFMessageDispatcher * _msgDispatcher;
    HMFNetMonitor * _networkMonitor;
    NSUUID * _profileUniqueIdentifier;
    HMDCameraSettingsControlManager * _settingsControlManager;
    HMDService * _streamManagementService;
    HMDCameraStreamManagerSession * _streamSession;
    HMDCameraStreamSnapshotHandler * _streamSnapshotHandler;
    HMDCameraSettingsControlManager * _streamStatusManager;
    HMDCameraSupportedConfigurationCache * _supportedConfigCache;
    NSUUID * _uniqueIdentifier;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly) HMDAccessory *accessory;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) id /* block */ messageSender;
@property (nonatomic, retain) HMFMessageDispatcher *msgDispatcher;
@property (nonatomic, retain) HMFNetMonitor *networkMonitor;
@property (nonatomic, readonly) NSUUID *profileUniqueIdentifier;
@property (nonatomic, readonly) HMDCameraSettingsControlManager *settingsControlManager;
@property (nonatomic, readonly) HMDService *streamManagementService;
@property (nonatomic, retain) HMDCameraStreamManagerSession *streamSession;
@property (nonatomic, readonly, copy) NSString *streamSessionID;
@property (nonatomic, readonly) HMDCameraStreamSnapshotHandler *streamSnapshotHandler;
@property (nonatomic, readonly) HMDCameraSettingsControlManager *streamStatusManager;
@property (nonatomic, readonly) unsigned int streamingStatus;
@property (readonly) Class superclass;
@property (nonatomic, retain) HMDCameraSupportedConfigurationCache *supportedConfigCache;
@property (nonatomic, readonly) NSUUID *uniqueIdentifier;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_handleNegotiateMessage:(id)arg1;
- (void)_handleReconfigureMessage:(id)arg1;
- (void)_handleRemoteSetupMessage:(id)arg1;
- (void)_handleSetAudioState:(id)arg1;
- (void)_handleStartMessage:(id)arg1;
- (void)_handleStopMessage:(id)arg1;
- (BOOL)_isNegotiateMessage:(id)arg1;
- (BOOL)_isReconfigureMessage:(id)arg1;
- (BOOL)_isRemoteSetupMessage:(id)arg1;
- (BOOL)_isSetAudioStreamSettingMessage:(id)arg1;
- (BOOL)_isStartMessage:(id)arg1;
- (BOOL)_isStopMessage:(id)arg1;
- (void)_resetCurrentStreamState;
- (void)_sendStreamStoppedNotification;
- (void)_stopStream;
- (id)accessory;
- (void)dealloc;
- (void)handleAccessoryIsNotReachable:(id)arg1;
- (void)handleForegroundAppsNotification:(id)arg1;
- (void)handleMessage:(id)arg1;
- (unsigned int)hash;
- (id)initWithWorkQueue:(id)arg1 streamSnapshotHandler:(id)arg2 messageSender:(id /* block */)arg3 accessory:(id)arg4 streamManagementService:(id)arg5 msgDispatcher:(id)arg6 profileUniqueIdentifier:(id)arg7;
- (BOOL)isEqual:(id)arg1;
- (id)logIdentifier;
- (id /* block */)messageSender;
- (id)msgDispatcher;
- (id)networkMonitor;
- (id)profileUniqueIdentifier;
- (void)registerForMessages;
- (void)setMsgDispatcher:(id)arg1;
- (void)setNetworkMonitor:(id)arg1;
- (void)setStreamSession:(id)arg1;
- (void)setSupportedConfigCache:(id)arg1;
- (id)settingsControlManager;
- (void)streamControlManager:(id)arg1 didFail:(id)arg2;
- (void)streamControlManagerDidNegotiateStream:(id)arg1 selectedParameters:(id)arg2;
- (void)streamControlManagerDidReceiveFirstFrame:(id)arg1 audioStreamSetting:(unsigned int)arg2;
- (void)streamControlManagerDidReconfigureStream:(id)arg1;
- (void)streamControlManagerDidSetupRemoteConnection:(id)arg1;
- (void)streamControlManagerDidStartStream:(id)arg1 slotIdentifier:(id)arg2;
- (void)streamControlManagerDidStopStreamForSessionID:(id)arg1;
- (id)streamManagementService;
- (id)streamSession;
- (id)streamSessionID;
- (id)streamSnapshotHandler;
- (id)streamStatusManager;
- (unsigned int)streamingStatus;
- (id)supportedConfigCache;
- (void)timerDidFire:(id)arg1;
- (id)uniqueIdentifier;
- (id)workQueue;

@end
