/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit
 */

@interface TVMLUtilities : NSObject

+ (id)TVKitBundle;
+ (id)TVMLKitBundle;
+ (id)_bgImageElementForProductTemplate:(id)arg1;
+ (BOOL)_cornerRadiiFromImgTreatmentValue:(id)arg1 width:(float)arg2 cornerRadii:(struct TVCornerRadii { float x1; float x2; float x3; float x4; }*)arg3 circle:(BOOL*)arg4;
+ (id)_defaultPlaceholderImageForUserInterfaceStyle:(int)arg1;
+ (id)_defaultPlaceholderImageForUserInterfaceStyle:(int)arg1 withCornerRadii:(struct TVCornerRadii { float x1; float x2; float x3; float x4; })arg2 andSize:(struct CGSize { float x1; float x2; })arg3;
+ (id)_placeholderImageForValue:(id)arg1 userInterfaceStyle:(int)arg2;
+ (id)_placeholderImageForValue:(id)arg1 userInterfaceStyle:(int)arg2 withCornerRadii:(struct TVCornerRadii { float x1; float x2; float x3; float x4; })arg3 andScaledSize:(struct CGSize { float x1; float x2; })arg4;
+ (int)contentModeForPosition:(int)arg1 defaultMode:(int)arg2;
+ (BOOL)cornerRadiiFromElement:(id)arg1 screenScale:(float)arg2 cornerRadii:(struct TVCornerRadii { float x1; float x2; float x3; float x4; }*)arg3 circle:(BOOL*)arg4;
+ (float)focusedSizeIncreaseForSize:(struct CGSize { float x1; float x2; })arg1 upscaleFactor:(float)arg2;
+ (float)focusedSizeIncreaseForSize:(struct CGSize { float x1; float x2; })arg1 upscaleFactor:(float)arg2 useInSearchPartial:(BOOL)arg3;
+ (id)fontFromStyle:(id)arg1;
+ (id)fontFromTextStyle:(id)arg1 fontWeight:(id)arg2 fontSize:(float)arg3;
+ (void)getValuesFromTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 translation:(struct CGPoint { float x1; float x2; }*)arg2 rotation:(struct CGPoint { float x1; float x2; }*)arg3;
+ (id)indexPathForFirstItemAttributeValue:(id)arg1;
+ (int)interfaceStyleForTemplateElement:(id)arg1;
+ (BOOL)isFlowcaseAtTopOfStackFromElement:(id)arg1;
+ (int)overrideInterfaceStyleForTemplateElement:(id)arg1;
+ (id)placeholderImageForViewElement:(id)arg1;
+ (id)placeholderImageForViewElement:(id)arg1 withCornerRadii:(struct TVCornerRadii { float x1; float x2; float x3; float x4; })arg2 andScaledSize:(struct CGSize { float x1; float x2; })arg3;
+ (id)randomColor;
+ (id)rowSpacingMetricsForRowMetrics:(id)arg1;
+ (float)uiFontWeightFromCSSFontWeight:(id)arg1;

@end
