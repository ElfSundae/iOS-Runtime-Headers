/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit
 */

@interface _TVImageView : UIControl {
    BOOL  __enableEdgeAntialiasingOnSelected;
    UIColor * __focusedColor;
    UIColor * __tintColor;
    id /* block */  _completion;
    UIImage * _flatHighlightImage;
    UIImage * _flatImage;
    UIImage * _image;
    int  _imageContentMode;
    BOOL  _imageLoaded;
    TVImageProxy * _imageProxy;
    UIImageView * _imageView;
    UIImage * _placeholderImage;
    BOOL  _rendersImageAsTemplates;
    BOOL  _selected;
}

@property (setter=_setEnableEdgeAntialiasingOnSelected:, nonatomic) BOOL _enableEdgeAntialiasingOnSelected;
@property (setter=_setFocusedColor:, nonatomic, retain) UIColor *_focusedColor;
@property (setter=_setTintColor:, nonatomic, retain) UIColor *_tintColor;
@property (nonatomic, copy) id /* block */ completion;
@property (nonatomic) float cornerRadius;
@property (nonatomic, retain) UIImage *image;
@property (getter=isImageLoaded, nonatomic) BOOL imageLoaded;
@property (nonatomic, retain) TVImageProxy *imageProxy;
@property (nonatomic, retain) UIImage *placeholderImage;

- (void).cxx_destruct;
- (BOOL)_enableEdgeAntialiasingOnSelected;
- (id)_focusedColor;
- (id)_imageView;
- (void)_loadImage;
- (void)_setEnableEdgeAntialiasingOnSelected:(BOOL)arg1;
- (void)_setFocusedColor:(id)arg1;
- (void)_setImage:(id)arg1;
- (void)_setTintColor:(id)arg1;
- (id)_tintColor;
- (void)_updateImageView;
- (id /* block */)completion;
- (int)contentMode;
- (float)cornerRadius;
- (void)dealloc;
- (id)image;
- (id)imageProxy;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (BOOL)isImageLoaded;
- (void)layoutSubviews;
- (id)placeholderImage;
- (void)setCompletion:(id /* block */)arg1;
- (void)setContentMode:(int)arg1;
- (void)setCornerRadius:(float)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setImage:(id)arg1;
- (void)setImageLoaded:(BOOL)arg1;
- (void)setImageProxy:(id)arg1;
- (void)setImageProxy:(id)arg1 completion:(id /* block */)arg2;
- (void)setPlaceholderImage:(id)arg1;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)willMoveToWindow:(id)arg1;

@end
