/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit
 */

@interface TVImage : NSObject {
    BOOL  _cacheImmediately;
    BOOL  _enableCache;
    struct CGImage { } * _image;
    BOOL  _imageBufferInMemory;
    NSData * _imageData;
    float  _imageHeight;
    int  _imageOrientation;
    struct CGImageSource { } * _imageSource;
    NSString * _imageType;
    NSURL * _imageURL;
    float  _imageWidth;
    BOOL  _rotationEnabled;
}

@property (nonatomic, readonly) int orientation;
@property (nonatomic) BOOL rotationEnabled;

+ (id)imageWithCGImageRef:(struct CGImage { }*)arg1 preserveAlpha:(BOOL)arg2;
+ (id)imageWithData:(id)arg1;
+ (id)imageWithPath:(id)arg1;
+ (id)imageWithPath:(id)arg1 cacheImmediately:(BOOL)arg2;
+ (id)imageWithRotationFromPath:(id)arg1;
+ (id)imageWithRotationFromURL:(id)arg1;
+ (id)imageWithURL:(id)arg1;
+ (id)imageWithURL:(id)arg1 cacheImmediately:(BOOL)arg2;

- (void).cxx_destruct;
- (id)_initWithCGImageSourceRotationEnabled:(struct CGImageSource { }*)arg1;
- (void)_initializeCGImageWithRotation;
- (int)_uiImageOrientation;
- (float)aspectRatio;
- (id)croppedImageForSize:(struct CGSize { float x1; float x2; })arg1;
- (void)dealloc;
- (id)deletterboxedImage;
- (void)drawImageInContext:(struct CGContext { }*)arg1 rect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (BOOL)enableCache;
- (BOOL)hasAlpha;
- (struct CGImage { }*)image;
- (id)imageType;
- (id)initWithCGImageRef:(struct CGImage { }*)arg1 preserveAlpha:(BOOL)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 cacheImmediately:(BOOL)arg2;
- (BOOL)isImageBufferInMemory;
- (BOOL)isPowerOfTwo;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })largestSquareRect;
- (id)mapImageWithSourceRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2;
- (id)mapImageWithSourceRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2 drawInContextBlock:(id /* block */)arg3;
- (int)orientation;
- (struct CGSize { float x1; float x2; })pixelBounds;
- (BOOL)rotationEnabled;
- (void)setEnableCache:(BOOL)arg1;
- (void)setRotationEnabled:(BOOL)arg1;
- (BOOL)sourceRequiresRotation;
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)arg1;
- (id)uiImage;

@end
