/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/KeyboardServices.framework/KeyboardServices
 */

@interface _KSTextReplacementLegacyStore : NSObject <NSManagedObjectContextFaultingDelegate, _KSTextReplacementStoreProtocol> {
    NSURL * _baseURL;
    BOOL  _forceMaintenance;
    int  _importedSinceMaintenance;
    NSDate * _lastMaintenanceDate;
    NSManagedObjectContext * _managedObjectContext;
    BOOL  _minimumUptimeDidExpire;
    BOOL  _pendingSampleShortcutImport;
    NSPersistentStore * _persistentStore;
    NSPersistentStoreCoordinator * _persistentStoreCoordinator;
    NSDate * _persistentStoreDidLoadTime;
    BOOL  _suspendedForAccountChange;
    NSObject<OS_os_transaction> * _uptimeTransaction;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) NSURL *baseURL;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL forceMaintenance;
@property (readonly) unsigned int hash;
@property (nonatomic) int importedSinceMaintenance;
@property (nonatomic, retain) NSDate *lastMaintenanceDate;
@property (nonatomic, retain) NSManagedObjectContext *managedObjectContext;
@property (nonatomic) BOOL minimumUptimeDidExpire;
@property (nonatomic) BOOL pendingSampleShortcutImport;
@property (nonatomic, retain) NSPersistentStore *persistentStore;
@property (nonatomic, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;
@property (nonatomic, retain) NSDate *persistentStoreDidLoadTime;
@property (readonly) Class superclass;
@property (nonatomic) BOOL suspendedForAccountChange;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)basePersistentStoreURL;
+ (id)legacyImportFilePaths;
+ (id)legacyImportWordKeyPairsFromFiles:(id)arg1;
+ (id)legacyStorePath;
+ (id)textReplacementEntriesFromManagedObjects:(id)arg1;

- (void).cxx_destruct;
- (void)_deleteDuplicatesOfShortcut:(id)arg1 phrase:(id)arg2 count:(int)arg3 withContext:(id)arg4;
- (id)_deleteTransaction:(id)arg1;
- (BOOL)_mergeShortcut:(id)arg1 phrase:(id)arg2 fromContext:(id)arg3;
- (BOOL)_shouldMergeShortcut:(id)arg1 phrase:(id)arg2 intoContext:(id)arg3;
- (void)addEntries:(id)arg1 removeEntries:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (id)baseURL;
- (void)cleanup;
- (int)context:(id)arg1 shouldHandleInaccessibleFault:(id)arg2 forObjectID:(id)arg3 andTrigger:(id)arg4;
- (id)currentStoreIndentity;
- (void)dealloc;
- (BOOL)detectAndCleanDuplicatesWithContext:(id)arg1;
- (void)didMaintenance;
- (void)didMergeEntriesForNewUbiquityIdentity:(id)arg1;
- (void)didMergeEntriesForOtherLocalPeers:(id)arg1;
- (void)endMinimumUptime;
- (id)entityDescription;
- (id)entriesMatchingPredicate:(id)arg1;
- (id)entriesMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2;
- (id)entriesUsingSortDescriptors:(id)arg1;
- (BOOL)forceMaintenance;
- (void)importLegacyEntries;
- (void)importSampleShortcutsIfNecessary;
- (int)importedSinceMaintenance;
- (id)init;
- (id)initWithBaseURL:(id)arg1;
- (void)insertEntryWithValue:(id)arg1;
- (id)lastMaintenanceDate;
- (void)loadMaintenancePreferencesIfNecessary;
- (void)loadPersistentStoreIfNecessary;
- (id)managedObjectContext;
- (id)managedObjectModelURL;
- (BOOL)mergeEntriesForUbiquityIdentityChangeFromURL:(id)arg1 firstDelete:(BOOL)arg2;
- (BOOL)mergeEntriesForUbiquityIdentityChangeIfNecessary;
- (BOOL)mergeEntriesFromAllStoresIncludeLocalVariations:(BOOL)arg1;
- (id)mergeShortcutsFromContext:(id)arg1;
- (BOOL)migrateEntriesFromStoreAtURL:(id)arg1 error:(id*)arg2;
- (void)migrateSundanceData;
- (void)migrateTellurideData;
- (BOOL)minimumUptimeDidExpire;
- (double)minimumUptimeRemaining;
- (BOOL)needsMaintenance;
- (BOOL)pendingSampleShortcutImport;
- (void)performMaintenanceIfNecessary;
- (id)persistentStore;
- (id)persistentStoreCoordinator;
- (void)persistentStoreCoordinatorStoresDidChange:(id)arg1;
- (void)persistentStoreCoordinatorStoresWillChange:(id)arg1;
- (void)persistentStoreDidImportUbiquitousContentChanges:(id)arg1;
- (id)persistentStoreDidLoadTime;
- (void)prepareForMigration;
- (void)queryTextReplacementsWithCallback:(id /* block */)arg1;
- (void)queryTextReplacementsWithPredicate:(id)arg1 callback:(id /* block */)arg2;
- (void)removeAllEntries;
- (id)removeEntriesWithPredicate:(id)arg1;
- (void)requestMinimumUptime;
- (void)requestSyncWithCompletionBlock:(id /* block */)arg1;
- (void)retirePersistentStoreAtURL:(id)arg1;
- (void)runMaintenanceIncludeLocalVariations:(BOOL)arg1;
- (BOOL)save;
- (void)setBaseURL:(id)arg1;
- (void)setForceMaintenance:(BOOL)arg1;
- (void)setImportedSinceMaintenance:(int)arg1;
- (void)setLastMaintenanceDate:(id)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (void)setMinimumUptimeDidExpire:(BOOL)arg1;
- (void)setPendingSampleShortcutImport:(BOOL)arg1;
- (void)setPersistentStore:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1;
- (void)setPersistentStoreDidLoadTime:(id)arg1;
- (void)setSuspendedForAccountChange:(BOOL)arg1;
- (id)storeURLForMergeAfterUbiquityIdentityChangeFromToken:(id)arg1 toToken:(id)arg2 withLastKnownToken:(id)arg3 shouldDeleteFirst:(BOOL*)arg4;
- (BOOL)suspendedForAccountChange;
- (id)textReplacementEntries;
- (id)workQueue;

@end
