/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

@interface MIPMovie : PBCodable <NSCopying> {
    MIPArtist *_artist;
    int _audioLanguage;
    int _audioTrackId;
    int _audioTrackIndex;
    NSString *_extendedContentName;
    NSData *_flattenedChapterData;
    struct { 
        unsigned int rentalDuration : 1; 
        unsigned int rentalPlaybackDuration : 1; 
        unsigned int rentalPlaybackStartedDateTime : 1; 
        unsigned int rentalStartedDateTime : 1; 
        unsigned int audioLanguage : 1; 
        unsigned int audioTrackId : 1; 
        unsigned int audioTrackIndex : 1; 
        unsigned int subtitleLanguage : 1; 
        unsigned int subtitleTrackIndex : 1; 
        unsigned int videoQuality : 1; 
        unsigned int hasAlternateAudio : 1; 
        unsigned int hasChapterData : 1; 
        unsigned int hasSubtitles : 1; 
        unsigned int rental : 1; 
    } _has;
    BOOL _hasAlternateAudio;
    BOOL _hasChapterData;
    BOOL _hasSubtitles;
    NSString *_movieInfo;
    BOOL _rental;
    long long _rentalDuration;
    long long _rentalPlaybackDuration;
    long long _rentalPlaybackStartedDateTime;
    long long _rentalStartedDateTime;
    int _subtitleLanguage;
    int _subtitleTrackIndex;
    int _videoQuality;
}

@property (nonatomic, retain) MIPArtist *artist;
@property (nonatomic) int audioLanguage;
@property (nonatomic) int audioTrackId;
@property (nonatomic) int audioTrackIndex;
@property (nonatomic, retain) NSString *extendedContentName;
@property (nonatomic, retain) NSData *flattenedChapterData;
@property (nonatomic) BOOL hasAlternateAudio;
@property (nonatomic, readonly) BOOL hasArtist;
@property (nonatomic) BOOL hasAudioLanguage;
@property (nonatomic) BOOL hasAudioTrackId;
@property (nonatomic) BOOL hasAudioTrackIndex;
@property (nonatomic) BOOL hasChapterData;
@property (nonatomic, readonly) BOOL hasExtendedContentName;
@property (nonatomic, readonly) BOOL hasFlattenedChapterData;
@property (nonatomic) BOOL hasHasAlternateAudio;
@property (nonatomic) BOOL hasHasChapterData;
@property (nonatomic) BOOL hasHasSubtitles;
@property (nonatomic, readonly) BOOL hasMovieInfo;
@property (nonatomic) BOOL hasRental;
@property (nonatomic) BOOL hasRentalDuration;
@property (nonatomic) BOOL hasRentalPlaybackDuration;
@property (nonatomic) BOOL hasRentalPlaybackStartedDateTime;
@property (nonatomic) BOOL hasRentalStartedDateTime;
@property (nonatomic) BOOL hasSubtitleLanguage;
@property (nonatomic) BOOL hasSubtitleTrackIndex;
@property (nonatomic) BOOL hasSubtitles;
@property (nonatomic) BOOL hasVideoQuality;
@property (nonatomic, retain) NSString *movieInfo;
@property (nonatomic) BOOL rental;
@property (nonatomic) long long rentalDuration;
@property (nonatomic) long long rentalPlaybackDuration;
@property (nonatomic) long long rentalPlaybackStartedDateTime;
@property (nonatomic) long long rentalStartedDateTime;
@property (nonatomic) int subtitleLanguage;
@property (nonatomic) int subtitleTrackIndex;
@property (nonatomic) int videoQuality;

- (void).cxx_destruct;
- (id)artist;
- (int)audioLanguage;
- (int)audioTrackId;
- (int)audioTrackIndex;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)extendedContentName;
- (id)flattenedChapterData;
- (BOOL)hasAlternateAudio;
- (BOOL)hasArtist;
- (BOOL)hasAudioLanguage;
- (BOOL)hasAudioTrackId;
- (BOOL)hasAudioTrackIndex;
- (BOOL)hasChapterData;
- (BOOL)hasExtendedContentName;
- (BOOL)hasFlattenedChapterData;
- (BOOL)hasHasAlternateAudio;
- (BOOL)hasHasChapterData;
- (BOOL)hasHasSubtitles;
- (BOOL)hasMovieInfo;
- (BOOL)hasRental;
- (BOOL)hasRentalDuration;
- (BOOL)hasRentalPlaybackDuration;
- (BOOL)hasRentalPlaybackStartedDateTime;
- (BOOL)hasRentalStartedDateTime;
- (BOOL)hasSubtitleLanguage;
- (BOOL)hasSubtitleTrackIndex;
- (BOOL)hasSubtitles;
- (BOOL)hasVideoQuality;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)movieInfo;
- (BOOL)readFrom:(id)arg1;
- (BOOL)rental;
- (long long)rentalDuration;
- (long long)rentalPlaybackDuration;
- (long long)rentalPlaybackStartedDateTime;
- (long long)rentalStartedDateTime;
- (void)setArtist:(id)arg1;
- (void)setAudioLanguage:(int)arg1;
- (void)setAudioTrackId:(int)arg1;
- (void)setAudioTrackIndex:(int)arg1;
- (void)setExtendedContentName:(id)arg1;
- (void)setFlattenedChapterData:(id)arg1;
- (void)setHasAlternateAudio:(BOOL)arg1;
- (void)setHasAudioLanguage:(BOOL)arg1;
- (void)setHasAudioTrackId:(BOOL)arg1;
- (void)setHasAudioTrackIndex:(BOOL)arg1;
- (void)setHasChapterData:(BOOL)arg1;
- (void)setHasHasAlternateAudio:(BOOL)arg1;
- (void)setHasHasChapterData:(BOOL)arg1;
- (void)setHasHasSubtitles:(BOOL)arg1;
- (void)setHasRental:(BOOL)arg1;
- (void)setHasRentalDuration:(BOOL)arg1;
- (void)setHasRentalPlaybackDuration:(BOOL)arg1;
- (void)setHasRentalPlaybackStartedDateTime:(BOOL)arg1;
- (void)setHasRentalStartedDateTime:(BOOL)arg1;
- (void)setHasSubtitleLanguage:(BOOL)arg1;
- (void)setHasSubtitleTrackIndex:(BOOL)arg1;
- (void)setHasSubtitles:(BOOL)arg1;
- (void)setHasVideoQuality:(BOOL)arg1;
- (void)setMovieInfo:(id)arg1;
- (void)setRental:(BOOL)arg1;
- (void)setRentalDuration:(long long)arg1;
- (void)setRentalPlaybackDuration:(long long)arg1;
- (void)setRentalPlaybackStartedDateTime:(long long)arg1;
- (void)setRentalStartedDateTime:(long long)arg1;
- (void)setSubtitleLanguage:(int)arg1;
- (void)setSubtitleTrackIndex:(int)arg1;
- (void)setVideoQuality:(int)arg1;
- (int)subtitleLanguage;
- (int)subtitleTrackIndex;
- (int)videoQuality;
- (void)writeTo:(id)arg1;

@end
