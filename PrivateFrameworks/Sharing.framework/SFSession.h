/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
 */

@interface SFSession : NSObject <NSSecureCoding, SFXPCInterface> {
    BOOL  _activateCalled;
    BOOL  _activateCompleted;
    BOOL  _activateInProgress;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    struct CryptoAEADPrivate { } * _encryptionReadAEAD;
    unsigned char  _encryptionReadNonce;
    struct CryptoAEADPrivate { } * _encryptionWriteAEAD;
    unsigned char  _encryptionWriteNonce;
    id /* block */  _errorHandler;
    id /* block */  _eventMessageHandler;
    unsigned long long  _heartbeatLastTicks;
    NSObject<OS_dispatch_source> * _heartbeatTimer;
    BOOL  _heartbeatWaiting;
    NSUUID * _identifier;
    id /* block */  _interruptionHandler;
    BOOL  _invalidateCalled;
    BOOL  _invalidateDone;
    id /* block */  _invalidationHandler;
    id /* block */  _pairSetupCompletion;
    BOOL  _pairSetupEnded;
    unsigned int  _pairSetupFlags;
    struct PairingSessionPrivate { } * _pairSetupSession;
    id /* block */  _pairVerifyCompletion;
    BOOL  _pairVerifyEnded;
    unsigned int  _pairVerifyFlags;
    struct PairingSessionPrivate { } * _pairVerifySession;
    SFDevice * _peerDevice;
    id /* block */  _promptForPINHandler;
    id /* block */  _receivedFrameHandler;
    id /* block */  _receivedObjectHandler;
    id /* block */  _requestMessageHandler;
    struct NSMutableDictionary { Class x1; } * _requestQueue;
    id /* block */  _responseMessageInternalHandler;
    NSString * _serviceIdentifier;
    unsigned char  _serviceType;
    NSUUID * _serviceUUID;
    NSXPCListenerEndpoint * _testListenerEndpoint;
    NSObject<OS_os_transaction> * _transaction;
    NSXPCConnection * _xpcCnx;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ errorHandler;
@property (nonatomic, copy) id /* block */ eventMessageHandler;
@property (nonatomic, copy) NSUUID *identifier;
@property (nonatomic, copy) id /* block */ interruptionHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, retain) SFDevice *peerDevice;
@property (nonatomic, copy) id /* block */ promptForPINHandler;
@property (nonatomic, copy) id /* block */ receivedFrameHandler;
@property (nonatomic, copy) id /* block */ receivedObjectHandler;
@property (nonatomic, copy) id /* block */ requestMessageHandler;
@property (nonatomic, copy) id /* block */ responseMessageInternalHandler;
@property (nonatomic, copy) NSString *serviceIdentifier;
@property (nonatomic) unsigned char serviceType;
@property (nonatomic, copy) NSUUID *serviceUUID;
@property (nonatomic, retain) NSXPCListenerEndpoint *testListenerEndpoint;

+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_activateWithCompletion:(id /* block */)arg1;
- (void)_activated;
- (void)_cleanup;
- (void)_ensureXPCStarted;
- (void)_hearbeatTimer;
- (void)_interrupted;
- (void)_invalidate;
- (void)_invalidated;
- (void)_pairSetup:(id)arg1 start:(BOOL)arg2;
- (void)_pairSetupCompleted:(long)arg1;
- (void)_pairSetupTryPIN:(id)arg1;
- (void)_pairSetupWithFlags:(unsigned int)arg1 completion:(id /* block */)arg2;
- (void)_pairVerify:(id)arg1 start:(BOOL)arg2;
- (void)_pairVerifyCompleted:(long)arg1;
- (void)_pairVerifyWithFlags:(unsigned int)arg1 completion:(id /* block */)arg2;
- (void)_sendEncryptedObject:(id)arg1;
- (void)_sessionReceivedEncryptedData:(id)arg1;
- (void)_sessionReceivedUnencryptedData:(id)arg1 type:(unsigned char)arg2;
- (void)activateWithCompletion:(id /* block */)arg1;
- (void)dealloc;
- (id)description;
- (id)dispatchQueue;
- (void)encodeWithCoder:(id)arg1;
- (id /* block */)errorHandler;
- (id /* block */)eventMessageHandler;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id /* block */)interruptionHandler;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (void)pairSetupTryPIN:(id)arg1;
- (void)pairSetupWithFlags:(unsigned int)arg1 completion:(id /* block */)arg2;
- (void)pairVerifyWithFlags:(unsigned int)arg1 completion:(id /* block */)arg2;
- (id)peerDevice;
- (id /* block */)promptForPINHandler;
- (id /* block */)receivedFrameHandler;
- (id /* block */)receivedObjectHandler;
- (id /* block */)requestMessageHandler;
- (id /* block */)responseMessageInternalHandler;
- (void)sendEvent:(id)arg1;
- (void)sendFrameType:(unsigned char)arg1 data:(id)arg2;
- (void)sendFrameType:(unsigned char)arg1 object:(id)arg2;
- (void)sendRequest:(id)arg1;
- (void)sendResponse:(id)arg1;
- (void)sendWithFlags:(unsigned int)arg1 object:(id)arg2;
- (id)serviceIdentifier;
- (unsigned char)serviceType;
- (id)serviceUUID;
- (void)sessionError:(id)arg1;
- (void)sessionReceivedEvent:(id)arg1;
- (void)sessionReceivedFrameType:(unsigned char)arg1 data:(id)arg2;
- (void)sessionReceivedRequest:(id)arg1;
- (void)sessionReceivedResponse:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (long)setEncryptionReadKey:(const char *)arg1 readKeyLen:(unsigned long)arg2 writeKey:(const char *)arg3 writeKeyLen:(unsigned long)arg4;
- (void)setErrorHandler:(id /* block */)arg1;
- (void)setEventMessageHandler:(id /* block */)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInterruptionHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)setPromptForPINHandler:(id /* block */)arg1;
- (void)setReceivedFrameHandler:(id /* block */)arg1;
- (void)setReceivedObjectHandler:(id /* block */)arg1;
- (void)setRequestMessageHandler:(id /* block */)arg1;
- (void)setResponseMessageInternalHandler:(id /* block */)arg1;
- (void)setServiceIdentifier:(id)arg1;
- (void)setServiceType:(unsigned char)arg1;
- (void)setServiceUUID:(id)arg1;
- (void)setTestListenerEndpoint:(id)arg1;
- (id)testListenerEndpoint;

@end
