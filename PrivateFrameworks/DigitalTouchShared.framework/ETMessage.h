/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DigitalTouchShared.framework/DigitalTouchShared
 */

@interface ETMessage : NSObject {
    NSMutableSet * _childrenDelayingWisp;
    UIColor * _color;
    BOOL  _delayWisp;
    <ETMessageDelegate> * _delegate;
    NSString * _identifier;
    unsigned int  _messageVersion;
    BOOL  _missedDuringPlayback;
    BOOL  _mute;
    ETMessage * _parentMessage;
    BOOL  _renderingOffscreen;
    BOOL  _renderingOffscreenOpaque;
    double  _sendTime;
    double  _startDelay;
    BOOL  _supportsPlaybackTimeOffset;
    double  _timeCreated;
    <ETMessageTimeSource> * _timeSource;
}

@property (getter=isAnimated, nonatomic, readonly) BOOL animated;
@property (nonatomic, retain) UIColor *color;
@property (nonatomic) BOOL delayWisp;
@property (nonatomic) <ETMessageDelegate> *delegate;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, readonly) double messageDuration;
@property (nonatomic, readonly) unsigned short messageType;
@property (nonatomic, readonly) unsigned int messageVersion;
@property (nonatomic) BOOL missedDuringPlayback;
@property (nonatomic) BOOL mute;
@property (nonatomic) ETMessage *parentMessage;
@property (getter=isRenderingOffscreen, nonatomic) BOOL renderingOffscreen;
@property (getter=isRenderingOffscreenOpaque, nonatomic) BOOL renderingOffscreenOpaque;
@property (nonatomic) double sendTime;
@property (nonatomic, readonly) BOOL shouldLoopDuringPlayback;
@property (nonatomic) double startDelay;
@property (nonatomic) BOOL supportsPlaybackTimeOffset;
@property (nonatomic) double timeCreated;
@property (nonatomic) <ETMessageTimeSource> *timeSource;

+ (unsigned short)messageType;
+ (id)unarchive:(id)arg1;

- (void).cxx_destruct;
- (void)_startAudioPlayback;
- (void)_stopAudioPlayback;
- (id)archive;
- (id)archiveData;
- (void)childMessageDidCompleteWisp:(id)arg1;
- (void)childMessageDidDelayWisp:(id)arg1;
- (id)color;
- (BOOL)delayWisp;
- (id)delegate;
- (id)description;
- (void)displayInScene:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)hasWispingChildren;
- (id)identifier;
- (id)init;
- (id)initWithArchiveData:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isAnimated;
- (BOOL)isRenderingOffscreen;
- (BOOL)isRenderingOffscreenOpaque;
- (double)messageDuration;
- (unsigned short)messageType;
- (id)messageTypeAsString;
- (unsigned int)messageVersion;
- (BOOL)missedDuringPlayback;
- (BOOL)mute;
- (id)parentMessage;
- (void)preVisualizeInScene:(id)arg1;
- (BOOL)reachedSizeLimit;
- (struct CGPoint { float x1; float x2; })scenePointFromNormalizedPoint:(struct CGPoint { float x1; float x2; })arg1 inScene:(id)arg2;
- (double)sendTime;
- (BOOL)sendTimeIsValid;
- (void)setColor:(id)arg1;
- (void)setDelayWisp:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMissedDuringPlayback:(BOOL)arg1;
- (void)setMute:(BOOL)arg1;
- (void)setParentMessage:(id)arg1;
- (void)setRenderingOffscreen:(BOOL)arg1;
- (void)setRenderingOffscreenOpaque:(BOOL)arg1;
- (void)setSendTime:(double)arg1;
- (void)setStartDelay:(double)arg1;
- (void)setSupportsPlaybackTimeOffset:(BOOL)arg1;
- (void)setTimeCreated:(double)arg1;
- (void)setTimeSource:(id)arg1;
- (BOOL)shouldLoopDuringPlayback;
- (double)startDelay;
- (void)stopPlaying;
- (BOOL)supportsPlaybackTimeOffset;
- (double)timeCreated;
- (id)timeSource;
- (void)wispChildren;

@end
