/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface GGLLayer : CAEAGLLayer {
    struct CGSize { 
        float width; 
        float height; 
    } _backingSize;
    unsigned int _depthBuffer;
    unsigned int _frameBuffer;
    BOOL _readPixels;
    unsigned int _renderBuffer;
    <GGLLayerDisruptor> *_renderDisruptor;
    NSObject<GGLRenderQueueSource> *_renderSource;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    } _renderTarget;
    struct shared_ptr<ggl::GLRenderer> { 
        struct GLRenderer {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _renderer;
}

@property (nonatomic, readonly) struct CGSize { float x1; float x2; } backingSize;
@property <GGLLayerDisruptor> *renderDisruptor;
@property NSObject<GGLRenderQueueSource> *renderSource;
@property (readonly) struct GLRenderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; bool x5; float x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::DebugRenderer>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; short x44; short x45; void*x46; void*x47; void*x48; void*x49; void*x50; double x51; void*x52; const void*x53; const void*x54; BOOL x55; void*x56; bycopy void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; short x87; short x88; void*x89; void*x90; void*x91; void*x92; void*x93; double x94; void*x95; const void*x96; const void*x97; BOOL x98; void*x99; bycopy void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; unsigned short x130; void*x131; short x132; void*x133; void*x134; void*x135; void*x136; unsigned long x137; int x138; unsigned int x139/* : ? */; const void*x140; const void*x141; void*x142; void*x143; const void*x144; void*x145; void*x146; void*x147; out const void*x148; short x149; void*x150; void*x151; void*x152; out void*x153; in double x154; void*x155; void*x156; int x157; out in void*x158; float x159; const void*x160; void*x161; void*x162; void*x163; out const void*x164; void*x165; void*x166; void*x167; out void*x168; in double x169; void*x170; void*x171; int x172; out in void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; short x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; unsigned short x286; unsigned char x287; long x288; out void*x289; double x290; unsigned short x291; void*x292; out const void*x293; void*x294; void*x295; bycopy float x296; float x297; void*x298; const short x299; void*x300; void*x301; in void*x302; void*x303; void*x304; const void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; id x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; unsigned short x358; unsigned char x359; long x360; out void*x361; double x362; unsigned short x363; void*x364; out const void*x365; void*x366; void*x367; bycopy float x368; float x369; void*x370; const short x371; void*x372; void*x373; in void*x374; void*x375; void*x376; const void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; unsigned char x397; void*x398; unsigned short x399; void*x400; short x401; void*x402; void*x403; void*x404; void*x405; unsigned long x406; int x407; unsigned int x408/* : ? */; const void*x409; const void*x410; void*x411; void*x412; const int x413; void x414; void*x415; void*x416; void*x417; void*x418; const void*x419; void*x420; void*x421; void*x422; out const void*x423; short x424; void*x425; void*x426; const void*x427; float x428; void*x429; const void*x430; in BOOL x431; void*x432; short x433; void*x434; float x435; const void*x436; void*x437; void*x438; void*x439; out const void*x440; void*x441; void*x442; const void*x443; float x444; void*x445; const void*x446; in BOOL x447; void*x448; short x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; }*renderer; /* unknown property attribute:  std::__1::allocator<ggl::Texture2DLoadItem> >=^{Texture2DLoadItem}}}I} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_createRenderTarget;
- (void)_deleteBuffers;
- (struct CGSize { float x1; float x2; })backingSize;
- (void)dealloc;
- (void)didEnterBackground;
- (void)drawWithTimestamp:(double)arg1;
- (id)initWithRenderer:(struct shared_ptr<ggl::GLRenderer> { struct GLRenderer {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)layoutSublayers;
- (id)renderDisruptor;
- (id)renderSource;
- (struct GLRenderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; bool x5; float x6; struct vector<std::__1::shared_ptr<ggl::DebugRenderer>, std::__1::allocator<std::__1::shared_ptr<ggl::DebugRenderer> > > { struct shared_ptr<ggl::DebugRenderer> {} *x_7_1_1; struct shared_ptr<ggl::DebugRenderer> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::DebugRenderer> *, std::__1::allocator<std::__1::shared_ptr<ggl::DebugRenderer> > > { struct shared_ptr<ggl::DebugRenderer> {} *x_3_2_1; } x_7_1_3; } x7; struct unique_ptr<ggl::RenderQueue, std::__1::default_delete<ggl::RenderQueue> > { struct __compressed_pair<ggl::RenderQueue *, std::__1::default_delete<ggl::RenderQueue> > { struct RenderQueue {} *x_1_2_1; } x_8_1_1; } x8; struct unique_ptr<ggl::CommandBuffer, std::__1::default_delete<ggl::CommandBuffer> > { struct __compressed_pair<ggl::CommandBuffer *, std::__1::default_delete<ggl::CommandBuffer> > { struct CommandBuffer {} *x_1_2_1; } x_9_1_1; } x9; bool x10; id x11; struct RenderState {} x12; struct unique_ptr<ggl::OESContext, std::__1::default_delete<ggl::OESContext> > { struct __compressed_pair<ggl::OESContext *, std::__1::default_delete<ggl::OESContext> > { struct OESContext {} *x_1_2_1; } x_13_1_1; } x13; struct RenderTarget {} *x14; struct TransactionBuffer { struct deque<std::__1::shared_ptr<ggl::RenderTransaction>, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> > > { struct __split_buffer<std::__1::shared_ptr<ggl::RenderTransaction> *, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> *> > { struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_1; struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_2; struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_3; struct __compressed_pair<std::__1::shared_ptr<ggl::RenderTransaction> **, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> *> > { struct shared_ptr<ggl::RenderTransaction> {} **x_4_4_1; } x_1_3_4; } x_1_2_1; unsigned int x_1_2_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> > > { unsigned long x_3_3_1; } x_1_2_3; } x_15_1_1; } x15; struct unique_ptr<ggl::PerformanceHUD, std::__1::default_delete<ggl::PerformanceHUD> > { struct __compressed_pair<ggl::PerformanceHUD *, std::__1::default_delete<ggl::PerformanceHUD> > { struct PerformanceHUD {} *x_1_2_1; } x_16_1_1; } x16; struct deque<std::__1::pair<unsigned long, void *>, std::__1::allocator<std::__1::pair<unsigned long, void *> > > { struct __split_buffer<std::__1::pair<unsigned long, void *> *, std::__1::allocator<std::__1::pair<unsigned long, void *> *> > { struct pair<unsigned long, void *> {} **x_1_2_1; struct pair<unsigned long, void *> {} **x_1_2_2; struct pair<unsigned long, void *> {} **x_1_2_3; struct __compressed_pair<std::__1::pair<unsigned long, void *> **, std::__1::allocator<std::__1::pair<unsigned long, void *> *> > { struct pair<unsigned long, void *> {} **x_4_3_1; } x_1_2_4; } x_17_1_1; unsigned int x_17_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<unsigned long, void *> > > { unsigned long x_3_2_1; } x_17_1_3; } x17; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_18_1_1; struct BufferLoadItem {} *x_18_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_18_1_3; } x18; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_19_1_1; struct Texture2DLoadItem {} *x_19_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_19_1_3; } x19; unsigned int x20; }*)renderer;
- (void)setContentsScale:(float)arg1;
- (void)setReadPixels;
- (void)setRenderDisruptor:(id)arg1;
- (void)setRenderSource:(id)arg1;

@end
