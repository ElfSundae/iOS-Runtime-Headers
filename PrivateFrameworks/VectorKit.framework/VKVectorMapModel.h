/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKVectorMapModel : VKMapTileModel {
    struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__begin_; 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__end_; 
        struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
            struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__first_; 
        } __end_cap_; 
    } _defaultStencilItems;
    BOOL _needsTileStencil;
    unsigned int _stencilItemIndex;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _stencilState;
}

@property (nonatomic) BOOL needsTileStencil;

+ (BOOL)reloadOnActiveTileGroupChange;
+ (BOOL)reloadOnStylesheetChange;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_layoutScene:(id)arg1 withContext:(id)arg2;
- (void)_updateTilesInScene:(id)arg1 context:(id)arg2;
- (id)featureMarkerAtPoint:(struct VKPoint { double x1; double x2; double x3; })arg1;
- (id)featureMarkerInTile:(id)arg1 atPoint:(struct VKPoint { double x1; double x2; double x3; }*)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)init;
- (unsigned long long)mapLayerPosition;
- (BOOL)needsTileStencil;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; BOOL x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; long x29; void*x30; int x31; void*x32; short x33; void*x34; void*x35; void*x36; void*x37; void*x38; double x39; void*x40; void*x41; void*x42; void*x43; void*x44; long x45; void*x46; long x47; void*x48; out void*x49; BOOL x50; void*x51; void*x52; void*x53; void*x54; void*x55; out void*x56; const void*x57; void*x58; void*x59; short x60; void*x61; void*x62; void*x63; double x64; void*x65; SEL x66; void*x67; SEL x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; SEL x76; void*x77; SEL x78; void*x79; void*x80; void*x81; long x82; void*x83; long x84; void*x85; out void*x86; BOOL x87; void*x88; void*x89; void*x90; void*x91; void*x92; out void*x93; const void*x94; void*x95; void*x96; short x97; void*x98; void*x99; void*x100; double x101; void*x102; SEL x103; void*x104; SEL x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; SEL x113; void*x114; SEL x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; short x125; void*x126; void*x127; void*x128; void*x129; void*x130; in void*x131; out void*x132; double x133; void*x134; void*x135; void*x136; void*x137; void*x138; short x139; void*x140; void*x141; void*x142; double x143; void*x144; SEL x145; void*x146; SEL x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; SEL x155; void*x156; SEL x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; short x167; void*x168; void*x169; void*x170; void*x171; void*x172; void x173; void*x174; void*x175; void*x176; long x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; in void*x197; short x198; void*x199; int x200; void*x201; void*x202; void*x203; in void*x204; void*x205; void*x206; double x207; void*x208; void*x209; void*x210; long x211; void*x212; out void*x213; in void*x214; void*x215; void*x216; void*x217; void*x218; long x219; void*x220; out void*x221; in void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; short x229; void*x230; void*x231; void*x232; double x233; void*x234; SEL x235; void*x236; SEL x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; SEL x245; void*x246; SEL x247; void*x248; short x249; void*x250; void*x251; void*x252; void*x253; void*x254; const void*x255; void*x256; void*x257; double x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; const void*x266; void*x267; void*x268; void x269; void*x270; void*x271; void*x272; SEL x273; void*x274; SEL x275; void*x276; unsigned long x277; void*x278; void*x279; void*x280; unsigned int x281/* : ? */; void*x282; void*x283; void*x284; long x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; const void*x295; in void*x296; void*x297; void*x298; long x299; void*x300; bycopy void*x301; unsigned int x302/* : ? */; void*x303; void*x304; void*x305; void*x306; void*x307; BOOL x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void x322; void*x323; out void*x324; int x325; void*x326; double x327; void*x328; void*x329; void*x330; char *x331; void*x332; void*x333; void*x334; void*x335; void*x336; char *x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; struct x347; void*x348; void*x349; void*x350; short x351; void*x352; void*x353; void*x354; const void*x355; void*x356; void*x357; BOOL x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; BOOL x368; void*x369; out void*x370; void*x371; void*x372; void*x373; void*x374; const void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; struct  
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > { {} x381; void*x382; char *x383; void*x384; void*x385; unsigned int x386/* : ? */; void*x387; void*x388; int x389; in void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; short x402; void*x403; const void*x404; BOOL x405; void*x406; void*x407; void*x408; void*x409; int x410; const void*x411; short x412; void*x413; double x414; SEL x415; SEL x416; void*x417; void*x418; void*x419; SEL x420; SEL x421; void*x422; in int x423; long long x424; void*x425; void*x426; void*x427; void*x428; void*x429; const void*x430; void*x431; void*x432; long x433; SEL x434; SEL x435; void*x436; out long x437; void*x438; void*x439; out in unsigned short x440; out long x441; int x442; double x443; void*x444; int x445; long x446; long x447; SEL x448; SEL x449; unsigned short x450; void*x451; void*x452; double x453; void*x454; const SEL x455; SEL x456; unsigned short x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; short x464; void*x465; double x466; SEL x467; SEL x468; void*x469; void*x470; void*x471; SEL x472; SEL x473; double x474; void*x475; float x476; void*x477; void*x478; long x479; void*x480; void*x481; double x482; void*x483; long x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; long x491; SEL x492; SEL x493; void*x494; out long x495; void*x496; void*x497; out in unsigned short x498; out long x499; int x500; double x501; void*x502; int x503; long x504; long x505; SEL x506; SEL x507; unsigned short x508; void*x509; void*x510; double x511; void*x512; const SEL x513; SEL x514; unsigned short x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; short x525; void*x526; double x527; SEL x528; SEL x529; void*x530; void*x531; void*x532; SEL x533; SEL x534; void*x535; in int x536; long long x537; void*x538; void*x539; void*x540; void*x541; void*x542; const void*x543; void*x544; void*x545; long x546; SEL x547; SEL x548; void*x549; void*x550; in double x551; void*x552; const unsigned int x553; void*x554; void*x555; void*x556; void*x557; void*x558; short x559; void*x560; double x561; SEL x562; SEL x563; void*x564; void*x565; void*x566; SEL x567; SEL x568; double x569; void*x570; float x571; void*x572; void*x573; long x574; void*x575; void*x576; double x577; void*x578; long x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; long x586; SEL x587; SEL x588; void*x589; void*x590; in double x591; void*x592; const unsigned int x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; struct  {} x603; void*x604; char *x605; void*x606; void*x607; void*x608; in double x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; short x622; void*x623; const void*x624; BOOL x625; void*x626; void*x627; void*x628; void*x629; BOOL x630; out void*x631; void*x632; const void*x633; short x634; short x635; void*x636; double x637; void*x638; void*x639; void*x640; int x641; const void*x642; short x643; void*x644; double x645; SEL x646; SEL x647; void*x648; void*x649; void*x650; SEL x651; SEL x652; void*x653; void*x654; int x655; const void*x656; short x657; void*x658; double x659; SEL x660; SEL x661; void*x662; void*x663; void*x664; SEL x665; SEL x666; void*x667; in int x668; long long x669; void*x670; void*x671; void*x672; void*x673; void*x674; const void*x675; void*x676; void*x677; long x678; SEL x679; SEL x680; void*x681; out long x682; void*x683; void*x684; out in unsigned short x685; out long x686; int x687; double x688; void*x689; int x690; long x691; long x692; SEL x693; SEL x694; unsigned short x695; void*x696; void*x697; double x698; void*x699; const SEL x700; SEL x701; unsigned short x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; short x709; void*x710; double x711; SEL x712; SEL x713; void*x714; void*x715; void*x716; SEL x717; SEL x718; double x719; void*x720; float x721; void*x722; void*x723; long x724; void*x725; void*x726; double x727; void*x728; long x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; long x736; SEL x737; SEL x738; void*x739; out long x740; void*x741; void*x742; out in unsigned short x743; out long x744; int x745; double x746; void*x747; int x748; long x749; long x750; SEL x751; SEL x752; unsigned short x753; void*x754; void*x755; double x756; void*x757; const SEL x758; SEL x759; unsigned short x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; short x770; void*x771; double x772; SEL x773; SEL x774; void*x775; void*x776; void*x777; SEL x778; SEL x779; void*x780; in int x781; long long x782; void*x783; void*x784; void*x785; void*x786; void*x787; const void*x788; void*x789; void*x790; long x791; SEL x792; SEL x793; void*x794; void*x795; in double x796; void*x797; const unsigned int x798; void*x799; void*x800; void*x801; void*x802; void*x803; short x804; void*x805; double x806; SEL x807; SEL x808; void*x809; void*x810; void*x811; SEL x812; SEL x813; double x814; void*x815; float x816; void*x817; void*x818; long x819; void*x820; void*x821; double x822; void*x823; long x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; long x831; SEL x832; SEL x833; void*x834; void*x835; in double x836; void*x837; const unsigned int x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; char *x848; void*x849; void*x850; short x851; void*x852; double x853; SEL x854; SEL x855; void*x856; void*x857; void*x858; SEL x859; SEL x860; void*x861; long x862; long x863; out BOOL x864; void*x865; void*x866; out const void*x867; short x868; void*x869; double x870; SEL x871; SEL x872; void*x873; void*x874; void*x875; SEL x876; SEL x877; void*x878; void*x879; int x880; const void*x881; short x882; void*x883; double x884; SEL x885; SEL x886; void*x887; void*x888; void*x889; SEL x890; SEL x891; void*x892; in int x893; long long x894; void*x895; void*x896; void*x897; void*x898; void*x899; const void*x900; void*x901; void*x902; long x903; SEL x904; SEL x905; void*x906; out long x907; void*x908; void*x909; out in unsigned short x910; out long x911; int x912; double x913; void*x914; int x915; long x916; long x917; SEL x918; SEL x919; unsigned short x920; void*x921; void*x922; double x923; void*x924; const SEL x925; SEL x926; unsigned short x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; short x934; void*x935; double x936; SEL x937; SEL x938; void*x939; void*x940; void*x941; SEL x942; SEL x943; double x944; void*x945; float x946; void*x947; void*x948; long x949; void*x950; void*x951; double x952; void*x953; long x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; long x961; SEL x962; SEL x963; void*x964; out long x965; void*x966; void*x967; out in unsigned short x968; out long x969; int x970; double x971; void*x972; int x973; long x974; long x975; SEL x976; SEL x977; unsigned short x978; void*x979; void*x980; double x981; void*x982; const SEL x983; SEL x984; unsigned short x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; short x995; void*x996; double x997; SEL x998; SEL x999; void*x1000; void*x1001; void*x1002; SEL x1003; SEL x1004; void*x1005; in int x1006; long long x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; const void*x1013; void*x1014; void*x1015; long x1016; SEL x1017; SEL x1018; void*x1019; void*x1020; in double x1021; void*x1022; const unsigned int x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; short x1029; void*x1030; double x1031; SEL x1032; SEL x1033; void*x1034; void*x1035; void*x1036; SEL x1037; SEL x1038; double x1039; void*x1040; float x1041; void*x1042; void*x1043; long x1044; void*x1045; void*x1046; double x1047; void*x1048; long x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; long x1056; SEL x1057; SEL x1058; void*x1059; void*x1060; in double x1061; void*x1062; const unsigned int x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; struct  
            struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > { {} x1077; void*x1078; char *x1079; void*x1080; void*x1081; float x1082; int x1083; const short x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; }*)arg1 fullyLoaded:(BOOL)arg2 layoutContext:(id)arg3;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; BOOL x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; out void*x29; SEL x30; void*x31; SEL x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; short x40; void*x41; void*x42; void*x43; void*x44; void*x45; out void*x46; unsigned int x47/* : ? */; void*x48; void*x49; void*x50; BOOL x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; out void*x61; SEL x62; void*x63; SEL x64; void*x65; void*x66; void*x67; void*x68; void*x69; long long x70; void*x71; void*x72; void*x73; void*x74; void*x75; long x76; void*x77; void*x78; void*x79; out void*x80; unsigned int x81/* : ? */; void*x82; void*x83; void*x84; BOOL x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void x97; void*x98; out void*x99; int x100; void*x101; double x102; void*x103; void*x104; void*x105; char *x106; void*x107; void*x108; void*x109; void*x110; void*x111; struct x112; void*x113; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(BOOL)arg5 items:(struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x1; struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x2; struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x_3_1_1; } x3; }*)arg6 layoutContext:(id)arg7 sourceTileOffset:(const int*)arg8;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; out void*x23; SEL x24; void*x25; SEL x26; void*x27; void*x28; void*x29; const void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; int x37; void*x38; in void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; const void*x46; void*x47; void*x48; int x49; void*x50; double x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; out void*x61; SEL x62; void*x63; SEL x64; void*x65; void*x66; void*x67; const void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; int x75; void*x76; in void*x77; void*x78; void*x79; out void*x80; unsigned int x81/* : ? */; void*x82; void*x83; void*x84; BOOL x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; out void*x95; SEL x96; void*x97; SEL x98; void*x99; void*x100; void*x101; const void*x102; void*x103; void*x104; long x105; void*x106; void*x107; void*x108; void*x109; void*x110; short x111; void*x112; void*x113; void*x114; void*x115; void*x116; out void*x117; unsigned int x118/* : ? */; void*x119; void*x120; void*x121; BOOL x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; out void*x132; SEL x133; void*x134; SEL x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; short x143; void*x144; void*x145; void*x146; void*x147; void*x148; out void*x149; unsigned int x150/* : ? */; void*x151; void*x152; void*x153; BOOL x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; out void*x164; SEL x165; void*x166; SEL x167; void*x168; void*x169; void*x170; void*x171; void*x172; long long x173; void*x174; void*x175; void*x176; void*x177; void*x178; long x179; void*x180; void*x181; void*x182; out void*x183; unsigned int x184/* : ? */; void*x185; void*x186; void*x187; BOOL x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void x200; void*x201; out void*x202; int x203; void*x204; double x205; void*x206; void*x207; void*x208; char *x209; void*x210; void*x211; void*x212; void*x213; void*x214; char *x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; struct x225; void*x226; void*x227; void*x228; short x229; void*x230; void*x231; void*x232; const void*x233; void*x234; void*x235; BOOL x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; BOOL x246; void*x247; out void*x248; void*x249; void*x250; void*x251; void*x252; const void*x253; void*x254; void*x255; short x256; void*x257; short x258; void*x259; void*x260; void*x261; double x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; int x270; void*x271; const void*x272; void*x273; void*x274; void*x275; void*x276; in void*x277; short x278; void*x279; int x280; void*x281; void*x282; void*x283; in void*x284; void*x285; void*x286; double x287; void*x288; void*x289; void*x290; long x291; void*x292; out void*x293; in void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; short x301; void*x302; void*x303; void*x304; double x305; void*x306; SEL x307; void*x308; SEL x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; SEL x317; void*x318; SEL x319; void*x320; void*x321; void*x322; long x323; void*x324; long x325; void*x326; out void*x327; BOOL x328; void*x329; void*x330; void*x331; void*x332; void*x333; out void*x334; const void*x335; void*x336; void*x337; short x338; void*x339; void*x340; void*x341; double x342; void*x343; SEL x344; void*x345; SEL x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; SEL x354; void*x355; SEL x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; short x366; void*x367; void*x368; void*x369; void*x370; void*x371; in void*x372; out void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; struct  struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery { {} x387; void*x388; char *x389; char *x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; short x400; void*x401; const void*x402; BOOL x403; void*x404; void*x405; void*x406; void*x407; in double x408; int x409; in void*x410; unsigned long long x411; void*x412; void*x413; const void*x414; void*x415; struct  {} x416; void*x417; char *x418; char *x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; short x429; void*x430; const void*x431; BOOL x432; void*x433; void*x434; void*x435; void*x436; in double x437; int x438; in void*x439; unsigned long long x440; void*x441; void*x442; const void*x443; void*x444; struct  {} x445; void*x446; char *x447; char *x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; short x458; void*x459; const void*x460; BOOL x461; void*x462; void*x463; void*x464; void*x465; BOOL x466; out void*x467; void*x468; const void*x469; short x470; short x471; void*x472; double x473; void*x474; void*x475; void*x476; int x477; const void*x478; void*x479; void*x480; long x481; SEL x482; SEL x483; void*x484; void*x485; in double x486; int x487; in void*x488; unsigned long long x489; void*x490; void*x491; const void*x492; void*x493; char *x494; char *x495; void*x496; void*x497; short x498; void*x499; double x500; SEL x501; SEL x502; void*x503; void*x504; void*x505; SEL x506; SEL x507; void*x508; long x509; long x510; out BOOL x511; void*x512; void*x513; out const void*x514; void*x515; void*x516; long x517; SEL x518; SEL x519; void*x520; void*x521; in double x522; int x523; in void*x524; unsigned long long x525; void*x526; void*x527; const void*x528; void*x529; char *x530; void*x531; void*x532; void*x533; void*x534; struct  struct PendingQuery { {} x535; void*x536; char *x537; char *x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(BOOL)arg5 layoutContext:(id)arg6 sourceTileOffset:(const int*)arg7;
- (void)resetStencilState;
- (void)setNeedsTileStencil:(BOOL)arg1;
- (BOOL)wantsCategorizedSourceTiles;

@end
