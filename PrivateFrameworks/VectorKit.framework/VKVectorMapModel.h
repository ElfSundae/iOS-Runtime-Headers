/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKVectorMapModel : VKMapTileModel {
    struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__begin_; 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__end_; 
        struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
            struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__first_; 
        } __end_cap_; 
    } _defaultStencilItems;
    BOOL _needsTileStencil;
    unsigned int _stencilItemIndex;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _stencilState;
}

@property (nonatomic) BOOL needsTileStencil;

+ (BOOL)reloadOnActiveTileGroupChange;
+ (BOOL)reloadOnStylesheetChange;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_layoutScene:(id)arg1 withContext:(id)arg2;
- (void)_updateTilesInScene:(id)arg1 context:(id)arg2;
- (id)featureMarkerAtPoint:(struct VKPoint { double x1; double x2; double x3; })arg1;
- (id)featureMarkerInTile:(id)arg1 atPoint:(struct VKPoint { double x1; double x2; double x3; }*)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)init;
- (unsigned long long)mapLayerPosition;
- (BOOL)needsTileStencil;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; long x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; const void*x29; in void*x30; void*x31; void*x32; long x33; void*x34; bycopy void*x35; unsigned int x36/* : ? */; void*x37; void*x38; void*x39; void*x40; void*x41; BOOL x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void x56; void*x57; out void*x58; int x59; void*x60; double x61; void*x62; void*x63; void*x64; char *x65; void*x66; void*x67; void*x68; void*x69; void*x70; char *x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; struct x81; void*x82; void*x83; void*x84; void*x85; void*x86; in void*x87; short x88; void*x89; int x90; void*x91; void*x92; void*x93; in void*x94; void*x95; void*x96; double x97; void*x98; void*x99; void*x100; long x101; void*x102; out void*x103; in void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; }*)arg1 fullyLoaded:(BOOL)arg2 layoutContext:(id)arg3;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; long x21; void*x22; void*x23; void*x24; unsigned long long x25; void*x26; void*x27; void*x28; void*x29; void*x30; const void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; const void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; struct x59; void*x60; void*x61; void*x62; void*x63; void*x64; in void*x65; short x66; void*x67; int x68; void*x69; void*x70; void*x71; in void*x72; void*x73; void*x74; double x75; void*x76; void*x77; void*x78; long x79; void*x80; out void*x81; in void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(BOOL)arg5 items:(struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x1; struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x2; struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::Shader::Setup, std::__1::default_delete<ggl::PolygonSolidFill::Shader::Setup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x_3_1_1; } x3; }*)arg6 layoutContext:(id)arg7 sourceTileOffset:(const int*)arg8;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; SEL x19; void*x20; SEL x21; void*x22; void*x23; void*x24; out void*x25; long x26; void*x27; void*x28; void*x29; void*x30; void*x31; out void*x32; in void*x33; unsigned short x34; void*x35; out void*x36; long x37; void*x38; int x39; void*x40; double x41; void*x42; void*x43; void*x44; int x45; void*x46; long x47; void*x48; long x49; void*x50; SEL x51; void*x52; SEL x53; void*x54; unsigned short x55; void*x56; void*x57; void*x58; void*x59; void*x60; double x61; void*x62; void*x63; void*x64; const void*x65; SEL x66; void*x67; SEL x68; void*x69; unsigned short x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; short x90; void*x91; void*x92; void*x93; double x94; void*x95; SEL x96; void*x97; SEL x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; SEL x106; void*x107; SEL x108; void*x109; void*x110; void*x111; in void*x112; int x113; void*x114; long long x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; const void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; long x134; void*x135; SEL x136; void*x137; SEL x138; void*x139; void*x140; void*x141; void*x142; void*x143; in void*x144; double x145; void*x146; void*x147; void*x148; const void*x149; unsigned int x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; short x162; void*x163; void*x164; void*x165; double x166; void*x167; SEL x168; void*x169; SEL x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; SEL x178; void*x179; SEL x180; void*x181; double x182; void*x183; void*x184; void*x185; float x186; void*x187; void*x188; void*x189; void*x190; void*x191; long x192; void*x193; void*x194; void*x195; void*x196; void*x197; double x198; void*x199; void*x200; void*x201; long x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; long x216; void*x217; SEL x218; void*x219; SEL x220; void*x221; void*x222; void*x223; void*x224; void*x225; in void*x226; double x227; void*x228; void*x229; void*x230; const void*x231; unsigned int x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; struct x260; void*x261; void*x262; void*x263; short x264; void*x265; void*x266; void*x267; const void*x268; void*x269; void*x270; BOOL x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; int x281; void*x282; const void*x283; void*x284; void*x285; short x286; void*x287; void*x288; void*x289; double x290; void*x291; SEL x292; void*x293; SEL x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; SEL x302; void*x303; SEL x304; void*x305; void*x306; void*x307; in void*x308; int x309; void*x310; long long x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; const void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; long x330; void*x331; SEL x332; void*x333; SEL x334; void*x335; void*x336; void*x337; out void*x338; long x339; void*x340; void*x341; void*x342; void*x343; void*x344; out void*x345; in void*x346; unsigned short x347; void*x348; out void*x349; long x350; void*x351; int x352; void*x353; double x354; void*x355; void*x356; void*x357; int x358; void*x359; long x360; void*x361; long x362; void*x363; SEL x364; void*x365; SEL x366; void*x367; unsigned short x368; void*x369; void*x370; void*x371; void*x372; void*x373; double x374; void*x375; void*x376; void*x377; const void*x378; SEL x379; void*x380; SEL x381; void*x382; double x383; void*x384; void*x385; void*x386; long long x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; out void*x399; SEL x400; void*x401; SEL x402; void*x403; float x404; void*x405; void*x406; void*x407; short x408; void*x409; void*x410; void*x411; void*x412; void*x413; short x414; void*x415; void*x416; void*x417; void*x418; void*x419; const void*x420; void*x421; void*x422; double x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; const void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; long x438; void*x439; SEL x440; void*x441; SEL x442; void*x443; unsigned long long x444; void*x445; void*x446; void*x447; void*x448; void*x449; const void*x450; void*x451; void*x452; unsigned int x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; short x467; void*x468; void*x469; void*x470; double x471; void*x472; SEL x473; void*x474; SEL x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; SEL x483; void*x484; SEL x485; void*x486; void*x487; void*x488; long x489; void*x490; long x491; void*x492; out void*x493; BOOL x494; void*x495; void*x496; void*x497; void*x498; void*x499; out void*x500; const void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; out void*x508; SEL x509; void*x510; SEL x511; void*x512; float x513; void*x514; void*x515; void*x516; short x517; void*x518; void*x519; void*x520; void*x521; void*x522; short x523; void*x524; void*x525; void*x526; void*x527; void*x528; const void*x529; void*x530; void*x531; double x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; const void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; long x547; void*x548; SEL x549; void*x550; SEL x551; void*x552; unsigned long long x553; void*x554; void*x555; void*x556; void*x557; void*x558; const void*x559; void*x560; void*x561; unsigned int x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; struct x582; void*x583; void*x584; void*x585; short x586; void*x587; void*x588; void*x589; const void*x590; void*x591; void*x592; BOOL x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; short x603; void*x604; void*x605; void*x606; long x607; void*x608; int x609; void*x610; void*x611; void*x612; void*x613; void*x614; unsigned int x615/* : ? */; void*x616; void*x617; void*x618; float x619; void*x620; float x621; void*x622; void*x623; void*x624; const void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; out void*x632; SEL x633; void*x634; SEL x635; void*x636; float x637; void*x638; void*x639; void*x640; short x641; void*x642; void*x643; void*x644; void*x645; void*x646; short x647; void*x648; void*x649; void*x650; void*x651; void*x652; const void*x653; void*x654; void*x655; double x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; const void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; long x671; void*x672; SEL x673; void*x674; SEL x675; void*x676; unsigned long long x677; void*x678; void*x679; void*x680; void*x681; void*x682; const void*x683; void*x684; void*x685; unsigned int x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; char *x698; void*x699; void*x700; void*x701; void*x702; void*x703; short x704; void*x705; void*x706; void*x707; double x708; void*x709; SEL x710; void*x711; SEL x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; SEL x720; void*x721; SEL x722; void*x723; void*x724; void*x725; long x726; void*x727; long x728; void*x729; out void*x730; BOOL x731; void*x732; void*x733; void*x734; void*x735; void*x736; out void*x737; const void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; out void*x745; SEL x746; void*x747; SEL x748; void*x749; float x750; void*x751; void*x752; void*x753; short x754; void*x755; void*x756; void*x757; void*x758; void*x759; short x760; void*x761; void*x762; void*x763; void*x764; void*x765; const void*x766; void*x767; void*x768; double x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; const void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; long x784; void*x785; SEL x786; void*x787; SEL x788; void*x789; unsigned long long x790; void*x791; void*x792; void*x793; void*x794; void*x795; const void*x796; void*x797; void*x798; unsigned int x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; char *x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; struct x821; void*x822; void*x823; void*x824; short x825; void*x826; void*x827; void*x828; const void*x829; void*x830; void*x831; BOOL x832; void*x833; void*x834; void*x835; void*x836; void*x837; float x838; void*x839; void*x840; void*x841; short x842; void*x843; void*x844; void*x845; void*x846; void*x847; short x848; void*x849; void*x850; void*x851; void*x852; void*x853; const void*x854; void*x855; void*x856; double x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; const void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; long x872; void*x873; SEL x874; void*x875; SEL x876; void*x877; unsigned long long x878; void*x879; void*x880; void*x881; void*x882; void*x883; const void*x884; void*x885; void*x886; unsigned int x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; struct x899; void*x900; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(BOOL)arg5 layoutContext:(id)arg6 sourceTileOffset:(const int*)arg7;
- (void)resetStencilState;
- (void)setNeedsTileStencil:(BOOL)arg1;
- (BOOL)wantsCategorizedSourceTiles;

@end
