/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKScreenCanvas : NSObject <VKAnimationRunner, VKCameraControllerDelegate, VKCameraDelegate, VKWorldDelegate> {
    NSMutableArray *_animations;
    struct Matrix<float, 4, 1> { 
        float _e[4]; 
    } _bgColor;
    VKCamera *_camera;
    NSMutableArray *_cameraControllers;
    BOOL _deallocing;
    float _debugFramesPerSecond;
    VKDispatch *_dispatch;
    <MDRenderTarget> *_displayTarget;
    struct VKEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _edgeInsets;
    struct VKEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _fullyOccludedEdgeInsets;
    BOOL _iconsShouldAlignToPixels;
    BOOL _isHidden;
    BOOL _isInBackground;
    struct VKEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _labelEdgeInsets;
    VKLayoutContext *_layoutContext;
    struct MapCamera { struct View {} *x1; struct View {} *x2; struct Viewport {} *x3; void *x4; } *_mapCamera;
    <MDMapControllerDelegate> *_mapDelegate;
    struct RenderTree { int (**x1)(); id x2; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; unsigned char x50; long doublex51; void*x52; out const void*x53; BOOL x54; void*x55; int x56; out in unsigned char x57; void*x58; long x59; long x60; unsigned char x61; out in float x62; int x63; void*x64; void*x65; const void*x66; void*x67; int x68; out in void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; unsigned char x88; long doublex89; void*x90; out const void*x91; BOOL x92; void*x93; int x94; out in unsigned char x95; void*x96; long x97; long x98; unsigned char x99; out in float x100; int x101; void*x102; void*x103; const void*x104; void*x105; int x106; out in void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; bycopy void*x124; unsigned short x125; void*x126; short x127; void*x128; void*x129; void*x130; void*x131; unsigned long x132; int x133; unsigned int x134/* : ? */; const void*x135; const void*x136; void*x137; void*x138; const int x139; void x140; void*x141; void*x142; void*x143; void*x144; const void*x145; void*x146; void*x147; void*x148; out const void*x149; short x150; void*x151; void*x152; void*x153; short x154; int x155; BOOL x156; unsigned char x157; void*x158; const long doublex159; int x160; short x161; void*x162; long x163; void*x164; void*x165; void*x166; unsigned int x167; void*x168; float x169; const void*x170; void*x171; void*x172; void*x173; out const void*x174; void*x175; void*x176; void*x177; short x178; int x179; BOOL x180; unsigned char x181; void*x182; const long doublex183; int x184; short x185; void*x186; long x187; void*x188; void*x189; void*x190; unsigned int x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; unsigned int x234/* : ? */; void*x235; void*x236; void*x237; void*x238; unsigned long long x239; void*x240; void*x241; short x242; void*x243; int x244; void*x245; void*x246; void*x247; int x248; in void*x249; void*x250; out void*x251; const void*x252; BOOL x253; void*x254; void*x255; in out void*x256; void*x257; void*x258; int x259; out in void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; bycopy unsigned short x282; in void*x283; void*x284; void*x285; void*x286; double x287; void*x288; out void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; id x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; bycopy unsigned short x342; in void*x343; void*x344; void*x345; void*x346; double x347; void*x348; out void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; unsigned char x368; void*x369; unsigned short x370; void*x371; short x372; void*x373; void*x374; void*x375; void*x376; unsigned long x377; int x378; unsigned int x379/* : ? */; const void*x380; const void*x381; void*x382; void*x383; const int x384; void x385; void*x386; void*x387; void*x388; void*x389; const void*x390; void*x391; void*x392; void*x393; out const void*x394; short x395; void*x396; void*x397; void*x398; out unsigned short x399; void*x400; const void x401; int x402; BOOL x403; void*x404; short x405; void*x406; float x407; const void*x408; void*x409; void*x410; void*x411; out const void*x412; void*x413; void*x414; void*x415; out unsigned short x416; void*x417; const void x418; int x419; BOOL x420; void*x421; short x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; unsigned char x499; void*x500; const void*x501; in short x502; int x503; void*x504; int x505; out in void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; unsigned char x558; void*x559; const void*x560; in short x561; int x562; void*x563; int x564; out in void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; SEL x584; void*x585; unsigned short x586; void*x587; short x588; void*x589; void*x590; void*x591; void*x592; unsigned long x593; int x594; unsigned int x595/* : ? */; const void*x596; const void*x597; void*x598; void*x599; const void*x600; void*x601; void*x602; void*x603; out const void*x604; short x605; void*x606; unsigned long long x607; void*x608; void*x609; const void*x610; void*x611; unsigned char x612; out const void*x613; void*x614; float x615; const void*x616; void*x617; void*x618; void*x619; out const void*x620; void*x621; unsigned long long x622; void*x623; void*x624; const void*x625; void*x626; unsigned char x627; out const void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; const int x674; void* x675[ /* ? */ ]; void*x676; void*x677; void*x678; void*x679; out double x680; void*x681; long x682; SEL x683; short x684; void*x685; long x686; void*x687; BOOL x688; void*x689; void*x690; double x691; unsigned long x692; void*x693; unsigned int x694/* : ? */; void*x695; long x696; void*x697; void*x698; const void*x699; void*x700; const void*x701; int x702; long x703; long x704; long doublex705; int x706; short x707; void*x708; void*x709; void*x710; void*x711; void*x712; const SEL x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; unsigned char x736; void*x737; void*x738; void*x739; void*x740; in out const void*x741; void*x742; void*x743; unsigned long x744; void*x745; void x746; void*x747; long x748; oneway int x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; id x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; unsigned char x795; void*x796; void*x797; void*x798; void*x799; in out const void*x800; void*x801; void*x802; unsigned long x803; void*x804; void x805; void*x806; long x807; oneway int x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; unsigned short x824; void*x825; short x826; void*x827; void*x828; void*x829; void*x830; unsigned long x831; int x832; unsigned int x833/* : ? */; const void*x834; const void*x835; void*x836; void*x837; const int x838; void x839; void*x840; void*x841; void*x842; void*x843; const void*x844; void*x845; void*x846; void*x847; out const void*x848; short x849; void*x850; unsigned char x851; void*x852; void*x853; void*x854; const void*x855; void*x856; int x857; void*x858; void*x859; float x860; const void*x861; void*x862; void*x863; void*x864; out const void*x865; void*x866; unsigned char x867; void*x868; void*x869; void*x870; const void*x871; void*x872; int x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; unsigned short x925; unsigned char x926; void*x927; unsigned char x928; void*x929; void*x930; const void*x931; void*x932; out double x933; void*x934; long x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; unsigned short x987; unsigned char x988; void*x989; unsigned char x990; void*x991; void*x992; const void*x993; void*x994; out double x995; void*x996; long x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; unsigned char x1015; void*x1016; unsigned short x1017; void*x1018; short x1019; void*x1020; void*x1021; void*x1022; void*x1023; unsigned long x1024; int x1025; unsigned int x1026/* : ? */; const void*x1027; const void*x1028; void*x1029; void*x1030; const int x1031; void x1032; void*x1033; void*x1034; void*x1035; void*x1036; const void*x1037; void*x1038; void*x1039; void*x1040; out const void*x1041; short x1042; void*x1043; int x1044; void*x1045; out const void*x1046; unsigned int x1047; void*x1048; void*x1049; out const void*x1050; void*x1051; float x1052; const void*x1053; void*x1054; void*x1055; void*x1056; out const void*x1057; void*x1058; int x1059; void*x1060; out const void*x1061; unsigned int x1062; void*x1063; void*x1064; out const void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void**x1104; void*x1105; void*x1106; BOOL x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; id x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; id x1183; void*x1184; void*x1185; id x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; id x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; id x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; unsigned int x1313; void*x1314; void*x1315; unsigned int x1316/* : ? */; long x1317; void*x1318; oneway int x1319; void*x1320; void*x1321; unsigned char x1322; out void*x1323; in void*x1324; oneway int x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; void*x1343; in void*x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; unsigned int x1372; void*x1373; void*x1374; unsigned int x1375/* : ? */; long x1376; void*x1377; oneway int x1378; void*x1379; void*x1380; unsigned char x1381; out void*x1382; in void*x1383; oneway int x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; unsigned char x1464; inout out in unsigned char x1465; void*x1466; long x1467; long x1468; void*x1469; long x1470; void*x1471; const void*x1472; short x1473; void*x1474; unsigned int x1475/* : ? */; int x1476; long x1477; int x1478; void*x1479; void*x1480; void*x1481; out in int x1482; void*x1483; out const void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; unsigned char x1504; inout out in unsigned char x1505; void*x1506; long x1507; long x1508; void*x1509; long x1510; void*x1511; const void*x1512; short x1513; void*x1514; unsigned int x1515/* : ? */; int x1516; long x1517; int x1518; void*x1519; void*x1520; void*x1521; out in int x1522; void*x1523; out const void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; unsigned short x1544; void*x1545; short x1546; void*x1547; void*x1548; void*x1549; void*x1550; unsigned long x1551; int x1552; unsigned int x1553/* : ? */; const void*x1554; const void*x1555; void*x1556; void*x1557; const int x1558; void x1559; void*x1560; void*x1561; void*x1562; void*x1563; const void*x1564; void*x1565; void*x1566; void*x1567; out const void*x1568; short x1569; void*x1570; void*x1571; void*x1572; const short x1573; int x1574; short x1575; void*x1576; void*x1577; in void*x1578; unsigned char x1579; out in in void*x1580; BOOL x1581; void*x1582; int x1583; out in void*x1584; float x1585; const void*x1586; void*x1587; void*x1588; void*x1589; out const void*x1590; void*x1591; void*x1592; void*x1593; const short x1594; int x1595; short x1596; void*x1597; void*x1598; in void*x1599; unsigned char x1600; out in in void*x1601; BOOL x1602; void*x1603; int x1604; out in void*x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; unsigned short x1648; unsigned short x1649; void*x1650; void*x1651; void*x1652; const int x1653; BOOL x1654; short x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void x1661; void*x1662; in void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; short x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; const void*x1689; void*x1690; void*x1691; double x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; const void*x1700; void*x1701; void*x1702; void x1703; void*x1704; void*x1705; void*x1706; SEL x1707; void*x1708; SEL x1709; void*x1710; void*x1711; void*x1712; const void*x1713; void*x1714; void*x1715; float x1716; void*x1717; float x1718; void*x1719; int x1720; void*x1721; BOOL x1722; void*x1723; unsigned int x1724; void*x1725; in void*x1726; BOOL x1727; void*x1728; int x1729; void*x1730; double x1731; void*x1732; void*x1733; void*x1734; in void*x1735; void*x1736; void*x1737; unsigned long x1738; void*x1739; void*x1740; void*x1741; unsigned int x1742/* : ? */; void*x1743; void*x1744; void*x1745; long x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; const void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; struct x1765; void*x1766; } *_mapScene;
    BOOL _needsInitialization;
    BOOL _needsLayout;
    unsigned int _needsRepaint;
    struct unique_ptr<md::RenderQueue, std::__1::default_delete<md::RenderQueue> > { 
        struct __compressed_pair<md::RenderQueue *, std::__1::default_delete<md::RenderQueue> > { 
            struct RenderQueue {} *__first_; 
        } __ptr_; 
    } _renderQueue;
    BOOL _rendersInBackground;
    VKScene *_scene;
    BOOL _userIsGesturing;
    unsigned int _wantsLayout;
    VKWorld *_world;
}

@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  bgColor; /* unknown property attribute:  1>=[4f]} */
@property (nonatomic, readonly) VKCamera *camera;
@property (nonatomic, readonly) NSArray *cameraControllers;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) float debugFramesPerSecond;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct VKEdgeInsets { float x1; float x2; float x3; float x4; } edgeInsets;
@property (nonatomic) struct VKEdgeInsets { float x1; float x2; float x3; float x4; } fullyOccludedEdgeInsets;
@property (getter=isGesturing, nonatomic) BOOL gesturing;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL iconsShouldAlignToPixels;
@property (nonatomic) struct VKEdgeInsets { float x1; float x2; float x3; float x4; } labelEdgeInsets;
@property (nonatomic) <MDMapControllerDelegate> *mapDelegate;
@property (nonatomic, readonly) BOOL needsInitialization;
@property (nonatomic) BOOL rendersInBackground;
@property (readonly) Class superclass;
@property (nonatomic) unsigned char targetDisplay;
@property (nonatomic) struct VehicleState { bool x1; } vehicleState;
@property (nonatomic, readonly) VKWorld *world;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_queueUpdateDisplayLinkStatus;
- (void)addCameraController:(id)arg1;
- (void)adoptAnimation:(id)arg1;
- (void)animateWithTimestamp:(double)arg1;
- (void)animationDidResume:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (struct Matrix<float, 4, 1> { float x1[4]; })bgColor;
- (id)buildingMarkerAtScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)camera;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 canZoomInDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 canZoomOutDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraController:(id)arg1 didChangeRegionAnimated:(BOOL)arg2;
- (void)cameraController:(id)arg1 flyoverModeDidChange:(int)arg2;
- (void)cameraController:(id)arg1 flyoverModeWillChange:(int)arg2;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 requestsDisplayRate:(int)arg2;
- (void)cameraController:(id)arg1 willChangeRegionAnimated:(BOOL)arg2;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (void)cameraControllerDidFinishInitialTrackingAnimation:(id)arg1;
- (id)cameraControllers;
- (void)cameraDidChange:(id)arg1;
- (BOOL)canRender;
- (void)clearSceneIsEffectivelyHidden:(BOOL)arg1;
- (BOOL)currentSceneRequiresMSAA;
- (void)dealloc;
- (float)debugFramesPerSecond;
- (void)didEnterBackground;
- (void)didPresent;
- (void)didReceiveMemoryWarning:(BOOL)arg1 beAggressive:(BOOL)arg2;
- (struct VKEdgeInsets { float x1; float x2; float x3; float x4; })edgeInsets;
- (void)edgeInsetsDidEndAnimating;
- (void)edgeInsetsWillBeginAnimating;
- (id)featureMarkerAtScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)forceLayout;
- (struct VKEdgeInsets { float x1; float x2; float x3; float x4; })fullyOccludedEdgeInsets;
- (void)gglWillDrawWithTimestamp;
- (BOOL)iconsShouldAlignToPixels;
- (id)initWithTarget:(id)arg1 device:(const struct shared_ptr<ggl::Device> { }*)arg2 inBackground:(BOOL)arg3;
- (void)initializeWithRenderer:(struct GLRenderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; bool x5; float x6; struct vector<std::__1::shared_ptr<ggl::DebugRenderer>, std::__1::allocator<std::__1::shared_ptr<ggl::DebugRenderer> > > { struct shared_ptr<ggl::DebugRenderer> {} *x_7_1_1; struct shared_ptr<ggl::DebugRenderer> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::DebugRenderer> *, std::__1::allocator<std::__1::shared_ptr<ggl::DebugRenderer> > > { struct shared_ptr<ggl::DebugRenderer> {} *x_3_2_1; } x_7_1_3; } x7; struct unique_ptr<ggl::RenderQueue, std::__1::default_delete<ggl::RenderQueue> > { struct __compressed_pair<ggl::RenderQueue *, std::__1::default_delete<ggl::RenderQueue> > { struct RenderQueue {} *x_1_2_1; } x_8_1_1; } x8; struct unique_ptr<ggl::CommandBuffer, std::__1::default_delete<ggl::CommandBuffer> > { struct __compressed_pair<ggl::CommandBuffer *, std::__1::default_delete<ggl::CommandBuffer> > { struct CommandBuffer {} *x_1_2_1; } x_9_1_1; } x9; bool x10; id x11; struct RenderState {} x12; struct unique_ptr<ggl::OESContext, std::__1::default_delete<ggl::OESContext> > { struct __compressed_pair<ggl::OESContext *, std::__1::default_delete<ggl::OESContext> > { struct OESContext {} *x_1_2_1; } x_13_1_1; } x13; struct RenderTarget {} *x14; struct TransactionBuffer { struct deque<std::__1::shared_ptr<ggl::RenderTransaction>, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> > > { struct __split_buffer<std::__1::shared_ptr<ggl::RenderTransaction> *, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> *> > { struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_1; struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_2; struct shared_ptr<ggl::RenderTransaction> {} **x_1_3_3; struct __compressed_pair<std::__1::shared_ptr<ggl::RenderTransaction> **, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> *> > { struct shared_ptr<ggl::RenderTransaction> {} **x_4_4_1; } x_1_3_4; } x_1_2_1; unsigned int x_1_2_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<ggl::RenderTransaction> > > { unsigned long x_3_3_1; } x_1_2_3; } x_15_1_1; } x15; struct unique_ptr<ggl::PerformanceHUD, std::__1::default_delete<ggl::PerformanceHUD> > { struct __compressed_pair<ggl::PerformanceHUD *, std::__1::default_delete<ggl::PerformanceHUD> > { struct PerformanceHUD {} *x_1_2_1; } x_16_1_1; } x16; struct deque<std::__1::pair<unsigned long, void *>, std::__1::allocator<std::__1::pair<unsigned long, void *> > > { struct __split_buffer<std::__1::pair<unsigned long, void *> *, std::__1::allocator<std::__1::pair<unsigned long, void *> *> > { struct pair<unsigned long, void *> {} **x_1_2_1; struct pair<unsigned long, void *> {} **x_1_2_2; struct pair<unsigned long, void *> {} **x_1_2_3; struct __compressed_pair<std::__1::pair<unsigned long, void *> **, std::__1::allocator<std::__1::pair<unsigned long, void *> *> > { struct pair<unsigned long, void *> {} **x_4_3_1; } x_1_2_4; } x_17_1_1; unsigned int x_17_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<unsigned long, void *> > > { unsigned long x_3_2_1; } x_17_1_3; } x17; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_18_1_1; struct BufferLoadItem {} *x_18_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_18_1_3; } x18; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_19_1_1; struct Texture2DLoadItem {} *x_19_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_19_1_3; } x19; unsigned int x20; }*)arg1;
- (BOOL)isGesturing;
- (BOOL)isHidden;
- (struct VKEdgeInsets { float x1; float x2; float x3; float x4; })labelEdgeInsets;
- (void)layoutRenderQueue:(struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)mapDelegate;
- (BOOL)needsInitialization;
- (void)removeCameraController:(id)arg1;
- (BOOL)rendersInBackground;
- (void)resetRenderQueue:(struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)roadMarkersForSelectionAtScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)runAnimation:(id)arg1;
- (void)runOrAdoptAnimation:(id)arg1 run:(BOOL)arg2;
- (void)setContentsScale:(float)arg1;
- (void)setDebugFramesPerSecond:(float)arg1;
- (void)setEdgeInsets:(struct VKEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setFullyOccludedEdgeInsets:(struct VKEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setGesturing:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setIconsShouldAlignToPixels:(BOOL)arg1;
- (void)setLabelEdgeInsets:(struct VKEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setMapDelegate:(id)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)setRendersInBackground:(BOOL)arg1;
- (void)setTargetDisplay:(unsigned char)arg1;
- (void)setVehicleState:(struct VehicleState { bool x1; })arg1;
- (struct shared_ptr<gss::CartoStyle> { struct CartoStyle {} *x1; struct __shared_weak_count {} *x2; })styleForFeature:(id)arg1;
- (struct shared_ptr<gss::StyleSheet> { struct StyleSheet {} *x1; struct __shared_weak_count {} *x2; })stylesheet;
- (unsigned char)targetDisplay;
- (void)transferAnimationsTo:(id)arg1;
- (void)updateCameraForFrameResize;
- (BOOL)updateDisplayLinkStatus;
- (void)updateWithTimestamp:(double)arg1;
- (struct VehicleState { bool x1; })vehicleState;
- (BOOL)wantsRender;
- (BOOL)wantsTimerTick;
- (void)willEnterForeground;
- (id)world;
- (void)worldDisplayDidChange:(id)arg1;
- (void)worldLayoutDidChange:(id)arg1;

@end
