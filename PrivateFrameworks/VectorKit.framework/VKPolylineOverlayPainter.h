/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolylineOverlayPainter : VKOverlayPainter <VKPolylineObserver> {
    float _alphaScale;
    float _arrowAlphaScale;
    VKTimedAnimation *_arrowCrossFadeAnimation;
    VKTimedAnimation *_arrowFadeAnimation;
    struct vector<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> >, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__begin_; 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__end_; 
        struct __compressed_pair<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > *, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
            struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__first_; 
        } __end_cap_; 
    } _arrowLayers;
    struct unique_ptr<vk::RouteLineArrowManager, std::__1::default_delete<vk::RouteLineArrowManager> > { 
        struct __compressed_pair<vk::RouteLineArrowManager *, std::__1::default_delete<vk::RouteLineArrowManager> > { 
            struct RouteLineArrowManager {} *__first_; 
        } __ptr_; 
    } _arrowManager;
    struct fast_shared_ptr<vk::RouteLineSection> { 
        struct _fast_shared_ptr_control {} *_control; 
    } _automobileSection;
    struct TrafficMeshStyle { 
        int _style[4]; 
    } _builtMeshStyle;
    struct shared_ptr<gss::StyleQuery> { 
        struct StyleQuery {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _carStyleQuery;
    float _contentScale;
    float _crossfadingDisplayStep;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _debugLineRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    } _debugRenderItems;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _debugRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::Shader::Setup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
            struct FragmentedPool<ggl::Debug::Shader::Setup> {} *__first_; 
        } __ptr_; 
    } _debugShaderSetups;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::BaseMesh>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::BaseMesh> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
            struct FragmentedPool<ggl::Debug::BaseMesh> {} *__first_; 
        } __ptr_; 
    } _debugUnmatchedRouteLineMeshes;
    VKTimedAnimation *_fadeAnimation;
    BOOL _forceRoutelineUpdate;
    struct { 
        double v[4][4]; 
    } _matrix;
    struct unique_ptr<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _pilledTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _pilledTrafficManager;
    VKTileKeyList *_previousKeysInView;
    NSSet *_previousTilesInView;
    double _previousViewUnitsPerPoint;
    VKRouteLine *_routeLine;
    double _routeLineHalfWidthRealisticScale;
    struct unique_ptr<vk::RouteLineLayer, std::__1::default_delete<vk::RouteLineLayer> > { 
        struct __compressed_pair<vk::RouteLineLayer *, std::__1::default_delete<vk::RouteLineLayer> > { 
            struct RouteLineLayer {} *__first_; 
        } __ptr_; 
    } _routeLineLayer;
    struct unique_ptr<vk::RouteLineManager, std::__1::default_delete<vk::RouteLineManager> > { 
        struct __compressed_pair<vk::RouteLineManager *, std::__1::default_delete<vk::RouteLineManager> > { 
            struct RouteLineManager {} *__first_; 
        } __ptr_; 
    } _routeLineManager;
    double _routeLineWidthScaleRegular;
    VKPolylineOverlay *_routeOverlay;
    BOOL _selected;
    struct unordered_set<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
        struct __hash_table<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
            struct unique_ptr<std::__1::__hash_node<GEOComposedRouteSection *, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<GEOComposedRouteSection *, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *>, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::hash<GEOComposedRouteSection *> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::equal_to<GEOComposedRouteSection *> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _selectedSections;
    BOOL _showArrows;
    BOOL _showTraffic;
    double _simplificationEpsilon;
    struct unique_ptr<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _solidTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _solidTrafficManager;
    int _stencilValue;
    int _styleZ;
    unsigned int _targetDisplayStep;
    struct FeatureAttributeSet { 
        struct vector<gss::FeatureAttributePair, std::__1::allocator<gss::FeatureAttributePair> > { 
            struct FeatureAttributePair {} *__begin_; 
            struct FeatureAttributePair {} *__end_; 
            struct __compressed_pair<gss::FeatureAttributePair *, std::__1::allocator<gss::FeatureAttributePair> > { 
                struct FeatureAttributePair {} *__first_; 
            } __end_cap_; 
        } _attributes; 
    } _trafficAttributes;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { 
        struct ConstantDataTyped<ggl::Tile::View> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _viewUniforms;
    BOOL _wasInRealisticMode;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) VKPolylineOverlay *polyline;
@property (nonatomic, retain) VKPolylineOverlay *routeOverlay;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL showTraffic;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_didReceiveMemoryWarning;
- (BOOL)_shouldShowTraffic;
- (void)_userDefaultsDidChange:(id)arg1;
- (float)automobileRouteLineWidthForCamera:(id)arg1 canvasSize:(struct CGSize { float x1; float x2; })arg2;
- (void)dealloc;
- (void)flushPools;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; long x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; const void*x29; in void*x30; void*x31; void*x32; long x33; void*x34; bycopy void*x35; unsigned int x36/* : ? */; void*x37; void*x38; void*x39; void*x40; void*x41; BOOL x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void x56; void*x57; out void*x58; int x59; void*x60; double x61; void*x62; void*x63; void*x64; char *x65; void*x66; void*x67; void*x68; void*x69; void*x70; char *x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; struct x81; void*x82; void*x83; void*x84; void*x85; void*x86; in void*x87; short x88; void*x89; int x90; void*x91; void*x92; void*x93; in void*x94; void*x95; void*x96; double x97; void*x98; void*x99; void*x100; long x101; void*x102; out void*x103; in void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; BOOL x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; unsigned int x29/* : ? */; void*x30; void*x31; void*x32; BOOL x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; long x43; void*x44; int x45; void*x46; short x47; void*x48; void*x49; void*x50; void*x51; void*x52; double x53; void*x54; void*x55; void*x56; void*x57; void*x58; long x59; void*x60; long x61; void*x62; out void*x63; BOOL x64; void*x65; void*x66; void*x67; void*x68; void*x69; out void*x70; const void*x71; void*x72; void*x73; short x74; void*x75; void*x76; void*x77; double x78; void*x79; SEL x80; void*x81; SEL x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; SEL x90; void*x91; SEL x92; void*x93; void*x94; void*x95; long x96; void*x97; long x98; void*x99; out void*x100; BOOL x101; void*x102; void*x103; void*x104; void*x105; void*x106; out void*x107; const void*x108; void*x109; void*x110; short x111; void*x112; void*x113; void*x114; double x115; void*x116; SEL x117; void*x118; SEL x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; SEL x127; void*x128; SEL x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; short x139; void*x140; void*x141; void*x142; void*x143; void*x144; in void*x145; out void*x146; double x147; void*x148; void*x149; void*x150; void*x151; void*x152; short x153; void*x154; void*x155; void*x156; double x157; void*x158; SEL x159; void*x160; SEL x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; SEL x169; void*x170; SEL x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; short x181; void*x182; void*x183; void*x184; void*x185; void*x186; void x187; void*x188; void*x189; void*x190; long x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; in void*x211; short x212; void*x213; int x214; void*x215; void*x216; void*x217; in void*x218; void*x219; void*x220; double x221; void*x222; void*x223; void*x224; long x225; void*x226; out void*x227; in void*x228; void*x229; void*x230; void*x231; void*x232; long x233; void*x234; out void*x235; in void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; short x243; void*x244; void*x245; void*x246; double x247; void*x248; SEL x249; void*x250; SEL x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; SEL x259; void*x260; SEL x261; void*x262; short x263; void*x264; void*x265; void*x266; void*x267; void*x268; const void*x269; void*x270; void*x271; double x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; const void*x280; void*x281; void*x282; void x283; void*x284; void*x285; void*x286; SEL x287; void*x288; SEL x289; void*x290; unsigned long x291; void*x292; void*x293; void*x294; unsigned int x295/* : ? */; void*x296; void*x297; void*x298; long x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; const void*x309; in void*x310; void*x311; void*x312; long x313; void*x314; bycopy void*x315; unsigned int x316/* : ? */; void*x317; void*x318; void*x319; void*x320; void*x321; BOOL x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void x336; void*x337; out void*x338; int x339; void*x340; double x341; void*x342; void*x343; void*x344; char *x345; void*x346; void*x347; void*x348; void*x349; void*x350; char *x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; struct x361; void*x362; void*x363; void*x364; short x365; void*x366; void*x367; void*x368; const void*x369; void*x370; void*x371; BOOL x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; id x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; struct  struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery { {} x394; void*x395; char *x396; char *x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; short x407; void*x408; const void*x409; BOOL x410; void*x411; void*x412; void*x413; void*x414; in double x415; int x416; in void*x417; unsigned long long x418; void*x419; void*x420; const void*x421; void*x422; struct  {} x423; void*x424; char *x425; char *x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; short x436; void*x437; const void*x438; BOOL x439; void*x440; void*x441; void*x442; void*x443; in double x444; int x445; in void*x446; unsigned long long x447; void*x448; void*x449; const void*x450; void*x451; struct  {} x452; void*x453; char *x454; char *x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; short x465; void*x466; const void*x467; BOOL x468; void*x469; void*x470; void*x471; void*x472; BOOL x473; out void*x474; void*x475; const void*x476; short x477; short x478; void*x479; double x480; void*x481; void*x482; void*x483; int x484; const void*x485; void*x486; void*x487; long x488; SEL x489; SEL x490; void*x491; void*x492; in double x493; int x494; in void*x495; unsigned long long x496; void*x497; void*x498; const void*x499; void*x500; char *x501; char *x502; void*x503; void*x504; short x505; void*x506; double x507; SEL x508; SEL x509; void*x510; void*x511; void*x512; SEL x513; SEL x514; void*x515; long x516; long x517; out BOOL x518; void*x519; void*x520; out const void*x521; void*x522; void*x523; long x524; SEL x525; SEL x526; void*x527; void*x528; in double x529; int x530; in void*x531; unsigned long long x532; void*x533; void*x534; const void*x535; void*x536; char *x537; void*x538; void*x539; void*x540; void*x541; struct  struct PendingQuery { {} x542; void*x543; char *x544; char *x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; short x29; void*x30; void*x31; void*x32; const void*x33; void*x34; void*x35; BOOL x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; BOOL x46; void*x47; out void*x48; void*x49; void*x50; void*x51; void*x52; const void*x53; void*x54; void*x55; short x56; void*x57; short x58; void*x59; void*x60; void*x61; double x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; int x70; void*x71; const void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; long x79; void*x80; SEL x81; void*x82; SEL x83; void*x84; bool x85; void*x86; void*x87; void*x88; float x89; void*x90; float x91; void*x92; void*x93; void*x94; const void*x95; unsigned long x96; void*x97; out void*x98; void*x99; void*x100; double x101; void*x102; unsigned int x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; char *x113; void*x114; void*x115; void*x116; void*x117; void*x118; short x119; void*x120; void*x121; void*x122; double x123; void*x124; SEL x125; void*x126; SEL x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; SEL x135; void*x136; SEL x137; void*x138; void*x139; void*x140; long x141; void*x142; long x143; void*x144; out void*x145; BOOL x146; void*x147; void*x148; void*x149; void*x150; void*x151; out void*x152; const void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; long x160; void*x161; SEL x162; void*x163; SEL x164; void*x165; bool x166; void*x167; void*x168; void*x169; float x170; void*x171; float x172; void*x173; void*x174; void*x175; const void*x176; unsigned long x177; void*x178; out void*x179; void*x180; void*x181; double x182; void*x183; unsigned int x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; struct x200; void*x201; void*x202; void*x203; short x204; void*x205; void*x206; void*x207; const void*x208; void*x209; void*x210; BOOL x211; void*x212; void*x213; void*x214; void*x215; void*x216; bool x217; void*x218; void*x219; void*x220; float x221; void*x222; float x223; void*x224; void*x225; void*x226; const void*x227; unsigned long x228; void*x229; out void*x230; void*x231; void*x232; double x233; void*x234; unsigned int x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; struct x245; void*x246; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; in void*x29; short x30; void*x31; int x32; void*x33; void*x34; void*x35; in void*x36; void*x37; void*x38; double x39; void*x40; void*x41; void*x42; long x43; void*x44; out void*x45; in void*x46; void*x47; void*x48; void*x49; void*x50; long x51; void*x52; out void*x53; in void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; short x61; void*x62; void*x63; void*x64; double x65; void*x66; SEL x67; void*x68; SEL x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; SEL x77; void*x78; SEL x79; void*x80; void x81; void*x82; void*x83; void*x84; BOOL x85; void*x86; void*x87; void*x88; out void*x89; const void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; bycopy void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; const void*x108; void*x109; void*x110; unsigned short x111; void*x112; void*x113; void*x114; void*x115; void*x116; long x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; int x125; void*x126; const void*x127; void*x128; void*x129; void*x130; void*x131; short x132; void*x133; void*x134; void*x135; double x136; void*x137; SEL x138; void*x139; SEL x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; SEL x148; void*x149; SEL x150; void*x151; void*x152; void*x153; long x154; void*x155; long x156; void*x157; out void*x158; BOOL x159; void*x160; void*x161; void*x162; void*x163; void*x164; out void*x165; const void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; bycopy void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; const void*x184; void*x185; void*x186; unsigned short x187; void*x188; void*x189; void*x190; void*x191; void*x192; long x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; int x201; void*x202; const void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void x218; void*x219; out void*x220; int x221; void*x222; double x223; void*x224; void*x225; void*x226; char *x227; void*x228; void*x229; void*x230; void*x231; void*x232; char *x233; void*x234; void* x235[ /* ? */ ]; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; short x243; void*x244; void*x245; void*x246; double x247; void*x248; SEL x249; void*x250; SEL x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; SEL x259; void*x260; SEL x261; void*x262; void*x263; void*x264; void*x265; void*x266; unsigned int x267/* : ? */; void*x268; void*x269; void*x270; BOOL x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; long x281; void*x282; int x283; void*x284; short x285; void*x286; void*x287; void*x288; void*x289; void*x290; double x291; void*x292; void*x293; void*x294; void*x295; void*x296; long x297; void*x298; long x299; void*x300; out void*x301; BOOL x302; void*x303; void*x304; void*x305; void*x306; void*x307; out void*x308; const void*x309; void*x310; void*x311; short x312; void*x313; void*x314; void*x315; double x316; void*x317; SEL x318; void*x319; SEL x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; SEL x328; void*x329; SEL x330; void*x331; void*x332; void*x333; long x334; void*x335; long x336; void*x337; out void*x338; BOOL x339; void*x340; void*x341; void*x342; void*x343; void*x344; out void*x345; const void*x346; void*x347; void*x348; short x349; void*x350; void*x351; void*x352; double x353; void*x354; SEL x355; void*x356; SEL x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; SEL x365; void*x366; SEL x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; short x377; void*x378; short x379; void*x380; void*x381; void*x382; const void*x383; void*x384; void*x385; BOOL x386; void*x387; void*x388; void*x389; void*x390; void*x391; double x392; void*x393; void*x394; void*x395; long long x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; out void*x408; SEL x409; void*x410; SEL x411; void*x412; float x413; void*x414; void*x415; void*x416; short x417; void*x418; void*x419; void*x420; void*x421; void*x422; short x423; void*x424; void*x425; void*x426; void*x427; void*x428; const void*x429; void*x430; void*x431; double x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; const void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; long x447; void*x448; SEL x449; void*x450; SEL x451; void*x452; unsigned long long x453; void*x454; void*x455; void*x456; void*x457; void*x458; const void*x459; void*x460; void*x461; unsigned int x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; short x476; void*x477; void*x478; void*x479; double x480; void*x481; SEL x482; void*x483; SEL x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; SEL x492; void*x493; SEL x494; void*x495; void*x496; void*x497; long x498; void*x499; long x500; void*x501; out void*x502; BOOL x503; void*x504; void*x505; void*x506; void*x507; void*x508; out void*x509; const void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; out void*x517; SEL x518; void*x519; SEL x520; void*x521; float x522; void*x523; void*x524; void*x525; short x526; void*x527; void*x528; void*x529; void*x530; void*x531; short x532; void*x533; void*x534; void*x535; void*x536; void*x537; const void*x538; void*x539; void*x540; double x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; const void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; long x556; void*x557; SEL x558; void*x559; SEL x560; void*x561; unsigned long long x562; void*x563; void*x564; void*x565; void*x566; void*x567; const void*x568; void*x569; void*x570; unsigned int x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; struct x591; void*x592; void*x593; void*x594; short x595; void*x596; void*x597; void*x598; const void*x599; void*x600; void*x601; BOOL x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; short x612; void*x613; void*x614; void*x615; long x616; void*x617; int x618; void*x619; void*x620; void*x621; void*x622; void*x623; unsigned int x624/* : ? */; void*x625; void*x626; void*x627; float x628; void*x629; float x630; void*x631; void*x632; void*x633; const void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; out void*x641; SEL x642; void*x643; SEL x644; void*x645; float x646; void*x647; void*x648; void*x649; short x650; void*x651; void*x652; void*x653; void*x654; void*x655; short x656; void*x657; void*x658; void*x659; void*x660; void*x661; const void*x662; void*x663; void*x664; double x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; const void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; long x680; void*x681; SEL x682; void*x683; SEL x684; void*x685; unsigned long long x686; void*x687; void*x688; void*x689; void*x690; void*x691; const void*x692; void*x693; void*x694; unsigned int x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; char *x707; void*x708; void*x709; void*x710; void*x711; void*x712; short x713; void*x714; void*x715; void*x716; double x717; void*x718; SEL x719; void*x720; SEL x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; SEL x729; void*x730; SEL x731; void*x732; void*x733; void*x734; long x735; void*x736; long x737; void*x738; out void*x739; BOOL x740; void*x741; void*x742; void*x743; void*x744; void*x745; out void*x746; const void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; out void*x754; SEL x755; void*x756; SEL x757; void*x758; float x759; void*x760; void*x761; void*x762; short x763; void*x764; void*x765; void*x766; void*x767; void*x768; short x769; void*x770; void*x771; void*x772; void*x773; void*x774; const void*x775; void*x776; void*x777; double x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; const void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; long x793; void*x794; SEL x795; void*x796; SEL x797; void*x798; unsigned long long x799; void*x800; void*x801; void*x802; void*x803; void*x804; const void*x805; void*x806; void*x807; unsigned int x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; char *x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; struct x830; void*x831; void*x832; void*x833; short x834; void*x835; void*x836; void*x837; const void*x838; void*x839; void*x840; BOOL x841; void*x842; void*x843; void*x844; void*x845; void*x846; float x847; void*x848; void*x849; void*x850; short x851; void*x852; void*x853; void*x854; void*x855; void*x856; short x857; void*x858; void*x859; void*x860; void*x861; void*x862; const void*x863; void*x864; void*x865; double x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; const void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; long x881; void*x882; SEL x883; void*x884; SEL x885; void*x886; unsigned long long x887; void*x888; void*x889; void*x890; void*x891; void*x892; const void*x893; void*x894; void*x895; unsigned int x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; struct x908; void*x909; }*)arg5 tiles:(id)arg6;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; double x20; void*x21; long x22; out in void*x23; void*x24; void*x25; short x26; void*x27; double x28; SEL x29; SEL x30; void*x31; void*x32; void*x33; SEL x34; SEL x35; void*x36; long x37; long x38; out BOOL x39; void*x40; void*x41; out const void*x42; void*x43; void*x44; out SEL x45; SEL x46; float x47; void*x48; short x49; void*x50; void*x51; short x52; void*x53; void*x54; const void*x55; double x56; void*x57; void*x58; void*x59; const void*x60; void*x61; void*x62; long x63; SEL x64; SEL x65; unsigned long long x66; void*x67; void*x68; const void*x69; unsigned int x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; struct  unsigned long x_3_2_1;  {} x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg5 tiles:(id)arg6 layer:(unsigned char)arg7;
- (id)initWithOverlay:(id)arg1;
- (void)layoutDebugUnmatchedRouteLine:(id)arg1 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; }*)arg2;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (id)polyline;
- (void)polyline:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3;
- (void)prepareDebugLines;
- (void)prepareToDrawWithCanvas:(id)arg1;
- (id)routeOverlay;
- (BOOL)selected;
- (void)setContainerModel:(id)arg1;
- (void)setNeedsLayoutForPolyline:(id)arg1;
- (void)setRouteOverlay:(id)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setShowTraffic:(BOOL)arg1;
- (BOOL)showTraffic;
- (struct shared_ptr<gss::StyleManager> { struct StyleManager {} *x1; struct __shared_weak_count {} *x2; })styleManager;
- (void)stylesheetDidChange;
- (void)updateRouteLineStencilValue:(int)arg1;

@end
