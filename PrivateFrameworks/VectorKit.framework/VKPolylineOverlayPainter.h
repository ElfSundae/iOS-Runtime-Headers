/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolylineOverlayPainter : VKOverlayPainter <VKPolylineObserver> {
    float _alphaScale;
    float _arrowAlphaScale;
    VKTimedAnimation *_arrowCrossFadeAnimation;
    VKTimedAnimation *_arrowFadeAnimation;
    struct vector<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> >, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__begin_; 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__end_; 
        struct __compressed_pair<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > *, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
            struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__first_; 
        } __end_cap_; 
    } _arrowLayers;
    struct unique_ptr<vk::RouteLineArrowManager, std::__1::default_delete<vk::RouteLineArrowManager> > { 
        struct __compressed_pair<vk::RouteLineArrowManager *, std::__1::default_delete<vk::RouteLineArrowManager> > { 
            struct RouteLineArrowManager {} *__first_; 
        } __ptr_; 
    } _arrowManager;
    struct fast_shared_ptr<vk::RouteLineSection> { 
        struct _fast_shared_ptr_control {} *_control; 
    } _automobileSection;
    struct TrafficMeshStyle { 
        int _style[4]; 
    } _builtMeshStyle;
    struct shared_ptr<gss::StyleQuery> { 
        struct StyleQuery {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _carStyleQuery;
    float _contentScale;
    float _crossfadingDisplayStep;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _debugLineRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    } _debugRenderItems;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    } _debugRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::Shader::Setup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
            struct FragmentedPool<ggl::Debug::Shader::Setup> {} *__first_; 
        } __ptr_; 
    } _debugShaderSetups;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::BaseMesh>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::BaseMesh> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
            struct FragmentedPool<ggl::Debug::BaseMesh> {} *__first_; 
        } __ptr_; 
    } _debugUnmatchedRouteLineMeshes;
    VKTimedAnimation *_fadeAnimation;
    BOOL _forceRoutelineUpdate;
    struct { 
        double v[4][4]; 
    } _matrix;
    struct unique_ptr<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _pilledTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _pilledTrafficManager;
    VKTileKeyList *_previousKeysInView;
    NSSet *_previousTilesInView;
    double _previousViewUnitsPerPoint;
    VKRouteLine *_routeLine;
    double _routeLineHalfWidthRealisticScale;
    struct unique_ptr<vk::RouteLineLayer, std::__1::default_delete<vk::RouteLineLayer> > { 
        struct __compressed_pair<vk::RouteLineLayer *, std::__1::default_delete<vk::RouteLineLayer> > { 
            struct RouteLineLayer {} *__first_; 
        } __ptr_; 
    } _routeLineLayer;
    struct unique_ptr<vk::RouteLineManager, std::__1::default_delete<vk::RouteLineManager> > { 
        struct __compressed_pair<vk::RouteLineManager *, std::__1::default_delete<vk::RouteLineManager> > { 
            struct RouteLineManager {} *__first_; 
        } __ptr_; 
    } _routeLineManager;
    double _routeLineWidthScaleRegular;
    VKPolylineOverlay *_routeOverlay;
    BOOL _selected;
    struct unordered_set<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
        struct __hash_table<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
            struct unique_ptr<std::__1::__hash_node<GEOComposedRouteSection *, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<GEOComposedRouteSection *, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *>, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::hash<GEOComposedRouteSection *> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::equal_to<GEOComposedRouteSection *> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _selectedSections;
    BOOL _showArrows;
    BOOL _showTraffic;
    double _simplificationEpsilon;
    struct unique_ptr<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _solidTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _solidTrafficManager;
    int _stencilValue;
    int _styleZ;
    unsigned int _targetDisplayStep;
    struct FeatureAttributeSet { 
        struct vector<gss::FeatureAttributePair, std::__1::allocator<gss::FeatureAttributePair> > { 
            struct FeatureAttributePair {} *__begin_; 
            struct FeatureAttributePair {} *__end_; 
            struct __compressed_pair<gss::FeatureAttributePair *, std::__1::allocator<gss::FeatureAttributePair> > { 
                struct FeatureAttributePair {} *__first_; 
            } __end_cap_; 
        } _attributes; 
    } _trafficAttributes;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { 
        struct ConstantDataTyped<ggl::Tile::View> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _viewUniforms;
    BOOL _wasInRealisticMode;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) VKPolylineOverlay *polyline;
@property (nonatomic, retain) VKPolylineOverlay *routeOverlay;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL showTraffic;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_didReceiveMemoryWarning;
- (BOOL)_shouldShowTraffic;
- (void)_userDefaultsDidChange:(id)arg1;
- (float)automobileRouteLineWidthForCamera:(id)arg1 canvasSize:(struct CGSize { float x1; float x2; })arg2;
- (void)dealloc;
- (void)flushPools;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; SEL x19; SEL x20; void*x21; void*x22; void*x23; SEL x24; SEL x25; void*x26; void*x27; void*x28; void*x29; short x30; void*x31; void*x32; void x33; void*x34; long x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; in short x45; int x46; void*x47; in void*x48; double x49; void*x50; long x51; out in void*x52; void*x53; long x54; out in void*x55; void*x56; void*x57; short x58; void*x59; double x60; SEL x61; SEL x62; void*x63; void*x64; void*x65; SEL x66; SEL x67; short x68; void*x69; void*x70; const void*x71; double x72; void*x73; void*x74; void*x75; const void*x76; void x77; void*x78; SEL x79; SEL x80; unsigned long x81; void*x82; unsigned int x83/* : ? */; void*x84; long x85; void*x86; void*x87; void*x88; void*x89; const in void*x90; long x91; bycopy unsigned int x92/* : ? */; void*x93; void*x94; BOOL x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void x102; out int x103; double x104; void*x105; char *x106; void*x107; void*x108; char *x109; void*x110; void*x111; struct  struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> { {} x112; void*x113; char *x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; in void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; short x28; void*x29; void*x30; void*x31; double x32; void*x33; SEL x34; void*x35; SEL x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; SEL x44; void*x45; SEL x46; void*x47; void*x48; void*x49; long long x50; void*x51; void*x52; void*x53; void*x54; void*x55; long x56; void*x57; void*x58; void*x59; void*x60; void*x61; out void*x62; void*x63; void*x64; void*x65; void*x66; in void*x67; short x68; void*x69; int x70; void*x71; void*x72; void*x73; in void*x74; void*x75; void*x76; double x77; void*x78; void*x79; void*x80; long x81; void*x82; out void*x83; in void*x84; void*x85; void*x86; void*x87; void*x88; long x89; void*x90; out void*x91; in void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; short x101; void*x102; void*x103; void*x104; double x105; void*x106; SEL x107; void*x108; SEL x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; SEL x117; void*x118; SEL x119; void*x120; void*x121; void*x122; long x123; void*x124; long x125; void*x126; out void*x127; BOOL x128; void*x129; void*x130; void*x131; void*x132; void*x133; out void*x134; const void*x135; void*x136; void*x137; void*x138; void*x139; in void*x140; short x141; void*x142; int x143; void*x144; void*x145; void*x146; in void*x147; void*x148; void*x149; double x150; void*x151; void*x152; void*x153; long x154; void*x155; out void*x156; in void*x157; void*x158; void*x159; void*x160; void*x161; long x162; void*x163; out void*x164; in void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; struct x176; void*x177; void*x178; void*x179; short x180; void*x181; void*x182; void*x183; const void*x184; void*x185; void*x186; BOOL x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; in void*x195; int x196; void*x197; long long x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; const void*x210; void*x211; void*x212; short x213; void*x214; void*x215; void*x216; double x217; void*x218; SEL x219; void*x220; SEL x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; SEL x229; void*x230; SEL x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; short x241; void*x242; void*x243; void*x244; void*x245; void*x246; in void*x247; out void*x248; double x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; in void*x257; short x258; void*x259; int x260; void*x261; void*x262; void*x263; in void*x264; void*x265; void*x266; double x267; void*x268; void*x269; void*x270; long x271; void*x272; out void*x273; in void*x274; void*x275; void*x276; void*x277; void*x278; long x279; void*x280; out void*x281; in void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void x289; void*x290; out void*x291; int x292; void*x293; double x294; void*x295; void*x296; void*x297; char *x298; void*x299; void*x300; void*x301; void*x302; void*x303; char *x304; void*x305; void* x306[ /* ? */ ]; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; short x314; void*x315; void*x316; void*x317; double x318; void*x319; SEL x320; void*x321; SEL x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; SEL x330; void*x331; SEL x332; void*x333; void*x334; void*x335; void*x336; void*x337; unsigned int x338/* : ? */; void*x339; void*x340; void*x341; BOOL x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; long x352; void*x353; int x354; void*x355; short x356; void*x357; void*x358; void*x359; void*x360; void*x361; double x362; void*x363; void*x364; void*x365; void*x366; void*x367; long x368; void*x369; long x370; void*x371; void*x372; void*x373; void*x374; struct  int (**x1)(); char *x2; unsigned char x3; struct RenderQueue { {} x375; void*x376; char *x377; void*x378; void*x379; void*x380; void*x381; short x382; void*x383; const void*x384; BOOL x385; void*x386; void*x387; unsigned char x388; long x389; void*x390; void*x391; const unsigned int x392; void*x393; void*x394; void*x395; void*x396; struct  {} x397; void*x398; char *x399; void*x400; void*x401; void*x402; void*x403; short x404; void*x405; const void*x406; BOOL x407; void*x408; void*x409; void x410; void*x411; BOOL x412; void*x413; out const void*x414; void*x415; void*x416; long x417; SEL x418; SEL x419; void*x420; void*x421; in double x422; void*x423; const unsigned int x424; void*x425; void*x426; void*x427; void*x428; char *x429; void*x430; void*x431; short x432; void*x433; double x434; SEL x435; SEL x436; void*x437; void*x438; void*x439; SEL x440; SEL x441; void*x442; long x443; long x444; out BOOL x445; void*x446; void*x447; out const void*x448; void*x449; void*x450; long x451; SEL x452; SEL x453; void*x454; void*x455; in double x456; void*x457; const unsigned int x458; void*x459; void*x460; void*x461; void*x462; char *x463; void*x464; void*x465; void*x466; void*x467; struct  struct RenderItem { {} x468; void*x469; char *x470; char *x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; short x481; void*x482; const void*x483; BOOL x484; void*x485; void*x486; void*x487; void*x488; in double x489; void*x490; const unsigned int x491; void*x492; void*x493; void*x494; void*x495; struct  {} x496; void*x497; char *x498; char *x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; short x509; void*x510; const void*x511; BOOL x512; void*x513; void*x514; void*x515; void*x516; BOOL x517; out void*x518; void*x519; const void*x520; short x521; short x522; void*x523; double x524; void*x525; void*x526; void*x527; int x528; const void*x529; void*x530; void*x531; long x532; SEL x533; SEL x534; void*x535; void*x536; in double x537; void*x538; const unsigned int x539; void*x540; void*x541; void*x542; void*x543; char *x544; char *x545; void*x546; void*x547; short x548; void*x549; double x550; SEL x551; SEL x552; void*x553; void*x554; void*x555; SEL x556; SEL x557; void*x558; long x559; long x560; out BOOL x561; void*x562; void*x563; out const void*x564; void*x565; void*x566; long x567; SEL x568; SEL x569; void*x570; void*x571; in double x572; void*x573; const unsigned int x574; void*x575; void*x576; void*x577; void*x578; char *x579; void*x580; void*x581; void*x582; void*x583; struct  struct RenderItem { {} x584; void*x585; char *x586; char *x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; inout void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; double x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; int x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; short x402; void*x403; void*x404; void*x405; const void*x406; void*x407; void*x408; BOOL x409; void*x410; void*x411; void*x412; void*x413; void*x414; void x415; void*x416; void*x417; void*x418; BOOL x419; void*x420; void*x421; void*x422; out void*x423; const void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; long x431; void*x432; SEL x433; void*x434; SEL x435; void*x436; bool x437; void*x438; void*x439; void*x440; float x441; void*x442; float x443; void*x444; void*x445; void*x446; const void*x447; unsigned long x448; void*x449; out void*x450; void*x451; void*x452; double x453; void*x454; unsigned int x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; short x467; void*x468; void*x469; void*x470; double x471; void*x472; SEL x473; void*x474; SEL x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; SEL x483; void*x484; SEL x485; void*x486; void*x487; void*x488; long x489; void*x490; long x491; void*x492; out void*x493; BOOL x494; void*x495; void*x496; void*x497; void*x498; void*x499; out void*x500; const void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; long x508; void*x509; SEL x510; void*x511; SEL x512; void*x513; bool x514; void*x515; void*x516; void*x517; float x518; void*x519; float x520; void*x521; void*x522; void*x523; const void*x524; unsigned long x525; void*x526; out void*x527; void*x528; void*x529; double x530; void*x531; unsigned int x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; struct x548; void*x549; void*x550; void*x551; short x552; void*x553; void*x554; void*x555; const void*x556; void*x557; void*x558; BOOL x559; void*x560; void*x561; void*x562; void*x563; void*x564; bool x565; void*x566; void*x567; void*x568; float x569; void*x570; float x571; void*x572; void*x573; void*x574; const void*x575; unsigned long x576; void*x577; out void*x578; void*x579; void*x580; double x581; void*x582; unsigned int x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; struct x593; void*x594; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void x31; void*x32; out void*x33; int x34; void*x35; double x36; void*x37; char *x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void x52; void*x53; out void*x54; int x55; void*x56; double x57; void*x58; char *x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void x73; void*x74; out void*x75; int x76; void*x77; double x78; void*x79; char *x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void x94; void*x95; out void*x96; int x97; void*x98; double x99; void*x100; char *x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void x115; void*x116; out void*x117; int x118; void*x119; double x120; void*x121; char *x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void x136; void*x137; out void*x138; int x139; void*x140; double x141; void*x142; char *x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void x157; void*x158; out void*x159; int x160; void*x161; double x162; void*x163; char *x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void x178; void*x179; out void*x180; int x181; void*x182; double x183; void*x184; char *x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; int x199; void*x200; in void*x201; out void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void x209; void*x210; out void*x211; int x212; void*x213; double x214; void*x215; char *x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void x230; void*x231; out void*x232; int x233; void*x234; double x235; void*x236; char *x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void x251; void*x252; out void*x253; int x254; void*x255; double x256; void*x257; char *x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void x272; void*x273; out void*x274; int x275; void*x276; double x277; void*x278; char *x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void x293; void*x294; out void*x295; int x296; void*x297; double x298; void*x299; char *x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void x314; void*x315; out void*x316; int x317; void*x318; double x319; void*x320; char *x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void x335; void*x336; out void*x337; int x338; void*x339; double x340; void*x341; char *x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void x356; void*x357; out void*x358; int x359; void*x360; double x361; void*x362; char *x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void x377; void*x378; out void*x379; int x380; void*x381; double x382; void*x383; short x384; void*x385; void*x386; void*x387; const void*x388; void*x389; void*x390; BOOL x391; void*x392; void*x393; void*x394; void*x395; void*x396; double x397; void*x398; void*x399; void*x400; long long x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; out void*x413; SEL x414; void*x415; SEL x416; void*x417; float x418; void*x419; void*x420; void*x421; short x422; void*x423; void*x424; void*x425; void*x426; void*x427; short x428; void*x429; void*x430; void*x431; void*x432; void*x433; const void*x434; void*x435; void*x436; double x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; const void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; long x452; void*x453; SEL x454; void*x455; SEL x456; void*x457; unsigned long long x458; void*x459; void*x460; void*x461; void*x462; void*x463; const void*x464; void*x465; void*x466; unsigned int x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; short x481; void*x482; void*x483; void*x484; double x485; void*x486; SEL x487; void*x488; SEL x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; SEL x497; void*x498; SEL x499; void*x500; void*x501; void*x502; long x503; void*x504; long x505; void*x506; out void*x507; BOOL x508; void*x509; void*x510; void*x511; void*x512; void*x513; out void*x514; const void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; out void*x522; SEL x523; void*x524; SEL x525; void*x526; float x527; void*x528; void*x529; void*x530; short x531; void*x532; void*x533; void*x534; void*x535; void*x536; short x537; void*x538; void*x539; void*x540; void*x541; void*x542; const void*x543; void*x544; void*x545; double x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; const void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; long x561; void*x562; SEL x563; void*x564; SEL x565; void*x566; unsigned long long x567; void*x568; void*x569; void*x570; void*x571; void*x572; const void*x573; void*x574; void*x575; unsigned int x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; struct x596; void*x597; void*x598; void*x599; short x600; void*x601; void*x602; void*x603; const void*x604; void*x605; void*x606; BOOL x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; short x617; void*x618; void*x619; void*x620; long x621; void*x622; int x623; void*x624; void*x625; void*x626; void*x627; void*x628; unsigned int x629/* : ? */; void*x630; void*x631; void*x632; float x633; void*x634; float x635; void*x636; void*x637; void*x638; const void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; out void*x646; SEL x647; void*x648; SEL x649; void*x650; float x651; void*x652; void*x653; void*x654; short x655; void*x656; void*x657; void*x658; void*x659; void*x660; short x661; void*x662; void*x663; void*x664; void*x665; void*x666; const void*x667; void*x668; void*x669; double x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; const void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; long x685; void*x686; SEL x687; void*x688; SEL x689; void*x690; unsigned long long x691; void*x692; void*x693; void*x694; void*x695; void*x696; const void*x697; void*x698; void*x699; unsigned int x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; char *x712; void*x713; void*x714; void*x715; void*x716; void*x717; short x718; void*x719; void*x720; void*x721; double x722; void*x723; SEL x724; void*x725; SEL x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; SEL x734; void*x735; SEL x736; void*x737; void*x738; void*x739; long x740; void*x741; long x742; void*x743; out void*x744; BOOL x745; void*x746; void*x747; void*x748; void*x749; void*x750; out void*x751; const void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; out void*x759; SEL x760; void*x761; SEL x762; void*x763; float x764; void*x765; void*x766; void*x767; short x768; void*x769; void*x770; void*x771; void*x772; void*x773; short x774; void*x775; void*x776; void*x777; void*x778; void*x779; const void*x780; void*x781; void*x782; double x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; const void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; long x798; void*x799; SEL x800; void*x801; SEL x802; void*x803; unsigned long long x804; void*x805; void*x806; void*x807; void*x808; void*x809; const void*x810; void*x811; void*x812; unsigned int x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; char *x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; struct x835; void*x836; void*x837; void*x838; short x839; void*x840; void*x841; void*x842; const void*x843; void*x844; void*x845; BOOL x846; void*x847; void*x848; void*x849; void*x850; void*x851; float x852; void*x853; void*x854; void*x855; short x856; void*x857; void*x858; void*x859; void*x860; void*x861; short x862; void*x863; void*x864; void*x865; void*x866; void*x867; const void*x868; void*x869; void*x870; double x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; const void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; long x886; void*x887; SEL x888; void*x889; SEL x890; void*x891; unsigned long long x892; void*x893; void*x894; void*x895; void*x896; void*x897; const void*x898; void*x899; void*x900; unsigned int x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; struct x913; void*x914; }*)arg5 tiles:(id)arg6;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void x19; out int x20; double x21; char *x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void x29; out int x30; double x31; char *x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void x39; out int x40; double x41; char *x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void x49; out int x50; double x51; char *x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void x59; out int x60; double x61; char *x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; int x69; in out void*x70; void*x71; void*x72; void x73; out int x74; double x75; char *x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void x83; out int x84; double x85; char *x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void x93; out int x94; double x95; char *x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void x103; out int x104; double x105; char *x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void x113; out int x114; double x115; char *x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void x123; out int x124; double x125; char *x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void x133; out int x134; double x135; char *x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void x143; out int x144; double x145; char *x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void x153; out int x154; double x155; char *x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void x163; out int x164; double x165; char *x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void x173; out int x174; double x175; char *x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void x183; out int x184; double x185; char *x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void x193; out int x194; double x195; char *x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void x203; out int x204; double x205; char *x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void x213; out int x214; double x215; char *x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void x223; out int x224; double x225; char *x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void x233; out int x234; double x235; char *x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void x243; out int x244; double x245; char *x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void x253; out int x254; double x255; char *x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void x263; out int x264; double x265; char *x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void x273; out int x274; double x275; char *x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void x283; out int x284; double x285; char *x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void x293; out int x294; double x295; char *x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void x303; out int x304; double x305; char *x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void x313; out int x314; double x315; char *x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void x323; out int x324; double x325; char *x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void x333; out int x334; double x335; char *x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void x343; out int x344; double x345; char *x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void x353; out int x354; double x355; char *x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void x363; out int x364; double x365; void*x366; void*x367; void*x368; void*x369; short x370; void*x371; void*x372; void*x373; long x374; void*x375; int x376; void*x377; void*x378; void*x379; void*x380; void*x381; unsigned int x382/* : ? */; void*x383; void*x384; void*x385; float x386; void*x387; float x388; void*x389; void*x390; void*x391; const void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; long x399; void*x400; SEL x401; void*x402; SEL x403; void*x404; void*x405; void*x406; void*x407; void*x408; in void*x409; double x410; void*x411; int x412; void*x413; in void*x414; void*x415; void*x416; unsigned long long x417; void*x418; void*x419; void*x420; void*x421; void*x422; const void*x423; void*x424; void*x425; void*x426; void*x427; char *x428; void*x429; void*x430; void*x431; void*x432; void*x433; short x434; void*x435; void*x436; void*x437; double x438; void*x439; SEL x440; void*x441; SEL x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; SEL x450; void*x451; SEL x452; void*x453; void*x454; void*x455; long x456; void*x457; long x458; void*x459; out void*x460; BOOL x461; void*x462; void*x463; void*x464; void*x465; void*x466; out void*x467; const void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; long x475; void*x476; SEL x477; void*x478; SEL x479; void*x480; void*x481; void*x482; void*x483; void*x484; in void*x485; double x486; void*x487; int x488; void*x489; in void*x490; void*x491; void*x492; unsigned long long x493; void*x494; void*x495; void*x496; void*x497; void*x498; const void*x499; void*x500; void*x501; void*x502; void*x503; char *x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; struct x514; void*x515; void*x516; void*x517; short x518; void*x519; void*x520; void*x521; const void*x522; void*x523; void*x524; BOOL x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; in void*x535; double x536; void*x537; int x538; void*x539; in void*x540; void*x541; void*x542; unsigned long long x543; void*x544; void*x545; void*x546; void*x547; void*x548; const void*x549; void*x550; void*x551; void*x552; void*x553; struct x554; void*x555; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void x19; void*x20; out void*x21; int x22; void*x23; double x24; void*x25; char *x26; void*x27; void*x28; void*x29; void*x30; void*x31; char *x32; void*x33; void*x34; void*x35; void*x36; void*x37; void x38; void*x39; out void*x40; int x41; void*x42; double x43; void*x44; char *x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void x57; void*x58; out void*x59; int x60; void*x61; double x62; void*x63; char *x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void x76; void*x77; out void*x78; int x79; void*x80; double x81; void*x82; char *x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void x95; void*x96; out void*x97; int x98; void*x99; double x100; void*x101; char *x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void x114; void*x115; out void*x116; int x117; void*x118; double x119; void*x120; char *x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void x133; void*x134; out void*x135; int x136; void*x137; double x138; void*x139; char *x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void x152; void*x153; out void*x154; int x155; void*x156; double x157; void*x158; char *x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void x171; void*x172; out void*x173; int x174; void*x175; double x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; out void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; int x197; void*x198; in void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; double x214; void*x215; out void*x216; void*x217; void*x218; unsigned int x219/* : ? */; void*x220; long x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; BOOL x237; void*x238; void*x239; void*x240; void*x241; void*x242; const void*x243; void*x244; void*x245; char *x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void x258; void*x259; out void*x260; int x261; void*x262; double x263; void*x264; char *x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void x277; void*x278; out void*x279; int x280; void*x281; double x282; void*x283; char *x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void x296; void*x297; out void*x298; int x299; void*x300; double x301; void*x302; char *x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void x315; void*x316; out void*x317; int x318; void*x319; double x320; void*x321; char *x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void x334; void*x335; out void*x336; int x337; void*x338; double x339; void*x340; char *x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void x353; void*x354; out void*x355; int x356; void*x357; double x358; void*x359; char *x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void x372; void*x373; out void*x374; int x375; void*x376; double x377; void*x378; void*x379; void*x380; void*x381; void*x382; void x383; void*x384; void*x385; void*x386; BOOL x387; void*x388; void*x389; void*x390; out void*x391; const void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; long x399; void*x400; SEL x401; void*x402; SEL x403; void*x404; bool x405; void*x406; void*x407; void*x408; float x409; void*x410; float x411; void*x412; void*x413; void*x414; const void*x415; unsigned long x416; void*x417; out void*x418; void*x419; void*x420; double x421; void*x422; unsigned int x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; short x435; void*x436; void*x437; void*x438; double x439; void*x440; SEL x441; void*x442; SEL x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; SEL x451; void*x452; SEL x453; void*x454; void*x455; void*x456; long x457; void*x458; long x459; void*x460; out void*x461; BOOL x462; void*x463; void*x464; void*x465; void*x466; void*x467; out void*x468; const void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; long x476; void*x477; SEL x478; void*x479; SEL x480; void*x481; bool x482; void*x483; void*x484; void*x485; float x486; void*x487; float x488; void*x489; void*x490; void*x491; const void*x492; unsigned long x493; void*x494; out void*x495; void*x496; void*x497; double x498; void*x499; unsigned int x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; struct x516; void*x517; void*x518; void*x519; short x520; void*x521; void*x522; void*x523; const void*x524; void*x525; void*x526; BOOL x527; void*x528; void*x529; void*x530; void*x531; void*x532; bool x533; void*x534; void*x535; void*x536; float x537; void*x538; float x539; void*x540; void*x541; void*x542; const void*x543; unsigned long x544; void*x545; out void*x546; void*x547; void*x548; double x549; void*x550; unsigned int x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; struct x561; void*x562; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; double x19; void*x20; int x21; void*x22; in void*x23; void*x24; void*x25; unsigned long long x26; void*x27; void*x28; void*x29; void*x30; void*x31; const void*x32; void*x33; void*x34; void*x35; void*x36; char *x37; void*x38; void*x39; void*x40; void*x41; void*x42; short x43; void*x44; void*x45; void*x46; double x47; void*x48; SEL x49; void*x50; SEL x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; SEL x59; void*x60; SEL x61; void*x62; void*x63; void*x64; long x65; void*x66; long x67; void*x68; out void*x69; BOOL x70; void*x71; void*x72; void*x73; void*x74; void*x75; out void*x76; const void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; long x84; void*x85; SEL x86; void*x87; SEL x88; void*x89; void*x90; void*x91; void*x92; void*x93; in void*x94; double x95; void*x96; int x97; void*x98; in void*x99; void*x100; void*x101; unsigned long long x102; void*x103; void*x104; void*x105; void*x106; void*x107; const void*x108; void*x109; void*x110; void*x111; void*x112; char *x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; struct x123; void*x124; void*x125; void*x126; short x127; void*x128; void*x129; void*x130; const void*x131; void*x132; void*x133; BOOL x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; in void*x144; double x145; void*x146; int x147; void*x148; in void*x149; void*x150; void*x151; unsigned long long x152; void*x153; void*x154; void*x155; void*x156; void*x157; const void*x158; void*x159; void*x160; void*x161; void*x162; struct x163; void*x164; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg5 tiles:(id)arg6 layer:(unsigned char)arg7;
- (id)initWithOverlay:(id)arg1;
- (void)layoutDebugUnmatchedRouteLine:(id)arg1 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; in void*x33; short x34; void*x35; int x36; void*x37; void*x38; void*x39; in void*x40; void*x41; void*x42; double x43; void*x44; void*x45; void*x46; long x47; void*x48; out void*x49; in void*x50; void*x51; void*x52; void*x53; void*x54; long x55; void*x56; out void*x57; in void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; short x65; void*x66; void*x67; void*x68; double x69; void*x70; SEL x71; void*x72; SEL x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; SEL x81; void*x82; SEL x83; void*x84; void x85; void*x86; void*x87; void*x88; BOOL x89; void*x90; void*x91; void*x92; out void*x93; const void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; bycopy void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; const void*x112; void*x113; void*x114; unsigned short x115; void*x116; void*x117; void*x118; void*x119; void*x120; long x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; int x129; void*x130; const void*x131; void*x132; void*x133; void*x134; void*x135; short x136; void*x137; void*x138; void*x139; double x140; void*x141; SEL x142; void*x143; SEL x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; SEL x152; void*x153; SEL x154; void*x155; void*x156; void*x157; long x158; void*x159; long x160; void*x161; out void*x162; BOOL x163; void*x164; void*x165; void*x166; void*x167; void*x168; out void*x169; const void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; bycopy void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; const void*x188; void*x189; void*x190; unsigned short x191; void*x192; void*x193; void*x194; void*x195; void*x196; long x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; int x205; void*x206; const void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; short x222; void*x223; void*x224; void*x225; double x226; void*x227; SEL x228; void*x229; SEL x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; SEL x238; void*x239; SEL x240; void*x241; void*x242; void*x243; void*x244; void*x245; short x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; in void*x254; short x255; void*x256; int x257; void*x258; void*x259; void*x260; in void*x261; void*x262; void*x263; double x264; void*x265; void*x266; void*x267; long x268; void*x269; out void*x270; in void*x271; void*x272; void*x273; void*x274; void*x275; long x276; void*x277; out void*x278; in void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; const void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; short x301; void*x302; void*x303; void*x304; double x305; void*x306; SEL x307; void*x308; SEL x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; SEL x317; void*x318; SEL x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; in void*x327; out void*x328; const void*x329; double x330; void*x331; void*x332; void*x333; const void*x334; void*x335; void*x336; double x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; long long x351; void*x352; void*x353; void*x354; void*x355; void*x356; long x357; void*x358; void*x359; void*x360; void*x361; void*x362; in void*x363; short x364; void*x365; int x366; void*x367; void*x368; void*x369; in void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; id x376; void*x377; unsigned long long x378; void*x379; void*x380; void*x381; void*x382; void*x383; struct  struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery { {} x384; void*x385; char *x386; char *x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; short x397; void*x398; const void*x399; BOOL x400; void*x401; void*x402; void*x403; void*x404; in double x405; int x406; in void*x407; unsigned long long x408; void*x409; void*x410; const void*x411; void*x412; struct  {} x413; void*x414; char *x415; char *x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; short x426; void*x427; const void*x428; BOOL x429; void*x430; void*x431; void*x432; void*x433; in double x434; int x435; in void*x436; unsigned long long x437; void*x438; void*x439; const void*x440; void*x441; struct  {} x442; void*x443; char *x444; char *x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; short x455; void*x456; const void*x457; BOOL x458; void*x459; void*x460; void*x461; void*x462; BOOL x463; out void*x464; void*x465; const void*x466; short x467; short x468; void*x469; double x470; void*x471; void*x472; void*x473; int x474; const void*x475; void*x476; void*x477; long x478; SEL x479; SEL x480; void*x481; void*x482; in double x483; int x484; in void*x485; unsigned long long x486; void*x487; void*x488; const void*x489; void*x490; char *x491; char *x492; void*x493; void*x494; short x495; void*x496; double x497; SEL x498; SEL x499; void*x500; void*x501; void*x502; SEL x503; SEL x504; void*x505; long x506; long x507; out BOOL x508; void*x509; void*x510; out const void*x511; void*x512; void*x513; long x514; SEL x515; SEL x516; void*x517; void*x518; in double x519; int x520; in void*x521; unsigned long long x522; void*x523; void*x524; const void*x525; void*x526; char *x527; void*x528; void*x529; void*x530; void*x531; struct  struct PendingQuery { {} x532; void*x533; char *x534; char *x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; }*)arg2;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (id)polyline;
- (void)polyline:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3;
- (void)prepareDebugLines;
- (void)prepareToDrawWithCanvas:(id)arg1;
- (id)routeOverlay;
- (BOOL)selected;
- (void)setContainerModel:(id)arg1;
- (void)setNeedsLayoutForPolyline:(id)arg1;
- (void)setRouteOverlay:(id)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setShowTraffic:(BOOL)arg1;
- (BOOL)showTraffic;
- (struct shared_ptr<gss::StyleManager> { struct StyleManager {} *x1; struct __shared_weak_count {} *x2; })styleManager;
- (void)stylesheetDidChange;
- (void)updateRouteLineStencilValue:(int)arg1;

@end
