/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKFootprint : NSObject {
    struct { 
        double x0; 
        double x1; 
        double y0; 
        double y1; 
    } _boundingRect;
    double _centerDepth;
    struct VKFootprintConvexHull_struct { 
        int edgeCount; 
        struct VKPoint { 
            double x; 
            double y; 
            double z; 
        } edgeOrigin[6]; 
        struct Matrix<double, 3, 1> { 
            double _e[3]; 
        } edgeNormal[6]; 
    } _convexHull;
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    } _cornerGroundPoints;
    int _cornerGroundPointsCount;
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    } _furthestGroundPoint;
    double _maxDepth;
    double _maxDistance;
    double _minDepth;
    double _minDistance;
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    } _nearestGroundPoint;
}

@property (nonatomic, readonly) struct { double x1; double x2; double x3; double x4; } boundingRect;
@property (nonatomic, readonly) double centerDepth;
@property (nonatomic, readonly) struct VKFootprintConvexHull_struct { int x1; struct VKPoint { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2[6]; /* Warning: unhandled struct encoding: '{Matrix<double' */ struct x3[6]; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; long x22; void*x23; void*x24; void*x25; long x26; void*x27; void*x28; void*x29; long x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; bycopy unsigned char x53; void*x54; void*x55; void*x56; void*x57; double x58; void*x59; const void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; unsigned short x84; void*x85; short x86; void*x87; void*x88; void*x89; void*x90; unsigned long x91; int x92; unsigned int x93/* : ? */; const void*x94; const void*x95; void*x96; void*x97; const int x98; void x99; void*x100; void*x101; void*x102; void*x103; const void*x104; void*x105; void*x106; void*x107; out const void*x108; short x109; void*x110; bycopy float x111; float x112; int x113; BOOL x114; void*x115; unsigned int x116; void*x117; void*x118; out const void*x119; void*x120; float x121; const void*x122; void*x123; void*x124; void*x125; out const void*x126; void*x127; bycopy float x128; float x129; int x130; BOOL x131; void*x132; unsigned int x133; void*x134; void*x135; out const void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; float x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; unsigned int x183/* : ? */; int x184; long long x185; void*x186; int x187; void*x188; void*x189; void*x190; const void*x191; in short x192; void*x193; BOOL x194; void*x195; int x196; out in void*x197; in void*x198; const void*x199; unsigned long x200; int x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void* x213[ /* ? */ ]; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; struct x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; unsigned int x247; unsigned char x248; unsigned short x249; long doublex250; void*x251; void*x252; void*x253; oneway void*x254; long x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; unsigned short x279; void*x280; short x281; void*x282; void*x283; void*x284; void*x285; unsigned long x286; int x287; unsigned int x288/* : ? */; const void*x289; const void*x290; void*x291; void*x292; const int x293; void x294; void*x295; void*x296; void*x297; void*x298; const void*x299; void*x300; void*x301; void*x302; out const void*x303; short x304; void*x305; int x306; unsigned char x307; void*x308; long x309; void*x310; in double x311; void*x312; const void*x313; float x314; const void*x315; void*x316; void*x317; void*x318; out const void*x319; void*x320; int x321; unsigned char x322; void*x323; long x324; void*x325; in double x326; void*x327; const void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; long x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; struct x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; bycopy void*x399; void*x400; void*x401; void*x402; void*x403; double x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; out const void*x411; unsigned char x412; void*x413; BOOL x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; long x461; void*x462; void*x463; void*x464; long x465; void*x466; void*x467; void*x468; long x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; unsigned short x493; void*x494; void*x495; unsigned short x496; void*x497; out const void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; short x504; void*x505; const void*x506; const void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; unsigned char x519; void*x520; unsigned short x521; void*x522; short x523; void*x524; void*x525; void*x526; void*x527; unsigned long x528; int x529; unsigned int x530/* : ? */; const void*x531; const void*x532; void*x533; void*x534; const int x535; void x536; void*x537; void*x538; void*x539; void*x540; const void*x541; void*x542; void*x543; void*x544; out const void*x545; short x546; void*x547; int x548; void*x549; out const void*x550; unsigned int x551; void*x552; void*x553; out const void*x554; void*x555; float x556; const void*x557; void*x558; void*x559; void*x560; out const void*x561; void*x562; int x563; void*x564; out const void*x565; unsigned int x566; void*x567; void*x568; out const void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; unsigned short x616; void*x617; short x618; void*x619; void*x620; void*x621; void*x622; unsigned long x623; int x624; unsigned int x625/* : ? */; const void*x626; const void*x627; void*x628; void*x629; const int x630; void x631; void*x632; void*x633; void*x634; void*x635; const void*x636; void*x637; void*x638; void*x639; out const void*x640; short x641; void*x642; unsigned short x643; void*x644; unsigned int x645/* : ? */; void*x646; void*x647; BOOL x648; void*x649; short x650; void*x651; float x652; const void*x653; void*x654; void*x655; void*x656; out const void*x657; void*x658; unsigned short x659; void*x660; unsigned int x661/* : ? */; void*x662; void*x663; BOOL x664; void*x665; short x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; const void*x685; void*x686; void*x687; void*x688; BOOL x689; void*x690; SEL x691; union { short x_692_1_1; void*x_692_1_2; const void*x_692_1_3; BOOL x_692_1_4; void*x_692_1_5; void*x_692_1_6; unsigned char x_692_1_7; void*x_692_1_8; void*x_692_1_9; void*x_692_1_10; BOOL x_692_1_11; void*x_692_1_12; void*x_692_1_13; struct  struct CGPoint { float x_1_1_1; float x_1_1_2;  {} x_692_1_14; void*x_692_1_15; void*x_692_1_16; void*x_692_1_17; void*x_692_1_18; void*x_692_1_19; short x_692_1_20; void*x_692_1_21; const void*x_692_1_22; BOOL x_692_1_23; void*x_692_1_24; void*x_692_1_25; unsigned char x_692_1_26; void*x_692_1_27; unsigned short x_692_1_28; int x_692_1_29; void*x_692_1_30; void*x_692_1_31; void*x_692_1_32; struct  float x_2_1_1; float x_2_1_2;  {} x_692_1_33; void*x_692_1_34; void*x_692_1_35; void*x_692_1_36; void*x_692_1_37; void*x_692_1_38; void*x_692_1_39; } x692; void*x693; const void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; long doublex711; inout void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; double x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; bool x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; id x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; union x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; } convexHull; /* unknown property attribute:  1>=[3d]}]} */
@property (nonatomic, readonly) struct VKPoint { double x1; double x2; double x3; }*cornerGroundPoints;
@property (nonatomic, readonly) int cornerGroundPointsCount;
@property (nonatomic, readonly) struct VKPoint { double x1; double x2; double x3; } furthestGroundPoint;
@property (nonatomic, readonly) double maxDepth;
@property (nonatomic, readonly) double minDepth;
@property (nonatomic, readonly) struct VKPoint { double x1; double x2; double x3; } nearestGroundPoint;

- (id).cxx_construct;
- (struct { double x1; double x2; double x3; double x4; })_expandedBoundingRect;
- (id /* block */)annotationCoordinateTest;
- (id /* block */)annotationRectTest;
- (struct { double x1; double x2; double x3; double x4; })boundingRect;
- (double)centerDepth;
- (void)computeFromCamera:(id)arg1;
- (BOOL)containsGroundPoint:(struct VKPoint { double x1; double x2; double x3; }*)arg1;
- (struct VKFootprintConvexHull_struct { int x1; struct VKPoint { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2[6]; struct Matrix<double, 3, 1> { double x_3_1_1[3]; } x3[6]; })convexHull;
- (struct VKPoint { double x1; double x2; double x3; }*)cornerGroundPoints;
- (int)cornerGroundPointsCount;
- (struct VKPoint { double x1; double x2; double x3; })furthestGroundPoint;
- (double)maxDepth;
- (double)minDepth;
- (struct VKPoint { double x1; double x2; double x3; })nearestGroundPoint;
- (BOOL)rejectsRect:(const struct { double x1; double x2; double x3; double x4; }*)arg1;

@end
