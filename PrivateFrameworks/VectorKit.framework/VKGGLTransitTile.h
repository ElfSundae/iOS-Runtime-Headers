/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGGLTransitTile : VKVectorTile {
    float _alphaScale;
    VKAnimation *_animation;
    bool _areNormalsSynchedForTileEdge;
    struct vector<std::__1::shared_ptr<vk::TransitConnectedNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitConnectedNode> > > { 
        struct shared_ptr<vk::TransitConnectedNode> {} *__begin_; 
        struct shared_ptr<vk::TransitConnectedNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::TransitConnectedNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitConnectedNode> > > { 
            struct shared_ptr<vk::TransitConnectedNode> {} *__first_; 
        } __end_cap_; 
    } _connectedNodes;
    struct shared_ptr<md::DataOverrideManager> { 
        struct DataOverrideManager {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _dataOverrideManager;
    bool _didLineDataChange;
    bool _didNeighboringTilesChange;
    float _displayConnectionInflation;
    struct unique_ptr<ggl::RibbonLayer<ggl::RoadRibbonDescriptor>, std::__1::default_delete<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> > > { 
        struct __compressed_pair<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> *, std::__1::default_delete<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> > > { 
            struct RibbonLayer<ggl::RoadRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _displayConnectionLayer;
    struct list<vk::TransitDisplayConnection, std::__1::allocator<vk::TransitDisplayConnection> > { 
        struct __list_node_base<vk::TransitDisplayConnection, void *> { 
            struct __list_node<vk::TransitDisplayConnection, void *> {} *__prev_; 
            struct __list_node<vk::TransitDisplayConnection, void *> {} *__next_; 
        } __end_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<vk::TransitDisplayConnection, void *> > > { 
            unsigned long __first_; 
        } __size_alloc_; 
    } _displayConnections;
    struct shared_ptr<vk::TransitInterTileMediator> { 
        struct TransitInterTileMediator {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _interTileMediator;
    bool _isNeighboringTilePresent;
    struct unique_ptr<vk::TransitJunctionManager, std::__1::default_delete<vk::TransitJunctionManager> > { 
        struct __compressed_pair<vk::TransitJunctionManager *, std::__1::default_delete<vk::TransitJunctionManager> > { 
            struct TransitJunctionManager {} *__first_; 
        } __ptr_; 
    } _junctionManager;
    struct LabelExternalObjectsModerator { struct fast_shared_ptr<vk::unsynchronized_weak_interface_ptr<vk::LabelExternalObjectsModerator> > { struct _fast_shared_ptr_control {} *x_1_1_1; } x1; struct LabelExternalIconRenderer {} *x2; bool x3; struct mutex { struct _opaque_pthread_mutex_t { long x_1_2_1; BOOL x_1_2_2[40]; } x_4_1_1; } x4; int x5; struct unordered_map<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; struct unordered_map<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_7_1_1; } x7; struct vector<unsigned long long, std::__1::allocator<unsigned long long> > { unsigned long long *x_8_1_1; unsigned long long *x_8_1_2; struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> > { unsigned long long *x_3_2_1; } x_8_1_3; } x8; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_3_1; } x_1_2_4; } x_9_1_1; } x9; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_3_1; } x_1_2_4; } x_10_1_1; } x10; struct unordered_map<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink>, std::__1::hash<const GEOTransitLink *>, std::__1::equal_to<const GEOTransitLink *>, std::__1::allocator<std::__1::pair<const GEOTransitLink *const, std::__1::weak_ptr<vk::LabelExternalTransitLink> > > > { struct __hash_table<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::__unordered_map_hasher<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::hash<const GEOTransitLink *>, true>, std::__1::__unordered_map_equal<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::equal_to<const GEOTransitLink *>, true>, std::__1::allocator<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::hash<const GEOTransitLink *>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::equal_to<const GEOTransitLink *>, true> > { float x_4_3_1; } x_1_2_4; } x_11_1_1; } x11; struct unordered_map<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_12_1_1; } x12; struct unordered_map<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, std::__1::allocator<std::__1::pair<const vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long> > > { struct __hash_table<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, std::__1::__unordered_map_hasher<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, true>, std::__1::__unordered_map_equal<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, true>, std::__1::allocator<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> { struct __hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, true> > { float x_4_3_1; } x_1_2_4; } x_13_1_1; } x13; struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_14_1_1; } x14; struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, int> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_15_1_1; } x15; } *_labelExternalObjectsModerator;
    struct map<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > > { 
        struct __tree<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > > { 
            struct __tree_node<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::less<unsigned int>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    } _lineBatches;
    struct unique_ptr<ggl::TransitLineRibbon::Shader::Setup, std::__1::default_delete<ggl::TransitLineRibbon::Shader::Setup> > { 
        struct __compressed_pair<ggl::TransitLineRibbon::Shader::Setup *, std::__1::default_delete<ggl::TransitLineRibbon::Shader::Setup> > { 
            struct Setup {} *__first_; 
        } __ptr_; 
    } _lineFillShaderSetup;
    struct unique_ptr<md::StyleTexture<vk::TransitLineSegment::StylePixel>, std::__1::default_delete<md::StyleTexture<vk::TransitLineSegment::StylePixel> > > { 
        struct __compressed_pair<md::StyleTexture<vk::TransitLineSegment::StylePixel> *, std::__1::default_delete<md::StyleTexture<vk::TransitLineSegment::StylePixel> > > { 
            struct StyleTexture<vk::TransitLineSegment::StylePixel> {} *__first_; 
        } __ptr_; 
    } _lineFillStyleTexture;
    struct unordered_map<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > > > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > > > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, std::__1::hash<unsigned long long>, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<vk::TransitNode *, std::__1::hash<vk::TransitNode *>, std::__1::equal_to<vk::TransitNode *>, std::__1::allocator<vk::TransitNode *> > >, std::__1::equal_to<unsigned long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _lineIDToAssociatedNodesMap;
    float _lineInflation;
    struct unique_ptr<ggl::RibbonLayer<ggl::TransitRibbonDescriptor>, std::__1::default_delete<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> > > { 
        struct __compressed_pair<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> *, std::__1::default_delete<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> > > { 
            struct RibbonLayer<ggl::TransitRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    } _lineLayer;
    struct unique_ptr<ggl::TransitLineRibbon::Shader::Setup, std::__1::default_delete<ggl::TransitLineRibbon::Shader::Setup> > { 
        struct __compressed_pair<ggl::TransitLineRibbon::Shader::Setup *, std::__1::default_delete<ggl::TransitLineRibbon::Shader::Setup> > { 
            struct Setup {} *__first_; 
        } __ptr_; 
    } _lineStrokeShaderSetup;
    struct unique_ptr<md::StyleTexture<vk::TransitLineSegment::StylePixel>, std::__1::default_delete<md::StyleTexture<vk::TransitLineSegment::StylePixel> > > { 
        struct __compressed_pair<md::StyleTexture<vk::TransitLineSegment::StylePixel> *, std::__1::default_delete<md::StyleTexture<vk::TransitLineSegment::StylePixel> > > { 
            struct StyleTexture<vk::TransitLineSegment::StylePixel> {} *__first_; 
        } __ptr_; 
    } _lineStrokeStyleTexture;
    struct vector<vk::TransitLine, std::__1::allocator<vk::TransitLine> > { 
        struct TransitLine {} *__begin_; 
        struct TransitLine {} *__end_; 
        struct __compressed_pair<vk::TransitLine *, std::__1::allocator<vk::TransitLine> > { 
            struct TransitLine {} *__first_; 
        } __end_cap_; 
    } _lines;
    struct vector<vk::TransitLink, std::__1::allocator<vk::TransitLink> > { 
        struct TransitLink {} *__begin_; 
        struct TransitLink {} *__end_; 
        struct __compressed_pair<vk::TransitLink *, std::__1::allocator<vk::TransitLink> > { 
            struct TransitLink {} *__first_; 
        } __end_cap_; 
    } _links;
    struct vector<std::__1::shared_ptr<vk::TransitNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitNode> > > { 
        struct shared_ptr<vk::TransitNode> {} *__begin_; 
        struct shared_ptr<vk::TransitNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::TransitNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitNode> > > { 
            struct shared_ptr<vk::TransitNode> {} *__first_; 
        } __end_cap_; 
    } _nodes;
    struct vector<std::__1::shared_ptr<vk::TransitConnectedNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitConnectedNode> > > { 
        struct shared_ptr<vk::TransitConnectedNode> {} *__begin_; 
        struct shared_ptr<vk::TransitConnectedNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::TransitConnectedNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitConnectedNode> > > { 
            struct shared_ptr<vk::TransitConnectedNode> {} *__first_; 
        } __end_cap_; 
    } _nodesWithConnectivity;
    struct vector<std::__1::shared_ptr<vk::TransitOrphanNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitOrphanNode> > > { 
        struct shared_ptr<vk::TransitOrphanNode> {} *__begin_; 
        struct shared_ptr<vk::TransitOrphanNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::TransitOrphanNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitOrphanNode> > > { 
            struct shared_ptr<vk::TransitOrphanNode> {} *__first_; 
        } __end_cap_; 
    } _orphanNodes;
    struct vector<std::__1::shared_ptr<vk::TransitParentNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitParentNode> > > { 
        struct shared_ptr<vk::TransitParentNode> {} *__begin_; 
        struct shared_ptr<vk::TransitParentNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::TransitParentNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitParentNode> > > { 
            struct shared_ptr<vk::TransitParentNode> {} *__first_; 
        } __end_cap_; 
    } _parentNodes;
    bool _shouldUpdateMergedLinesForNodes;
    double _worldUnitsPerMeter;
}

@property (nonatomic, retain) VKAnimation *animation;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{RibbonLayer<ggl::RoadRibbonDescriptor>=^^?{vector<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *' */ struct *displayConnectionLayer; /* unknown property attribute:  std::__1::allocator<ggl::Ribbon::BaseMesh *> >=^^{BaseMesh}}}[4^{RenderState}]} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{list<vk::TransitDisplayConnection' */ struct *displayConnections; /* unknown property attribute:  void *> > >=L}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Setup=^^?{vector<ggl::ConstantDataElement' */ struct *lineFillShaderSetup; /* unknown property attribute:  std::__1::allocator<ggl::TextureBase *> >=^^{TextureBase}}}{shared_ptr<ggl::Shader>=^{Shader}^{__shared_weak_count}}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{RibbonLayer<ggl::TransitRibbonDescriptor>=^^?{vector<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *' */ struct *lineLayer; /* unknown property attribute:  std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> >=^^{BaseMesh}}}[2^{RenderState}]} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Setup=^^?{vector<ggl::ConstantDataElement' */ struct *lineStrokeShaderSetup; /* unknown property attribute:  std::__1::allocator<ggl::TextureBase *> >=^^{TextureBase}}}{shared_ptr<ggl::Shader>=^{Shader}^{__shared_weak_count}}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{vector<vk::TransitLink' */ struct *links; /* unknown property attribute:  std::__1::allocator<vk::TransitLink> >=^{TransitLink}}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<vk::TransitNode>' */ struct *nodes; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<vk::TransitNode> > >=^{shared_ptr<vk::TransitNode>}}} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_createDisplayConnectionsWithLoader:(struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl {} *x_1_2_1; } x_1_1_1; } x1; }*)arg1;
- (void)_createLinesWithLoader:(struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl {} *x_1_2_1; } x_1_1_1; } x1; }*)arg1;
- (void)_createNodes;
- (void)_prepareLines;
- (float)_tilePerPoint:(id)arg1;
- (void)addTransitLinesAtGroundPoint:(const struct VKPoint { double x1; double x2; double x3; }*)arg1 toArray:(struct vector<std::__1::pair<TransitLineWithLink, float>, std::__1::allocator<std::__1::pair<TransitLineWithLink, float> > > { struct pair<TransitLineWithLink, float> {} *x1; struct pair<TransitLineWithLink, float> {} *x2; struct __compressed_pair<std::__1::pair<TransitLineWithLink, float> *, std::__1::allocator<std::__1::pair<TransitLineWithLink, float> > > { struct pair<TransitLineWithLink, float> {} *x_3_1_1; } x3; }*)arg2;
- (void)addTransitLinesInRect:(const struct { double x1; double x2; double x3; double x4; }*)arg1 toSet:(struct unordered_set<TransitLineWithLink, TransitLineWithLinkHash, std::__1::equal_to<TransitLineWithLink>, std::__1::allocator<TransitLineWithLink> > { struct __hash_table<TransitLineWithLink, TransitLineWithLinkHash, std::__1::equal_to<TransitLineWithLink>, std::__1::allocator<TransitLineWithLink> > { struct unique_ptr<std::__1::__hash_node<TransitLineWithLink, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<TransitLineWithLink, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > > { struct __hash_node<TransitLineWithLink, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TransitLineWithLink, void *> *>, std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> > > { struct __hash_node_base<std::__1::__hash_node<TransitLineWithLink, void *> *> { struct __hash_node<TransitLineWithLink, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, TransitLineWithLinkHash> { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<TransitLineWithLink> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg2;
- (id)animation;
- (void)appendLinesAttachedToNodes:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 toLines:(struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg2;
- (void)appendNodesAttachedToLines:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 toNodes:(struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg2;
- (void)appendNodesRelatedToNodes:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1 toNodes:(struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg2;
- (bool)containsLinesInSet:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1;
- (void)createGroupsWithDevice:(struct Device { int (**x1)(); int x2; }*)arg1;
- (void)dealloc;
- (struct RibbonLayer<ggl::RoadRibbonDescriptor> { int (**x1)(); struct vector<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *, std::__1::allocator<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *> > { struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_2_1_1; struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_2_1_2; struct __compressed_pair<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> **, std::__1::allocator<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *> > { struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::Ribbon::BaseMesh *, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_1_1; struct BaseMesh {} **x_3_1_2; struct __compressed_pair<ggl::Ribbon::BaseMesh **, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_2_1; } x_3_1_3; } x3; struct RenderState {} *x4[4]; }*)displayConnectionLayer;
- (struct list<vk::TransitDisplayConnection, std::__1::allocator<vk::TransitDisplayConnection> > { struct __list_node_base<vk::TransitDisplayConnection, void *> { struct __list_node<vk::TransitDisplayConnection, void *> {} *x_1_1_1; struct __list_node<vk::TransitDisplayConnection, void *> {} *x_1_1_2; } x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<vk::TransitDisplayConnection, void *> > > { unsigned long x_2_1_1; } x2; }*)displayConnections;
- (id)initWithKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1 modelTile:(id)arg2 styleManager:(struct shared_ptr<gss::StyleManager> { struct StyleManager {} *x1; struct __shared_weak_count {} *x2; })arg3 dataOverrideManager:(struct shared_ptr<md::DataOverrideManager> { struct DataOverrideManager {} *x1; struct __shared_weak_count {} *x2; })arg4 sharedResources:(id)arg5 contentScale:(float)arg6 device:(struct Device { int (**x1)(); int x2; }*)arg7 labelExternalObjectsModerator:(struct LabelExternalObjectsModerator { struct fast_shared_ptr<vk::unsynchronized_weak_interface_ptr<vk::LabelExternalObjectsModerator> > { struct _fast_shared_ptr_control {} *x_1_1_1; } x1; struct LabelExternalIconRenderer {} *x2; bool x3; struct mutex { struct _opaque_pthread_mutex_t { long x_1_2_1; BOOL x_1_2_2[40]; } x_4_1_1; } x4; int x5; struct unordered_map<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_6_1_1; } x6; struct unordered_map<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<vk::LabelExternalObject> >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_7_1_1; } x7; struct vector<unsigned long long, std::__1::allocator<unsigned long long> > { unsigned long long *x_8_1_1; unsigned long long *x_8_1_2; struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> > { unsigned long long *x_3_2_1; } x_8_1_3; } x8; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_3_1; } x_1_2_4; } x_9_1_1; } x9; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_3_1; } x_1_2_4; } x_10_1_1; } x10; struct unordered_map<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink>, std::__1::hash<const GEOTransitLink *>, std::__1::equal_to<const GEOTransitLink *>, std::__1::allocator<std::__1::pair<const GEOTransitLink *const, std::__1::weak_ptr<vk::LabelExternalTransitLink> > > > { struct __hash_table<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::__unordered_map_hasher<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::hash<const GEOTransitLink *>, true>, std::__1::__unordered_map_equal<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::equal_to<const GEOTransitLink *>, true>, std::__1::allocator<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> *> { struct __hash_node<std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::hash<const GEOTransitLink *>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<const GEOTransitLink *, std::__1::__hash_value_type<const GEOTransitLink *, std::__1::weak_ptr<vk::LabelExternalTransitLink> >, std::__1::equal_to<const GEOTransitLink *>, true> > { float x_4_3_1; } x_1_2_4; } x_11_1_1; } x11; struct unordered_map<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > > > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GEOFeatureStylePair, std::__1::allocator<GEOFeatureStylePair> > >, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_12_1_1; } x12; struct unordered_map<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, std::__1::allocator<std::__1::pair<const vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long> > > { struct __hash_table<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, std::__1::__unordered_map_hasher<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, true>, std::__1::__unordered_map_equal<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, true>, std::__1::allocator<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> *> { struct __hash_node<std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyHash, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, std::__1::__hash_value_type<vk::LabelExternalObjectsModerator::LinesOnRouteMapKey, unsigned long long>, vk::LabelExternalObjectsModerator::LinesOnRouteMapKeyEq, true> > { float x_4_3_1; } x_1_2_4; } x_13_1_1; } x13; struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_14_1_1; } x14; struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, int> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *> { struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true> > { float x_4_3_1; } x_1_2_4; } x_15_1_1; } x15; }*)arg8;
- (struct Setup { int (**x1)(); struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_2_1_1; struct ConstantDataElement {} *x_2_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::TextureBase *, std::__1::allocator<ggl::TextureBase *> > { struct TextureBase {} **x_3_1_1; struct TextureBase {} **x_3_1_2; struct __compressed_pair<ggl::TextureBase **, std::__1::allocator<ggl::TextureBase *> > { struct TextureBase {} **x_3_2_1; } x_3_1_3; } x3; struct shared_ptr<ggl::Shader> { struct Shader {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; }*)lineFillShaderSetup;
- (struct RibbonLayer<ggl::TransitRibbonDescriptor> { int (**x1)(); struct vector<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *, std::__1::allocator<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > { struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_2_1_1; struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_2_1_2; struct __compressed_pair<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> **, std::__1::allocator<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > { struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::TransitLineRibbon::BaseMesh *, std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> > { struct BaseMesh {} **x_3_1_1; struct BaseMesh {} **x_3_1_2; struct __compressed_pair<ggl::TransitLineRibbon::BaseMesh **, std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> > { struct BaseMesh {} **x_3_2_1; } x_3_1_3; } x3; struct RenderState {} *x4[2]; }*)lineLayer;
- (struct Setup { int (**x1)(); struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_2_1_1; struct ConstantDataElement {} *x_2_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::TextureBase *, std::__1::allocator<ggl::TextureBase *> > { struct TextureBase {} **x_3_1_1; struct TextureBase {} **x_3_1_2; struct __compressed_pair<ggl::TextureBase **, std::__1::allocator<ggl::TextureBase *> > { struct TextureBase {} **x_3_2_1; } x_3_1_3; } x3; struct shared_ptr<ggl::Shader> { struct Shader {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; }*)lineStrokeShaderSetup;
- (struct vector<vk::TransitLink, std::__1::allocator<vk::TransitLink> > { struct TransitLink {} *x1; struct TransitLink {} *x2; struct __compressed_pair<vk::TransitLink *, std::__1::allocator<vk::TransitLink> > { struct TransitLink {} *x_3_1_1; } x3; }*)links;
- (float)minLineZoomForIDs:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1;
- (void)neighborTileDidChange;
- (struct vector<std::__1::shared_ptr<vk::TransitNode>, std::__1::allocator<std::__1::shared_ptr<vk::TransitNode> > > { struct shared_ptr<vk::TransitNode> {} *x1; struct shared_ptr<vk::TransitNode> {} *x2; struct __compressed_pair<std::__1::shared_ptr<vk::TransitNode> *, std::__1::allocator<std::__1::shared_ptr<vk::TransitNode> > > { struct shared_ptr<vk::TransitNode> {} *x_3_1_1; } x3; }*)nodes;
- (void)populateSelectedLineBounds:(id)arg1;
- (void)setAlphaScale:(float)arg1;
- (void)setAnimation:(id)arg1;
- (void)setInterTileMediator:(const struct shared_ptr<vk::TransitInterTileMediator> { struct TransitInterTileMediator {} *x1; struct __shared_weak_count {} *x2; }*)arg1;
- (void)setSelectedLines:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1;
- (void)setSelectedNodes:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long> > { unsigned long x_3_2_1; } x_1_1_3; struct __compressed_pair<float, std::__1::equal_to<unsigned long long> > { float x_4_2_1; } x_1_1_4; } x1; }*)arg1;
- (void)updateDisplayConnectionStylesInContext:(id)arg1;
- (void)updateLineStylesInContext:(id)arg1 lineMergingDisabled:(unsigned char)arg2;
- (bool)updateLinesAtZoom:(float)arg1;
- (void)updateNodeStylesInContext:(id)arg1;
- (void)willAppear;
- (void)willDisappear;

@end
