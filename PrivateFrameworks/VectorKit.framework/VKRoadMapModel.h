/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKRoadMapModel : VKVectorMapModel <VKStyleManagerObserver> {
    struct map<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<std::__1::pair<gss::StylesheetQuery<gss::PropertyID> *const, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > > > > { 
        struct __tree<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > >, std::__1::__map_value_compare<gss::StylesheetQuery<gss::PropertyID> *, std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, true>, std::__1::allocator<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > > > > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::StylesheetQuery<gss::PropertyID> *, std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::RoadStyling, std::__1::default_delete<md::RoadStyling> > >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _activeRoadStyles;
    struct map<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<std::__1::pair<gss::StylesheetQuery<gss::PropertyID> *const, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > > > > { 
        struct __tree<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > >, std::__1::__map_value_compare<gss::StylesheetQuery<gss::PropertyID> *, std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, true>, std::__1::allocator<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > > > > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::StylesheetQuery<gss::PropertyID> *, std::__1::__value_type<gss::StylesheetQuery<gss::PropertyID> *, std::__1::unique_ptr<md::TrafficSpeedStyling, std::__1::default_delete<md::TrafficSpeedStyling> > >, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _activeTrafficStyles;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _clearItem;
    int  _extraStencil;
    struct set<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
        struct __tree<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gss::StylesheetQuery<gss::PropertyID> *, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _frameInFlightStyles;
    struct set<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
        struct __tree<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gss::StylesheetQuery<gss::PropertyID> *, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _frameOutdatedStyles;
    struct set<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
        struct __tree<gss::StylesheetQuery<gss::PropertyID> *, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *>, std::__1::allocator<gss::StylesheetQuery<gss::PropertyID> *> > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gss::StylesheetQuery<gss::PropertyID> *, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<gss::StylesheetQuery<gss::PropertyID> *> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _frameStyles;
    double  _layoutTimestamp;
    unsigned long long  _mapLayerPosition;
    struct unique_ptr<md::PatternedSharedResources, std::__1::default_delete<md::PatternedSharedResources> > { 
        struct __compressed_pair<md::PatternedSharedResources *, std::__1::default_delete<md::PatternedSharedResources> > { 
            struct PatternedSharedResources {} *__first_; 
        } __ptr_; 
    }  _patternedSharedResources;
    struct unique_ptr<md::RoadSharedResources, std::__1::default_delete<md::RoadSharedResources> > { 
        struct __compressed_pair<md::RoadSharedResources *, std::__1::default_delete<md::RoadSharedResources> > { 
            struct RoadSharedResources {} *__first_; 
        } __ptr_; 
    }  _roadSharedResources;
    int  _sourceTileZtoStencilOffset;
    BOOL  _trafficEnabled;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) double layoutTimestamp;
@property (nonatomic) unsigned long long mapLayerPosition;
@property (nonatomic, readonly) struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; } styleManager;
@property (readonly) Class superclass;
@property (nonatomic) BOOL trafficEnabled;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)assignRoadStyling:(struct RoadLayer { int (**x1)(); struct vector<md::RoadBatch *, std::__1::allocator<md::RoadBatch *> > { struct RoadBatch {} **x_2_1_1; struct RoadBatch {} **x_2_1_2; struct __compressed_pair<md::RoadBatch **, std::__1::allocator<md::RoadBatch *> > { struct RoadBatch {} **x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::Ribbon::BaseMesh *, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_1_1; struct BaseMesh {} **x_3_1_2; struct __compressed_pair<ggl::Ribbon::BaseMesh **, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_2_1; } x_3_1_3; } x3; struct RenderState {} *x4[8]; struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; unsigned int x6; struct RoadSharedResources {} *x7; struct TrafficSpeedStyling {} *x8; }*)arg1;
- (void)assignTrafficStyling:(id)arg1 withContext:(struct RoadLayoutContext { struct LayoutContext {} *x1; float x2; float x3; BOOL x4; BOOL x5; float x6; float x7; struct CGSize { float x_8_1_1; float x_8_1_2; } x8; struct CGSize { float x_9_1_1; float x_9_1_2; } x9; bool x10; unsigned char x11; float x12; float x13; float x14; float x15; struct Matrix<float, 4, 1> { float x_16_1_1[4]; } x16[5]; bool x17; }*)arg2;
- (unsigned char)commandBufferId;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(BOOL)arg1;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (double)layoutTimestamp;
- (unsigned long long)mapLayerPosition;
- (void)reserveStencilRangeForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)setMapLayerPosition:(unsigned long long)arg1;
- (void)setTrafficEnabled:(BOOL)arg1;
- (void)stylesheetDidChange;
- (void)stylesheetDidReload;
- (BOOL)supportsTrafficCasing;
- (void)syncActiveStyles;
- (BOOL)trafficEnabled;
- (BOOL)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;
- (void)willStopDrawingTiles:(id)arg1;

@end
