/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKCameraController : NSObject <VKCameraController> {
    BOOL  _allowDatelineWraparound;
    VKCamera * _camera;
    <MDRenderTarget> * _canvas;
    <VKCameraControllerDelegate> * _delegate;
    struct VKEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _edgeInsets;
    BOOL  _gesturing;
    BOOL  _inProgressRegionChangeIsAnimated;
    BOOL  _isPitchEnabled;
    BOOL  _isRotateEnabled;
    unsigned int  _regionChangeCount;
    BOOL  _staysCenteredDuringPinch;
    BOOL  _staysCenteredDuringRotation;
}

@property (nonatomic) BOOL allowDatelineWraparound;
@property (nonatomic, readonly) double altitude;
@property (nonatomic, readonly) BOOL canPitch;
@property (nonatomic, readonly) BOOL canRotate;
@property (nonatomic) struct { double x1; double x2; } centerCoordinate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double distanceFromCenterCoordinate;
@property (readonly) unsigned int hash;
@property (nonatomic) double heading;
@property (nonatomic, readonly) BOOL isFullyPitched;
@property (nonatomic) BOOL isPitchEnabled;
@property (nonatomic, readonly) BOOL isPitched;
@property (nonatomic) BOOL isRotateEnabled;
@property (nonatomic, readonly) BOOL isRotated;
@property (nonatomic, readonly) GEOMapRegion *mapRegion;
@property (nonatomic, readonly) double maxPitch;
@property (nonatomic) double pitch;
@property (nonatomic, readonly) double presentationHeading;
@property (nonatomic) BOOL staysCenteredDuringPinch;
@property (nonatomic) BOOL staysCenteredDuringRotation;
@property (readonly) Class superclass;

- (BOOL)allowDatelineWraparound;
- (double)altitude;
- (void)beginRegionChange:(BOOL)arg1;
- (id)camera;
- (BOOL)canPitch;
- (BOOL)canRotate;
- (BOOL)canZoomInForTileSize:(int)arg1;
- (BOOL)canZoomOutForTileSize:(int)arg1;
- (id)canvas;
- (void)canvasDidLayout;
- (struct { double x1; double x2; })centerCoordinate;
- (BOOL)centerCoordinate:(struct { double x1; double x2; }*)arg1 andDistanceFromCenter:(double*)arg2 forMapRegion:(id)arg3;
- (struct CGPoint { float x1; float x2; })centerScreenPoint;
- (void)checkAndResetRegionChangeCount;
- (double)currentZoomLevel;
- (double)currentZoomLevelForTileSize:(int)arg1;
- (struct Matrix<int, 2, 1> { int x1[2]; })cursorFromScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)dealloc;
- (id)delegate;
- (id)detailedDescription;
- (id)detailedDescriptionDictionaryRepresentation;
- (double)distanceFromCenterCoordinate;
- (struct VKEdgeInsets { float x1; float x2; float x3; float x4; })edgeInsets;
- (void)edgeInsetsDidEndAnimating;
- (void)edgeInsetsWillBeginAnimating;
- (void)endRegionChange;
- (double)heading;
- (BOOL)isAnimating;
- (BOOL)isChangingRegion;
- (BOOL)isFullyPitched;
- (BOOL)isGesturing;
- (BOOL)isPitchEnabled;
- (BOOL)isPitched;
- (BOOL)isRotateEnabled;
- (BOOL)isRotated;
- (id)mapRegion;
- (double)maxPitch;
- (double)maximumZoomLevel;
- (double)maximumZoomLevelForTileSize:(int)arg1;
- (double)minimumZoomLevel;
- (double)minimumZoomLevelForTileSize:(int)arg1;
- (double)pitch;
- (double)presentationHeading;
- (BOOL)restoreViewportFromInfo:(id)arg1;
- (struct CGPoint { float x1; float x2; })scaledScreenPointForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setAllowDatelineWraparound:(BOOL)arg1;
- (void)setCamera:(id)arg1;
- (void)setCanvas:(id)arg1;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setDistanceFromCenterCoordinate:(double)arg1;
- (void)setEdgeInsets:(struct VKEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setGesturing:(BOOL)arg1;
- (void)setHeading:(double)arg1;
- (void)setIsPitchEnabled:(BOOL)arg1;
- (void)setIsRotateEnabled:(BOOL)arg1;
- (void)setPitch:(double)arg1;
- (void)setStaysCenteredDuringPinch:(BOOL)arg1;
- (void)setStaysCenteredDuringRotation:(BOOL)arg1;
- (BOOL)staysCenteredDuringPinch;
- (BOOL)staysCenteredDuringRotation;
- (void)stylesheetDidChange;
- (void)stylesheetDidReload;
- (double)topDownMinimumZoomLevel;
- (double)topDownMinimumZoomLevelForTileSize:(int)arg1;
- (void)updateCameraToPositionOrientationLimits;
- (void)updateWithTimestamp:(double)arg1;
- (id)viewportInfo;
- (BOOL)wantsTimerTick;
- (double)zoomLevelAdjustmentForTileSize:(int)arg1;

@end
