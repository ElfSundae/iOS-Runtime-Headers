/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CalendarNotification.framework/CalendarNotification
 */

@interface EKCalendarItemAlertInfo : NSObject <NSCopying> {
    BOOL  _acknowledged;
    NSURL * _action;
    NSString * _alarmID;
    BOOL  _allDay;
    NSUserActivity * _appLink;
    NSString * _dismissalID;
    NSDate * _endDate;
    NSURL * _entityID;
    NSDate * _eventDate;
    NSTimeZone * _eventTimeZone;
    NSString * _externalID;
    NSDate * _fireDate;
    struct CLLocationCoordinate2D { 
        double latitude; 
        double longitude; 
    }  _geoLocationCoordinates;
    BOOL  _hasDisplayedLeaveByMessage;
    BOOL  _hasDisplayedLeaveNowMessage;
    BOOL  _hasDisplayedRunningLateMessage;
    BOOL  _hasGeoLocationCoordinates;
    BOOL  _hasOrganizerThatIsNotCurrentUser;
    BOOL  _isOffsetFromTravelTimeStart;
    BOOL  _isOnSharedCalendar;
    BOOL  _isPseudoEvent;
    BOOL  _isSuggestedLocation;
    NSDate * _lastFireTimeOfAlertOffsetFromTravelTime;
    NSDate * _lastTimeBulletinAdded;
    EKTravelEngineHypothesis * _latestHypothesis;
    NSString * _location;
    NSString * _locationAddress;
    NSData * _mapKitHandle;
    NSString * _organizerEmailAddress;
    int  _proximity;
    NSString * _publisherBulletinID;
    BOOL  _refiring;
    NSString * _startLocationRouting;
    BOOL  _tentative;
    NSString * _title;
}

@property (nonatomic, readonly) BOOL acknowledged;
@property (nonatomic, readonly) NSURL *action;
@property (nonatomic, readonly) NSString *alarmID;
@property (nonatomic, readonly) BOOL allDay;
@property (nonatomic, readonly) NSUserActivity *appLink;
@property (nonatomic, readonly) NSString *dismissalID;
@property (nonatomic, readonly) NSDate *endDate;
@property (nonatomic, readonly) NSURL *entityID;
@property (nonatomic, readonly) NSDate *eventDate;
@property (nonatomic, readonly) NSTimeZone *eventTimeZone;
@property (nonatomic, readonly) NSString *externalID;
@property (nonatomic, retain) NSDate *fireDate;
@property (nonatomic) struct CLLocationCoordinate2D { double x1; double x2; } geoLocationCoordinates;
@property (nonatomic) BOOL hasDisplayedLeaveByMessage;
@property (nonatomic) BOOL hasDisplayedLeaveNowMessage;
@property (nonatomic) BOOL hasDisplayedRunningLateMessage;
@property (nonatomic) BOOL hasGeoLocationCoordinates;
@property (nonatomic) BOOL hasOrganizerThatIsNotCurrentUser;
@property (nonatomic, readonly) BOOL isOffsetFromTravelTimeStart;
@property (nonatomic) BOOL isOnSharedCalendar;
@property (nonatomic, readonly) BOOL isPseudoEvent;
@property (nonatomic, readonly) BOOL isPurelyATimeToLeaveAlert;
@property (nonatomic) BOOL isSuggestedLocation;
@property (nonatomic, retain) NSDate *lastFireTimeOfAlertOffsetFromTravelTime;
@property (nonatomic, retain) NSDate *lastTimeBulletinAdded;
@property (nonatomic, retain) EKTravelEngineHypothesis *latestHypothesis;
@property (nonatomic, readonly) NSString *location;
@property (nonatomic, retain) NSString *locationAddress;
@property (nonatomic, retain) NSData *mapKitHandle;
@property (nonatomic, retain) NSString *organizerEmailAddress;
@property (nonatomic, readonly) int proximity;
@property (nonatomic, readonly) NSString *publisherBulletinID;
@property (nonatomic, readonly) NSString *recordID;
@property (nonatomic, readonly) BOOL refiring;
@property (nonatomic, retain) NSString *startLocationRouting;
@property (nonatomic, readonly) BOOL tentative;
@property (nonatomic, readonly) NSString *title;

- (void).cxx_destruct;
- (BOOL)acknowledged;
- (id)action;
- (id)alarmID;
- (BOOL)allDay;
- (id)appLink;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dismissalID;
- (id)endDate;
- (id)entityID;
- (id)eventDate;
- (id)eventTimeZone;
- (id)externalID;
- (id)fireDate;
- (struct CLLocationCoordinate2D { double x1; double x2; })geoLocationCoordinates;
- (BOOL)hasDisplayedLeaveByMessage;
- (BOOL)hasDisplayedLeaveNowMessage;
- (BOOL)hasDisplayedRunningLateMessage;
- (BOOL)hasGeoLocationCoordinates;
- (BOOL)hasOrganizerThatIsNotCurrentUser;
- (unsigned int)hash;
- (id)initWithTitle:(id)arg1 location:(id)arg2 date:(id)arg3 endDate:(id)arg4 timeZone:(id)arg5 allDay:(BOOL)arg6 tentative:(BOOL)arg7 publisherBulletinID:(id)arg8 entityID:(id)arg9 appLink:(id)arg10 action:(id)arg11 proximity:(int)arg12 externalID:(id)arg13 acknowledged:(BOOL)arg14 dismissalID:(id)arg15 alarmID:(id)arg16 isOffsetFromTravelTimeStart:(BOOL)arg17 refiring:(BOOL)arg18 pseudoEvent:(BOOL)arg19;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isOffsetFromTravelTimeStart;
- (BOOL)isOnSharedCalendar;
- (BOOL)isPseudoEvent;
- (BOOL)isPurelyATimeToLeaveAlert;
- (BOOL)isSuggestedLocation;
- (id)lastFireTimeOfAlertOffsetFromTravelTime;
- (id)lastTimeBulletinAdded;
- (id)latestHypothesis;
- (id)location;
- (id)locationAddress;
- (id)mapKitHandle;
- (id)organizerEmailAddress;
- (int)proximity;
- (id)publisherBulletinID;
- (id)recordID;
- (BOOL)refiring;
- (void)resetTimeToLeaveDisplayState;
- (void)setFireDate:(id)arg1;
- (void)setGeoLocationCoordinates:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (void)setHasDisplayedLeaveByMessage:(BOOL)arg1;
- (void)setHasDisplayedLeaveNowMessage:(BOOL)arg1;
- (void)setHasDisplayedRunningLateMessage:(BOOL)arg1;
- (void)setHasGeoLocationCoordinates:(BOOL)arg1;
- (void)setHasOrganizerThatIsNotCurrentUser:(BOOL)arg1;
- (void)setIsOnSharedCalendar:(BOOL)arg1;
- (void)setIsSuggestedLocation:(BOOL)arg1;
- (void)setLastFireTimeOfAlertOffsetFromTravelTime:(id)arg1;
- (void)setLastTimeBulletinAdded:(id)arg1;
- (void)setLatestHypothesis:(id)arg1;
- (void)setLocationAddress:(id)arg1;
- (void)setMapKitHandle:(id)arg1;
- (void)setOrganizerEmailAddress:(id)arg1;
- (void)setStartLocationRouting:(id)arg1;
- (id)startLocationRouting;
- (BOOL)tentative;
- (id)title;

@end
