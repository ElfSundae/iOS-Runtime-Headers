/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUUtility : NSObject

+ (id)URLIfFileExists:(id)arg1;
+ (id)addToDate:(id)arg1 numberOfDays:(int)arg2;
+ (unsigned long long)appDemoteableSpace;
+ (void)assignError:(id*)arg1 withCode:(int)arg2;
+ (void)assignError:(id*)arg1 withError:(id)arg2 translate:(BOOL)arg3;
+ (unsigned long long)cacheDelete:(id)arg1;
+ (BOOL)cellularDataIsEnabled;
+ (BOOL)createInstallationKeybag:(id)arg1;
+ (BOOL)createInstallationKeybag:(id)arg1 forUnattendedInstall:(BOOL)arg2;
+ (id)currentProductBuild;
+ (id)currentProductCategory;
+ (id)currentProductType;
+ (id)currentProductVersion;
+ (id)currentReleaseType;
+ (unsigned long long)demoteApps:(unsigned long long)arg1 withError:(id*)arg2;
+ (id)errorWithCode:(int)arg1;
+ (id)errorWithCode:(int)arg1 originalError:(id)arg2;
+ (BOOL)freeCachedSpaceSynchronous:(unsigned long long)arg1 timeout:(double)arg2;
+ (BOOL)freeCachedSpaceSynchronous:(unsigned long long)arg1 timeout:(double)arg2 isAutoDownload:(BOOL)arg3;
+ (BOOL)freeCachedSpaceSynchronous:(unsigned long long)arg1 timeout:(double)arg2 isAutoDownload:(BOOL)arg3 disableCDLevelFour:(BOOL)arg4 disableSiriDeletion:(BOOL)arg5 disableAppDemotion:(BOOL)arg6;
+ (id)gregorianCalendar;
+ (BOOL)hasCellularRadio;
+ (BOOL)hasEnoughDiskSpace:(unsigned long long)arg1;
+ (BOOL)hasEnoughDiskSpace:(unsigned long long)arg1 deltaSpaceNeeded:(unsigned long long*)arg2;
+ (BOOL)hasEnoughDiskSpace:(unsigned long long)arg1 deltaSpaceNeeded:(unsigned long long*)arg2 isAutoDownload:(BOOL)arg3;
+ (BOOL)hasEnoughDiskSpace:(unsigned long long)arg1 deltaSpaceNeeded:(unsigned long long*)arg2 isAutoDownload:(BOOL)arg3 disableCDLevelFour:(BOOL)arg4 disableCDLevelThree:(BOOL)arg5 disableSiriDeletion:(BOOL)arg6 disableAppDemotion:(BOOL)arg7;
+ (BOOL)hasEnoughDiskSpace:(unsigned long long)arg1 deltaSpaceNeeded:(unsigned long long*)arg2 isAutoDownload:(BOOL)arg3 includePurging:(BOOL)arg4;
+ (int)installationKeybagState;
+ (BOOL)isCellularDataCapable;
+ (BOOL)isDaemon;
+ (BOOL)isPasscodeLocked;
+ (BOOL)isPasswordProtected;
+ (BOOL)isRestoringFromCloud;
+ (BOOL)isWiFiCapable;
+ (id)prettyPrintDate:(id)arg1;
+ (id)serialNumber;
+ (void)setCacheable:(BOOL)arg1;
+ (void)setIsDaemon:(BOOL)arg1;
+ (long long)sortAppsToPurge:(id)arg1 sortedArray:(id*)arg2 spaceNeeded:(id)arg3;
+ (id)taskQueue;
+ (unsigned long long)totalPurgeableSpace:(id)arg1;
+ (id)translateError:(id)arg1;
+ (id)translateError:(id)arg1 withAddedUserInfo:(id)arg2;
+ (int)translateErrorCodeFromError:(id)arg1;

@end
