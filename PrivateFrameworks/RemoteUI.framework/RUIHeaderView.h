/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
 */

@interface RUIHeaderView : UIView <RemoteUITableHeader> {
    BOOL _customIconSize;
    UILabel *_detailHeaderLabel;
    UILabel *_headerLabel;
    float _headerLabelBottomPadding;
    UIImageView *_iconView;
    int _imageAlignment;
    BOOL _isFirstSection;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _margins;
    UILabel *_subHeaderLabel;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UILabel *detailHeaderLabel;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) UILabel *headerLabel;
@property (nonatomic) float headerLabelBottomPadding;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } margins;
@property (nonatomic, readonly) UILabel *subHeaderLabel;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_iconFrame;
- (id)detailHeaderLabel;
- (float)headerHeightForWidth:(float)arg1 inTableView:(id)arg2;
- (id)headerLabel;
- (float)headerLabelBottomPadding;
- (id)initWithAttributes:(id)arg1;
- (void)layoutSubviews;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })margins;
- (void)setDetailText:(id)arg1 attributes:(id)arg2;
- (void)setHeaderAlignment:(int)arg1;
- (void)setHeaderColor:(id)arg1;
- (void)setHeaderLabelBottomPadding:(float)arg1;
- (void)setIconImage:(id)arg1;
- (void)setImageAlignment:(int)arg1;
- (void)setImageSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setSectionIsFirst:(BOOL)arg1;
- (void)setSubHeaderAlignment:(int)arg1;
- (void)setSubHeaderColor:(id)arg1;
- (void)setSubHeaderText:(id)arg1 attributes:(id)arg2;
- (void)setText:(id)arg1 attributes:(id)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (id)subHeaderLabel;

@end
