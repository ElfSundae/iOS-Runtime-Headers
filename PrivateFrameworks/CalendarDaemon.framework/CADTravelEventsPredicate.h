/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon
 */

@interface CADTravelEventsPredicate : EKPredicate

+ (BOOL)supportsSecureCoding;

- (id)_fetchTravelEventsWithDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long x_8_1_1; BOOL x_8_1_2[40]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; int x18; id /* block */ x19; struct _opaque_pthread_mutex_t { long x_20_1_1; BOOL x_20_1_2[40]; } x20; bool x21; struct __CFArray {} *x22; struct __CFArray {} *x23; id x24; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; long doublex45; int x46; float x47; float x48; void*x49; const void*x50; in void*x51; int x52; void*x53; long x54; unsigned short x55; void*x56; void*x57; long x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; unsigned short x74; void*x75; short x76; void*x77; void*x78; void*x79; void*x80; unsigned long x81; int x82; unsigned int x83/* : ? */; const void*x84; const void*x85; void*x86; void*x87; const int x88; void x89; void*x90; void*x91; void*x92; void*x93; const void*x94; void*x95; void*x96; void*x97; out const void*x98; short x99; void*x100; bycopy float x101; float x102; int x103; BOOL x104; void*x105; unsigned int x106; void*x107; void*x108; out const void*x109; void*x110; float x111; const void*x112; void*x113; void*x114; void*x115; out const void*x116; void*x117; bycopy float x118; float x119; int x120; BOOL x121; void*x122; unsigned int x123; void*x124; void*x125; out const void*x126; void*x127; void*x128; double x129; void*x130; void*x131; void*x132; void*x133; in void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; id x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; out void x171; int x172; in void*x173; void x174; void*x175; const void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; unsigned int x198; void*x199; double x200; int x201; void*x202; void*x203; unsigned int x204/* : ? */; long x205; void*x206; void*x207; void*x208; void*x209; void*x210; unsigned short x211; void*x212; long x213; void*x214; BOOL x215; void*x216; int x217; out in void*x218; void*x219; out void*x220; int x221; in void*x222; void*x223; const void*x224; void*x225; void*x226; void*x227; void*x228; short x229; void*x230; void*x231; const void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; id x248; unsigned int x249/* : ? */; void*x250; void*x251; void*x252; void*x253; long doublex254; unsigned short x255; int x256; void*x257; void*x258; short x259; short x260; void*x261; void*x262; void*x263; unsigned short x264; void*x265; const void x266; void*x267; const bool x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; id x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; unsigned short x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; short x295; short x296; void*x297; void*x298; void*x299; void*x300; const out void*x301; out unsigned int x302/* : ? */; void*x303; float x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; id x321; void*x322; long long x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; in void*x333; void*x334; void*x335; unsigned int x336/* : ? */; unsigned short x337; void*x338; const void x339; int x340; BOOL x341; void*x342; void*x343; void*x344; void*x345; void*x346; bycopy void*x347; long x348; void*x349; void*x350; void*x351; void*x352; long long x353; void*x354; void*x355; bycopy void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; long long x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; unsigned short x371; void*x372; short x373; void*x374; void*x375; void*x376; void*x377; unsigned long x378; int x379; unsigned int x380/* : ? */; const void*x381; const void*x382; void*x383; void*x384; const void*x385; void*x386; void*x387; void*x388; out const void*x389; short x390; void*x391; void*x392; void*x393; out void*x394; out short x395; void*x396; unsigned int x397; void*x398; float x399; const void*x400; void*x401; void*x402; void*x403; out const void*x404; void*x405; void*x406; void*x407; out void*x408; out short x409; void*x410; void*x411; void*x412; void*x413; void x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; unsigned short x423; void*x424; short x425; void*x426; void*x427; void*x428; void*x429; unsigned long x430; int x431; unsigned int x432/* : ? */; const void*x433; const void*x434; void*x435; void*x436; const void*x437; void*x438; void*x439; void*x440; out const void*x441; short x442; void*x443; void*x444; void*x445; out void*x446; in double x447; void*x448; void*x449; int x450; out in void*x451; float x452; const void*x453; void*x454; void*x455; void*x456; out const void*x457; void*x458; void*x459; void*x460; out void*x461; in double x462; void*x463; void*x464; int x465; out in void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; short x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; id x542; double x543; out void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; id /* block */ x636; void*x637; void*x638; void*x639; int x640; void*x641; in void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; bool x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; long long x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; bool x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; in void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; id x793; double x794; out void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; id x855; void*x856; void*x857; void*x858; void*x859; void*x860; out void*x861; int x862; void*x863; double x864; void*x865; char *x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; id x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; }*)arg1;
- (id)copyMatchingItemsWithDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long x_8_1_1; BOOL x_8_1_2[40]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; int x18; id /* block */ x19; struct _opaque_pthread_mutex_t { long x_20_1_1; BOOL x_20_1_2[40]; } x20; bool x21; struct __CFArray {} *x22; struct __CFArray {} *x23; id x24; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; bool x44; unsigned short x45; unsigned int x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; int x53; long x54; int x55; void*x56; int x57; void*x58; short x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; id x78; char *x79; void*x80; id x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; }*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)defaultPropertiesToLoad;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCalendarIDs:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;

@end
