/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@interface SSVMediaContentTasteController : NSObject {
    NSObject<OS_dispatch_queue> *_accessSerialQueue;
    NSObject<OS_dispatch_queue> *_calloutSerialQueue;
    unsigned long long _currentResponseRevisionID;
    int _itemsDidChangeNotifyToken;
    unsigned long long _lastNotificationReceivedResponseRevisionID;
    long long _pendingMutateRequestCount;
    NSMutableDictionary *_playlistGlobalIDToContentTasteItem;
    NSMutableDictionary *_playlistGlobalIDToPendingContentTasteItem;
    struct map<long long, SSVMediaContentTasteItem *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, SSVMediaContentTasteItem *> > > { 
        struct __tree<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, SSVMediaContentTasteItem *> > > { 
            struct __tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    } _storeAdamIDToContentTasteItem;
    struct map<long long, SSVMediaContentTasteItem *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, SSVMediaContentTasteItem *> > > { 
        struct __tree<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, SSVMediaContentTasteItem *> > > { 
            struct __tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    } _storeAdamIDToPendingContentTasteItem;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_handleContentTasteItemsUpdateResponse:(id)arg1 allowNotifications:(BOOL)arg2;
- (void)_refreshContentTasteItems;
- (void)_sendUpdateWithItemUpdates:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned int)contentTasteTypeForPlaylistGlobalID:(id)arg1;
- (unsigned int)contentTasteTypeForStoreAdamID:(long long)arg1;
- (void)dealloc;
- (id)init;
- (void)setContentTasteType:(unsigned int)arg1 forPlaylistGlobalID:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)setContentTasteType:(unsigned int)arg1 forStoreAdamID:(long long)arg2 withContentType:(unsigned int)arg3 completionHandler:(id /* block */)arg4;

@end
