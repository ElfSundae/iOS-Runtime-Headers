/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWVISNode : BWNode {
    NSObject<OS_dispatch_semaphore> * _emitSampleBufferSemaphore;
    BOOL  _flushingSBP;
    BOOL  _irisVIS;
    BOOL  _logStripProcessingTiming;
    int  _numberOfBuffersEmitted;
    int  _numberOfTimesWaited;
    BOOL  _offline;
    struct { 
        int width; 
        int height; 
    }  _offlineOutputDimensions;
    NSDictionary * _optionsDict;
    struct opaqueCMFormatDescription { } * _outputFormatDescription;
    unsigned long  _outputHeight;
    unsigned long  _outputWidth;
    struct OpaqueFigSampleBufferProcessor { } * _sampleBufferProcessor;
    BOOL  _sphereVideoEnabled;
    int  _stabilizationMethod;
    int  _stabilizationType;
    struct OpaqueFigCaptureISPProcessingSession { } * _stripProcessingSession;
}

+ (void)initialize;

- (long)_asynchronouslyStripProcessSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 withStabilizationParameters:(id)arg2;
- (void)_ensureSemaphoreIsBalanced;
- (void)_flushBuffers;
- (struct __CVBuffer { }*)_newOutputPixelBuffer;
- (void)_prepareStripProcessingSession;
- (long)_setupSampleBufferProcessor;
- (void)_tallyAndEmitDroppedSample:(id)arg1;
- (void)_tallyAndEmitSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_updateOutputRequirements;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (void)dealloc;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (id)emitSampleBufferSemaphore;
- (id)initWithSensorIDDict:(id)arg1 stabilizationMethod:(int)arg2 stabilizationType:(int)arg3 stripProcessingSession:(struct OpaqueFigCaptureISPProcessingSession { }*)arg4 requiredFormat:(id)arg5 activeMaxFrameRate:(float)arg6 motionAttachmentsSource:(int)arg7 offlineOutputDimensions:(struct { int x1; int x2; })arg8 irisVISCleanOutputRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg9 cameraAlignmentInfo:(id)arg10 cameraInfoByPortType:(id)arg11;
- (id)nodeSubType;
- (id)nodeType;
- (unsigned long)outputHeight;
- (unsigned long)outputWidth;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (void)setEmitSampleBufferSemaphore:(id)arg1;
- (void)setOutputHeight:(unsigned long)arg1;
- (void)setOutputWidth:(unsigned long)arg1;
- (void)setSphereVideoEnabled:(BOOL)arg1;
- (BOOL)sphereVideoEnabled;

@end
