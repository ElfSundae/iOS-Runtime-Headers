/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWPixelTransferNode : BWNode {
    int  _cropMode;
    NSObject<OS_dispatch_semaphore> * _emitSampleBufferSemaphore;
    BOOL  _flipHorizontal;
    BOOL  _flipVertical;
    BOOL  _haveLiveInputCropRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _inputCropRect;
    BWPixelBufferPool * _intermediateBufferPool;
    struct { 
        int width; 
        int height; 
    }  _intermediatePoolDimensions;
    int  _liveCropMode;
    BOOL  _liveFlipHorizontal;
    BOOL  _liveFlipVertical;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _liveInputCropRect;
    BOOL  _liveLowSpeed;
    BOOL  _livePassesBuffersThroughWhenPossible;
    int  _liveRotationDegrees;
    BOOL  _liveUpdatesSampleBufferMetadataForIrisVIS;
    BOOL  _liveZeroFillBuffers;
    BOOL  _lowSpeed;
    BOOL  _makeCurrentConfigurationLiveOnNextRenderCallback;
    int  _outputColorSpaceProperties;
    struct opaqueCMFormatDescription { } * _outputFormatDescription;
    unsigned long  _outputHeight;
    unsigned long  _outputPixelFormat;
    unsigned long  _outputWidth;
    BOOL  _passesBuffersThroughWhenPossible;
    int  _rotationDegrees;
    struct OpaqueVTImageRotationSession { } * _rotationSession;
    int  _rotationSessionColorSpaceProperties;
    BOOL  _rotationSessionFlipHorizontal;
    BOOL  _rotationSessionFlipVertical;
    BOOL  _rotationSessionLowSpeed;
    int  _rotationSessionRotationDegrees;
    BOOL  _rotationSessionZeroFillBuffers;
    struct OpaqueVTPixelTransferSession { } * _transferSession;
    BOOL  _updatesSampleBufferMetadataForIrisVIS;
}

+ (void)initialize;

- (BOOL)_emitIfMarkerBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (long)_ensureIntermediatePoolWithDimensions:(struct { int x1; int x2; })arg1;
- (void)_ensureRotationSession;
- (void)_ensureTransferSession;
- (struct { int x1; int x2; })_intermediateBufferDimensionsForInputDimensions:(struct { int x1; int x2; })arg1 outputDimensions:(struct { int x1; int x2; })arg2;
- (void)_makeCurrentConfigurationLive;
- (id)_preferredPixelFormats;
- (id)_preferredPixelFormatsWithInputPixelFormatFirst;
- (void)_updateOutputRequirements;
- (BOOL)_zeroFillBuffers;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (int)cropMode;
- (void)dealloc;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (id)emitSampleBufferSemaphore;
- (BOOL)flipHorizontal;
- (BOOL)flipVertical;
- (BOOL)hasNonLiveConfigurationChanges;
- (id)init;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })inputCropRect;
- (BOOL)lowSpeed;
- (void)makeCurrentConfigurationLive;
- (id)nodeSubType;
- (id)nodeType;
- (int)outputColorSpaceProperties;
- (unsigned long)outputHeight;
- (unsigned long)outputPixelFormat;
- (unsigned long)outputWidth;
- (BOOL)passesBuffersThroughWhenPossible;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (int)rotationDegrees;
- (void)setCropMode:(int)arg1;
- (void)setEmitSampleBufferSemaphore:(id)arg1;
- (void)setFlipHorizontal:(BOOL)arg1;
- (void)setFlipVertical:(BOOL)arg1;
- (void)setInputCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setLowSpeed:(BOOL)arg1;
- (void)setOutputColorSpaceProperties:(int)arg1;
- (void)setOutputHeight:(unsigned long)arg1;
- (void)setOutputPixelFormat:(unsigned long)arg1;
- (void)setOutputWidth:(unsigned long)arg1;
- (void)setPassesBuffersThroughWhenPossible:(BOOL)arg1;
- (void)setRotationDegrees:(int)arg1;
- (void)setUpdatesSampleBufferMetadataForIrisVIS:(BOOL)arg1;
- (BOOL)updatesSampleBufferMetadataForIrisVIS;

@end
