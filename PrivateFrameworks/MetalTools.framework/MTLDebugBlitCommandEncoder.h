/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MetalTools.framework/MetalTools
 */

@interface MTLDebugBlitCommandEncoder : MTLToolsBlitCommandEncoder {
    <MTLDevice> * _cachedDevice;
    BOOL  canDealloc;
    BOOL  canEndEncoding;
    BOOL  hasEndEncoding;
    struct deque<__weak id, std::__1::allocator<__weak id> > { 
        /* Warning: unhandled struct encoding: '{__split_buffer<__weak id *, std::__1::allocator<__weak id *> >="__first_"^^@"__begin_"^^@"__end_"^^@"__end_cap_"{__compressed_pair<__weak id **, std::__1::allocator<__weak id *> >="__first_"^^@}}"__start_"I"__size_"{__compressed_pair<unsigned long, std::__1::allocator<__weak id> >="__first_"L}}' */ struct __split_buffer<__weak id *, std::__1::allocator<__weak id *> > { 
            __begin_ ***__first_; 
        } __map_; 
    }  updatedFences;
}

@property (nonatomic, readonly) <MTLDevice> *cachedDevice;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_setDefaults;
- (id)cachedDevice;
- (void)copyFromBuffer:(id)arg1 sourceOffset:(unsigned int)arg2 sourceBytesPerRow:(unsigned int)arg3 sourceBytesPerImage:(unsigned int)arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9;
- (void)copyFromBuffer:(id)arg1 sourceOffset:(unsigned int)arg2 sourceBytesPerRow:(unsigned int)arg3 sourceBytesPerImage:(unsigned int)arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9 options:(unsigned int)arg10;
- (void)copyFromBuffer:(id)arg1 sourceOffset:(unsigned int)arg2 toBuffer:(id)arg3 destinationOffset:(unsigned int)arg4 size:(unsigned int)arg5;
- (void)copyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toBuffer:(id)arg6 destinationOffset:(unsigned int)arg7 destinationBytesPerRow:(unsigned int)arg8 destinationBytesPerImage:(unsigned int)arg9;
- (void)copyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toBuffer:(id)arg6 destinationOffset:(unsigned int)arg7 destinationBytesPerRow:(unsigned int)arg8 destinationBytesPerImage:(unsigned int)arg9 options:(unsigned int)arg10;
- (void)copyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9;
- (void)copyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9 options:(unsigned int)arg10;
- (void)dealloc;
- (void)endEncoding;
- (void)fillBuffer:(id)arg1 range:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 value:(unsigned char)arg3;
- (void)generateMipmapsForTexture:(id)arg1;
- (id)initWithBlitCommandEncoder:(id)arg1 commandBuffer:(id)arg2;
- (void)updateFence:(id)arg1;
- (void)validateCopyFromBuffer:(id)arg1 sourceOffset:(unsigned int)arg2 sourceBytesPerRow:(unsigned int)arg3 sourceBytesPerImage:(unsigned int)arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9 options:(unsigned int)arg10;
- (void)validateCopyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toBuffer:(id)arg6 destinationOffset:(unsigned int)arg7 destinationBytesPerRow:(unsigned int)arg8 destinationBytesPerImage:(unsigned int)arg9 options:(unsigned int)arg10;
- (void)validateCopyFromTexture:(id)arg1 sourceSlice:(unsigned int)arg2 sourceLevel:(unsigned int)arg3 sourceOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg4 sourceSize:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg5 toTexture:(id)arg6 destinationSlice:(unsigned int)arg7 destinationLevel:(unsigned int)arg8 destinationOrigin:(struct { unsigned int x1; unsigned int x2; unsigned int x3; })arg9 options:(unsigned int)arg10;
- (void)waitForFence:(id)arg1;

@end
