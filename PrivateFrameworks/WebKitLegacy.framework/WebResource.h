/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
 */

@interface WebResource : NSObject <NSCoding, NSCopying> {
    WebResourcePrivate *_private;
}

@property (nonatomic, readonly, copy) NSString *MIMEType;
@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic, readonly, copy) NSData *data;
@property (nonatomic, readonly, copy) NSString *frameName;
@property (nonatomic, readonly, copy) NSString *textEncodingName;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

- (id)MIMEType;
- (id)URL;
- (struct ArchiveResource { int (**x1)(); unsigned int x2; struct URL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_3_1_1; unsigned int x_3_1_2 : 1; unsigned int x_3_1_3 : 1; int x_3_1_4; int x_3_1_5; int x_3_1_6; int x_3_1_7; int x_3_1_8; int x_3_1_9; int x_3_1_10; int x_3_1_11; int x_3_1_12; int x_3_1_13; } x3; struct ResourceResponse { bool x_4_1_1; struct URL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_2_2_1; unsigned int x_2_2_2 : 1; unsigned int x_2_2_3 : 1; int x_2_2_4; int x_2_2_5; int x_2_2_6; int x_2_2_7; int x_2_2_8; int x_2_2_9; int x_2_2_10; int x_2_2_11; int x_2_2_12; int x_2_2_13; } x_4_1_2; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_3_2_1; } x_4_1_3; long long x_4_1_4; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_5_2_1; } x_4_1_5; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_6_2_1; } x_4_1_6; struct HTTPHeaderMap { struct HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> > { struct HashTable<WebCore::HTTPHeaderName, WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String> >, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName> > { struct KeyValuePair<WebCore::HTTPHeaderName, WTF::String> {} *x_1_4_1; unsigned int x_1_4_2; unsigned int x_1_4_3; unsigned int x_1_4_4; unsigned int x_1_4_5; } x_1_3_1; } x_7_2_1; struct HashMap<WTF::String, WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::CaseFoldingHash, WTF::HashMap<WTF::String, WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::String> {} *x_1_4_1; unsigned int x_1_4_2; unsigned int x_1_4_3; unsigned int x_1_4_4; unsigned int x_1_4_5; } x_2_3_1; } x_7_2_2; } x_4_1_7; struct ResourceLoadTiming { int x_8_2_1; int x_8_2_2; int x_8_2_3; int x_8_2_4; int x_8_2_5; int x_8_2_6; int x_8_2_7; } x_4_1_8; bool x_4_1_9; struct CertificateInfo { struct RetainPtr<const __CFArray *> { void *x_1_3_1; } x_10_2_1; } x_4_1_10; int x_4_1_11; struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > { bool x_12_2_1; struct type { unsigned char x_2_3_1[8]; } x_12_2_2; } x_4_1_12; struct Optional<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > > { bool x_13_2_1; struct type { unsigned char x_2_3_1[8]; } x_13_2_2; } x_4_1_13; struct Optional<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > > { bool x_14_2_1; struct type { unsigned char x_2_3_1[8]; } x_14_2_2; } x_4_1_14; struct Optional<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > > { bool x_15_2_1; struct type { unsigned char x_2_3_1[8]; } x_15_2_2; } x_4_1_15; struct CacheControlDirectives { struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > { bool x_1_3_1; struct type { unsigned char x_2_4_1[8]; } x_1_3_2; } x_16_2_1; struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > > { bool x_2_3_1; struct type { unsigned char x_2_4_1[8]; } x_2_3_2; } x_16_2_2; bool x_16_2_3; bool x_16_2_4; bool x_16_2_5; } x_4_1_16; bool x_4_1_17; bool x_4_1_18; bool x_4_1_19; bool x_4_1_20; bool x_4_1_21; int x_4_1_22; unsigned int x_4_1_23 : 3; unsigned int x_4_1_24 : 1; struct RetainPtr<_CFURLResponse *> { void *x_25_2_1; } x_4_1_25; struct RetainPtr<NSURLResponse> { void *x_26_2_1; } x_4_1_26; } x4; struct RefPtr<WebCore::SharedBuffer> { struct SharedBuffer {} *x_5_1_1; } x5; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_6_1_1; } x6; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_7_1_1; } x7; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_8_1_1; } x8; bool x9; }*)_coreResource;
- (void)_ignoreWhenUnarchiving;
- (id)_initWithCoreResource:(struct PassRefPtr<WebCore::ArchiveResource> { struct ArchiveResource {} *x1; })arg1;
- (id)_initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5 response:(id)arg6 copyData:(BOOL)arg7;
- (id)_initWithData:(id)arg1 URL:(id)arg2 response:(id)arg3;
- (id)_response;
- (id)_stringValue;
- (id)_suggestedFilename;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)frameName;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (id)textEncodingName;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

+ (id)bundleForClass;

@end
