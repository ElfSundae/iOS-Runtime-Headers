/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant
 */

@interface AUMFiSetupController : AUSetupController {
    NSDictionary *_accessoryResponseDict;
    NSObject<OS_dispatch_semaphore> *_askUserForPasswordSemaphore;
    NSDictionary *_autoGuessRecommendationDict;
    NSString *_destinationNetworkPassword;
    BOOL _destinationNetworkPasswordAccepted;
    NSString *_destinationNetworkSSID;
    NSDictionary *_destinationNetworkScanRecord;
    NSObject<OS_dispatch_semaphore> *_easyConfigConfigurationCompleteSemaphore;
    EasyConfigDevice *_easyConfigDevice;
    struct { 
        double secondsToGetLinkUpOnDestination; 
        int wifiJoinDestinationAPError; 
        unsigned char destinationNetworkPSKInKeychain; 
        unsigned char hitJoiningDestinationAPTimeout; 
        int rssiOfDestinationAP; 
        unsigned int snrOfDestinationAP; 
        unsigned int channelOfDestinationAP; 
    } _easyConfigPostConfigMetrics;
    struct { 
        double startTime; 
        unsigned char userChangedFriendlyName; 
        unsigned char playPasswordSet; 
        unsigned char adminPasswordSet; 
        unsigned char destinationNetworkRecommendationUsed; 
        double secondsToGetLinkUpOnSWAP; 
        int wifiJoinSWAPError; 
        unsigned char hitJoiningTargetSWAPTimeout; 
        int rssiOfSWAP; 
        unsigned int snrOfSWAP; 
        unsigned int channelOfSWAP; 
    } _easyConfigPreConfigMetrics;
    int _lastHeardEasyConfigProgressNotification;
    NSTimer *_linkUpOnDestinationNetworkTimer;
    NSObject<OS_dispatch_semaphore> *_linkUpOnTargetSWAPSemaphore;
    NSMutableSet *_mfiSetupDelegates;
    NSString *_postConfigTargetDeviceFriendlyName;
    BOOL _postediAPAccessoryConfiguredNotification;
    BOOL _promptedUserForDestinationWiFiPSK;
    BOOL _setupEnded;
    NSDictionary *_setupOptionsDict;
    BOOL _successfullyEstablishedLinkOnDestinationAP;
    BOOL _successfullyEstablishedLinkOnTargetDeviceSWAP;
    NSDictionary *_targetMFiDeviceScanRecord;
    double _timeDestinationAPJoinStarted;
    double _timeSWAPJoinStarted;
    int _waitingForLinkState;
}

@property (copy) NSString *destinationNetworkPassword;
@property (retain) NSTimer *linkUpOnDestinationNetworkTimer;
@property (nonatomic, readonly) NSMutableSet *setupDelegates;

+ (id)setupController;

- (void)_startEasyConfigWhenReady;
- (void)acquireDestinationNetworkPassword;
- (void)askUserForNetworkPassword:(id)arg1;
- (void)askUserForSetupCodeWithRetryStatus:(BOOL)arg1;
- (void)askUserForUncertified;
- (void)callbackAskUserForPasswordResult:(long)arg1 password:(id)arg2 remember:(int)arg3;
- (void)callbackAskUserForSetupCodeResult:(long)arg1 password:(id)arg2;
- (void)callbackAskUserForUncertifiedResult:(long)arg1;
- (long)cancelSetup;
- (void)createEasyConfigDeviceConfiguration;
- (void)dealloc;
- (id)destinationNetworkPassword;
- (long)endSetup:(long)arg1;
- (void)handleEasyConfigProgress:(id)arg1;
- (void)handleEasyConfigProgressAppliedConfigurationToDevice:(id)arg1;
- (void)handleEasyConfigProgressSearchingForPostConfigDevice:(id)arg1;
- (void)handleEasyConfigStopped:(id)arg1;
- (id)init;
- (void)invalidateLinkUpOnDestinationNetworkTimer;
- (void)joinDestinationAPDone:(id)arg1;
- (void)joinDestinationNetworkTimeoutFired:(id)arg1;
- (void)joinSWAPDone:(id)arg1;
- (long)joinTargetSWAP;
- (void)linkChangeNotification:(id)arg1;
- (void)linkUpOnDestinationAP:(id)arg1;
- (id)linkUpOnDestinationNetworkTimer;
- (void)linkUpOnSWAP:(id)arg1;
- (void)logCompletionStatus:(long)arg1;
- (long)sendProgressToUI:(int)arg1 withParamDict:(id)arg2;
- (long)sendSetupCompleteToUIWithResult:(long)arg1;
- (long)sendiAPOverWiFiDeviceConfiguredXPCMessage;
- (void)setDestinationNetworkPassword:(id)arg1;
- (void)setLinkUpOnDestinationNetworkTimer:(id)arg1;
- (id)setupDelegates;
- (long)setupFromAutoguessRecommendation:(id)arg1 withOptions:(id)arg2;
- (void)startEasyConfigWhenReady;
- (void)startListeningForEasyConfigDeviceStatusNotifications;
- (void)stopListeningToAllNotifications;
- (void)stopListeningToEasyConfigDeviceStatusNotifications;
- (id)targetBaseInfoDict;
- (long)updateSettingsAsync;

@end
