/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation
 */

@interface WFWeatherStoreService : NSObject <WFWeatherStore> {
    NSMutableDictionary * _URLToCallbackMap;
    NSMutableDictionary * _URLToTaskMap;
    WFWeatherStoreCache * _cache;
    WFWeatherStoreServiceConfiguration * _configuration;
    NSObject<OS_dispatch_queue> * _incomingRequestQueue;
    NSObject<OS_dispatch_queue> * _mapQueue;
    NSObject<OS_dispatch_queue> * _parseQueue;
}

@property (retain) NSMutableDictionary *URLToCallbackMap;
@property (retain) NSMutableDictionary *URLToTaskMap;
@property (retain) WFWeatherStoreCache *cache;
@property (nonatomic, copy) WFWeatherStoreServiceConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (retain) NSObject<OS_dispatch_queue> *incomingRequestQueue;
@property (retain) NSObject<OS_dispatch_queue> *mapQueue;
@property (retain) NSObject<OS_dispatch_queue> *parseQueue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)URLToCallbackMap;
- (id)URLToTaskMap;
- (void)_addCallback:(id)arg1 forURL:(id)arg2;
- (BOOL)_cacheParsedForecastData:(id)arg1 type:(unsigned int)arg2 location:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5;
- (void)_executeCallbacksForURL:(id)arg1 conditions:(id)arg2 error:(id)arg3;
- (void)_executeCallbacksForURL:(id)arg1 parsedForecastData:(id)arg2 error:(id)arg3;
- (BOOL)_forecastConditionsForType:(unsigned int)arg1 location:(id)arg2 date:(id)arg3 requestIdentifier:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_setTask:(id)arg1 callback:(id)arg2 forURL:(id)arg3;
- (id)_taskForURL:(id)arg1;
- (void)airQualityForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 options:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)cache;
- (id)configuration;
- (void)dailyForecastForLocation:(id)arg1 requestIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)forecastForLocation:(id)arg1 atDate:(id)arg2 requestIdentifier:(id)arg3 options:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)hourlyForecastForLocation:(id)arg1 requestIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)incomingRequestQueue;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1 error:(id*)arg2;
- (id)mapQueue;
- (id)parseQueue;
- (void)setCache:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setIncomingRequestQueue:(id)arg1;
- (void)setMapQueue:(id)arg1;
- (void)setParseQueue:(id)arg1;
- (void)setURLToCallbackMap:(id)arg1;
- (void)setURLToTaskMap:(id)arg1;

@end
