/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicNowPlayingVolumeSlider : MPVolumeSlider <MPUVibrantContentDisabling> {
    <MusicNowPlayingVolumeSliderDelegate> *_delegate;
    float _displayScaleUsedForTrackImages;
    UIView *_knobView;
    UIColor *_maximumTintUsedForTrackImageColor;
    UIColor *_minimumTintUsedForTrackImageColor;
    MPUTransportButton *_routesButton;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MusicNowPlayingVolumeSliderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) UIView *knobView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_airplayButtonTapped:(id)arg1;
- (void)_availableRoutesDidChangeNotification:(id)arg1;
- (void)_layoutForAvailableRoutes;
- (void)_layoutVolumeWarningView;
- (id)_newVolumeWarningView;
- (id)_trackImageWithTintColor:(id)arg1;
- (void)_updateNowPlayingVolumeSliderTrackTintColors;
- (id)createThumbView;
- (id)delegate;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 style:(int)arg2;
- (id)knobView;
- (id)layersNotWantingVibrancy;
- (void)layoutSubviews;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })maximumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })minimumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setPlayer:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })thumbRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 trackRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 value:(float)arg3;
- (void)traitCollectionDidChange:(id)arg1;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;

@end
