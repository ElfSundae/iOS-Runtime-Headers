/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

@interface VMUTaskMemoryScanner : NSObject <VMUCommonGraphInterface> {
    struct _VMUBlockNode { unsigned long long x1; unsigned int x2 : 3; unsigned int x3 : 2; unsigned int x4 : 36; unsigned int x5 : 23; } *_blocks;
    unsigned int _blocksCount;
    unsigned int _blocksSize;
    VMUClassInfoMap *_classInfoIndexer;
    id *_classInfos;
    unsigned int _classInfosCount;
    BOOL _exactScanningEnabled;
    unsigned long long _maxInteriorOffset;
    id /* block */ _nodeLogger;
    VMUObjectIdentifier *_objectIdentifier;
    int _pid;
    id /* block */ _referenceLogger;
    VMUVMRegionIdentifier *_regionIdentifier;
    struct _VMURegionMap { void *x1; struct _VMURegionNode {} *x2; unsigned int x3; unsigned long long x4; unsigned long long x5; unsigned int x6[0]; } *_regionMap;
    struct _VMURegionNode { id x1; void x2; unsigned long long x3; struct _VMURegionNode {} *x4; struct { /* ? */ } *x5; unsigned int x6; unsigned long long x7; unsigned long long x8; } *_regions;
    unsigned int _regionsCount;
    int _scanningMask;
    unsigned long long _suspendTime;
    unsigned int _suspensionToken;
    unsigned int _task;
    struct _VMUThreadNode { unsigned long long x1; unsigned int x2; unsigned int x3; unsigned int *x4; } *_threads;
    unsigned int _threadsCount;
    struct _VMUZoneNode { unsigned long long x1; id x2; struct malloc_introspection_t {} x3; } *_zones;
    unsigned int _zonesCount;
    unsigned int _zonesSize;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL exactScanningEnabled;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) unsigned int mallocNodeCount;
@property (nonatomic) unsigned long long maxInteriorOffset;
@property (nonatomic, readonly) unsigned int nodeCount;
@property (nonatomic, readonly) unsigned int nodeNamespaceSize;
@property (nonatomic, readonly) int pid;
@property (nonatomic, readonly) VMUClassInfoMap *realizedClasses;
@property (nonatomic, readonly) unsigned int regionCount;
@property (nonatomic) int scanningMask;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned int vmPageSize;
@property (nonatomic, readonly) unsigned int zoneCount;

+ (void)initialize;

- (void)_callRemoteMallocEnumerators:(unsigned int)arg1 block:(id /* block */)arg2;
- (void)_fixupBlockIsas;
- (void)_orderedScanWithScanner:(id /* block */)arg1 recorder:(id /* block */)arg2 keepMapped:(bool)arg3 actions:(id /* block */)arg4;
- (void)_scanIntoGraph:(id)arg1;
- (void)_sortBlocks;
- (BOOL)_suspend;
- (void)_withMemoryReaderBlock:(id /* block */)arg1;
- (void)_withOrderedNodeMapper:(id /* block */)arg1;
- (void)_withScanningContext:(id /* block */)arg1;
- (void)addMallocNodes:(id)arg1;
- (void)addMallocNodesFromTask;
- (void)addRootNodesFromTask;
- (void*)contentForNode:(unsigned int)arg1;
- (void)dealloc;
- (void)detachFromTask;
- (unsigned int)enumerateNodesWithBlock:(id /* block */)arg1;
- (unsigned int)enumerateObjectsWithBlock:(id /* block */)arg1;
- (unsigned int)enumerateReferencesWithBlock:(id /* block */)arg1;
- (unsigned int)enumerateRegionsWithBlock:(id /* block */)arg1;
- (BOOL)exactScanningEnabled;
- (id)initWithTask:(unsigned int)arg1;
- (id)initWithTask:(unsigned int)arg1 options:(unsigned int)arg2;
- (id)labelForNode:(unsigned int)arg1;
- (unsigned int)mallocNodeCount;
- (unsigned long long)maxInteriorOffset;
- (unsigned int)nodeCount;
- (id)nodeDescription:(unsigned int)arg1;
- (id)nodeDescription:(unsigned int)arg1 withOffset:(unsigned long long)arg2;
- (struct { unsigned long long x1; unsigned int x2 : 60; unsigned int x3 : 4; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; unsigned char x42; void*x43; unsigned long x44; void*x45; double x46; void*x47; void*x48; const void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; id x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; unsigned char x103; void*x104; unsigned long x105; void*x106; double x107; void*x108; void*x109; const void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; unsigned short x134; void*x135; short x136; void*x137; void*x138; void*x139; void*x140; unsigned long x141; int x142; unsigned int x143/* : ? */; const void*x144; const void*x145; void*x146; void*x147; const int x148; void x149; void*x150; void*x151; void*x152; void*x153; const void*x154; void*x155; void*x156; void*x157; out const void*x158; short x159; void*x160; unsigned char x161; void*x162; void*x163; void*x164; const void*x165; void*x166; unsigned int x167; void*x168; float x169; const void*x170; void*x171; void*x172; void*x173; out const void*x174; void*x175; unsigned char x176; void*x177; void*x178; void*x179; const void*x180; void*x181; unsigned int x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void x227; void*x228; int x229; bool x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; long doublex267; void*x268; void*x269; void*x270; void*x271; void*x272; unsigned long x273; out out void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; id x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; long doublex328; void*x329; void*x330; void*x331; void*x332; void*x333; unsigned long x334; out out void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; unsigned short x356; void*x357; unsigned short x358; void*x359; short x360; void*x361; void*x362; void*x363; void*x364; unsigned long x365; int x366; unsigned int x367/* : ? */; const void*x368; const void*x369; void*x370; void*x371; const int x372; void x373; void*x374; void*x375; void*x376; void*x377; const void*x378; void*x379; void*x380; void*x381; out const void*x382; short x383; void*x384; unsigned char x385; out const void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; long doublex392; void*x393; float x394; int x395; in int x396; void*x397; int x398; out in void*x399; float x400; const void*x401; void*x402; void*x403; void*x404; out const void*x405; void*x406; unsigned char x407; out const void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; long doublex414; void*x415; float x416; int x417; in int x418; void*x419; int x420; out in void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; out const void*x471; const int x472; void*x473; void*x474; void*x475; double x476; oneway int x477; double x478; void*x479; out void*x480; int x481; long x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; struct x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; unsigned short x520; void*x521; unsigned short x522; BOOL x523; const int x524; void*x525; void*x526; void*x527; void*x528; short x529; short x530; unsigned int x531/* : ? */; out out void*x532; unsigned long x533; int x534; unsigned int x535/* : ? */; const void*x536; const void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; unsigned short x595; void*x596; unsigned short x597; BOOL x598; const int x599; void*x600; void*x601; void*x602; void*x603; short x604; short x605; unsigned int x606/* : ? */; out out void*x607; unsigned long x608; int x609; unsigned int x610/* : ? */; const void*x611; const void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; unsigned short x639; void*x640; short x641; void*x642; void*x643; void*x644; void*x645; unsigned long x646; int x647; unsigned int x648/* : ? */; const void*x649; const void*x650; void*x651; void*x652; const int x653; void x654; void*x655; void*x656; void*x657; void*x658; const void*x659; void*x660; void*x661; void*x662; out const void*x663; short x664; void*x665; int x666; void*x667; void*x668; in void*x669; short x670; unsigned short x671; void*x672; out const void*x673; void*x674; unsigned int x675; void*x676; float x677; const void*x678; void*x679; void*x680; void*x681; out const void*x682; void*x683; int x684; void*x685; void*x686; in void*x687; short x688; unsigned short x689; void*x690; out const void*x691; void*x692; unsigned int x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; })nodeDetails:(unsigned int)arg1;
- (unsigned int)nodeNamespaceSize;
- (void)orderedNodeTraversal:(int)arg1 withBlock:(id /* block */)arg2;
- (int)pid;
- (id)processSnapshotGraph;
- (id)realizedClasses;
- (id)referenceDescription:(struct { unsigned long long x1; int x2; unsigned long long x3; })arg1 withSourceNode:(unsigned int)arg2 destinationNode:(unsigned int)arg3 symbolicator:(struct _CSTypeRef { unsigned int x1; unsigned int x2; })arg4 alignmentSpacing:(unsigned int)arg5;
- (unsigned int)regionCount;
- (void)removeRootReachableNodes;
- (void)scanNodesForReferences:(id /* block */)arg1;
- (id)scanNodesIntoGraph;
- (int)scanningMask;
- (void)setExactScanningEnabled:(BOOL)arg1;
- (void)setMaxInteriorOffset:(unsigned long long)arg1;
- (void)setNodeScanningLogger:(id /* block */)arg1;
- (void)setReferenceScanningLogger:(id /* block */)arg1;
- (void)setScanningMask:(int)arg1;
- (unsigned int)vmPageSize;
- (unsigned int)zoneCount;
- (id)zoneNameForIndex:(unsigned int)arg1;
- (id)zoneNameForNode:(unsigned int)arg1;

@end
