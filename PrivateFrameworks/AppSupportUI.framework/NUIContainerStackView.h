/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI
 */

@interface NUIContainerStackView : NUIContainerView <_NUIGridArrangementContainer> {
    int  _alignment;
    int  _axis;
    int  _distribution;
    float  _spacing;
    struct vector<float, std::__1::allocator<float> > { 
        float *__begin_; 
        float *__end_; 
        struct __compressed_pair<float *, std::__1::allocator<float> > { 
            float *__first_; 
        } __end_cap_; 
    }  _spacingAfter;
    Class  _spacingViewClass;
    NSMutableArray * _spacingViews;
    struct { 
        unsigned int delegateMinSpacing : 1; 
        unsigned int delegateAlignment : 1; 
    }  _stackViewFlags;
    struct _NUIGridArrangement { 
        <_NUIGridArrangementContainer> *container; 
        BOOL baselineRelative; 
        int horzDist; 
        int vertDist; 
        struct vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> > { 
            struct _NUIGridArrangementCell {} *__begin_; 
            struct _NUIGridArrangementCell {} *__end_; 
            struct __compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> > { 
                struct _NUIGridArrangementCell {} *__first_; 
            } __end_cap_; 
        } cells; 
        struct vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > { 
            struct _NUIGridArrangementDimension {} *__begin_; 
            struct _NUIGridArrangementDimension {} *__end_; 
            struct __compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> > { 
                struct _NUIGridArrangementDimension {} *__first_; 
            } __end_cap_; 
        } columns; 
        struct vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > { 
            struct _NUIGridArrangementDimension {} *__begin_; 
            struct _NUIGridArrangementDimension {} *__end_; 
            struct __compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> > { 
                struct _NUIGridArrangementDimension {} *__first_; 
            } __end_cap_; 
        } rows; 
    }  _visibleArrangement;
    struct CGSize { 
        float width; 
        float height; 
    }  _visibleCount;
}

@property (nonatomic) int alignment;
@property (nonatomic) int axis;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NUIContainerStackViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) int distribution;
@property (readonly) unsigned int hash;
@property (nonatomic) float spacing;
@property (nonatomic, retain) Class spacingViewClass;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_baselineViewVendForFirstBaseline:(BOOL)arg1;
- (int)_effectiveAlignmentForArrangedSubview:(id)arg1;
- (int)alignment;
- (id)arrangedDescription;
- (int)axis;
- (struct CGSize { float x1; float x2; })calculateArrangedSizeFittingSize:(struct CGSize { float x1; float x2; })arg1;
- (void)dealloc;
- (void)didInsertArrangedSubview:(id)arg1 atIndex:(int)arg2;
- (void)didRemoveArrangedSubview:(id)arg1 atIndex:(int)arg2;
- (int)distribution;
- (id)initWithArrangedSubviews:(id)arg1;
- (void)invalidateIntrinsicContentSizeRequiringArrangedSubviewRemeasurement:(BOOL)arg1;
- (BOOL)layoutArrangedSubviewsInBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)populateGridArrangementCells:(struct vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> > { struct _NUIGridArrangementCell {} *x1; struct _NUIGridArrangementCell {} *x2; struct __compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> > { struct _NUIGridArrangementCell {} *x_3_1_1; } x3; }*)arg1;
- (void)populateGridArrangementDimension:(struct vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > { struct _NUIGridArrangementDimension {} *x1; struct _NUIGridArrangementDimension {} *x2; struct __compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> > { struct _NUIGridArrangementDimension {} *x_3_1_1; } x3; }*)arg1 withCells:(const struct vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> > { struct _NUIGridArrangementCell {} *x1; struct _NUIGridArrangementCell {} *x2; struct __compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> > { struct _NUIGridArrangementCell {} *x_3_1_1; } x3; }*)arg2 axis:(int)arg3;
- (void)setAlignment:(int)arg1;
- (void)setAxis:(int)arg1;
- (void)setBaselineRelativeArrangement:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDistribution:(int)arg1;
- (void)setSpacing:(float)arg1;
- (void)setSpacing:(float)arg1 afterArrangedSubviewAtIndex:(int)arg2;
- (void)setSpacingViewClass:(Class)arg1;
- (float)spacing;
- (float)spacingAfterArrangedSubviewAtIndex:(int)arg1;
- (Class)spacingViewClass;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end
