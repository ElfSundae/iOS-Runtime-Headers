/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriUICore.framework/SiriUICore
 */

@interface SUICFlamesView : UIView {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _activeFrame;
    float _auraMaxSubdivisionLevel;
    float _auraMinSubdivisionLevel;
    int _auraProgramHandle;
    unsigned int _auraVertexCircles;
    FlameGroup *_currentFlameGroup;
    <SUICFlamesViewDelegate> *_delegate;
    float _dictationUnitSize;
    CADisplayLink *_displayLink;
    EAGLContext *_eaglContext;
    unsigned int _elementArrayHandle;
    int _fShadID;
    int _fidelity;
    NSMutableArray *_flameGroups;
    int _flameProgramHandle;
    unsigned int _framebufferHandle;
    BOOL _hasCustomActiveFrame;
    BOOL _isInitialized;
    SUICAudioLevelSmoother *_levelSmoother;
    float _maxSubdivisionLevel;
    unsigned int _maxVertexCircles;
    int _mode;
    unsigned int _numAuraIndices;
    unsigned int _numAuraIndicesCulled;
    unsigned int _numVertices;
    unsigned int _numWaveIndices;
    UIImage *_overlayImage;
    UIImageView *_overlayImageView;
    BOOL _reduceFrameRate;
    BOOL _reduceMotionEnabled;
    unsigned int _renderbufferHandle;
    UIScreen *_screen;
    BOOL _shadersAreCompiled;
    BOOL _showAura;
    double _startTime;
    int _state;
    int _vShadID;
    unsigned int _vertexArrayObjectHandle;
    unsigned int _vertexBufferHandle;
    int _viewHeight;
    int _viewWidth;
}

@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } activeFrame;
@property (nonatomic) <SUICFlamesViewDelegate> *delegate;
@property (nonatomic) int mode;
@property (nonatomic, retain) UIImage *overlayImage;
@property (nonatomic) BOOL reduceFrameRate;
@property (nonatomic) BOOL showAura;
@property (nonatomic) int state;

+ (Class)layerClass;
+ (void)prewarmShadersForScreen:(id)arg1 size:(struct CGSize { float x1; float x2; })arg2;
+ (void)prewarmShadersForScreen:(id)arg1 size:(struct CGSize { float x1; float x2; })arg2 fidelity:(int)arg3;

- (void).cxx_destruct;
- (void)_cleanupGL;
- (float)_currentMicPowerLevel;
- (int)_generateIndicesForNumCircleShapes:(int)arg1 withMaxSubdivisionLevel:(float)arg2 startingWithNumSubdivisionLevel:(float)arg3 forIndices:(unsigned int**)arg4 atStartIndex:(int)arg5 withFill:(BOOL)arg6 withCullingForAura:(BOOL)arg7 forVertices:(struct { }*)arg8;
- (BOOL)_initGLAndSetupDisplayLink:(BOOL)arg1;
- (unsigned int)_numVerticesPerCircle;
- (void)_predeterminedVertexPositionForAuraWithPolarVertex;
- (void)_reduceMotionStatusChanged:(id)arg1;
- (BOOL)_resizeFromLayer:(id)arg1;
- (void)_setValuesForFidelity:(int)arg1;
- (void)_setupDisplayLink;
- (BOOL)_setupFramebuffer;
- (BOOL)_setupShaders;
- (BOOL)_setupVertexBuffer;
- (void)_tearDownDisplayLink;
- (void)_updateCurveLayer:(id)arg1;
- (void)_updateOrthoProjection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })activeFrame;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToSuperview;
- (BOOL)inDictationMode;
- (BOOL)inSiriMode;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 screen:(id)arg2 fidelity:(int)arg3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 screenScale:(float)arg2 fidelity:(int)arg3;
- (void)layoutSubviews;
- (int)mode;
- (id)overlayImage;
- (void)prewarmShadersForCurrentMode;
- (BOOL)reduceFrameRate;
- (void)resetAndReinitializeGL:(BOOL)arg1;
- (void)setActiveFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setMode:(int)arg1;
- (void)setOverlayImage:(id)arg1;
- (void)setReduceFrameRate:(BOOL)arg1;
- (void)setShowAura:(BOOL)arg1;
- (void)setState:(int)arg1;
- (BOOL)showAura;
- (int)state;

@end
