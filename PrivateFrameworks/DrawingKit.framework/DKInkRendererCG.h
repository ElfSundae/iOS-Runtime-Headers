/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DrawingKit.framework/DrawingKit
 */

@interface DKInkRendererCG : UIView <DKInkRenderer> {
    NSMutableArray * _cachedInterpolatedBrushStrokes;
    NSMutableArray * _currentInterpolatedBrushStroke;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _invalidRect;
    <DKInkRendererDelegate> * delegate;
    BOOL  drawingEnabled;
    float  drawingScale;
    UIColor * inkColor;
    unsigned int  mode;
    BOOL  scaleDrawingToFitCanvas;
}

@property (nonatomic, retain) NSMutableArray *cachedInterpolatedBrushStrokes;
@property (nonatomic, retain) NSMutableArray *currentInterpolatedBrushStroke;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <DKInkRendererDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL drawingEnabled;
@property (nonatomic) float drawingScale;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) BOOL initialized;
@property (nonatomic, retain) UIColor *inkColor;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } invalidRect;
@property (nonatomic, readonly) unsigned int maximumPointsForBleedAnimation;
@property (nonatomic) unsigned int mode;
@property (nonatomic) BOOL scaleDrawingToFitCanvas;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL supportsBleedAnimation;

- (void).cxx_destruct;
- (void)_commonInit;
- (void)addPoint:(struct { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; float x2; float x3; float x4; })arg1;
- (void)beginStroke;
- (id)cachedInterpolatedBrushStrokes;
- (void)clear;
- (void)completeAnimationsImmediately;
- (id)currentInterpolatedBrushStroke;
- (void)dealloc;
- (id)delegate;
- (void)display;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)drawingEnabled;
- (float)drawingScale;
- (void)endStroke;
- (void)flush;
- (void)force;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)initialized;
- (id)inkColor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })invalidRect;
- (unsigned int)maximumPointsForBleedAnimation;
- (unsigned int)mode;
- (void)removeLastStroke;
- (void)resetRendererState;
- (BOOL)scaleDrawingToFitCanvas;
- (void)setCachedInterpolatedBrushStrokes:(id)arg1;
- (void)setCurrentInterpolatedBrushStroke:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDrawingEnabled:(BOOL)arg1;
- (void)setDrawingScale:(float)arg1;
- (void)setInkColor:(id)arg1;
- (void)setInvalidRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setMode:(unsigned int)arg1;
- (void)setScaleDrawingToFitCanvas:(BOOL)arg1;
- (id)snapshot;
- (BOOL)supportsBleedAnimation;
- (void)teardown;

@end
