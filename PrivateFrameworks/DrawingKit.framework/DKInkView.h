/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DrawingKit.framework/DrawingKit
 */

@interface DKInkView : UIView <DKInkRendererDelegate> {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _aggregateInvalid;
    BOOL  _allowInput;
    id /* block */  _animationCompletionHandler;
    unsigned int  _animationType;
    NSMutableArray * _cachedInterpolatedAnimationPoints;
    NSMutableArray * _cachedInterpolatedAnimationStrokes;
    NSMutableArray * _cachedInterpolatedBrushStrokes;
    struct CGColor { } * _cgColor;
    NSMutableArray * _computedAnimationFrames;
    DKDrawingStroke * _currentBrushStroke;
    DKDrawing * _currentDrawing;
    NSMutableArray * _currentInterpolatedBrushStroke;
    float  _currentWeight;
    CADisplayLink * _displayLink;
    float  _drawingScale;
    DKPointSmoothing * _inputFIFO;
    BOOL  _isAddingPointWithoutSmoothing;
    BOOL  _isRenderingPaused;
    struct CGPoint { 
        float x; 
        float y; 
    }  _lastPoint;
    double  _lastTouchTime;
    void _lastVectorPoint;
    float  _maxPressure;
    float  _maxThickness;
    float  _minPressure;
    float  _minThickness;
    unsigned int  _mode;
    <DKInkViewRenderDelegate> * _renderPreviewDelegate;
    unsigned int  _renderPreviewMode;
    UIView<DKInkRenderer> * _renderer;
    BOOL  _scaleDrawingToFitCanvas;
    UIColor * _strokeColor;
    struct CGPoint { 
        float x; 
        float y; 
    }  _strokeLastLocation;
    struct CGPoint { 
        float x; 
        float y; 
    }  _strokeStartLocation;
    double  _strokeStartTime;
    NSUndoManager * _strokeUndoManager;
    unsigned int  _totalPointsAdded;
    id  _trackingTouchID;
    BOOL  _trackingTouches;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _unionDrawingRect;
    struct CGPoint { 
        float x; 
        float y; 
    }  _velocityInWindow;
}

@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } aggregateInvalid;
@property (nonatomic) BOOL allowInput;
@property (nonatomic) unsigned int animationType;
@property (nonatomic, retain) NSMutableArray *cachedInterpolatedAnimationPoints;
@property (nonatomic, retain) NSMutableArray *cachedInterpolatedAnimationStrokes;
@property (nonatomic, retain) NSMutableArray *cachedInterpolatedBrushStrokes;
@property (nonatomic, readonly) BOOL canvasHasInk;
@property (nonatomic, retain) NSMutableArray *computedAnimationFrames;
@property (nonatomic, readonly) int countOfCurrentStroke;
@property (nonatomic, retain) DKDrawingStroke *currentBrushStroke;
@property (nonatomic, copy) DKDrawing *currentDrawing;
@property (nonatomic, retain) NSMutableArray *currentInterpolatedBrushStroke;
@property (nonatomic) float currentWeight;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CADisplayLink *displayLink;
@property (nonatomic) float drawingScale;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } inkBounds;
@property (nonatomic, retain) DKPointSmoothing *inputFIFO;
@property BOOL isAddingPointWithoutSmoothing;
@property (nonatomic, readonly) BOOL isRenderingPaused;
@property (nonatomic) void lastVectorPoint;
@property (nonatomic) float maxPressure;
@property (nonatomic) float maxThickness;
@property (nonatomic) float minPressure;
@property (nonatomic) float minThickness;
@property (nonatomic) unsigned int mode;
@property (nonatomic) <DKInkViewRenderDelegate> *renderPreviewDelegate;
@property (nonatomic) unsigned int renderPreviewMode;
@property (nonatomic, retain) UIView<DKInkRenderer> *renderer;
@property (nonatomic) BOOL scaleDrawingToFitCanvas;
@property (nonatomic, retain) UIColor *strokeColor;
@property struct CGPoint { float x1; float x2; } strokeLastLocation;
@property struct CGPoint { float x1; float x2; } strokeStartLocation;
@property double strokeStartTime;
@property (nonatomic, retain) NSUndoManager *strokeUndoManager;
@property (readonly) Class superclass;
@property unsigned int totalPointsAdded;
@property (nonatomic, readonly) BOOL trackingTouches;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } unionDrawingRect;

+ (BOOL)gpuAvailable;
+ (float)lengthOfVector:(struct CGVector { float x1; float x2; })arg1;
+ (struct CGVector { float x1; float x2; })normalizeVector:(struct CGVector { float x1; float x2; })arg1;
+ (struct CGPoint { float x1; float x2; })normalizeVectorPoint:(struct CGPoint { float x1; float x2; })arg1;
+ (float)windowBackingScaleFactor:(id)arg1;

- (void).cxx_destruct;
- (void)_addUninterpolatedPoints:(/* Warning: Unrecognized filer type: '8' using 'void*' */ void**)arg1 controlPoint:(/* Warning: Unrecognized filer type: '1' using 'void*' */ void**)arg2 count:(unsigned long)arg3 flushing:(BOOL)arg4;
- (void)_commonInit;
- (void)_computeAnimationFramesFittingInMaxDuration:(double)arg1;
- (BOOL)_deviceSupportsGL;
- (void)_display;
- (void)_notifyRenderDelegate;
- (void)_postTouchesBeganNotification:(struct CGPoint { float x1; float x2; })arg1;
- (void)_postTouchesEndedNotification:(struct CGPoint { float x1; float x2; })arg1;
- (void)_renderEmittedPoints:(/* Warning: Unrecognized filer type: '8' using 'void*' */ void**)arg1 count:(unsigned long)arg2;
- (void)_replayAnimationTick:(id)arg1;
- (void)_setDrawingOnRenderer:(id)arg1;
- (void)_setDrawingOnRendererWithBleedAnimation:(id)arg1;
- (void)_setDrawingOnRendererWithReplayAnimation:(id)arg1;
- (void)_startDisplayLink;
- (void)_stopDisplayLink;
- (void)_undoLastStroke:(id)arg1;
- (void)_updateVelocityWithTouch:(id)arg1 average:(BOOL)arg2;
- (void)_vector4ForTouchSettingWeightAndVelocity:(id)arg1 average:(BOOL)arg2;
- (struct CGPoint { float x1; float x2; })_velocityForTouch:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })aggregateInvalid;
- (BOOL)ak_forceAvailableForTouch:(id)arg1;
- (BOOL)allowInput;
- (unsigned int)animationType;
- (id)cachedInterpolatedAnimationPoints;
- (id)cachedInterpolatedAnimationStrokes;
- (id)cachedInterpolatedBrushStrokes;
- (BOOL)canvasHasInk;
- (void)clear;
- (id)computedAnimationFrames;
- (void)continueStroke;
- (void)continueStrokeWithoutSmoothing;
- (int)countOfCurrentStroke;
- (id)currentBrushStroke;
- (id)currentDrawing;
- (id)currentInterpolatedBrushStroke;
- (float)currentWeight;
- (void)dealloc;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (id)displayLink;
- (float)drawingScale;
- (void)handleCoalescedTouches:(id)arg1 forTouch:(id)arg2 average:(BOOL)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })inkBounds;
- (void)inkDidCompleteRender:(id)arg1;
- (void)inkDidRender:(id)arg1;
- (id)inputFIFO;
- (float)interfaceScale;
- (BOOL)isAddingPointWithoutSmoothing;
- (BOOL)isRenderingPaused;
- (void)lastVectorPoint;
- (void)layoutSubviews;
- (float)maxPressure;
- (float)maxThickness;
- (float)minPressure;
- (float)minThickness;
- (unsigned int)mode;
- (void)pauseRendering;
- (id)renderPreviewDelegate;
- (unsigned int)renderPreviewMode;
- (id)renderer;
- (void)resumeRendering;
- (BOOL)scaleDrawingToFitCanvas;
- (void)setAggregateInvalid:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setAllowInput:(BOOL)arg1;
- (void)setAnimationType:(unsigned int)arg1;
- (void)setCachedInterpolatedAnimationPoints:(id)arg1;
- (void)setCachedInterpolatedAnimationStrokes:(id)arg1;
- (void)setCachedInterpolatedBrushStrokes:(id)arg1;
- (void)setComputedAnimationFrames:(id)arg1;
- (void)setCurrentBrushStroke:(id)arg1;
- (void)setCurrentDrawing:(id)arg1;
- (void)setCurrentDrawing:(id)arg1 scaleDrawingToFitBounds:(BOOL)arg2 withAnimationType:(unsigned int)arg3 animationCompletionHandler:(id /* block */)arg4;
- (void)setCurrentInterpolatedBrushStroke:(id)arg1;
- (void)setCurrentWeight:(float)arg1;
- (void)setDisplayLink:(id)arg1;
- (void)setDrawingScale:(float)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setInputFIFO:(id)arg1;
- (void)setIsAddingPointWithoutSmoothing:(BOOL)arg1;
- (void)setLastVectorPoint;
- (void)setMaxPressure:(float)arg1;
- (void)setMaxThickness:(float)arg1;
- (void)setMinPressure:(float)arg1;
- (void)setMinThickness:(float)arg1;
- (void)setMode:(unsigned int)arg1;
- (void)setRenderPreviewDelegate:(id)arg1;
- (void)setRenderPreviewMode:(unsigned int)arg1;
- (void)setRenderer:(id)arg1;
- (void)setScaleDrawingToFitCanvas:(BOOL)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeLastLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)setStrokeStartLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)setStrokeStartTime:(double)arg1;
- (void)setStrokeUndoManager:(id)arg1;
- (void)setTotalPointsAdded:(unsigned int)arg1;
- (void)setUnionDrawingRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setupRenderer;
- (id)snapshotRendererState;
- (void)startStroke;
- (id)strokeColor;
- (struct CGPoint { float x1; float x2; })strokeLastLocation;
- (struct CGPoint { float x1; float x2; })strokeStartLocation;
- (double)strokeStartTime;
- (id)strokeUndoManager;
- (void)teardown;
- (void)terminateStroke;
- (unsigned int)totalPointsAdded;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (BOOL)trackingTouches;
- (void)undoLastStroke;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })unionDrawingRect;
- (float)weightForTouch:(id)arg1;
- (float)weightForValue:(float)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

@end
