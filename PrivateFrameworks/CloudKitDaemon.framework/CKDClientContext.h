/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDClientContext : NSObject <CKLoggingProtocol> {
    CKDMMCS *_MMCS;
    CKDAccount *_account;
    CKAccountInfo *_accountInfoOverride;
    BOOL _allowsPowerNapScheduling;
    NSString *_applicationAssetDbDirectory;
    NSBundle *_applicationBundle;
    NSString *_applicationBundleID;
    NSString *_applicationCachesDirectory;
    NSString *_applicationContainerCloudKitDirectory;
    NSString *_applicationContainerPath;
    NSString *_applicationDisplayName;
    NSString *_applicationFileDownloadDirectory;
    NSURL *_applicationIcon;
    NSString *_applicationMMCSDirectory;
    NSString *_applicationPackageDownloadDirectory;
    NSString *_applicationPackageUploadDirectory;
    NSString *_applicationRecordCacheDirectory;
    NSString *_applicationVersion;
    CKDPublicIdentityLookupService *_backgroundPublicIdentityLookupService;
    CKDZoneGatekeeper *_backgroundZoneGatekeeper;
    int _cachedEnvironment;
    BOOL _canAccessProtectionData;
    BOOL _canSetDeviceIdentifier;
    CKDServerConfiguration *_config;
    NSString *_containerHardwareIDHash;
    CKContainerID *_containerID;
    NSString *_containerScopedUserID;
    NSString *_contextID;
    int _darkWakeEnabled;
    NSMutableDictionary *_fakeErrorByClassName;
    BOOL _finishedAppProxySetup;
    CKDFlowControlManager *_flowControlManager;
    CKDPublicIdentityLookupService *_foregroundPublicIdentityLookupService;
    CKDZoneGatekeeper *_foregroundZoneGatekeeper;
    BOOL _hasAllowAccessDuringBuddyEntitlement;
    BOOL _hasDataContainer;
    BOOL _isForClouddInternalUse;
    CKDMescalSession *_mescalSession;
    NSMutableArray *_oldApplicationCaches;
    CKDPCSManager *_pcsManager;
    NSHashTable *_proxies;
    NSURL *_publicCloudDBURL;
    NSURL *_publicDeviceServiceURL;
    CKDKeyValueDiskCache *_publicIdentitiesDiskCache;
    NSURL *_publicShareServiceURL;
    BOOL _sandboxed;
    NSObject<OS_dispatch_queue> *_setupQueue;
    NSString *_sourceApplicationBundleID;
    CKTimeLogger *_timeLogger;
    int _type;
    int _usesAPSPublicToken;
}

@property (retain) CKDMMCS *MMCS;
@property (retain) CKDAccount *account;
@property (nonatomic, readonly) CKAccountInfo *accountInfoOverride;
@property (nonatomic, readonly) BOOL allowsCellularAccess;
@property (nonatomic) BOOL allowsPowerNapScheduling;
@property (nonatomic, retain) NSString *applicationAssetDbDirectory;
@property (nonatomic, readonly) NSBundle *applicationBundle;
@property (nonatomic, readonly) NSString *applicationBundleID;
@property (nonatomic, retain) NSString *applicationCachesDirectory;
@property (nonatomic, retain) NSString *applicationContainerCloudKitDirectory;
@property (nonatomic, retain) NSString *applicationContainerPath;
@property (nonatomic, readonly) NSString *applicationDisplayName;
@property (nonatomic, retain) NSString *applicationFileDownloadDirectory;
@property (nonatomic, readonly) NSURL *applicationIcon;
@property (nonatomic, retain) NSString *applicationMMCSDirectory;
@property (nonatomic, retain) NSString *applicationPackageDownloadDirectory;
@property (nonatomic, retain) NSString *applicationPackageUploadDirectory;
@property (nonatomic, retain) NSString *applicationRecordCacheDirectory;
@property (nonatomic, retain) NSString *applicationVersion;
@property (setter=setAPSEnvironmentString:, nonatomic, retain) NSString *apsEnvironmentString;
@property (nonatomic, retain) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService;
@property (nonatomic, retain) CKDZoneGatekeeper *backgroundZoneGatekeeper;
@property int cachedEnvironment;
@property (nonatomic, readonly) BOOL canAccessAccount;
@property (nonatomic) BOOL canAccessProtectionData;
@property (nonatomic) BOOL canSetDeviceIdentifier;
@property (nonatomic, retain) CKDServerConfiguration *config;
@property (nonatomic, readonly) NSString *containerHardwareIDHash;
@property (nonatomic, readonly) CKContainerID *containerID;
@property (nonatomic, retain) NSString *containerScopedUserID;
@property (nonatomic, readonly) NSString *contextID;
@property (nonatomic) int darkWakeEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *fakeErrorByClassName;
@property (nonatomic) BOOL finishedAppProxySetup;
@property (nonatomic, retain) CKDFlowControlManager *flowControlManager;
@property (nonatomic, retain) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService;
@property (nonatomic, retain) CKDZoneGatekeeper *foregroundZoneGatekeeper;
@property (nonatomic) BOOL hasAllowAccessDuringBuddyEntitlement;
@property (nonatomic) BOOL hasDataContainer;
@property (setter=setHasSystemServiceEntitlement:, nonatomic) BOOL hasSystemServiceEntitlement;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL isForClouddInternalUse;
@property (nonatomic, retain) CKDMescalSession *mescalSession;
@property (nonatomic, retain) NSMutableArray *oldApplicationCaches;
@property (nonatomic, retain) CKDPCSManager *pcsManager;
@property (nonatomic, retain) NSHashTable *proxies;
@property (nonatomic, retain) NSURL *publicCloudDBURL;
@property (nonatomic, retain) NSURL *publicDeviceServiceURL;
@property (nonatomic, retain) CKDKeyValueDiskCache *publicIdentitiesDiskCache;
@property (nonatomic, retain) NSURL *publicShareServiceURL;
@property (getter=isSandboxed, nonatomic) BOOL sandboxed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *setupQueue;
@property (nonatomic, readonly) NSString *sourceApplicationBundleID;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKTimeLogger *timeLogger;
@property (nonatomic, readonly) int type;
@property (nonatomic) int usesAPSPublicToken;

+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(BOOL)arg4;
+ (id)applicationContainerPathForBundleID:(id)arg1 bundleURL:(id*)arg2 type:(int*)arg3;
+ (id)contextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextForInternalUseWithAppContainerTuple:(id)arg1;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(BOOL)arg4;
+ (id)sharedContexts;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)MMCS;
- (void)_determineHardwareInfo;
- (id)_issueSandboxExtensionForPath:(id)arg1 error:(id*)arg2;
- (void)_loadApplicationContainerPathAndType;
- (void)_purgeOldCacheDirectories;
- (void)_reloadAccount;
- (BOOL)_setupDirectoriesWithClientProxy:(id)arg1 sandboxExtensions:(id*)arg2 error:(id*)arg3;
- (id)account;
- (id)accountInfoOverride;
- (void)addClientProxy:(id)arg1;
- (BOOL)allowsCellularAccess;
- (BOOL)allowsPowerNapScheduling;
- (id)applicationAssetDbDirectory;
- (id)applicationBundle;
- (id)applicationBundleID;
- (id)applicationCachesDirectory;
- (id)applicationContainerCloudKitDirectory;
- (id)applicationContainerPath;
- (id)applicationDisplayName;
- (id)applicationFileDownloadDirectory;
- (id)applicationIcon;
- (id)applicationMMCSDirectory;
- (id)applicationPackageDownloadDirectory;
- (id)applicationPackageUploadDirectory;
- (id)applicationRecordCacheDirectory;
- (id)applicationVersion;
- (id)apsEnvironmentString;
- (id)backgroundPublicIdentityLookupService;
- (id)backgroundZoneGatekeeper;
- (int)cachedEnvironment;
- (BOOL)canAccessAccount;
- (BOOL)canAccessProtectionData;
- (BOOL)canSetDeviceIdentifier;
- (void)clearAssetCache;
- (void)clearAssetCacheWithDatabaseScope:(int)arg1;
- (void)clearAuthTokensForRecordWithID:(id)arg1 databaseScope:(int)arg2;
- (void)clearRecordCacheWithDatabaseScope:(int)arg1;
- (id)config;
- (id)containerHardwareIDHash;
- (id)containerID;
- (id)containerScopedUserID;
- (id)contextID;
- (int)darkWakeEnabled;
- (void)dealloc;
- (id)description;
- (id)fakeErrorByClassName;
- (void)finishSetupWithClientProxy:(id)arg1 completionHandler:(id /* block */)arg2;
- (BOOL)finishedAppProxySetup;
- (id)flowControlManager;
- (id)foregroundPublicIdentityLookupService;
- (id)foregroundZoneGatekeeper;
- (BOOL)hasAllowAccessDuringBuddyEntitlement;
- (BOOL)hasDataContainer;
- (BOOL)hasSystemServiceEntitlement;
- (id)initWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
- (BOOL)isForClouddInternalUse;
- (BOOL)isSandboxed;
- (void)logWithFile:(const char *)arg1 function:(const char *)arg2 line:(int)arg3 level:(int)arg4 section:(id)arg5 format:(id)arg6;
- (id)mescalSession;
- (id)oldApplicationCaches;
- (id)pcsManager;
- (void)performRequest:(id)arg1;
- (id)proxies;
- (id)publicCloudDBURL;
- (id)publicDeviceServiceURL;
- (id)publicIdentitiesDiskCache;
- (double)publicIdentitiesExpirationTimeout;
- (id)publicShareServiceURL;
- (void)removeClientProxy:(id)arg1;
- (void)setAPSEnvironmentString:(id)arg1;
- (void)setAccount:(id)arg1;
- (void)setAllowsPowerNapScheduling:(BOOL)arg1;
- (void)setApplicationAssetDbDirectory:(id)arg1;
- (void)setApplicationCachesDirectory:(id)arg1;
- (void)setApplicationContainerCloudKitDirectory:(id)arg1;
- (void)setApplicationContainerPath:(id)arg1;
- (void)setApplicationFileDownloadDirectory:(id)arg1;
- (void)setApplicationMMCSDirectory:(id)arg1;
- (void)setApplicationPackageDownloadDirectory:(id)arg1;
- (void)setApplicationPackageUploadDirectory:(id)arg1;
- (void)setApplicationRecordCacheDirectory:(id)arg1;
- (void)setApplicationVersion:(id)arg1;
- (void)setBackgroundPublicIdentityLookupService:(id)arg1;
- (void)setBackgroundZoneGatekeeper:(id)arg1;
- (void)setCachedEnvironment:(int)arg1;
- (void)setCanAccessProtectionData:(BOOL)arg1;
- (void)setCanSetDeviceIdentifier:(BOOL)arg1;
- (void)setConfig:(id)arg1;
- (void)setContainerScopedUserID:(id)arg1;
- (void)setDarkWakeEnabled:(int)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)setFakeErrorByClassName:(id)arg1;
- (void)setFinishedAppProxySetup:(BOOL)arg1;
- (void)setFlowControlManager:(id)arg1;
- (void)setForegroundPublicIdentityLookupService:(id)arg1;
- (void)setForegroundZoneGatekeeper:(id)arg1;
- (void)setHasAllowAccessDuringBuddyEntitlement:(BOOL)arg1;
- (void)setHasDataContainer:(BOOL)arg1;
- (void)setHasSystemServiceEntitlement:(BOOL)arg1;
- (void)setIsForClouddInternalUse:(BOOL)arg1;
- (void)setMMCS:(id)arg1;
- (void)setMescalSession:(id)arg1;
- (void)setOldApplicationCaches:(id)arg1;
- (void)setPcsManager:(id)arg1;
- (void)setProxies:(id)arg1;
- (void)setPublicCloudDBURL:(id)arg1;
- (void)setPublicDeviceServiceURL:(id)arg1;
- (void)setPublicIdentitiesDiskCache:(id)arg1;
- (void)setPublicShareServiceURL:(id)arg1;
- (void)setSandboxed:(BOOL)arg1;
- (void)setSetupQueue:(id)arg1;
- (void)setTimeLogger:(id)arg1;
- (void)setUsesAPSPublicToken:(int)arg1;
- (BOOL)setupAssetTransfersWithClientProxy:(id)arg1 error:(id*)arg2;
- (BOOL)setupMMCSWrapperWithError:(id*)arg1;
- (id)setupQueue;
- (void)showUserNotification:(struct __CFUserNotification { }*)arg1 withCompletionBlock:(id /* block */)arg2;
- (id)sourceApplicationBundleID;
- (void)startSetupWithClientProxy:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)tearDownAssetTransfers;
- (id)timeLogger;
- (int)type;
- (int)usesAPSPublicToken;

@end
