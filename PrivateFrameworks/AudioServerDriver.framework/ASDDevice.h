/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AudioServerDriver.framework/AudioServerDriver
 */

@interface ASDDevice : ASDObject {
    BOOL  _canBeDefaultDevice;
    BOOL  _canBeDefaultSystemDevice;
    BOOL  _canChangeDeviceName;
    NSObject<OS_dispatch_queue> * _controlQueue;
    NSMutableArray * _controls;
    NSString * _deviceName;
    NSString * _deviceUID;
    BOOL  _hidden;
    unsigned long  _inputLatency;
    unsigned long  _inputSafetyOffset;
    NSObject<OS_dispatch_queue> * _inputStreamQueue;
    NSMutableArray * _inputStreams;
    long long  _ioReferenceCount;
    NSObject<OS_dispatch_queue> * _ioReferenceQueue;
    BOOL  _isAlive;
    BOOL  _isRunning;
    NSString * _manufacturerName;
    NSString * _modelName;
    NSString * _modelUID;
    unsigned long  _outputLatency;
    unsigned long  _outputSafetyOffset;
    NSObject<OS_dispatch_queue> * _outputStreamQueue;
    NSMutableArray * _outputStreams;
    NSObject<OS_dispatch_queue> * _sampleRateQueue;
    double  _samplingRate;
    NSArray * _samplingRates;
    unsigned int  _timestampPeriod;
}

@property (nonatomic) BOOL canBeDefaultDevice;
@property (nonatomic) BOOL canBeDefaultSystemDevice;
@property (nonatomic) BOOL canChangeDeviceName;
@property (nonatomic, readonly) unsigned long clockAlgorithm;
@property (nonatomic, readonly) unsigned long clockIsStable;
@property (nonatomic, retain) NSString *deviceName;
@property (nonatomic, retain) NSString *deviceUID;
@property (nonatomic, readonly) BOOL hasInput;
@property (nonatomic, readonly) BOOL hasOutput;
@property (getter=isHidden, nonatomic) BOOL hidden;
@property (nonatomic) unsigned long inputLatency;
@property (nonatomic) unsigned long inputSafetyOffset;
@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *ioReferenceQueue;
@property (nonatomic, retain) NSString *manufacturerName;
@property (nonatomic, retain) NSString *modelName;
@property (nonatomic, retain) NSString *modelUID;
@property (nonatomic) unsigned long outputLatency;
@property (nonatomic) unsigned long outputSafetyOffset;
@property (getter=isRunning, nonatomic, readonly) BOOL running;
@property (nonatomic) double samplingRate;
@property (nonatomic, copy) NSArray *samplingRates;
@property (nonatomic) unsigned int timestampPeriod;
@property (nonatomic, readonly) unsigned int transportType;

- (void).cxx_destruct;
- (void)_updateSafetyOffsets:(double)arg1;
- (void)_updateTimestampPeriod:(double)arg1;
- (long)addClient:(const struct AudioServerPlugInClientInfo { unsigned int x1; int x2; unsigned char x3; struct __CFString {} *x4; }*)arg1;
- (void)addControl:(id)arg1;
- (void)addInputStream:(id)arg1;
- (void)addOutputStream:(id)arg1;
- (BOOL)canBeDefaultDevice;
- (BOOL)canBeDefaultSystemDevice;
- (BOOL)canChangeDeviceName;
- (void)changeDeviceName:(id)arg1;
- (void)changeSamplingRate:(double)arg1;
- (unsigned long)clockAlgorithm;
- (unsigned long)clockIsStable;
- (id)controls;
- (unsigned long)dataSizeForProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned long)arg2 andQualifierData:(const void*)arg3;
- (id)deviceName;
- (id)deviceUID;
- (BOOL)getProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned long)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int*)arg4 andData:(const void*)arg5 forClient:(int)arg6;
- (BOOL)hasInput;
- (BOOL)hasOutput;
- (BOOL)hasProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (id)initWithDeviceUID:(id)arg1 withPlugin:(id)arg2;
- (id)initWithPlugin:(id)arg1;
- (unsigned long)inputLatency;
- (unsigned long)inputSafetyOffset;
- (id)inputStreams;
- (id)ioReferenceQueue;
- (BOOL)isHidden;
- (BOOL)isPropertySettable:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (BOOL)isRunning;
- (id)manufacturerName;
- (id)modelName;
- (id)modelUID;
- (unsigned int)numberOfChannelsInLayoutForScope:(unsigned long)arg1;
- (unsigned long)objectClass;
- (unsigned long)outputLatency;
- (unsigned long)outputSafetyOffset;
- (id)outputStreams;
- (void)performConfigurationChange:(void*)arg1;
- (long)performStartIO;
- (long)performStopIO;
- (void)preferredChannelDescriptions:(struct AudioChannelDescription { unsigned int x1; unsigned long x2; float x3[3]; }*)arg1 forScope:(unsigned long)arg2;
- (void)preferredChannelsForLeft:(unsigned int*)arg1 andRight:(unsigned int*)arg2;
- (long)removeClient:(const struct AudioServerPlugInClientInfo { unsigned int x1; int x2; unsigned char x3; struct __CFString {} *x4; }*)arg1;
- (void)removeControl:(id)arg1;
- (void)removeInputStream:(id)arg1;
- (void)removeOutputStream:(id)arg1;
- (void)requestConfigurationChange:(id /* block */)arg1;
- (double)samplingRate;
- (id)samplingRates;
- (void)setCanBeDefaultDevice:(BOOL)arg1;
- (void)setCanBeDefaultSystemDevice:(BOOL)arg1;
- (void)setCanChangeDeviceName:(BOOL)arg1;
- (void)setDeviceName:(id)arg1;
- (void)setDeviceUID:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setInputLatency:(unsigned long)arg1;
- (void)setInputSafetyOffset:(unsigned long)arg1;
- (void)setManufacturerName:(id)arg1;
- (void)setModelName:(id)arg1;
- (void)setModelUID:(id)arg1;
- (void)setOutputLatency:(unsigned long)arg1;
- (void)setOutputSafetyOffset:(unsigned long)arg1;
- (BOOL)setProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned long)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned long)arg4 andData:(const void*)arg5 forClient:(int)arg6;
- (void)setSamplingRate:(double)arg1;
- (void)setSamplingRates:(id)arg1;
- (void)setTimestampPeriod:(unsigned int)arg1;
- (long)startIOForClient:(unsigned int)arg1;
- (long)stopIOForClient:(unsigned int)arg1;
- (unsigned int)timestampPeriod;
- (unsigned int)transportType;
- (void)updateTimestampPeriod;

@end
