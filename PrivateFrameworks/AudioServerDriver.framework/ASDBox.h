/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AudioServerDriver.framework/AudioServerDriver
 */

@interface ASDBox : ASDObject {
    NSObject<OS_dispatch_queue> * _acquireQueue;
    BOOL  _acquireable;
    BOOL  _acquired;
    long  _acquisitionFailure;
    NSString * _boxName;
    NSString * _boxUID;
    BOOL  _canChangeBoxName;
    BOOL  _canSetIdentify;
    NSObject<OS_dispatch_queue> * _deviceQueue;
    NSMutableArray * _devices;
    NSString * _firmwareVersion;
    BOOL  _hasAudio;
    BOOL  _hasMIDI;
    BOOL  _hasVideo;
    BOOL  _identify;
    NSString * _manufacturerName;
    NSString * _modelName;
    NSString * _modelUID;
    BOOL  _requiresAuthentication;
    NSString * _serialNumber;
    BOOL  _supportsIdentify;
}

@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *acquireQueue;
@property (getter=isAcquireable, nonatomic) BOOL acquireable;
@property (nonatomic) BOOL acquired;
@property (nonatomic) long acquisitionFailure;
@property (nonatomic, copy) NSString *boxName;
@property (nonatomic, readonly, copy) NSString *boxUID;
@property (nonatomic) BOOL canChangeBoxName;
@property (nonatomic) BOOL canSetIdentify;
@property (nonatomic, readonly, retain) NSArray *devices;
@property (nonatomic, copy) NSString *firmwareVersion;
@property (nonatomic) BOOL hasAudio;
@property (nonatomic) BOOL hasMIDI;
@property (nonatomic) BOOL hasVideo;
@property (nonatomic) BOOL identify;
@property (nonatomic, copy) NSString *manufacturerName;
@property (nonatomic, copy) NSString *modelName;
@property (nonatomic, copy) NSString *modelUID;
@property (nonatomic) BOOL requiresAuthentication;
@property (nonatomic, copy) NSString *serialNumber;
@property (nonatomic) BOOL supportsIdentify;
@property (nonatomic, readonly) unsigned int transportType;

- (void).cxx_destruct;
- (BOOL)acquireBox:(BOOL)arg1 fromHAL:(BOOL)arg2;
- (id)acquireQueue;
- (BOOL)acquired;
- (long)acquisitionFailure;
- (void)addDevice:(id)arg1;
- (void)addDevicesToPlugin;
- (id)boxName;
- (id)boxUID;
- (BOOL)canChangeBoxName;
- (BOOL)canSetIdentify;
- (BOOL)changeBoxName:(id)arg1;
- (unsigned int)dataSizeForProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 andQualifierData:(const void*)arg3;
- (id)devices;
- (id)firmwareVersion;
- (BOOL)getProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int*)arg4 andData:(void*)arg5 forClient:(int)arg6;
- (BOOL)hasAudio;
- (BOOL)hasMIDI;
- (BOOL)hasProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (BOOL)hasVideo;
- (BOOL)identify;
- (void)identifyBox:(BOOL)arg1;
- (id)initWithBoxUID:(id)arg1 withPlugin:(id)arg2;
- (id)initWithPlugin:(id)arg1;
- (BOOL)isAcquireable;
- (BOOL)isPropertySettable:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (id)manufacturerName;
- (id)modelName;
- (id)modelUID;
- (unsigned long)objectClass;
- (void)removeAllDevices;
- (void)removeDevice:(id)arg1;
- (void)removeDevicesFromPlugin;
- (BOOL)requiresAuthentication;
- (id)serialNumber;
- (void)setAcquireable:(BOOL)arg1;
- (void)setAcquired:(BOOL)arg1;
- (void)setAcquisitionFailure:(long)arg1;
- (void)setBoxName:(id)arg1;
- (void)setCanChangeBoxName:(BOOL)arg1;
- (void)setCanSetIdentify:(BOOL)arg1;
- (void)setFirmwareVersion:(id)arg1;
- (void)setHasAudio:(BOOL)arg1;
- (void)setHasMIDI:(BOOL)arg1;
- (void)setHasVideo:(BOOL)arg1;
- (void)setIdentify:(BOOL)arg1;
- (void)setManufacturerName:(id)arg1;
- (void)setModelName:(id)arg1;
- (void)setModelUID:(id)arg1;
- (BOOL)setProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int)arg4 andData:(const void*)arg5 forClient:(int)arg6;
- (void)setRequiresAuthentication:(BOOL)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSupportsIdentify:(BOOL)arg1;
- (BOOL)supportsIdentify;
- (unsigned int)transportType;

@end
