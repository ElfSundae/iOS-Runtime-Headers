/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@interface GKGameCenterViewController : UINavigationController <GKExtensionParentViewControllerProtocol> {
    UIAlertController *_alertController;
    <GKGameCenterControllerDelegate> *_gameCenterDelegateWeak;
    NSString *_leaderboardIdentifier;
    int _leaderboardTimeScope;
    GKDashboardHostViewController *_remoteViewController;
    int _viewState;
}

@property (nonatomic, retain) UIAlertController *alertController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <GKGameCenterControllerDelegate> *gameCenterDelegate;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NSString *leaderboardCategory;
@property (nonatomic, retain) NSString *leaderboardIdentifier;
@property (nonatomic) int leaderboardTimeScope;
@property (nonatomic, retain) GKDashboardHostViewController *remoteViewController;
@property (readonly) Class superclass;
@property (nonatomic) int viewState;

+ (BOOL)_preventsAppearanceProxyCustomization;
+ (BOOL)accessInstanceVariablesDirectly;

- (void)_setupChildViewController;
- (void)_setupRemoteViewController;
- (id)alertController;
- (BOOL)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (void)dealloc;
- (void)extensionDidFinishWithError:(id)arg1;
- (id)gameCenterDelegate;
- (id)init;
- (id)leaderboardCategory;
- (id)leaderboardIdentifier;
- (int)leaderboardTimeScope;
- (void)loadView;
- (void)notifyDelegateOnWillFinish;
- (id)remoteViewController;
- (void)setAlertController:(id)arg1;
- (void)setGameCenterDelegate:(id)arg1;
- (void)setLeaderboardCategory:(id)arg1;
- (void)setLeaderboardIdentifier:(id)arg1;
- (void)setLeaderboardIdentifierFromExtension:(id)arg1;
- (void)setLeaderboardTimeScope:(int)arg1;
- (void)setLeaderboardTimeScopeFromExtension:(int)arg1;
- (void)setRemoteViewController:(id)arg1;
- (void)setViewState:(int)arg1;
- (void)setViewStateFromExtension:(int)arg1;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (BOOL)shouldAutomaticallyForwardRotationMethods;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (BOOL)shouldShowPlayForChallenge;
- (BOOL)shouldShowPlayForTurnBasedMatch;
- (BOOL)shouldShowQuitForTurnBasedMatch;
- (unsigned int)supportedInterfaceOrientations;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (int)viewState;
- (void)viewWillAppear:(BOOL)arg1;

@end
