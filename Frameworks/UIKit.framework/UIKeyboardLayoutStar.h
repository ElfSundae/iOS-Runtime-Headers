/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardLayoutStar : UIKeyboardLayout <UIKBEmojiHitTestResponder> {
    NSMutableSet * _accentInfo;
    UIKBTree * _activeKey;
    NSMutableDictionary * _activeKeyplaneTransitions;
    NSMutableSet * _allKeyplaneKeycaps;
    NSMutableDictionary * _allKeyplaneViews;
    int  _appearance;
    float  _autoSplitElapsedTime;
    double  _autoSplitLastUpdate;
    BOOL  _autoshift;
    UIKBBackgroundView * _backgroundView;
    NSMutableDictionary * _compositeImages;
    UIDelayedAction * _delayedCentroidUpdate;
    SEL  _deleteAction;
    SEL  _deleteLongAction;
    id  _deleteTarget;
    BOOL  _didLongPress;
    UIView * _dimKeyboardImageView;
    CADisplayLink * _displayLink;
    int  _downSwipeFunction;
    BOOL  _edgeSwipeDetected;
    float  _edgeSwipeProgress;
    float  _edgeSwipeVelocity;
    UIKeyboardEmojiKeyDisplayController * _emojiKeyManager;
    struct __CFDictionary { } * _extendedTouchInfoMap;
    float  _finalSplitProgress;
    UIView * _flickPopupView;
    NSTimer * _flickPopuptimer;
    UIGestureKeyboardIntroduction * _gestureKeyboardIntroduction;
    BOOL  _ghostKeysEnabled;
    NSMutableSet * _hasAccents;
    BOOL  _hasPeekedGestureKey;
    BOOL  _holdingShift;
    NSNumber * _homeRowHint;
    UIKBTree * _inactiveLanguageIndicator;
    int  _initialBias;
    float  _initialEdgeTranslation;
    float  _initialPinchSeparation;
    float  _initialSplitProgress;
    BOOL  _inputTraitsPreventInitialReuse;
    BOOL  _isOutOfBounds;
    BOOL  _isRebuilding;
    BOOL  _isTrackpadMode;
    UIKBKeyViewAnimator * _keyViewAnimator;
    UIKBTree * _keyboard;
    BOOL  _keyboardImageViewIsDim;
    NSString * _keyboardName;
    NSMutableDictionary * _keyboards;
    UIKBTree * _keyplane;
    NSString * _keyplaneName;
    UIKBKeyplaneView * _keyplaneView;
    NSMutableSet * _keysUnderIndicator;
    BOOL  _lastInputIsGestureKey;
    NSString * _lastInputMode;
    double  _lastTwoFingerTapTimestamp;
    NSString * _layoutTag;
    struct CGPoint { 
        float x; 
        float y; 
    }  _leftDriftOffset;
    NSMutableSet * _leftKeySet;
    NSMutableArray * _leftSideReachability;
    int  _leftSwipeFunction;
    UISwipeGestureRecognizer * _leftSwipeRecognizer;
    NSString * _localizedInputKey;
    UIView * _modalDisplayView;
    UIDelayedAction * _multitapAction;
    int  _multitapCount;
    UIKBTree * _multitapKey;
    BOOL  _muteNextKeyClickSound;
    UIKBRenderConfig * _passcodeRenderConfig;
    BOOL  _pendingDictationReload;
    BOOL  _pinchDetected;
    float  _pinchSeparationValues;
    NSString * _preRotateKeyplaneName;
    BOOL  _preRotateShift;
    BOOL  _preRotateTrackpadMode;
    NSString * _preTouchKeyplaneName;
    int  _preferredTrackingChangeCount;
    double  _prevTouchDownTime;
    NSDate * _prevTouchMoreKeyTime;
    double  _prevTouchUpFinishedTime;
    double  _prevTouchUpTime;
    unsigned long long  _prevUpActions;
    UIKBRenderConfig * _renderConfig;
    SEL  _returnAction;
    SEL  _returnLongAction;
    id  _returnTarget;
    BOOL  _revertKeyplaneAfterTouch;
    struct CGPoint { 
        float x; 
        float y; 
    }  _rightDriftOffset;
    NSMutableSet * _rightKeySet;
    NSMutableArray * _rightSideReachability;
    int  _rightSwipeFunction;
    UISwipeGestureRecognizer * _rightSwipeRecognizer;
    int  _setKeyplaneViewCount;
    BOOL  _settingFloat;
    BOOL  _settingShift;
    BOOL  _shift;
    double  _shiftLockFirstTapTime;
    BOOL  _shiftLockReady;
    int  _shiftTrackingChangeCount;
    BOOL  _showDictationKey;
    BOOL  _showIntlKey;
    _UIFeedbackRetargetBehavior * _slideBehaviour;
    SEL  _spaceAction;
    SEL  _spaceLongAction;
    id  _spaceTarget;
    BOOL  _suppressDeactivateKeys;
    BOOL  _suppressGestureKeyplaneAnimation;
    BOOL  _suppressShiftKeyplaneAnimation;
    BOOL  _swipeDetected;
    double  _touchDownTimeSpan;
    id  _touchInfo;
    int  _transitionTargetBias;
    UIKeyboardSplitTransitionView * _transitionView;
    _UIKeyboardTypingSpeedLogger * _typingSpeedLogger;
    BOOL  _unshiftAfterMultitap;
    UISwipeGestureRecognizer * _upSwipeRecognizer;
    NSMutableSet * _validInputStrings;
    BOOL  _wasShifted;
    int  playKeyClickSoundOn;
}

@property (nonatomic, retain) UIKBTree *activeKey;
@property (nonatomic) BOOL autoShift;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didLongPress;
@property int downSwipeFunction;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) UIKBTree *keyboard;
@property (nonatomic, copy) NSString *keyboardName;
@property (nonatomic, readonly) UIKBTree *keyplane;
@property (nonatomic, copy) NSString *keyplaneName;
@property (nonatomic) double lastTwoFingerTapTimestamp;
@property (nonatomic, retain) NSString *layoutTag;
@property int leftSwipeFunction;
@property (nonatomic, copy) NSString *localizedInputKey;
@property (nonatomic, readonly) NSString *localizedInputMode;
@property (nonatomic, retain) UIView *modalDisplayView;
@property (nonatomic) BOOL muteNextKeyClickSound;
@property (nonatomic) int playKeyClickSoundOn;
@property (nonatomic, copy) NSString *preTouchKeyplaneName;
@property (nonatomic, retain) UIKBRenderConfig *renderConfig;
@property int rightSwipeFunction;
@property (getter=isRotating, nonatomic, readonly) BOOL rotating;
@property (nonatomic) BOOL shift;
@property (nonatomic, readonly) BOOL showsDictationKey;
@property (nonatomic, readonly) BOOL showsInternationalKey;
@property (nonatomic, retain) _UIFeedbackRetargetBehavior *slideBehaviour;
@property (readonly) Class superclass;

+ (Class)_subclassForScreenTraits:(id)arg1;
+ (void)accessibilitySensitivityChanged;
+ (id)keyboardFromFactoryWithName:(id)arg1 screen:(id)arg2;
+ (struct CGSize { float x1; float x2; })keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(int)arg3;
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;
+ (id)sharedPunctuationCharacterSet;
+ (id)sharedRivenKeyplaneGenerator;

- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;
- (void)_autoSplit:(id)arg1;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (BOOL)_handRestRecognizerCancelShouldBeEnd;
- (id)_keyplaneVariantsKeyForString:(id)arg1;
- (void)_setReturnKeyEnabled:(BOOL)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (BOOL)_stringContainsCurrencyCharacters:(id)arg1;
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;
- (void)accessibilitySensitivityChanged;
- (id)activationIndicatorView;
- (id)activeKey;
- (id)activeMultitapCompleteKey;
- (id)activeTouchInfoForShift;
- (void)annotateKeysForGestures;
- (void)annotateKeysWithDeveloperPunctuation;
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;
- (struct CGPoint { float x1; float x2; })applyError:(struct CGPoint { float x1; float x2; })arg1 toKey:(id)arg2;
- (BOOL)autoShift;
- (id)baseKeyForString:(id)arg1;
- (int)biasForKeyboard:(id)arg1;
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(BOOL)arg2;
- (struct CGImage { }*)cachedCompositeImageWithCacheKey:(id)arg1;
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;
- (BOOL)canMultitap;
- (BOOL)canProduceString:(id)arg1;
- (BOOL)canReuseKeyplaneView;
- (void)cancelDelayedCentroidUpdate;
- (void)cancelMultitapTimer;
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(BOOL)arg2;
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;
- (id)candidateList;
- (void)changeToKeyplane:(id)arg1;
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;
- (void)clearAllTouchInfo;
- (void)clearHandwritingStrokesIfNeededAndNotify:(BOOL)arg1;
- (void)clearInfoForTouch:(id)arg1;
- (void)clearInfoForTouch:(id)arg1 forResting:(BOOL)arg2;
- (void)clearKeyAnnotationsIfNecessary;
- (void)clearTransientState;
- (void)clearUnusedObjects:(BOOL)arg1;
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 isPopupVariant:(BOOL)arg3 isMultitap:(BOOL)arg4 isFlick:(BOOL)arg5;
- (int)currentKeyboardBias;
- (id)currentKeyplane;
- (id)currentKeyplaneView;
- (void)deactivateActiveKey;
- (void)deactivateActiveKeys;
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)arg1 clearingDimming:(BOOL)arg2;
- (void)dealloc;
- (id)defaultKeyplaneForKeyplane:(id)arg1;
- (id)defaultNameForKeyplaneName:(id)arg1;
- (int)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (BOOL)diacriticForwardCompose;
- (void)didClearInput;
- (void)didEndIndirectSelectionGesture;
- (void)didEndIndirectSelectionGesture:(BOOL)arg1;
- (void)didFinishScreenGestureRecognition;
- (BOOL)didLongPress;
- (void)didRecognizeGestureOnEdge:(unsigned int)arg1 withDistance:(float)arg2;
- (void)didRotate;
- (void)dismissGestureKeyboardIntroduction;
- (int)displayTypeHintForMoreKey;
- (int)displayTypeHintForShiftKey;
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;
- (unsigned long long)downActionFlagsForKey:(id)arg1;
- (void)downActionShiftWithKey:(id)arg1;
- (int)downSwipeFunction;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })dragGestureRectInView:(id)arg1;
- (BOOL)edgeSwipeGestureEnabled;
- (id)emojiKeyManager;
- (void)endMultitapForKey:(id)arg1;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2 withDelay:(float)arg3;
- (void)fadeWithInvocation:(id)arg1;
- (void)finishHandBiasTransition;
- (void)finishSplitTransition;
- (void)finishSplitTransitionWithCompletion:(id /* block */)arg1;
- (void)finishSplitTransitionWithProgress:(float)arg1;
- (void)finishSplitWithCompletion:(id /* block */)arg1;
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;
- (id)flickStringForInputKey:(id)arg1 direction:(int)arg2;
- (void)flushKeyCache:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForKeyWithRepresentedString:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForKeylayoutName:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForLastKeyWithRepresentedString:(id)arg1;
- (id)generateInfoForTouch:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGPoint { float x1; float x2; })getCenterForKeyUnderLeftIndexFinger;
- (struct CGPoint { float x1; float x2; })getCenterForKeyUnderRightIndexFinger;
- (unsigned char)getHandRestRecognizerState;
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(int)arg1;
- (id)getSortedKeysForDisplayRowHint:(int)arg1;
- (BOOL)globeKeyDisplaysAsEmojiKey;
- (id)handRestRecognizerGetHomeRowHint;
- (void)handRestRecognizerNotifyRestForBegin:(BOOL)arg1 location:(struct CGPoint { float x1; float x2; })arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;
- (BOOL)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint { float x1; float x2; })arg2 toPoint:(struct CGPoint { float x1; float x2; })arg3 forRestingState:(unsigned int)arg4 otherRestedTouchLocations:(id)arg5;
- (id /* block */)handRestRecognizerSilenceNextTouchDown;
- (struct CGSize { float x1; float x2; })handRestRecognizerStandardKeyPixelSize;
- (void)handleDelayedCentroidUpdate;
- (void)handleDismissFlickView;
- (void)handleDismissFlickView:(id)arg1;
- (void)handleFlick:(id)arg1;
- (void)handleKeyboardMenusForTouch:(id)arg1;
- (void)handleMultitapTimerFired;
- (void)handlePopupView;
- (void)handlePopupView:(id)arg1;
- (SEL)handlerForNotification:(id)arg1;
- (BOOL)handwritingPlane;
- (BOOL)hasAccentKey;
- (BOOL)hasCandidateKeys;
- (void)hideMenu:(id)arg1 forKey:(id)arg2;
- (id)highlightedVariantListForStylingKey:(id)arg1;
- (float)hitBuffer;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (BOOL)ignoresShiftState;
- (void)incrementPunctuationIfNeeded:(id)arg1;
- (id)infoForTouch:(id)arg1;
- (id)infoForTouchUUID:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;
- (id)inputModeToMergeCapsLockKey;
- (void)installGestureRecognizers;
- (float)interpretPinchSeparationValues;
- (void)interpretTouchesForSplit;
- (BOOL)isAlphabeticPlane;
- (BOOL)isDeadkeyInput:(id)arg1;
- (BOOL)isEmojiKeyplane;
- (BOOL)isLongPressedKey:(id)arg1;
- (BOOL)isRotating;
- (BOOL)isShiftKeyBeingHeld;
- (BOOL)isShiftKeyPlaneChooser;
- (BOOL)keyHasAccentedVariants:(id)arg1;
- (id)keyHitTest:(struct CGPoint { float x1; float x2; })arg1;
- (id)keyHitTestClosestToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)keyHitTestContainingPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)keyHitTestWithoutCharging:(struct CGPoint { float x1; float x2; })arg1;
- (id)keyViewAnimator;
- (id)keyViewHitTestForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)keyWithRepresentedString:(id)arg1;
- (id)keyboard;
- (id)keyboardLayoutWithBias:(int)arg1;
- (id)keyboardName;
- (int)keycodeForKey:(id)arg1;
- (id)keylistContainingKey:(id)arg1;
- (id)keyplane;
- (BOOL)keyplaneContainsDismissKey;
- (BOOL)keyplaneContainsEmojiKey;
- (id)keyplaneForKey:(id)arg1;
- (id)keyplaneName;
- (id)keyplaneNameForRevertAfterTouch;
- (id)keyplaneNamed:(id)arg1;
- (unsigned int)keyplaneShiftState;
- (double)lastTouchUpTimestamp;
- (double)lastTwoFingerTapTimestamp;
- (id)layoutTag;
- (int)leftSwipeFunction;
- (id)localizedInputKey;
- (id)localizedInputMode;
- (void)logHandwritingData;
- (void)longPressAction;
- (void)mergeKeysIfNeeded;
- (id)modalDisplayView;
- (id)multitapCompleteKeys;
- (void)multitapExpired;
- (void)multitapInterrupted;
- (BOOL)muteNextKeyClickSound;
- (void)nextToUseInputModeDidChange:(id)arg1;
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;
- (BOOL)performReturnAction;
- (BOOL)performSpaceAction;
- (BOOL)pinchDetected;
- (BOOL)pinchSplitGestureEnabled;
- (void)playKeyClickSoundForKey:(id)arg1;
- (int)playKeyClickSoundOn;
- (void)playKeyClickSoundOnDownForKey:(id)arg1;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)populateFlickPopupsForKey:(id)arg1;
- (id)popupKeyViews;
- (id)preTouchKeyplaneName;
- (void)prepareForSplitTransition;
- (void)rebuildKeyplaneTransitionWithTargetBias:(int)arg1;
- (void)rebuildSplitTransitionView;
- (void)refreshDualStringKeys;
- (void)refreshForDictationAvailablityDidChange;
- (void)refreshForRivenPreferences;
- (void)refreshGhostKeyState;
- (void)relayoutForWriteboardKey;
- (void)removeFromSuperview;
- (id)renderConfig;
- (struct CGImage { }*)renderedImageWithStateFallbacksForToken:(id)arg1;
- (struct CGImage { }*)renderedImageWithToken:(id)arg1;
- (struct CGImage { }*)renderedKeyplaneWithToken:(id)arg1 split:(BOOL)arg2;
- (void)resetPanAlternativesForEndedTouch:(id)arg1;
- (void)restoreDefaultsForAllKeys;
- (void)restoreDefaultsForKey:(id)arg1;
- (int)rightSwipeFunction;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setActiveKey:(id)arg1;
- (void)setAutoShift:(BOOL)arg1;
- (void)setAutoshift:(BOOL)arg1;
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;
- (void)setDidLongPress:(BOOL)arg1;
- (void)setDisableInteraction:(BOOL)arg1;
- (void)setDownSwipeFunction:(int)arg1;
- (void)setHideKeysUnderIndicator:(BOOL)arg1;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;
- (void)setKeyboardAppearance:(int)arg1;
- (void)setKeyboardDim:(BOOL)arg1;
- (void)setKeyboardDim:(BOOL)arg1 amount:(float)arg2 withDuration:(float)arg3;
- (void)setKeyboardName:(id)arg1;
- (void)setKeyboardName:(id)arg1 appearance:(int)arg2;
- (void)setKeyplaneName:(id)arg1;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)setLastTwoFingerTapTimestamp:(double)arg1;
- (void)setLayoutTag:(id)arg1;
- (void)setLeftSwipeFunction:(int)arg1;
- (void)setLocalizedInputKey:(id)arg1;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)setModalDisplayView:(id)arg1;
- (void)setMultitapReverseKeyState;
- (void)setMuteNextKeyClickSound:(BOOL)arg1;
- (void)setNeedsVirtualDriftUpdate;
- (void)setPasscodeOutlineAlpha:(float)arg1;
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;
- (void)setPlayKeyClickSoundOn:(int)arg1;
- (void)setPreTouchKeyplaneName:(id)arg1;
- (void)setPreferredHeight:(float)arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setReturnKeyEnabled:(BOOL)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (void)setRightSwipeFunction:(int)arg1;
- (void)setShift:(BOOL)arg1;
- (void)setSlideBehaviour:(id)arg1;
- (void)setSplit:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setSplitProgress:(float)arg1;
- (void)setState:(int)arg1 forKey:(id)arg2;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)setTextEditingTraits:(id)arg1;
- (void)setToInitialKeyplane;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (BOOL)shift;
- (BOOL)shouldAllowCurrentKeyplaneReload;
- (BOOL)shouldAllowSelectionGestures:(BOOL)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2 toBegin:(BOOL)arg3;
- (BOOL)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;
- (BOOL)shouldDeactivateWithoutWindow;
- (BOOL)shouldHitTestKey:(id)arg1;
- (BOOL)shouldMatchCaseForDomainKeys;
- (BOOL)shouldMergeKey:(id)arg1;
- (BOOL)shouldPreventInputManagerHitTestingForKey:(id)arg1;
- (BOOL)shouldRetestKey:(id)arg1 withKeyplane:(id)arg2;
- (BOOL)shouldRetestTouchDraggedFromKey:(id)arg1;
- (BOOL)shouldSendStringForFlick:(id)arg1;
- (BOOL)shouldSendTouchUpToInputManager:(id)arg1;
- (BOOL)shouldShowDictationKey;
- (BOOL)shouldShowGestureKeyboardIntroduction;
- (BOOL)shouldShowIndicator;
- (BOOL)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)shouldUseDefaultShiftStateFromLayout;
- (BOOL)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint { float x1; float x2; })arg1 finalPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)showFlickView:(int)arg1 withKey:(id)arg2 flickString:(id)arg3;
- (BOOL)showGestureKeyboardIntroductionIfNeeded;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
- (void)showMenu:(id)arg1 forKey:(id)arg2;
- (void)showPopupVariantsForKey:(id)arg1;
- (void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(BOOL)arg4;
- (void)showSplitTransitionView:(BOOL)arg1;
- (BOOL)showsDictationKey;
- (BOOL)showsInternationalKey;
- (id)simulateTouch:(struct CGPoint { float x1; float x2; })arg1;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint { float x1; float x2; })arg2 shouldTypeVariants:(BOOL)arg3 baseKeyForVariants:(BOOL)arg4;
- (id)slideBehaviour;
- (id)splitNameForKeyplane:(id)arg1;
- (id)splitNameForKeyplaneName:(id)arg1;
- (int)stateForCandidateListKey:(id)arg1;
- (int)stateForDictationKey:(id)arg1;
- (int)stateForKey:(id)arg1;
- (int)stateForKeyplaneSwitchKey:(id)arg1;
- (int)stateForManipulationKey:(id)arg1;
- (int)stateForMultitapReverseKey:(id)arg1;
- (int)stateForShiftKey:(id)arg1;
- (int)stateForStylingKey:(id)arg1;
- (struct CGSize { float x1; float x2; })stretchFactor;
- (BOOL)stretchKeyboardToFit;
- (BOOL)stretchKeyboardToFitKeyplane:(id)arg1;
- (BOOL)supportStylingWithKey:(id)arg1;
- (BOOL)supportsEmoji;
- (void)swipeDetected:(id)arg1;
- (id)synthesizeTouchUpEventForKey:(id)arg1;
- (unsigned int)targetEdgesForScreenGestureRecognition;
- (unsigned int)textEditingKeyMask;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)touchCancelled:(id)arg1 forResting:(BOOL)arg2 executionContext:(id)arg3;
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (void)touchDownWithKey:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2 executionContext:(id)arg3;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (id)touchInfoForKey:(id)arg1;
- (void)touchMultitapTimer;
- (BOOL)touchPassesDragThreshold:(id)arg1;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (void)uninstallGestureRecognizers;
- (unsigned long long)upActionFlagsForKey:(id)arg1;
- (void)upActionShift;
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;
- (void)updateBackgroundCorners;
- (void)updateBackgroundIfNeeded;
- (void)updateCachedKeyplaneKeycaps;
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;
- (void)updateGlobeKeyDisplayString;
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;
- (void)updateKeyCentroids;
- (void)updateKeyboardForKeyplane:(id)arg1;
- (void)updateLayoutTags;
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;
- (void)updateLocalizedKeys:(BOOL)arg1;
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(BOOL)arg2;
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;
- (void)updateMoreAndInternationalKeys;
- (void)updatePanAlternativesForTouchInfo:(id)arg1;
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;
- (void)updateReturnKeysIfNeeded;
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint { float x1; float x2; })arg3;
- (void)updateShiftKeyState;
- (void)updateTransitionWithFlags:(unsigned long long)arg1;
- (BOOL)useDismissForMessagesWriteboard;
- (BOOL)useUndoForMessagesWriteboard;
- (BOOL)usesAutoShift;
- (int)visualStyleForKeyboardIfSplit:(BOOL)arg1;
- (void)willBeginIndirectSelectionGesture;
- (void)willBeginIndirectSelectionGesture:(BOOL)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)willRotate;

@end
