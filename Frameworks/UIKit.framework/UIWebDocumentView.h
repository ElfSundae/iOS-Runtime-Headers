/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIWebDocumentView : UIWebTiledView <DDDetectionControllerInteractionDelegate, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyInput, UIKeyboardInput, UIModalViewDelegate, UIPreviewItemDelegate, UITextAutoscrolling, UITextInputPrivate, UITextInputTokenizer, UIWebFileUploadPanelDelegate, WebFrameLoadDelegate, _UIRotatingAlertControllerDelegate, _UIWebDoubleTapDelegate> {
    NSArray *_additionalSubviews;
    unsigned int _alwaysConstrainsScale;
    unsigned int _autoresizes;
    UIAutoscroll *_autoscroll;
    unsigned int _avoidFixedPositionUpdateViaDidScroll;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _caretInsets;
    CALayer *_contentLayersHostingLayer;
    unsigned int _dataDetectorTypes;
    struct _UIWebViewportConfiguration { 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        bool allowsUserScaling; 
        bool allowsShrinkToFit; 
    } _defaultViewportConfigurations;
    _UITextServiceSession *_definitionSession;
    id _delegate;
    DOMElement *_dictationResultPlaceholder;
    id _dictationResultPlaceholderRemovalObserver;
    unsigned int _didFirstVisuallyNonEmptyLayout;
    float _documentScale;
    int _documentType;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _doubleTapRect;
    unsigned int _doubleTapRectIsReplaced;
    struct CGPoint { 
        float x; 
        float y; 
    } _doubleTapStartPosition;
    double _doubleTapStartTime;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _exposedScrollViewRect;
    UIWebFileUploadPanel *_fileUploadPanel;
    struct CGSize { 
        float width; 
        float height; 
    } _fixedLayoutOriginRoundingDelta;
    struct CGSize { 
        float width; 
        float height; 
    } _fixedLayoutSizeRoundingDelta;
    CALayer *_flattenedRotatingContentLayer;
    unsigned int _geolocationDialogAllowed;
    unsigned int _gesturesDisabled;
    unsigned int _hasCustomScale;
    unsigned int _hasDrawnTiles;
    unsigned int _hasScrollPoint;
    _UIWebHighlightLongPressGestureRecognizer *_highlightLongPressGestureRecognizer;
    unsigned int _ignoresFocusEventFromFirstResponderChange;
    unsigned int _ignoresFocusingMouse;
    unsigned int _ignoresKeyEvents;
    unsigned int _ignoresViewportOverflowWhenAutoresizing;
    <UITextInputDelegate> *_inputDelegate;
    unsigned int _inspectorSearchingForNode;
    /* Warning: unhandled struct encoding: '{?="timer"@"NSTimer""location"{CGPoint="x"f"y"f}"isBlocked"c"isCancelled"c"isOnWebThread"c"isDisplayingHighlight"c"attemptedClick"c"lastPanTranslation"{CGPoint="x"f"y"f}"element"@"DOMNode""delegate"@"interactionSheet"@"UIWebRotatingAlertController""allowsImageSheet"c"allowsDataDetectorsSheet"c"allowsLinkSheet"c"acceptsFirstResponder"c"documentScale"f"previewHintRects"@"NSArray""previewHintImage"@"UIImage"}' */ struct { 
        NSTimer *timer; 
        struct CGPoint { 
            float x; 
            float y; 
        } location; 
        BOOL isBlocked; 
        BOOL isCancelled; 
        BOOL isOnWebThread; 
        BOOL isDisplayingHighlight; 
        BOOL attemptedClick; 
        struct CGPoint { 
            float x; 
            float y; 
        } lastPanTranslation; 
        DOMNode *element; 
        id delegate; 
    } _interaction;
    unsigned int _isSettingRedrawFrame;
    unsigned int _isShowingFullScreenPlugIn;
    WebHistoryItem *_latestCommittedPageLoadHistoryItem;
    _UITextServiceSession *_learnSession;
    unsigned int _loadInProgress;
    unsigned int _loadsSynchronously;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    _UITextServiceSession *_lookupSession;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _mainDocumentDoubleTapRect;
    unsigned int _mouseDown;
    unsigned int _mouseDownCount;
    struct CGPoint { 
        float x; 
        float y; 
    } _mouseDownPoint;
    double _mouseDownTime;
    unsigned int _mouseDragged;
    unsigned int _mouseReentrancyGuard;
    unsigned int _needsScrollNotifications;
    int _orientation;
    unsigned int _pageIsLoadedFromPageCache;
    unsigned int _pageNeedsReset;
    struct CGSize { 
        float width; 
        float height; 
    } _pendingSize;
    UIWebPlaybackTargetPicker *_playbackTargetPicker;
    struct __CFDictionary { } *_plugInViews;
    UILongPressGestureRecognizer *_previewGestureRecognizer;
    UIPreviewItemController *_previewItemController;
    UILongPressGestureRecognizer *_previewSecondaryGestureRecognizer;
    float _previousDocumentScale;
    unsigned int _previousScrollWasScrollToTop;
    unsigned int _printModeCount;
    DOMRange *_rangeToRestoreAfterDictation;
    unsigned int _renderTreeSize;
    unsigned int _renderTreeSizeThresholdForReset;
    unsigned int _scalesToFit;
    struct CGPoint { 
        float x; 
        float y; 
    } _scrollPoint;
    int _selectionAffinity;
    _UITextServiceSession *_shareSession;
    unsigned int _sheetsCount;
    unsigned int _shouldCloseWebViewAtDealloc;
    unsigned int _shouldIgnoreCustomViewport;
    unsigned int _shouldOnlyRecognizeGesturesOnActiveElements;
    unsigned int _shouldRemoveUserStyleSheet;
    unsigned int _shouldRestoreScrollPosition;
    unsigned int _shouldSendWillShowInteractionHighlight;
    unsigned int _showingTextStyleOptions;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    unsigned int _sizeUpdateOccurredWhileSuspended;
    unsigned int _sizeUpdatesSuspended;
    unsigned int _standaloneEditableView;
    DOMHTMLElement *_standaloneEditingElement;
    unsigned int _subviewCachesNeedUpdate;
    BOOL _suppressesIncrementalRendering;
    UITextChecker *_textChecker;
    UITextInteractionAssistant *_textSelectionAssistant;
    id _textSuggestionDelegate;
    UITextInputTraits *_traits;
    UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;
    UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;
    unsigned int _uiwdvIsResigningFirstResponder;
    WebThreadSafeUndoManager *_undoManager;
    unsigned int _updatesScrollView;
    unsigned int _updatingSize;
    unsigned int _usePreTimberlineTransparencyBehavior;
    unsigned int _usingMinimalTilesDuringLoading;
    _UIWebViewportHandler *_viewportHandler;
    BOOL _wantsMinimalUI;
    unsigned int _webCoreNeedsDraw;
    unsigned int _webCoreNeedsSetNeedsDisplay;
    UIWebSelectionAssistant *_webSelectionAssistant;
    WebView *_webView;
    unsigned int _widgetEditingView;
    id m_parentTextView;
    int m_selectionGranularity;
}

@property (nonatomic, copy) NSIndexSet *PINEntrySeparatorIndexes;
@property (getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;
@property (nonatomic) BOOL acceptsEmoji;
@property (nonatomic) BOOL acceptsFloatingKeyboard;
@property (nonatomic) BOOL acceptsSplitKeyboard;
@property (nonatomic) BOOL alwaysConstrainsScale;
@property (nonatomic) int autocapitalizationType;
@property (nonatomic, copy) NSString *autocorrectionContext;
@property (nonatomic) int autocorrectionType;
@property (nonatomic) struct CGPoint { float x1; float x2; } autoscrollContentOffset;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic) BOOL contentsIsSingleValue;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL deferBecomingResponder;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL disablePrediction;
@property (nonatomic) BOOL displaySecureEditsUsingPlainText;
@property (nonatomic) BOOL displaySecureTextUsingPlainText;
@property (getter=isDoubleTapEnabled, nonatomic) BOOL doubleTapEnabled;
@property (nonatomic) int emptyContentReturnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } exposedScrollViewRect;
@property (nonatomic) BOOL forceEnableDictation;
@property (readonly) unsigned int hash;
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, retain) UIColor *insertionPointColor;
@property (nonatomic) unsigned int insertionPointWidth;
@property (nonatomic, readonly) UITextInteractionAssistant *interactionAssistant;
@property (nonatomic) BOOL isCarPlayIdiom;
@property (nonatomic) BOOL isSingleLineDocument;
@property (nonatomic) int keyboardAppearance;
@property (nonatomic) int keyboardType;
@property (nonatomic) BOOL learnsCorrections;
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, copy) NSDictionary *markedTextStyle;
@property (nonatomic) BOOL mediaPlaybackAllowsAirPlay;
@property (nonatomic, retain) DOMRange *rangeToRestoreAfterDictation;
@property (nonatomic, copy) NSString *recentInputIdentifier;
@property (nonatomic, readonly) unsigned int renderTreeSize;
@property (nonatomic) unsigned int renderTreeSizeThresholdForReset;
@property (nonatomic, copy) NSString *responseContext;
@property (nonatomic) BOOL returnKeyGoesToNextResponder;
@property (nonatomic) int returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) BOOL secureTextEntry;
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) int selectionAffinity;
@property (nonatomic, retain) UIColor *selectionBarColor;
@property (nonatomic, retain) UIImage *selectionDragDotImage;
@property (nonatomic) int selectionGranularity;
@property (nonatomic, retain) UIColor *selectionHighlightColor;
@property (nonatomic, readonly) int selectionState;
@property (nonatomic) int shortcutConversionType;
@property (nonatomic) BOOL shouldAutoscroll;
@property (nonatomic) BOOL shouldIgnoreCustomViewport;
@property (nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;
@property (nonatomic) BOOL sizeUpdatesSuspended;
@property (nonatomic) int spellCheckingType;
@property (readonly) Class superclass;
@property (nonatomic) BOOL suppressReturnKeyStyling;
@property (nonatomic) BOOL suppressesIncrementalRendering;
@property (nonatomic, readonly) UIView *textInputView;
@property (nonatomic) int textLoupeVisibility;
@property (nonatomic) int textSelectionBehavior;
@property (nonatomic) id textSuggestionDelegate;
@property (nonatomic) struct __CFCharacterSet { }*textTrimmingSet;
@property (nonatomic, readonly) <UITextInputTokenizer> *tokenizer;
@property (nonatomic) BOOL useInterfaceLanguageForLocalization;
@property (nonatomic) struct _NSRange { unsigned int x1; unsigned int x2; } validTextRange;
@property (nonatomic, readonly) BOOL wantsMinimalUI;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (id)_createDefaultHighlightView;
+ (id)_sharedHighlightView;
+ (double)getTimestamp;
+ (BOOL)hasLandscapeOrientation;
+ (void)initialize;
+ (Class)layerClass;
+ (id)standardTextViewPreferences;

- (id)URL;
- (void)_WAKViewSizeDidChange:(id)arg1;
- (BOOL)_acceptsFirstResponder;
- (SEL)_actionForLongPressOnElement:(id)arg1;
- (void)_addShortcut:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_adjustedLayoutRectForFixedPositionObjects;
- (void)_appendOpenActionsForURL:(id)arg1 actions:(id)arg2;
- (void)_applyViewportArguments:(id)arg1;
- (id)_beginPrintModeForHTMLView:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5 tileClippedContent:(BOOL)arg6;
- (id)_beginPrintModeForPDFView:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5;
- (void)_cancelLongPressGestureRecognizer;
- (void)_cleanUpFrameStateAndLoad:(id /* block */)arg1;
- (void)_cleanupSheet;
- (void)_clearAllConsoleMessages;
- (void)_clearDoubleTapRect;
- (void)_clearPreviewRevealInformation;
- (id)_collectAdditionalSubviews;
- (void)_collectPreviewRevealInformationIfNeeded;
- (unsigned int)_contentSizeInExposedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 topLayer:(id)arg2 visibleLayerCount:(int*)arg3;
- (void*)_createIOSurfaceFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_createSheetWithElementActions:(id)arg1 showLinkTitle:(BOOL)arg2;
- (BOOL)_dataDetectionIsActivated;
- (id)_dataForPreviewItemController:(id)arg1 atPosition:(struct CGPoint { float x1; float x2; })arg2 type:(int*)arg3;
- (void)_define:(id)arg1;
- (BOOL)_dictationPlaceholderHasBeenRemoved;
- (void)_didDismissElementSheet;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_didScroll;
- (void)_dismissViewControllerAnimated:(BOOL)arg1 completion:(id /* block */)arg2;
- (float)_documentScale;
- (id)_documentUrl;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_documentViewVisibleRect;
- (id)_doubleTapGestureRecognizer;
- (void)_doubleTapRecognized:(id)arg1;
- (void)_drawPDFPagesForPage:(unsigned int)arg1 withPaginationInfo:(id)arg2;
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)arg1;
- (void)_endPrintMode;
- (void)_finishedUsingDictationPlaceholder;
- (void)_flattenAndSwapContentLayersInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_focusedOrMainFrame;
- (id)_groupName;
- (void)_handleDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_handleSingleTapZoomPostClickAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_handleSingleTapZoomPreClickAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_handleTwoFingerDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)_inspectorDidStartSearchingForNode:(id)arg1;
- (void)_inspectorDidStopSearchingForNode:(id)arg1;
- (BOOL)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(struct CGPoint { float x1; float x2; })arg2;
- (void)_interactionStartedFromPreviewItemController:(id)arg1;
- (void)_interactionStoppedFromPreviewItemController:(id)arg1;
- (BOOL)_isDisplayingLookupViewController;
- (BOOL)_isDisplayingReferenceLibraryViewController;
- (BOOL)_isDisplayingShareViewController;
- (BOOL)_isDisplayingShortcutViewController;
- (BOOL)_isInspectorSearchingForNode;
- (BOOL)_isSubviewOfPlugInView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_lastRectForRange:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_layoutRectForFixedPositionObjects;
- (void)_longPressRecognized:(id)arg1;
- (void)_lookup:(struct CGPoint { float x1; float x2; })arg1;
- (void)_notifyContentHostingLayersOfScaleChange;
- (void)_notifyPlugInViewsOfDidEndZooming;
- (void)_notifyPlugInViewsOfDidZoom;
- (void)_notifyPlugInViewsOfScaleChange;
- (void)_notifyPlugInViewsOfWillBeginZooming;
- (id)_parentTextView;
- (id)_positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 withAffinityDownstream:(BOOL)arg4;
- (BOOL)_presentViewController:(id)arg1 animated:(BOOL)arg2 completion:(id /* block */)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_presentationRectForSheetGivenPoint:(struct CGPoint { float x1; float x2; })arg1 inHostView:(id)arg2;
- (id)_presentationRectsForPreview;
- (id)_presentationRectsForPreviewItemController:(id)arg1;
- (id)_presentationSnapshotForPreview;
- (id)_presentationSnapshotForPreviewItemController:(id)arg1;
- (id)_presentedViewControllerForPreviewItemController:(id)arg1;
- (BOOL)_previewAllowedForPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)_previewItemController:(id)arg1 commitPreview:(id)arg2;
- (void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(BOOL)arg3;
- (void)_previewItemController:(id)arg1 willPresentPreview:(id)arg2 forPosition:(struct CGPoint { float x1; float x2; })arg3 inSourceView:(id)arg4;
- (Class)_printFormatterClass;
- (void)_promptForReplace:(id)arg1;
- (void)_registerPreview;
- (void)_removeDefinitionController:(BOOL)arg1;
- (void)_removeShareController:(BOOL)arg1;
- (void)_removeShortcutController:(BOOL)arg1;
- (void)_renderUnbufferedInContext:(struct CGContext { }*)arg1;
- (void)_resetForNewPage;
- (void)_resetFormDataForFrame:(id)arg1;
- (void)_resetInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_resetShowingTextStyle:(id)arg1;
- (void)_reshapePlugInViews;
- (id)_responderForBecomeFirstResponder;
- (BOOL)_restoreFirstResponder;
- (void)_restoreFlattenedContentLayers;
- (void)_restoreScrollPointForce:(BOOL)arg1;
- (void)_restoreViewportSettingsWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_runLoadBlock:(id /* block */)arg1;
- (void)_saveStateToHistoryItem:(id)arg1;
- (id)_scriptingInfoForForm:(id)arg1;
- (id)_scriptingInfoForLink:(id)arg1;
- (void)_scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_selectionClipRect;
- (void)_selectionLayoutChangedByScrolling:(BOOL)arg1;
- (void)_sendMouseMoveAndAttemptClick:(id)arg1;
- (void)_setAcceptsFirstResponder:(BOOL)arg1;
- (void)_setDocumentScale:(float)arg1;
- (void)_setDocumentType:(int)arg1;
- (void)_setDocumentType:(int)arg1 overrideCustomConfigurations:(BOOL)arg2 viewportArguments:(id)arg3;
- (void)_setFont:(id)arg1;
- (void)_setParentTextView:(id)arg1;
- (void)_setSubviewCachesNeedUpdate:(BOOL)arg1;
- (void)_setTextColor:(id)arg1;
- (void)_share:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_shortcutPresentationRect;
- (BOOL)_shouldFlattenContentLayersForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_shouldResetForNewPage;
- (BOOL)_shouldUpdateSubviewCachesForPlugins;
- (void)_showDataDetectorsSheet;
- (void)_showImageSheet;
- (void)_showLinkSheet;
- (void)_showPendingContentLayers;
- (void)_showTextStyleOptions:(id)arg1;
- (void)_singleTapRecognized:(id)arg1;
- (id)_supportedPasteboardTypesForCurrentSelection;
- (void)_syntheticMouseEventNotHandledAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)_targetURL;
- (id)_textSelectingContainer;
- (void)_transliterateChinese:(id)arg1;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_twoFingerPanRecognized:(id)arg1;
- (void)_undoManagerDidRedo:(id)arg1;
- (void)_undoManagerDidUndo:(id)arg1;
- (void)_unregisterPreview;
- (void)_updateFixedPositionContent;
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)arg1 synchronize:(BOOL)arg2;
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;
- (void)_updateFixedPositioningObjectsLayoutDuringScroll;
- (void)_updateScrollViewBoundaryZoomScales;
- (void)_updateSize;
- (void)_updateSubviewCaches;
- (void)_updateWebKitExposedScrollViewRect;
- (void)_webthread_webView:(id)arg1 attachRootLayer:(id)arg2;
- (float)_zoomedDocumentScale;
- (void)action:(id)arg1 didDismissAlertController:(id)arg2;
- (void)actionDidFinish;
- (void)addInputString:(id)arg1;
- (void)addInputString:(id)arg1 withFlags:(unsigned int)arg2;
- (BOOL)alwaysConstrainsScale;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (id)asText;
- (void)assistFormNode:(id)arg1;
- (void)attemptClick:(id)arg1;
- (id)automaticallySelectedOverlay;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollContentFrame;
- (struct CGPoint { float x1; float x2; })autoscrollContentOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollDragFrame;
- (int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2;
- (BOOL)becomeFirstResponder;
- (BOOL)becomesEditableWithGestures;
- (void)beginFloatingCursorAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)beginPrintModeForFrame:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5 tileClippedContent:(BOOL)arg6;
- (id)beginPrintModeForFrame:(id)arg1 withWidth:(float)arg2 height:(float)arg3 startOffset:(float)arg4 shrinkToFit:(BOOL)arg5 tileClippedContent:(BOOL)arg6;
- (id)beginPrintModeWithSize:(struct CGSize { float x1; float x2; })arg1 startOffset:(float)arg2 minimumLayoutWidth:(float)arg3 maximumLayoutWidth:(float)arg4 tileClippedContent:(BOOL)arg5;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4 tileClippedContent:(BOOL)arg5;
- (void)beginSelectionChange;
- (id)beginningOfDocument;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (BOOL)canResignFirstResponder;
- (void)cancelAutoscroll;
- (void)cancelInteraction;
- (void)cancelInteractionWithImmediateDisplay:(BOOL)arg1;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })caretInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForVisiblePosition:(id)arg1;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2;
- (id)checkSpellingOfString:(id)arg1;
- (void)clearInteractionTimer;
- (void)clearMarkedText;
- (void)clearRangedSelectionInitialExtent;
- (void)clearSelection;
- (BOOL)clearWKFirstResponder;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1 withinRange:(id)arg2;
- (void)collapseSelection;
- (int)comparePosition:(id)arg1 toPosition:(id)arg2;
- (void)completeInteraction;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })computeRectForElement:(id)arg1 withHighligh:(id)arg2 isInverted:(BOOL)arg3;
- (void)confirmMarkedText:(id)arg1;
- (BOOL)considerHeightForDoubleTap;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)containsOnlySelectableElements;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentFrameForView:(id)arg1;
- (id)contentView;
- (void)continueInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertCaretRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPointToSelectedFrameCoordinates:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromFrame:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toFrame:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRectFromSelectedFrameCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)copy:(id)arg1;
- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)currentDocumentScale;
- (void)cut:(id)arg1;
- (unsigned int)dataDetectorTypes;
- (void)dealloc;
- (void)decreaseSize:(id)arg1;
- (id)deepestNodeAtViewportLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)deferInteraction;
- (void)deferredBecomeFirstResponder;
- (id)delegate;
- (void)deleteBackward;
- (void)deleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned int)arg1;
- (BOOL)detectsPhoneNumbers;
- (int)deviceOrientation;
- (id)dictationInterpretations;
- (id)dictationResultMetadataForRange:(id)arg1;
- (void)didEndScroll;
- (void)didEndZoom;
- (BOOL)didFirstVisuallyNonEmptyLayout;
- (void)didMoveToSuperview;
- (void)didRemovePlugInView:(id)arg1;
- (void)didRotateInteractionSheet;
- (void)didZoom;
- (void)disableClearsOnInsertion;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })documentBounds;
- (int)documentType;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })doubleTapRect;
- (BOOL)doubleTapRectIsReplaced;
- (struct { float x1; float x2; float x3; })doubleTapScalesForSize:(struct CGSize { float x1; float x2; })arg1;
- (void)drawPage:(unsigned int)arg1 withPaginationInfo:(id)arg2;
- (unsigned int)effectiveDataDetectorTypes;
- (id)enclosingScrollView;
- (void)endFloatingCursor;
- (id)endOfDocument;
- (void)endPrintMode;
- (void)endSelectionChange;
- (void)ensureSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })exposedScrollViewRect;
- (void)extendCurrentSelection:(int)arg1;
- (void)fileUploadPanelDidDismiss:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (id)fontForCaretSelection;
- (void)forceLayout;
- (id)formElement;
- (void)forwardInvocation:(id)arg1;
- (BOOL)fragmentContainsRichContent:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForDictationResultPlaceholder:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (int)getPasteboardChangeCount;
- (int)getPasteboardItemsCount;
- (void)handleKeyWebEvent:(id)arg1;
- (BOOL)hasContent;
- (BOOL)hasDrawnTiles;
- (BOOL)hasEditableSelection;
- (BOOL)hasMarkedText;
- (BOOL)hasPlugInSubviews;
- (BOOL)hasRangedSelection;
- (BOOL)hasRichlyEditableSelection;
- (BOOL)hasSelection;
- (BOOL)hasSimpleTextOnlyStructure;
- (BOOL)hasText;
- (void)hideTapHighlight;
- (void)highlightApproximateNodeAndDisplayInfoSheet;
- (void)highlightApproximateNodeInverted:(BOOL)arg1;
- (id)hostViewForSheet:(id)arg1;
- (id)implementationWebView;
- (BOOL)inPopover;
- (void)increaseSize:(id)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 preferences:(id)arg3 groupName:(id)arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithWebView:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })initialPresentationRectInHostViewForSheet:(id)arg1;
- (float)initialScale;
- (id)inputDelegate;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)insertDictationResultPlaceholder;
- (void)insertText:(id)arg1;
- (void)installGestureRecognizers;
- (id)interactionAssistant;
- (id)interactionDelegate;
- (id)interactionElement;
- (struct CGPoint { float x1; float x2; })interactionLocation;
- (BOOL)isCaretInEmptyParagraph;
- (BOOL)isClassicViewportMode;
- (BOOL)isDoubleTapEnabled;
- (BOOL)isEditable;
- (BOOL)isEditing;
- (BOOL)isEditingSingleLineElement;
- (BOOL)isInInteraction;
- (BOOL)isInPrintMode;
- (BOOL)isInsideRichlyEditableTextWidget;
- (BOOL)isPosition:(id)arg1 atBoundary:(int)arg2 inDirection:(int)arg3;
- (BOOL)isPosition:(id)arg1 withinTextUnit:(int)arg2 inDirection:(int)arg3;
- (BOOL)isPreviewing;
- (BOOL)isShowingFullScreenPlugInUI;
- (BOOL)isStandaloneEditableView;
- (BOOL)isUnperturbedDictationResultMarker:(id)arg1;
- (BOOL)isWidgetEditingView;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 replacementText:(id)arg3;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (void)layoutSubviews;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (BOOL)loadsSynchronously;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (BOOL)makeWKFirstResponder;
- (id)markedTextRange;
- (id)markedTextStyle;
- (float)maximumDoubleTapScale;
- (float)maximumScale;
- (BOOL)mediaPlaybackAllowsAirPlay;
- (id)metadataDictionariesForDictationResults;
- (id)methodSignatureForSelector:(SEL)arg1;
- (float)minimumScale;
- (float)minimumScaleForMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (float)minimumScaleForSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)mouseEventsChangeSelection;
- (BOOL)needsScrollNotifications;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (int)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (unsigned int)offsetInMarkedTextForSelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)performClick:(id)arg1;
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;
- (BOOL)performsTwoStepPaste:(id)arg1;
- (BOOL)playsNicelyWithGestures;
- (id)positionAtStartOrEndOfWord:(id)arg1;
- (id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3;
- (id)positionFromPosition:(id)arg1 offset:(int)arg2;
- (id)positionFromPosition:(id)arg1 toBoundary:(int)arg2 inDirection:(int)arg3;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })presentationRectInHostViewForSheet:(id)arg1;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(int)arg2 inDirection:(int)arg3;
- (id)rangeOfEnclosingWord:(id)arg1;
- (id)rangeToRestoreAfterDictation;
- (id)readDataFromPasteboard:(id)arg1 withIndex:(int)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectOfInterestForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)rectsForNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)redrawScaledDocument;
- (void)releasePrintMode;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(BOOL)arg2;
- (unsigned int)renderTreeSize;
- (unsigned int)renderTreeSizeThresholdForReset;
- (void)replace:(id)arg1;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (BOOL)requiresKeyEvents;
- (void)resetInteraction;
- (void)resetTilingAfterLoadComplete;
- (BOOL)resignFirstResponder;
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;
- (void)saveStateToCurrentHistoryItem;
- (id)scriptingInfoWithChildren;
- (void)scrollSelectionToVisible:(BOOL)arg1;
- (void)scrollViewWasRemoved;
- (void)select:(id)arg1;
- (void)selectAll;
- (void)selectAll:(id)arg1;
- (void)selectWord;
- (id)selectedDOMRange;
- (id)selectedTextRange;
- (int)selectionAffinity;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtWordStart;
- (int)selectionBaseWritingDirection;
- (void)selectionChanged;
- (void)selectionChanged:(id)arg1;
- (int)selectionGranularity;
- (id)selectionInteractionAssistant;
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)arg1;
- (struct _NSRange { unsigned int x1; unsigned int x2; })selectionRange;
- (id)selectionRects;
- (id)selectionRectsForDOMRange:(id)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (int)selectionState;
- (id)selectionView;
- (void)sendOrientationEventForOrientation:(int)arg1;
- (void)sendScrollEventIfNecessary;
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)arg1;
- (void)sendScrollWheelEvents;
- (void)setAllowsDataDetectorsSheet:(BOOL)arg1;
- (void)setAllowsImageSheet:(BOOL)arg1;
- (void)setAllowsLinkSheet:(BOOL)arg1;
- (void)setAllowsShrinkToFit:(BOOL)arg1 forDocumentTypes:(int)arg2;
- (void)setAllowsUserScaling:(BOOL)arg1 forDocumentTypes:(int)arg2;
- (void)setAlwaysConstrainsScale:(BOOL)arg1;
- (void)setAutoresizes:(BOOL)arg1;
- (void)setAutoscrollContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setBaseWritingDirection:(int)arg1;
- (void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2;
- (void)setBecomesEditableWithGestures:(BOOL)arg1;
- (void)setBottomBufferHeight:(float)arg1;
- (void)setCaretChangeListener:(id)arg1;
- (void)setCaretInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (void)setDataDetectorTypes:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectsPhoneNumbers:(BOOL)arg1;
- (void)setDoubleTapEnabled:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setExposedScrollViewRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIgnoresFocusingMouse:(BOOL)arg1;
- (void)setIgnoresKeyEvents:(BOOL)arg1;
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)arg1;
- (void)setInitialScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setInputDelegate:(id)arg1;
- (void)setInteractionAssistantGestureRecognizers;
- (void)setInteractionDelegate:(id)arg1;
- (void)setIsStandaloneEditableView:(BOOL)arg1;
- (void)setIsWidgetEditingView:(BOOL)arg1;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setMediaPlaybackAllowsAirPlay:(BOOL)arg1;
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setMinimumSize:(struct CGSize { float x1; float x2; })arg1 updateCurrentViewportConfigurationSize:(BOOL)arg2;
- (void)setOpaque:(BOOL)arg1;
- (void)setPaused:(BOOL)arg1;
- (void)setPaused:(BOOL)arg1 withEvents:(BOOL)arg2;
- (void)setRangeToRestoreAfterDictation:(id)arg1;
- (void)setRangedSelectionBaseToCurrentSelection;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2;
- (void)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setRenderTreeSizeThresholdForReset:(unsigned int)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2;
- (void)setSelectedTextRange:(id)arg1;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2;
- (void)setSelectionAffinity:(int)arg1;
- (void)setSelectionGranularity:(int)arg1;
- (void)setSelectionToEnd;
- (void)setSelectionToStart;
- (void)setSelectionWithFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setShouldAutoscroll:(BOOL)arg1;
- (void)setShouldIgnoreCustomViewport:(BOOL)arg1;
- (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)arg1;
- (void)setSizeUpdatesSuspended:(BOOL)arg1;
- (void)setSmoothsFonts:(BOOL)arg1;
- (void)setStandaloneEditingElement:(id)arg1;
- (void)setSuppressesIncrementalRendering:(BOOL)arg1;
- (void)setText:(id)arg1;
- (void)setTileUpdatesDisabled:(BOOL)arg1;
- (void)setTilingArea:(int)arg1;
- (void)setUpdatesScrollView:(BOOL)arg1;
- (void)setUsePreTimberlineTransparencyBehavior;
- (void)setUserStyleSheet:(id)arg1;
- (void)setViewportSize:(struct CGSize { float x1; float x2; })arg1 forDocumentTypes:(int)arg2;
- (BOOL)shouldAutoscroll;
- (BOOL)shouldIgnoreCustomViewport;
- (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(struct CGPoint { float x1; float x2; })arg1 forScale:(float)arg2;
- (void)showPlaybackTargetPicker:(BOOL)arg1 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (BOOL)sizeUpdatesSuspended;
- (void)smartExtendRangedSelection:(int)arg1;
- (id)standaloneEditingElement;
- (BOOL)startActionSheet;
- (void)startAutoscroll:(struct CGPoint { float x1; float x2; })arg1;
- (void)startInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)stopLoading:(id)arg1;
- (id)subviews;
- (id)superviewForSheet;
- (id)supportedPasteboardTypesForCurrentSelection;
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(struct CGPoint { float x1; float x2; })arg1 andLocation:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)suppressesIncrementalRendering;
- (void)takeTraitsFrom:(id)arg1;
- (void)tapInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)text;
- (id)textColorForCaretSelection;
- (id)textFormElement;
- (id)textInDOMRange:(id)arg1;
- (id)textInRange:(id)arg1;
- (id)textInputTraits;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textStylingAtPosition:(id)arg1 inDirection:(int)arg2;
- (void)toggleBaseWritingDirection;
- (void)toggleBoldface:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (id)tokenizer;
- (id)undoManager;
- (id)undoManagerForWebView:(id)arg1;
- (void)unmarkText;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)updateInteractionElements;
- (BOOL)updateKeyboardStateOnResponderChanges;
- (void)updateSelection;
- (BOOL)updatesScrollView;
- (void)useSelectionAssistantWithMode:(int)arg1;
- (void)validateInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)viewportHandler:(id)arg1 didChangeViewportSize:(struct CGSize { float x1; float x2; })arg2;
- (void)viewportHandlerDidChangeScales:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleContentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleContentRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleFrame;
- (BOOL)wantsMinimalUI;
- (id)webSelectionAssistant;
- (void)webThreadWebViewDidLayout:(id)arg1 byScrolling:(BOOL)arg2;
- (id)webView;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(int)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(BOOL)arg4;
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2 allowMultipleFiles:(BOOL)arg3 acceptMIMETypes:(id)arg4;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (BOOL)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint { float x1; float x2; })arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;
- (void)webViewDidDrawTiles:(id)arg1;
- (void)webViewDidEndOverflowScroll:(id)arg1;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (void)webViewDidReceiveMobileDocType:(id)arg1;
- (void)webViewDidRestoreFromPageCache:(id)arg1;
- (void)webViewDidStartOverflowScroll:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })webViewFrameForUIFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)webVisiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)willInteractWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)willRotateInteractionSheet;
- (void)willStartScroll;
- (void)willStartScrollToTop;
- (void)willStartZoom;
- (void)willZoomToLocation:(struct CGPoint { float x1; float x2; })arg1 atScale:(float)arg2 forDuration:(double)arg3;
- (void)willZoomToMinimumScale;
- (id)wordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (int)wordOffsetInRange:(id)arg1;
- (void)writeDataToPasteboard:(id)arg1;
- (float)zoomedDocumentScale;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

- (id)mf_NodeForAttachmentInRange:(id)arg1;
- (id)mf_URLsForAttachmentsInRange:(id)arg1;

@end
