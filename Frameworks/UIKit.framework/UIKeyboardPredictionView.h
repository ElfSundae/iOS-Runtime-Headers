/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardPredictionView : UIView {
    UITouch * _activeTouch;
    UITextSuggestion * _currentFirstTextSuggestion;
    NSDate * _lastTextSuggestionUpdateDate;
    int  _lastTextSuggestionUpdateOrientation;
    NSDate * _lastUpdateDate;
    int  _notifyBatterySaverToken;
    TIKeyboardCandidate * _scheduledAutocorrection;
    NSArray * _scheduledEmojiList;
    NSArray * _scheduledPredictions;
    int  _state;
    NSTimer * _updateTimer;
    unsigned int  m_activeIndex;
    unsigned int  m_autocorrectionCell;
    UIKBBackgroundView * m_backgroundView;
    NSString * m_closeQuote;
    UIKBKeyView * m_collapsedView;
    BOOL  m_currentInputModeEnablePrediction;
    BOOL  m_delayActive;
    BOOL  m_dragging;
    NSMutableArray * m_emojiCells;
    UIKeyboardPredictionBarGrabber * m_grabber;
    BOOL  m_hasLongCandidates;
    struct CGPoint { 
        float x; 
        float y; 
    }  m_initLocation;
    BOOL  m_isMinimized;
    UIKeyboardPredictionCell * m_lastCell;
    BOOL  m_lightKeyboard;
    UIView * m_message;
    UIKBKeyView * m_messageKeyView;
    UILabel * m_messageLabel;
    double  m_messageShownTime;
    unsigned int  m_numberOfVisibleCells;
    NSMutableArray * m_oneTextCells;
    NSString * m_openQuote;
    NSArray * m_predictionCells;
    NSMutableArray * m_textAndEmojiCells;
    NSMutableArray * m_threeTextCells;
    NSMutableArray * m_twoTextCells;
    float  m_width;
}

@property (nonatomic, retain) UITouch *activeTouch;
@property (nonatomic, retain) UITextSuggestion *currentFirstTextSuggestion;
@property (nonatomic, retain) NSDate *lastTextSuggestionUpdateDate;
@property (nonatomic) int lastTextSuggestionUpdateOrientation;
@property (nonatomic, retain) NSDate *lastUpdateDate;
@property (nonatomic, retain) TIKeyboardCandidate *scheduledAutocorrection;
@property (nonatomic, retain) NSArray *scheduledEmojiList;
@property (nonatomic, retain) NSArray *scheduledPredictions;
@property (nonatomic) BOOL show;
@property (nonatomic) int state;
@property (nonatomic, retain) NSTimer *updateTimer;

+ (id)activeInstance;
+ (unsigned int)numberOfCandidates;
+ (float)overlapHeight;
+ (float)predictionViewHeightForState:(int)arg1 orientation:(int)arg2;
+ (float)predictionViewHeightPaddingForOrientation:(int)arg1;
+ (float)predictionViewWidthForOrientation:(int)arg1;
+ (id)resultCountToSingleCellWidth;
+ (id)sharedInstance;

- (void)_setPredictions:(id)arg1 autocorrection:(id)arg2 emojiList:(id)arg3;
- (void)acceptCandidate;
- (void)acceptCandidateAtCell:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1;
- (void)activateCandidateAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)activeTouch;
- (id)autocorrection;
- (void)commitPrediction:(id)arg1;
- (id)createCells:(unsigned int)arg1;
- (id)currentFirstTextSuggestion;
- (void)deactivateCandidate;
- (void)dealloc;
- (void)delayActivateCellForPrediction:(id)arg1;
- (id)description;
- (void)dimKeys:(id)arg1;
- (BOOL)enabled;
- (BOOL)hasPredictions;
- (float)heightBeforeStateChangeForInterfaceOrientation:(int)arg1;
- (float)heightForInterfaceOrientation:(int)arg1;
- (unsigned int)indexForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)initCells;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)inputModeDidChange;
- (BOOL)isTextSuggestion;
- (id)labelTextForPrediction:(id)arg1 typedString:(id)arg2;
- (id)lastTextSuggestionUpdateDate;
- (int)lastTextSuggestionUpdateOrientation;
- (id)lastUpdateDate;
- (int)maxMessageCount;
- (int)messageCount;
- (unsigned int)predictionCount;
- (void)releaseMessage;
- (void)removeMessage;
- (id)scheduledAutocorrection;
- (id)scheduledEmojiList;
- (id)scheduledPredictions;
- (void)setActiveCellWithIndex:(unsigned int)arg1;
- (void)setActiveTouch:(id)arg1;
- (void)setCurrentFirstTextSuggestion:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrameForCells:(id)arg1 start:(float)arg2 width:(float)arg3 height:(float)arg4;
- (void)setLastTextSuggestionUpdateDate:(id)arg1;
- (void)setLastTextSuggestionUpdateOrientation:(int)arg1;
- (void)setLastUpdateDate:(id)arg1;
- (void)setPredictionViewState:(int)arg1 animate:(BOOL)arg2;
- (void)setPredictionViewState:(int)arg1 animate:(BOOL)arg2 notify:(BOOL)arg3;
- (void)setPredictions:(id)arg1 autocorrection:(id)arg2 emojiList:(id)arg3;
- (void)setScheduledAutocorrection:(id)arg1;
- (void)setScheduledEmojiList:(id)arg1;
- (void)setScheduledPredictions:(id)arg1;
- (void)setShow:(BOOL)arg1;
- (void)setState:(int)arg1;
- (void)setTouchedCellState:(int)arg1;
- (void)setUpdateTimer:(id)arg1;
- (BOOL)show;
- (void)showMessageWithSize:(struct CGSize { float x1; float x2; })arg1;
- (int)state;
- (int)stateForCurrentPreferences;
- (void)suppressLayoutSubviewsForCellLabels:(BOOL)arg1;
- (void)suspend;
- (void)touchUpdateTimer;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)updateBackgroundWithRenderConfig:(id)arg1;
- (id)updateTimer;
- (void)updateTimerFired:(id)arg1;

@end
