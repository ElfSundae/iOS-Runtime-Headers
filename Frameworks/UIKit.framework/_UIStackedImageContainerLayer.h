/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIStackedImageContainerLayer : CALayer {
    BOOL _animatingSelection;
    UIView *_animationView;
    _UIStackedImageConfiguration *_configuration;
    unsigned int _controlState;
    CALayer *_cursorLayer;
    CALayer *_cursorLayerContainer;
    id _flatImage;
    CALayer *_flatLayer;
    CALayer *_flatShadowLayer;
    struct CGPoint { 
        float x; 
        float y; 
    } _focusDirection;
    CALayer *_focusKeylineStrokeLayer;
    float _idleModeFocusSizeOffset;
    NSArray *_imageLayers;
    CALayer *_imageLayersContainer;
    NSString *_imageStackContentsGravity;
    <UINamedLayerStack> *_layerStack;
    _UIStackedImageLayerDelegate *_layoutDelegate;
    CALayer *_maskLayer;
    float _maximumParallaxDepth;
    CALayer *_overlayContainerLayer;
    CALayer *_overlayLayer;
    NSArray *_parallaxImages;
    NSArray *_parallaxLayerDepths;
    struct CGSize { 
        float width; 
        float height; 
    } _radiosityImageScale;
    CALayer *_radiosityLayer;
    BOOL _radiosityNeedsLayout;
    double _radiosityRequestTime;
    float _rotationAmount;
    float _scale;
    CALayer *_selectedPlaceholderLayer;
    double _selectionDuration;
    double _selectionStartTime;
    int _selectionStyle;
    CALayer *_shadowLayer;
    CALayer *_specularLayer;
    struct CGPoint { 
        float x; 
        float y; 
    } _translationOffset;
    CALayer *_unmaskedOverlayContainerLayer;
    CALayer *_unmaskedOverlayLayer;
}

@property (nonatomic, retain) _UIStackedImageConfiguration *configuration;
@property (nonatomic) unsigned int controlState;
@property (nonatomic) struct CGPoint { float x1; float x2; } focusDirection;
@property (nonatomic, retain) <UINamedLayerStack> *layerStack;
@property (getter=isPressed, nonatomic) BOOL pressed;
@property (getter=isSelected, nonatomic) BOOL selected;

+ (id)_layerStackObservingKeys;
+ (struct CGSize { float x1; float x2; })_scaledSizeForSize:(struct CGSize { float x1; float x2; })arg1 focusSizeIncrease:(float)arg2 selectionStyle:(int)arg3;

- (void).cxx_destruct;
- (id)_TVTraitCollection;
- (void)_applyFocusDirectionTransform;
- (void)_applyFocusDirectionTransformHighQualityGraphicsWithAnimationCoordinator:(id)arg1;
- (void)_applyFocusDirectionTransformLowQualityGraphicsWithAnimationCoordinator:(id)arg1;
- (void)_applyFocusDirectionTransformWithAnimationCoordinator:(id)arg1;
- (void)_deselect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_displayFrameForModelFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_flatLayer;
- (struct CGSize { float x1; float x2; })_focusCursorInsetSizeForSize:(struct CGSize { float x1; float x2; })arg1;
- (float)_focusedScaleFactorForCurrentBounds;
- (float)_focusedShadowRadius;
- (float)_getShadowOpacity;
- (float)_idleModeFocusSizeOffset;
- (id)_imageStackContentsGravity;
- (BOOL)_isFocused;
- (BOOL)_isFocusedIdle;
- (BOOL)_isFocusedOrFocusedIdle;
- (BOOL)_isHighlighted;
- (BOOL)_isNormal;
- (BOOL)_isSelected;
- (id)_layerBelowTitles;
- (struct CGPoint { float x1; float x2; })_layerStackToDisplayScaleFactor;
- (id)_parallaxLayerDepths;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_positionAndSizeForLayerImage:(id)arg1;
- (id)_preferredLayoutDelegateForLayer:(id)arg1;
- (unsigned int)_primaryControlStateForState:(unsigned int)arg1;
- (BOOL)_radiosityEnabled;
- (id)_randomImage;
- (void)_resetAnimatingSelection;
- (struct CGSize { float x1; float x2; })_scaledSizeForCurrentState;
- (int)_selectionStyle;
- (void)_setControlState:(unsigned int)arg1 animated:(BOOL)arg2 focusAnimationCoordinator:(id)arg3 completion:(id /* block */)arg4;
- (void)_setDefaultParallaxLayerDepths;
- (void)_setFlatImage:(id)arg1;
- (void)_setFocusDirection:(struct CGPoint { float x1; float x2; })arg1 duration:(double)arg2;
- (void)_setIdleModeFocusSizeOffset:(float)arg1;
- (void)_setImageStackContentsGravity:(id)arg1;
- (void)_setOverlayLayer:(id)arg1;
- (void)_setParallaxImages:(id)arg1;
- (void)_setParallaxLayerDepths:(id)arg1;
- (void)_setSelectionStyle:(int)arg1;
- (void)_setUnmaskedOverlayLayer:(id)arg1;
- (id)_shadowLayer;
- (float)_unfocusedShadowRadius;
- (void)_updateCornerRadiusFromConfig;
- (void)_updateImageLayerFilterChains;
- (void)_updateLayerForSelection;
- (void)_updateLayerForSelectionHighQualityGraphicsWithAnimationCoordinator:(id)arg1;
- (void)_updateLayerForSelectionLowQualityGraphicsWithAnimationCoordinator:(id)arg1;
- (void)_updateLayerForSelectionWithAnimationCoordinator:(id)arg1;
- (void)_updateRadiosityFromLayerStack;
- (void)_updateShadowBounds;
- (void)_updateShadowHighQualityGraphicsWithAnimationCoordinator:(id)arg1;
- (void)_updateShadowPositionWithOffset:(struct CGPoint { float x1; float x2; })arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)configuration;
- (unsigned int)controlState;
- (void)dealloc;
- (struct CGPoint { float x1; float x2; })focusDirection;
- (id)init;
- (BOOL)isPressed;
- (BOOL)isSelected;
- (id)layerStack;
- (void)layoutSublayers;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setConfiguration:(id)arg1;
- (void)setControlState:(unsigned int)arg1;
- (void)setControlState:(unsigned int)arg1 animated:(BOOL)arg2;
- (void)setControlState:(unsigned int)arg1 animated:(BOOL)arg2 focusAnimationCoordinator:(id)arg3;
- (void)setFocusDirection:(struct CGPoint { float x1; float x2; })arg1;
- (void)setFocusDirection:(struct CGPoint { float x1; float x2; })arg1 animated:(BOOL)arg2;
- (void)setLayerStack:(id)arg1;
- (void)setPressed:(BOOL)arg1;
- (void)setPressed:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setPressed:(BOOL)arg1 animated:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)setSelected:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2 focusAnimationCoordinator:(id)arg3;

@end
