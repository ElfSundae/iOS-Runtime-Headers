/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardPredictionCell : UIView {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _activeFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _baseFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _collapsedFrame;
    BOOL _isAutocorrection;
    BOOL _isCenter;
    BOOL _isLongCandidate;
    BOOL _isTypedString;
    TIKeyboardCandidate *_prediction;
    int _state;
    UIKBKeyView *m_activeKeyView;
    UIKBKeyView *m_enabledKeyView;
    struct CGSize { 
        float width; 
        float height; 
    } m_keyViewSize;
    UIMorphingLabel *m_label;
    BOOL m_lightKeyboard;
    UIView *m_maskView;
}

@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } activeFrame;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } baseFrame;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } collapsedFrame;
@property (nonatomic) BOOL isAutocorrection;
@property (nonatomic) BOOL isCenter;
@property (nonatomic) BOOL isLongCandidate;
@property (nonatomic) BOOL isTypedString;
@property (nonatomic, readonly, retain) TIKeyboardCandidate *prediction;
@property (nonatomic) int state;

+ (id)newKeyViewWithSize:(struct CGSize { float x1; float x2; })arg1 state:(int)arg2 needsBackground:(BOOL)arg3;

- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })activeFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })baseFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })collapsedFrame;
- (void)dealloc;
- (void)dimKeys:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isAutocorrection;
- (BOOL)isCenter;
- (BOOL)isLongCandidate;
- (BOOL)isTypedString;
- (id)label;
- (id)prediction;
- (void)scrollLabelWithText:(id)arg1 force:(BOOL)arg2;
- (void)setActiveFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBaseFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setCellAttributes;
- (void)setCollapsedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIsAutocorrection:(BOOL)arg1;
- (void)setIsCenter:(BOOL)arg1;
- (void)setIsLongCandidate:(BOOL)arg1;
- (void)setIsTypedString:(BOOL)arg1;
- (void)setState:(int)arg1;
- (void)setState:(int)arg1 withText:(id)arg2;
- (void)setText:(id)arg1 prediction:(id)arg2 active:(BOOL)arg3;
- (void)setVisibleRect;
- (int)state;
- (id)textColor;
- (void)touchMoved:(float)arg1;
- (void)updateBackgroundWithRenderConfig:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRect;

@end
