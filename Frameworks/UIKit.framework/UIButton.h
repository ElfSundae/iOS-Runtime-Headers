/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIButton : UIControl <ABText, NSCoding, UIGestureRecognizerDelegate, _UIFloatingContentViewDelegate> {
    UIImageView *_backgroundView;
    struct { 
        unsigned int reversesTitleShadowWhenHighlighted : 1; 
        unsigned int adjustsImageWhenHighlighted : 1; 
        unsigned int adjustsImageWhenDisabled : 1; 
        unsigned int autosizeToFit : 1; 
        unsigned int disabledDimsImage : 1; 
        unsigned int showsTouchWhenHighlighted : 1; 
        unsigned int buttonType : 8; 
        unsigned int shouldHandleScrollerMouseEvent : 1; 
        unsigned int titleFrozen : 1; 
        unsigned int resendTraitToImageViews : 2; 
        unsigned int animateNextHighlightChange : 1; 
        unsigned int blurEnabled : 1; 
        unsigned int visualEffectViewEnabled : 1; 
        unsigned int suppressAccessibilityUnderline : 1; 
        unsigned int requiresLayoutForPropertyChange : 1; 
    } _buttonFlags;
    UIVisualEffectView *_contentBackdropView;
    NSArray *_contentConstraints;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _contentEdgeInsets;
    struct __CFDictionary { } *_contentLookup;
    UIView *_effectiveContentView;
    unsigned int _externalFlatEdge;
    _UIFloatingContentView *_floatingContentView;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _imageEdgeInsets;
    UIImageView *_imageView;
    BOOL _initialized;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _internalTitlePaddingInsets;
    unsigned int _lastDrawingControlState;
    UIFont *_lazyTitleViewFont;
    _UIButtonMaskAnimationView *_maskAnimationView;
    UITapGestureRecognizer *_selectGestureRecognizer;
    UIView *_selectionView;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _titleEdgeInsets;
    UILabel *_titleView;
}

@property (setter=_setContentConstraints:, nonatomic, copy) NSArray *_contentConstraints;
@property (nonatomic, readonly, retain) UIColor *_currentImageColor;
@property (setter=_setExternalFlatEdge:) unsigned int _externalFlatEdge;
@property (setter=_setInternalTitlePaddingInsets:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _internalTitlePaddingInsets;
@property (setter=_setWantsAccessibilityUnderline:, nonatomic) BOOL _wantsAccessibilityUnderline;
@property (nonatomic, copy) NSString *ab_text;
@property (nonatomic, copy) NSDictionary *ab_textAttributes;
@property (nonatomic) BOOL adjustsImageWhenDisabled;
@property (nonatomic) BOOL adjustsImageWhenHighlighted;
@property (nonatomic, readonly) int buttonType;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contentEdgeInsets;
@property (nonatomic, readonly) NSAttributedString *currentAttributedTitle;
@property (nonatomic, readonly) UIImage *currentBackgroundImage;
@property (nonatomic, readonly) UIImage *currentImage;
@property (nonatomic, readonly) NSString *currentTitle;
@property (nonatomic, readonly) UIColor *currentTitleColor;
@property (nonatomic, readonly) UIColor *currentTitleShadowColor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } imageEdgeInsets;
@property (nonatomic, readonly) UIImageView *imageView;
@property (nonatomic) BOOL reversesTitleShadowWhenHighlighted;
@property (nonatomic) BOOL showsTouchWhenHighlighted;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } titleEdgeInsets;
@property (nonatomic, readonly) UILabel *titleLabel;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (BOOL)_buttonTypeIsModernUI:(int)arg1;
+ (id)_checkmarkImage;
+ (id)_defaultBackgroundImageForType:(int)arg1 andState:(unsigned int)arg2;
+ (id)_defaultImageColorForState:(unsigned int)arg1 button:(id)arg2;
+ (id)_defaultImageForType:(int)arg1 andState:(unsigned int)arg2;
+ (id)_defaultNormalTitleColor;
+ (id)_defaultNormalTitleShadowColor;
+ (id)_defaultTitleColorForState:(unsigned int)arg1 button:(id)arg2;
+ (id)_detailDisclosureImage;
+ (id)_exclamationMarkImage;
+ (id)_infoDarkImage;
+ (id)_infoLightImage;
+ (id)_minusImage;
+ (id)_plusImage;
+ (id)_questionMarkImage;
+ (id)_selectedIndicatorImage;
+ (void)_setVisuallyHighlighted:(BOOL)arg1 forViews:(id)arg2 initialPress:(BOOL)arg3;
+ (void)_setVisuallyHighlighted:(BOOL)arg1 forViews:(id)arg2 initialPress:(BOOL)arg3 baseAlpha:(float)arg4;
+ (id)_xImage;
+ (id)buttonWithType:(int)arg1;

- (void).cxx_destruct;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (void)_applyAppropriateChargeForButtonType;
- (id)_archivableContent:(id*)arg1;
- (id)_attributedTitleForState:(unsigned int)arg1;
- (float)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (float)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (id)_backgroundForState:(unsigned int)arg1 usesBackgroundForNormalState:(BOOL*)arg2;
- (id)_backgroundView;
- (void)_beginTitleAnimation;
- (BOOL)_blurEnabled;
- (id)_borderColorForState:(unsigned int)arg1;
- (float)_borderWidthForState:(unsigned int)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (int)_buttonType;
- (BOOL)_canHaveTitle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_clippedHighlightBounds;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_combinedContentPaddingInsets;
- (id)_contentBackdropView;
- (id)_contentConstraints;
- (id)_contentForState:(unsigned int)arg1;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (unsigned int)_controlEventsForActionTriggered;
- (id)_createPreparedImageViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_currentImageColor;
- (void)_didChangeFromIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (float)_drawingStrokeForState:(unsigned int)arg1;
- (float)_drawingStrokeForStyle:(int)arg1;
- (int)_drawingStyleForState:(unsigned int)arg1;
- (int)_drawingStyleForStroke:(float)arg1;
- (id)_effectiveContentView;
- (id)_encodableSubviews;
- (id)_externalBorderColorForState:(unsigned int)arg1;
- (int)_externalDrawingStyleForState:(unsigned int)arg1;
- (unsigned int)_externalFlatEdge;
- (id)_externalFocusedTitleColor;
- (id)_externalImageColorForState:(unsigned int)arg1;
- (id)_externalTitleColorForState:(unsigned int)arg1;
- (id)_externalUnfocusedBorderColor;
- (id)_fadeOutAnimationWithKeyPath:(id)arg1;
- (id)_floatingContentView;
- (id)_font;
- (BOOL)_hasCustomAutolayoutNeighborSpacing;
- (BOOL)_hasDrawingStyle;
- (BOOL)_hasHighlightColor;
- (BOOL)_hasImageForProperty:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightBoundsForDrawingStyle;
- (float)_highlightCornerRadius;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightRectForImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightRectForTextRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_imageColorForState:(unsigned int)arg1;
- (id)_imageForState:(unsigned int)arg1 usesImageForNormalState:(BOOL*)arg2;
- (BOOL)_imageNeedsCompositingModeWhenSelected;
- (id)_imageView;
- (void)_installSelectGestureRecognizer;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_internalTitlePaddingInsets;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_invalidateContentConstraints;
- (BOOL)_isEffectivelyDisabledExternalRoundedRectButton;
- (BOOL)_isExternalRoundedRectButton;
- (BOOL)_isExternalRoundedRectButtonWithPressednessState;
- (BOOL)_isModernButton;
- (BOOL)_isTitleFrozen;
- (void)_layoutBackgroundImageView;
- (void)_layoutContentBackdropView;
- (id)_layoutDebuggingTitle;
- (void)_layoutImageView;
- (void)_layoutTitleView;
- (id)_letterpressStyleForState:(unsigned int)arg1;
- (BOOL)_likelyToHaveTitle;
- (int)_lineBreakMode;
- (id)_newImageViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_newLabelWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_outsetInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_pathImageEdgeInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_pathTitleEdgeInsets;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)_preferredConfigurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (void)_prepareMaskAnimationViewIfNecessary;
- (BOOL)_requiresLayoutForPropertyChange;
- (id)_scriptingInfo;
- (void)_selectGestureChanged:(id)arg1;
- (float)_selectedIndicatorAlpha;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_selectedIndicatorBounds;
- (id)_selectedIndicatorViewWithImage:(id)arg1;
- (void)_sendSetNeedsLayoutToSuperviewOnTitleAnimationCompletionIfNecessary;
- (void)_setAttributedTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setBackground:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setBlurEnabled:(BOOL)arg1;
- (void)_setButtonType:(int)arg1;
- (void)_setContent:(id)arg1 forState:(unsigned int)arg2;
- (void)_setContentConstraints:(id)arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setDrawingStroke:(float)arg1 forState:(unsigned int)arg2;
- (void)_setDrawingStyle:(int)arg1 forState:(unsigned int)arg2;
- (void)_setExternalFlatEdge:(unsigned int)arg1;
- (void)_setFont:(id)arg1;
- (void)_setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 deferLayout:(BOOL)arg2;
- (void)_setHighlighted:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setImageColor:(id)arg1 forState:(unsigned int)arg2;
- (void)_setImageColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setInternalTitlePaddingInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setLetterpressStyle:(id)arg1 forState:(unsigned int)arg2;
- (void)_setLineBreakMode:(int)arg1;
- (void)_setShadowColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setShouldHandleScrollerMouseEvent:(BOOL)arg1;
- (void)_setTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setTitleColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setTitleFrozen:(BOOL)arg1;
- (void)_setTitleShadowOffset:(struct CGSize { float x1; float x2; })arg1;
- (void)_setVisualEffectViewEnabled:(BOOL)arg1 backgroundColor:(id)arg2;
- (void)_setWantsAccessibilityUnderline:(BOOL)arg1;
- (id)_setupBackgroundView;
- (void)_setupDrawingStyleForState:(unsigned int)arg1;
- (void)_setupImageView;
- (void)_setupPressednessForState:(unsigned int)arg1;
- (void)_setupTitleView;
- (void)_setupTitleViewRequestingLayout:(BOOL)arg1;
- (id)_shadowColorForState:(unsigned int)arg1;
- (BOOL)_shouldDefaultToTemplatesForImageViewBackground:(BOOL)arg1;
- (BOOL)_shouldHaveFloatingAppearance;
- (BOOL)_shouldSkipNormalLayoutForSakeOfTemplateLayout;
- (BOOL)_shouldUpdatePressedness;
- (void)_takeContentFromArchivableContent:(id)arg1;
- (BOOL)_textNeedsCompositingModeWhenSelected;
- (void)_titleAttributesChanged;
- (id)_titleColorForState:(unsigned int)arg1;
- (id)_titleForState:(unsigned int)arg1;
- (id)_titleOrImageViewForBaselineLayout;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_titleRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 calculatePositionForEmptyTitle:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })_titleShadowOffset;
- (id)_titleView;
- (id)_transitionAnimationWithKeyPath:(id)arg1;
- (void)_uninstallSelectGestureRecognizer;
- (void)_updateBackgroundImageView;
- (void)_updateContentBackdropView;
- (void)_updateEffectsForImageView:(id)arg1 background:(BOOL)arg2;
- (void)_updateImageView;
- (void)_updateMaskState;
- (void)_updateSelectionViewForState:(unsigned int)arg1;
- (void)_updateTitleView;
- (BOOL)_visualEffectViewEnabled;
- (BOOL)_wantsAccessibilityUnderline;
- (BOOL)_wantsContentBackdropView;
- (void)_willMoveToWindow:(id)arg1;
- (BOOL)adjustsImageWhenDisabled;
- (BOOL)adjustsImageWhenHighlighted;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (id)attributedTitleForState:(unsigned int)arg1;
- (BOOL)autosizesToFit;
- (id)backgroundImageForState:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })backgroundRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (int)buttonType;
- (BOOL)canBecomeFocused;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentEdgeInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)crossfadeToImage:(id)arg1 forState:(unsigned int)arg2;
- (id)currentAttributedTitle;
- (id)currentBackgroundImage;
- (id)currentImage;
- (id)currentTitle;
- (id)currentTitleColor;
- (id)currentTitleShadowColor;
- (void)dealloc;
- (unsigned long long)defaultAccessibilityTraits;
- (void)encodeWithCoder:(id)arg1;
- (void)floatingContentView:(id)arg1 isTransitioningFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (id)font;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)image;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })imageEdgeInsets;
- (id)imageForState:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)imageView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)interactionTintColorDidChange;
- (void)invalidateIntrinsicContentSize;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)layoutSubviews;
- (int)lineBreakMode;
- (struct CGPoint { float x1; float x2; })pressFeedbackPosition;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (BOOL)reversesTitleShadowWhenHighlighted;
- (void)setAdjustsImageWhenDisabled:(BOOL)arg1;
- (void)setAdjustsImageWhenHighlighted:(BOOL)arg1;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned int)arg2;
- (void)setAutosizesToFit:(BOOL)arg1;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setBackgroundImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setContentHorizontalAlignment:(int)arg1;
- (void)setContentVerticalAlignment:(int)arg1;
- (void)setDisabledDimsImage:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)setImageEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setLineBreakMode:(int)arg1;
- (void)setReversesTitleShadowWhenHighlighted:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setSemanticContentAttribute:(int)arg1;
- (void)setShowPressFeedback:(BOOL)arg1;
- (void)setShowsTouchWhenHighlighted:(BOOL)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleColor:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitleColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setTitleShadowColor:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitleShadowColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleShadowOffset:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)showsTouchWhenHighlighted;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)tintColorDidChange;
- (id)title;
- (id)titleColorForState:(unsigned int)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })titleEdgeInsets;
- (id)titleForState:(unsigned int)arg1;
- (id)titleLabel;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })titleRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)titleShadowColorForState:(unsigned int)arg1;
- (struct CGSize { float x1; float x2; })titleShadowOffset;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateConstraints;
- (id)viewForLastBaselineLayout;

// Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI

- (void)ab_addConferenceIcon;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

- (id)ab_text;
- (id)ab_textAttributes;
- (void)setAb_text:(id)arg1;
- (void)setAb_textAttributes:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

- (id)_mapkit_accessoryControlToExtendWithCallout;

// Image: /System/Library/Frameworks/PassKit.framework/PassKit

- (void)pk_applyAppearance:(struct _PKAppearanceSpecifier { BOOL x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; id x35; Class x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; BOOL x59; void*x60; const const void*x61; in void*x62; unsigned int x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; unsigned int x90; bool x91; void*x92; void*x93; void*x94; out in bool x95; void*x96; const unsigned long x97; void*x98; void*x99; out void*x100; void*x101; void*x102; void*x103; void*x104; const int x105; BOOL x106; short x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; unsigned int x197; bool x198; void*x199; void*x200; void*x201; out in bool x202; void*x203; const unsigned long x204; void*x205; void*x206; out void*x207; void*x208; void*x209; void*x210; void*x211; const int x212; BOOL x213; short x214; long doublex215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; id x248; void*x249; void* x250[ /* ? */ ]; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; id x277; void*x278; BOOL x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; id x307; BOOL x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; unsigned int x321/* : ? */; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; id x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; bool x408; unsigned short x409; unsigned short x410; BOOL x411; void*x412; in void*x413; long doublex414; void*x415; long x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; unsigned short x471; void*x472; short x473; void*x474; void*x475; void*x476; void*x477; unsigned long x478; int x479; unsigned int x480/* : ? */; const void*x481; const void*x482; void*x483; void*x484; const int x485; void x486; void*x487; void*x488; void*x489; void*x490; const void*x491; void*x492; void*x493; void*x494; out const void*x495; short x496; void*x497; unsigned short x498; void*x499; void*x500; const BOOL x501; void*x502; void*x503; float x504; const void*x505; void*x506; void*x507; void*x508; out const void*x509; void*x510; unsigned short x511; void*x512; void*x513; const BOOL x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void* x564[ /* ? */ ]; void*x565; void*x566; void*x567; char *x568; void*x569; void*x570; void*x571; unsigned int x572; unsigned long x573; out BOOL x574; void*x575; void*x576; void*x577; unsigned short x578; void*x579; out out short x580; void*x581; unsigned char x582; out long x583; long x584; void*x585; BOOL x586; void*x587; int x588; out in oneway int x589; void*x590; void*x591; unsigned char x592; void*x593; long x594; long x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; id x604; void x605; void**x606; void*x607; void*x608; void*x609; bool x610; const out void*x611; short x612; int x613; in void*x614; unsigned char x615; out in void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; in double x622; long x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; id x644; void x645; void**x646; void*x647; void*x648; void*x649; bycopy in void*x650; void*x651; void*x652; oneway int x653; void*x654; void*x655; unsigned char x656; out in void*x657; const out long x658; long x659; void*x660; const unsigned short x661; void*x662; void*x663; BOOL x664; unsigned char x665; void*x666; void*x667; in void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; id x681; void x682; void**x683; void*x684; bool x685; unsigned short x686; BOOL x687; void*x688; in void*x689; void*x690; void*x691; in void*x692; void*x693; void*x694; const bycopy unsigned int x695/* : ? */; short x696; void*x697; const void x698; void*x699; const void*x700; void*x701; void*x702; void*x703; id x704; void*x705; out void*x706; void*x707; void*x708; inout void*x709; void x710; int x711; void*x712; void*x713; void*x714; out const unsigned long x715; int x716; in void*x717; void*x718; const oneway int x719; void*x720; void*x721; unsigned char x722; out in void*x723; const out long x724; long x725; void*x726; const void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; id x738; void*x739; void**x740; void*x741; void*x742; unsigned short x743; long doublex744; long doublex745; const void*x746; void*x747; void*x748; unsigned int x749/* : ? */; long x750; void*x751; unsigned short x752; void*x753; long x754; void*x755; BOOL x756; void*x757; int x758; out in void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; id x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; short x772; int x773; BOOL x774; unsigned short x775; void*x776; void*x777; const BOOL x778; void*x779; void*x780; const void*x781; short x782; void*x783; in void*x784; void*x785; void*x786; int x787; out in unsigned char x788; out in void*x789; const out long x790; long x791; void*x792; const void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; id x802; void*x803; long long x804; void*x805; void*x806; void*x807; void*x808; unsigned char x809; unsigned short x810; unsigned short x811; long doublex812; void*x813; BOOL x814; long x815; void*x816; const void*x817; void*x818; int x819; out in unsigned short x820; void*x821; void*x822; double x823; out void*x824; void*x825; void*x826; void*x827; void*x828; id x829; long long x830; void*x831; void*x832; void*x833; void*x834; void*x835; bycopy in void*x836; void*x837; void*x838; oneway int x839; void*x840; void*x841; unsigned char x842; out in void*x843; const out long x844; long x845; void*x846; const unsigned short x847; void*x848; void*x849; BOOL x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; id x868; void*x869; BOOL x870; void*x871; void*x872; void*x873; void*x874; unsigned int x875; void*x876; void*x877; void*x878; int x879; long x880; void*x881; unsigned char x882; const void*x883; double x884; int x885; void*x886; unsigned char x887; void*x888; const double x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; id x896; void*x897; BOOL x898; void*x899; void*x900; void*x901; void*x902; bool x903; void*x904; long x905; long x906; out out in oneway int x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; id x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; unsigned short x930; unsigned short x931; long x932; int x933; double x934; void*x935; const void*x936; out void*x937; void*x938; void*x939; unsigned int x940/* : ? */; long x941; void*x942; oneway int x943; void*x944; void*x945; unsigned char x946; void*x947; long x948; long x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; id x967; void*x968; void**x969; void*x970; void*x971; void*x972; unsigned int x973; void*x974; void*x975; long x976; int x977; BOOL x978; void*x979; void*x980; int x981; out in void*x982; out double x983; void*x984; long x985; void*x986; const out void*x987; const void*x988; short x989; short x990; unsigned char x991; out in void*x992; const out long x993; long x994; void*x995; const void*x996; void*x997; void*x998; void*x999; void*x1000; id x1001; void*x1002; unsigned int x1003/* : ? */; void*x1004; void*x1005; void*x1006; unsigned short x1007; void*x1008; void*x1009; void*x1010; int x1011; in void*x1012; bool x1013; out out long x1014; void*x1015; void*x1016; in void*x1017; in void*x1018; int x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; id x1026; void*x1027; unsigned int x1028/* : ? */; void*x1029; void*x1030; void*x1031; bool x1032; unsigned short x1033; long doublex1034; int x1035; short x1036; void*x1037; long x1038; void*x1039; void*x1040; unsigned long x1041; void*x1042; void*x1043; out void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; id x1056; }*)arg1;
- (id)pk_childrenForAppearance;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

- (void)pu_setRTLAwareContentEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)pu_setTitle:(id)arg1 withFallback:(id /* block */)arg2 forState:(unsigned int)arg3;

// Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit

- (void)cam_updateContentInsetsToCenterImageWithinMinimumSize:(struct CGSize { float x1; float x2; })arg1;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

- (void)mpu_configureButtonWithTextDrawingContext:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI

+ (id)mediaControlsBuyButtonWithStyle:(int)arg1;

- (void)_mediaControlsBuyButtonTouchDown:(id)arg1;
- (void)_mediaControlsBuyButtonTouchUp:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

- (void)configureFromScriptButton:(id)arg1;

@end
