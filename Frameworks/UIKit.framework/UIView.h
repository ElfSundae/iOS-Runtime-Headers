/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIView : UIResponder <MKStackingViewControllerSizableView, NSCoding, NSISEngineDelegate, NSISVariableDelegate, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UITextEffectsOrdering, UITraitEnvironment, _UIFocusEnvironmentInternal, _UILayoutItem, _UIScrollNotification, _UITraitEnvironmentInternal> {
    UIPresentationController *__presentationControllerToNotifyOnLayoutSubviews;
    NSString *_backgroundColorSystemColorName;
    NSISVariable *_boundsHeightVariable;
    NSISVariable *_boundsWidthVariable;
    float _cachedScreenScale;
    UITraitCollection *_cachedTraitCollection;
    float _charge;
    NSMutableArray *_constraintsExceptingSubviewAutoresizingConstraints;
    id _contentSizeNotificationToken;
    float _continuousCornerRadius;
    unsigned int _countOfFocusedAncestorTrackingViewsInSubtree;
    unsigned int _countOfMotionEffectsInSubtree;
    unsigned int _countOfTraitChangeRespondersInDirectSubtree;
    id _gestureInfo;
    NSMutableArray *_gestureRecognizers;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _inferredLayoutMargins;
    UIColor *_interactionTintColor;
    NSMutableArray *_internalConstraints;
    CALayer *_layer;
    CALayer *_layerRetained;
    NSString *_layoutDebuggingIdentifier;
    NSISEngine *_layoutEngine;
    UILayoutGuide *_layoutMarginsGuide;
    NSISVariable *_minXVariable;
    NSISVariable *_minYVariable;
    UIStoryboardPreviewingSegueTemplateStorage *_previewingSegueTemplateStorage;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _rawLayoutMargins;
    UILayoutGuide *_readableContentGuide;
    int _retainCount;
    int _semanticContentAttribute;
    BOOL _shouldArchiveUIAppearanceTags;
    NSArray *_subviewCache;
    int _tag;
    int _tintAdjustmentDimmingCount;
    UIViewController *_viewDelegate;
    struct { 
        unsigned int userInteractionDisabled : 1; 
        unsigned int implementsDrawRect : 1; 
        unsigned int implementsDidScroll : 1; 
        unsigned int implementsMouseTracking : 1; 
        unsigned int implementsIntrinsicContentSize : 1; 
        unsigned int hasBackgroundColor : 1; 
        unsigned int isOpaque : 1; 
        unsigned int becomeFirstResponderWhenCapable : 1; 
        unsigned int interceptMouseEvent : 1; 
        unsigned int deallocating : 1; 
        unsigned int debugFlash : 1; 
        unsigned int debugSkippedSetNeedsDisplay : 1; 
        unsigned int debugScheduledDisplayIsRequired : 1; 
        unsigned int isInAWindow : 1; 
        unsigned int isAncestorOfFirstResponder : 1; 
        unsigned int dontAutoresizeSubviews : 1; 
        unsigned int autoresizeMask : 6; 
        unsigned int patternBackground : 1; 
        unsigned int fixedBackgroundPattern : 1; 
        unsigned int dontAnimate : 1; 
        unsigned int superLayerIsView : 1; 
        unsigned int layerKitPatternDrawing : 1; 
        unsigned int multipleTouchEnabled : 1; 
        unsigned int exclusiveTouch : 1; 
        unsigned int hasViewController : 1; 
        unsigned int needsDidAppearOrDisappear : 1; 
        unsigned int gesturesEnabled : 1; 
        unsigned int deliversTouchesForGesturesToSuperview : 1; 
        unsigned int deliversButtonsForGesturesToSuperview : 1; 
        unsigned int chargeEnabled : 1; 
        unsigned int skipsSubviewEnumeration : 1; 
        unsigned int needsDisplayOnBoundsChange : 1; 
        unsigned int hasTiledLayer : 1; 
        unsigned int hasLargeContent : 1; 
        unsigned int unused : 1; 
        unsigned int traversalMark : 1; 
        unsigned int appearanceIsInvalid : 1; 
        unsigned int monitorsSubtree : 1; 
        unsigned int hostsAutolayoutEngine : 1; 
        unsigned int constraintsAreClean : 1; 
        unsigned int subviewLayoutConstraintsAreClean : 1; 
        unsigned int intrinsicContentSizeConstraintsAreClean : 1; 
        unsigned int potentiallyHasDanglyConstraints : 1; 
        unsigned int doesNotTranslateAutoresizingMaskIntoConstraints : 1; 
        unsigned int autolayoutIsClean : 1; 
        unsigned int layoutFlushingDisabled : 1; 
        unsigned int layingOutFromConstraints : 1; 
        unsigned int wantsAutolayout : 1; 
        unsigned int subviewWantsAutolayout : 1; 
        unsigned int isApplyingValuesFromEngine : 1; 
        unsigned int isInAutolayout : 1; 
        unsigned int isInAnimatedLayout : 1; 
        unsigned int isSubviewUpdatingAutoresizingConstraints : 1; 
        unsigned int isUpdatingConstraints : 1; 
        unsigned int isHostingUpdateConstraintsPassDuringLayout : 1; 
        unsigned int isRunningEngineLevelConstraintsPass : 1; 
        unsigned int isUnsatisfiableConstraintsLoggingSuspended : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdate : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdateInWholeSubtree : 1; 
        unsigned int isCalculatingSystemLayoutFittingSize : 1; 
        unsigned int stayHiddenAwaitingReuse : 1; 
        unsigned int stayHiddenAfterReuse : 1; 
        unsigned int skippedLayoutWhileHiddenForReuse : 1; 
        unsigned int isPendingHiddenForAnimation : 1; 
        unsigned int hasMaskView : 1; 
        unsigned int hasVisualAltitude : 1; 
        unsigned int hasBackdropMaskViews : 1; 
        unsigned int backdropMaskViewFlags : 5; 
        unsigned int delaysTouchesForSystemGestures : 1; 
        unsigned int subclassShouldDelayTouchForSystemGestures : 1; 
        unsigned int hasMotionEffects : 1; 
        unsigned int backdropOverlayMode : 2; 
        unsigned int tintAdjustmentMode : 2; 
        unsigned int isReferenceView : 1; 
        unsigned int focusState : 2; 
        unsigned int hasUserInterfaceIdiom : 1; 
        unsigned int userInterfaceIdiom : 3; 
        unsigned int ancestorDefinesTintColor : 1; 
        unsigned int ancestorDefinesTintAdjustmentMode : 1; 
        unsigned int needsTraitCollectionDidChange : 1; 
        unsigned int coloredViewBounds : 1; 
        unsigned int coloredAlignmentRects : 1; 
        unsigned int coloredFocusItems : 1; 
        unsigned int preservesSuperviewMargins : 1; 
        unsigned int hasGeometryObservers : 1; 
        unsigned int wantsGeometryChanges : 1; 
        unsigned int hasTraitStorageList : 1; 
        unsigned int cachedTraitCollectionIsValid : 1; 
        unsigned int dontUpdateInferredLayoutMargins : 1; 
        unsigned int implementsViewForBaselineLayout : 1; 
        unsigned int tracksFocusedAncestors : 1; 
        unsigned int hasLayoutArrangements : 1; 
        unsigned int isHiddenManagedByLayoutArrangement : 1; 
        unsigned int hasFocusableContentMargins : 1; 
        unsigned int shouldReverseLayoutDirection : 1; 
        unsigned int cannotBeParentTraitEnvironment : 1; 
    } _viewFlags;
}

@property (setter=PG_setAllowsEdgeAntialiasing:, nonatomic) BOOL PG_allowsEdgeAntialiasing;
@property (setter=PG_setAnchorPoint:, nonatomic) struct CGPoint { float x1; float x2; } PG_anchorPoint;
@property (setter=PG_setCompositingFilter:, nonatomic, retain) id PG_compositingFilter;
@property (setter=PG_setCornerRadius:, nonatomic) float PG_cornerRadius;
@property (setter=_setAccessoryViewFrame:, nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _accessoryViewFrame;
@property (getter=_ancestorDefinesTintAdjustmentMode, setter=_setAncestorDefinesTintAdjustmentMode:, nonatomic) BOOL _ancestorDefinesTintAdjustmentMode;
@property (getter=_ancestorDefinesTintColor, setter=_setAncestorDefinesTintColor:, nonatomic) BOOL _ancestorDefinesTintColor;
@property (nonatomic, readonly) UIView *_backdropMaskViewForColorTint;
@property (nonatomic, readonly) UIView *_backdropMaskViewForFilters;
@property (nonatomic, readonly) UIView *_backdropMaskViewForGrayscaleTint;
@property (nonatomic, readonly) NSArray *_backdropMaskViews;
@property (nonatomic, readonly, retain) NSISVariable *_boundsHeightVariable;
@property (nonatomic, readonly, retain) NSISVariable *_boundsWidthVariable;
@property (getter=_canBeParentTraitEnvironment, setter=_setCanBeParentTraitEnvironment:, nonatomic) BOOL _canBeParentTraitEnviroment;
@property (nonatomic, readonly) CNContactStyle *_cnui_contactStyle;
@property (nonatomic, readonly, retain) NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
@property (setter=_setContinuousCornerRadius:, nonatomic) float _continuousCornerRadius;
@property (nonatomic) unsigned int _countOfFocusedAncestorTrackingViewsInSubtree;
@property (nonatomic) unsigned int _countOfMotionEffectsInSubtree;
@property (setter=_setDontUpdateInferredLayoutMargins:, nonatomic) BOOL _dontUpdateInferredLayoutMargins;
@property (nonatomic, readonly) int _hiddenManagedByLayoutArrangementCount;
@property (setter=_setInferredLayoutMargins:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _inferredLayoutMargins;
@property (nonatomic, readonly) UIKBRenderConfig *_inheritedRenderConfig;
@property (setter=_setInteractionTintColor:, nonatomic, retain) UIColor *_interactionTintColor;
@property (setter=_setInternalConstraints:, nonatomic, retain) NSMutableArray *_internalConstraints;
@property (nonatomic, readonly) int _keyboardOrientation;
@property (setter=_setLayoutDebuggingIdentifier:, nonatomic, copy) NSString *_layoutDebuggingIdentifier;
@property (setter=_setLayoutEngine:, nonatomic, retain) NSISEngine *_layoutEngine;
@property (nonatomic, readonly) BOOL _lightStyleRenderConfig;
@property (nonatomic, readonly, retain) MKMapView *_mapKit_mapView;
@property (nonatomic, readonly, retain) CALayer *_mapkit_currentLayer;
@property (nonatomic, readonly) struct CADoubleRect { struct CADoublePoint { double x_1_1_1; double x_1_1_2; } x1; struct CADoubleSize { double x_2_1_1; double x_2_1_2; } x2; } _mapkit_doubleFrame;
@property (setter=_setMaskView:, nonatomic, retain) UIView *_maskView;
@property (setter=_setMayRemainFocused:, nonatomic) BOOL _mayRemainFocused;
@property (nonatomic, readonly, retain) NSISVariable *_minXVariable;
@property (nonatomic, readonly, retain) NSISVariable *_minYVariable;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutArrangements;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutGuides;
@property (nonatomic, readonly) int _pendingHiddenCount;
@property (getter=_presentationControllerToNotifyOnLayoutSubviews, setter=_setPresentationControllerToNotifyOnLayoutSubviews:, nonatomic, retain) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews;
@property (nonatomic, readonly) CABasicAnimation *_pu_referenceBasicAnimationForCurrentAnimation;
@property (setter=_setRawLayoutMargins:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _rawLayoutMargins;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } _sensitivitySize;
@property (nonatomic, readonly) BOOL _sf_usesLeftToRightLayout;
@property (setter=_setShouldArchiveUIAppearanceTags:, nonatomic) BOOL _shouldArchiveUIAppearanceTags;
@property (nonatomic, readonly) BOOL _shouldReverseLayoutDirection;
@property (nonatomic, readonly) _UITouchForceObservable *_touchForceObservable;
@property (setter=_setTracksFocusedAncestors:, nonatomic) BOOL _tracksFocusedAncestors;
@property (getter=_userInterfaceIdiom, setter=_setUserInterfaceIdiom:, nonatomic) int _userInterfaceIdiom;
@property (nonatomic, readonly) BOOL _wantsGeometryChangeNotification;
@property (nonatomic) int action;
@property (nonatomic, readonly) MPArtworkCatalog *artworkCatalog;
@property (getter=_backgroundColorSystemColorName, setter=_setBackgroundColorSystemColorName:, nonatomic, retain) NSString *backgroundColorSystemColorName;
@property (readonly) NSLayoutYAxisAnchor *bottomAnchor;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } bounds;
@property (nonatomic) struct CGPoint { float x1; float x2; } center;
@property (readonly) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly) NSLayoutYAxisAnchor *centerYAnchor;
@property (nonatomic, readonly) UIBezierPath *collisionBoundingPath;
@property (nonatomic, readonly) unsigned int collisionBoundsType;
@property (getter=_contentSizeNotificationToken, setter=_setContentSizeNotificationToken:, nonatomic, retain) id contentSizeNotificationToken;
@property (nonatomic, readonly) CALayer *currentLayer;
@property (getter=_currentScreenScale, nonatomic, readonly) float currentScreenScale;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) UIColor *debugHighlight;
@property (nonatomic) BOOL deliversButtonsForGesturesToSuperview;
@property (nonatomic) BOOL deliversTouchesForGesturesToSuperview;
@property (readonly, copy) NSString *description;
@property (readonly) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (getter=isFocused, nonatomic, readonly) BOOL focused;
@property (nonatomic) BOOL gesturesEnabled;
@property (readonly) unsigned int hash;
@property (readonly) NSLayoutDimension *heightAnchor;
@property (nonatomic) struct CGPoint { float x1; float x2; } integralCenter;
@property (nonatomic, retain) UIColor *interactionTintColor;
@property (readonly) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (nonatomic, readonly) CALayer *layer;
@property (setter=_setLayoutMarginsGuide:, nonatomic, retain) UILayoutGuide *layoutMarginsGuide;
@property (readonly) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly) NSLayoutXAxisAnchor *leftAnchor;
@property (getter=_maskView, setter=_setMaskView:, nonatomic, retain) UIView *maskView;
@property (getter=_monitorsSubtree, setter=_setMonitorsSubtree:, nonatomic) BOOL monitorsSubtree;
@property (nonatomic, readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } music_inheritedLayoutInsets;
@property (setter=music_setLayoutInsets:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } music_layoutInsets;
@property (setter=naui_setDynamicFontTextStyleDescriptor:, nonatomic, retain) NAUITextStyleDescriptor *naui_dynamicFontTextStyleDescriptor;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (nonatomic, retain) UIStoryboardPreviewingSegueTemplateStorage *previewingSegueTemplateStorage;
@property (setter=rc_setAutoUpdatingTextStyle:, nonatomic) NSString *rc_autoUpdatingTextStyle;
@property (setter=rc_setCharge:, nonatomic) float rc_charge;
@property (setter=_setReadableContentGuide:, nonatomic, retain) UILayoutGuide *readableContentGuide;
@property (readonly) NSLayoutXAxisAnchor *rightAnchor;
@property (nonatomic, retain) UIColor *roundedRectBackgroundColor;
@property (nonatomic, retain) UIColor *roundedRectBorderColor;
@property (nonatomic, retain) NSNumber *roundedRectBorderWidth;
@property (nonatomic) int semanticContentAttribute;
@property (nonatomic) BOOL skipsSubviewEnumeration;
@property (readonly) Class superclass;
@property (nonatomic) int tag;
@property (readonly) NSLayoutYAxisAnchor *topAnchor;
@property (readonly) NSLayoutXAxisAnchor *trailingAnchor;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic) struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } transform;
@property (getter=_isUnsatisfiableConstraintsLoggingSuspended, setter=_setUnsatisfiableConstraintsLoggingSuspended:, nonatomic) BOOL unsatisfiableConstraintsLoggingSuspended;
@property (getter=isUserInteractionEnabled, nonatomic) BOOL userInteractionEnabled;
@property (getter=_viewDelegate, setter=_setViewDelegate:, nonatomic) UIViewController *viewDelegate;
@property (nonatomic) BOOL viewTraversalMark;
@property (readonly) NSLayoutDimension *widthAnchor;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (BOOL)_addCompletion:(id /* block */)arg1;
+ (void)_addHierarchyTrackingVisitor:(id)arg1;
+ (id /* block */)_alongsideAnimations;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(float)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(float)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned int)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 mass:(float)arg4 stiffness:(float)arg5 damping:(float)arg6 initialVelocity:(float)arg7 animations:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 mass:(float)arg4 stiffness:(float)arg5 damping:(float)arg6 initialVelocity:(float)arg7 animations:(id /* block */)arg8 start:(id /* block */)arg9 completion:(id /* block */)arg10;
+ (void)_animateWithAttributes:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 factory:(id)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (void)_beginDisablingPromoteDescendantToFirstResponder;
+ (void)_beginSuspendingMotionEffectsForReason:(id)arg1;
+ (void)_completeAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(int)arg3 reverse:(BOOL)arg4;
+ (id)_currentAnimationAttributes;
+ (int)_currentAnimationCurve;
+ (float)_currentAnimationDuration;
+ (id)_currentAnimationSettings;
+ (id)_currentViewAnimationState;
+ (id)_defaultInteractionTintColorForIdiom:(int)arg1;
+ (id)_defaultUIViewActionForLayer:(id)arg1 forKey:(id)arg2;
+ (id)_defaultUIViewAnimationForLayer:(id)arg1 forKey:(id)arg2;
+ (int)_degreesToRotateFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2;
+ (void)_disableAnimationTracking:(id)arg1;
+ (void)_disableAnimationTracking:(id)arg1 clearTrackedAnimations:(BOOL)arg2;
+ (id)_disabledColorForTintColor:(id)arg1;
+ (double)_durationForRotationFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2;
+ (double)_durationForRotationFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2 withBaseDuration:(double)arg3;
+ (double)_durationOfSpringAnimationWithMass:(float)arg1 stiffness:(float)arg2 damping:(float)arg3 velocity:(float)arg4;
+ (id)_enableAnimationTracking;
+ (BOOL)_enableRTL;
+ (void)_enableToolsDebugAlignmentRects:(BOOL)arg1;
+ (void)_enableToolsDebugColorViewBounds:(BOOL)arg1;
+ (void)_enableToolsDebugFocusItems:(BOOL)arg1;
+ (void)_endDisablingPromoteDescendantToFirstResponder;
+ (void)_endSuspendingMotionEffectsForReason:(id)arg1;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(BOOL)arg2;
+ (void)_finishAnimationTracking;
+ (BOOL)_hasActiveAnimationContext;
+ (void)_inheritAnimationParameters;
+ (void)_initializeForIdiom:(int)arg1;
+ (BOOL)_invalidatesViewUponCreation;
+ (BOOL)_isAddingResponderToTree;
+ (BOOL)_isAnimationTracking;
+ (BOOL)_isInAnimationBlock;
+ (id)_motionEffectEngine;
+ (BOOL)_motionEffectsEnabled;
+ (BOOL)_motionEffectsSupported;
+ (void)_performBlockDelayingTriggeringResponderEvents:(id /* block */)arg1;
+ (void)_performBlockwithAutomaticAppearanceDisabled:(id /* block */)arg1;
+ (void)_performInitializationForIdiomIfNeccessary:(int)arg1;
+ (void)_performSystemAppearanceModifications:(id /* block */)arg1;
+ (id)_performWithAnimationTracking:(id /* block */)arg1;
+ (void)_performWithDurationOverride:(double)arg1 animations:(id /* block */)arg2;
+ (void)_performWithoutAnimation:(id /* block */)arg1;
+ (BOOL)_preventsAppearanceProxyCustomization;
+ (void)_recenterMotionEffects;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (BOOL)_retroactivelyRequiresConstraintBasedLayout;
+ (void)_reverseAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(int)arg3;
+ (void)_setAlongsideAnimations:(id /* block */)arg1;
+ (void)_setAnimatedPropertiesEnabled:(BOOL)arg1;
+ (void)_setAnimationAttributes:(id)arg1;
+ (void)_setAnimationAttributes:(id)arg1 skipDelegateAssignment:(BOOL)arg2;
+ (void)_setAnimationFilter:(int)arg1 forView:(id)arg2;
+ (void)_setAnimationFilterValue:(float)arg1;
+ (void)_setInvalidatesViewUponCreation:(BOOL)arg1;
+ (void)_setIsResponderAncestorOfFirstResponder:(BOOL)arg1 startingAtFirstResponder:(id)arg2;
+ (void)_setShouldEnableUIKitParallaxEffects:(BOOL)arg1;
+ (void)_setTintColorUpdating:(BOOL)arg1;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 start:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned int)arg4 factory:(id)arg5 animations:(id /* block */)arg6 start:(id /* block */)arg7 animationStateGenerator:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (BOOL)_shouldEnableUIKitDefaultParallaxEffects;
+ (id)_startAnimationTracking;
+ (void)_stopAnimationWithUUID:(id)arg1;
+ (id)_tintColorForStyle:(int)arg1;
+ (BOOL)_tintColorUpdating;
+ (BOOL)_toolsDebugAlignmentRects;
+ (BOOL)_toolsDebugColorViewBounds;
+ (BOOL)_toolsDebugFocusItems;
+ (id)_topMostView:(id)arg1 reverse:(BOOL)arg2;
+ (void)_transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (id)_viewWithLayoutConstraints;
+ (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(id /* block */)arg3;
+ (void)animateKeyframesWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 usingSpringWithDamping:(float)arg3 initialSpringVelocity:(float)arg4 options:(unsigned int)arg5 animations:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)animateWithInteractionProgress:(id)arg1 options:(unsigned int)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (id)appearance;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceMatchingProperties:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)appearanceWhenContainedInInstancesOfClasses:(id)arg1;
+ (BOOL)areAnimationsEnabled;
+ (void)beginAnimations:(id)arg1;
+ (void)beginAnimations:(id)arg1 context:(void*)arg2;
+ (void)commitAnimations;
+ (void)disableAnimation;
+ (void)enableAnimation;
+ (void)endAnimations;
+ (void)flush;
+ (double)inheritedAnimationDuration;
+ (Class)layerClass;
+ (void)performSystemAnimation:(unsigned int)arg1 onViews:(id)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)performWithoutAnimation:(id /* block */)arg1;
+ (BOOL)requiresConstraintBasedLayout;
+ (void)setAnimationAutoreverses:(BOOL)arg1;
+ (void)setAnimationBeginsFromCurrentState:(BOOL)arg1;
+ (void)setAnimationCurve:(int)arg1;
+ (void)setAnimationDelay:(double)arg1;
+ (void)setAnimationDelegate:(id)arg1;
+ (void)setAnimationDidStopSelector:(SEL)arg1;
+ (void)setAnimationDuration:(double)arg1;
+ (void)setAnimationFrameInterval:(double)arg1;
+ (void)setAnimationFromCurrentState:(BOOL)arg1;
+ (void)setAnimationPosition:(struct CGPoint { float x1; float x2; })arg1;
+ (void)setAnimationPreventsAdditive:(BOOL)arg1;
+ (void)setAnimationRepeatAutoreverses:(BOOL)arg1;
+ (void)setAnimationRepeatCount:(float)arg1;
+ (void)setAnimationRoundsToInteger:(BOOL)arg1;
+ (void)setAnimationStartDate:(id)arg1;
+ (void)setAnimationStartTime:(double)arg1;
+ (void)setAnimationTransition:(int)arg1 forView:(id)arg2;
+ (void)setAnimationTransition:(int)arg1 forView:(id)arg2 cache:(BOOL)arg3;
+ (void)setAnimationWillStartSelector:(SEL)arg1;
+ (void)setAnimationsEnabled:(BOOL)arg1;
+ (void)throttledFlush;
+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned int)arg4 completion:(id /* block */)arg5;
+ (void)transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (int)userInterfaceLayoutDirectionForSemanticContentAttribute:(int)arg1;

- (void).cxx_destruct;
- (id)__darkSystemColorForColor:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_accessoryViewFrame;
- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (void)_addCenterExpressionToExpression:(id)arg1 isVertical:(BOOL)arg2;
- (void)_addConstraint:(id)arg1;
- (void)_addConstraintPendingAnimatedChanges:(id)arg1;
- (void)_addGeometryChangeObserver:(id)arg1;
- (void)_addLayoutArrangement:(id)arg1;
- (void)_addMotionEffect:(id)arg1;
- (void)_addParentGeometryObservers;
- (void)_addPossibleFocusableElementsToArray:(id)arg1;
- (void)_addPossibleRespondersToArray:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(int)arg2 relativeTo:(id)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentBounds;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_allLayoutEngines;
- (BOOL)_allowsArchivingAsSubview;
- (BOOL)_allowsFocusToLeaveViaHeading:(unsigned int)arg1;
- (BOOL)_alwaysHandleInteractionEvents;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (BOOL)_ancestorDefinesTintAdjustmentMode;
- (BOOL)_ancestorDefinesTintColor;
- (void)_ancestorDidUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_ancestorSharedWithView:(id)arg1;
- (void)_ancestorWillUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_animateToScrollPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_animateZoomFailureToWindowPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3;
- (BOOL)_animationIsPaused;
- (id)_anyBackdropMaskView;
- (id)_appearanceContainer;
- (Class)_appearanceGuideClass;
- (BOOL)_appearanceIsInvalid;
- (id)_appearanceTraitCollection;
- (BOOL)_appliesExclusiveTouchToSubviewTree;
- (void)_applyAppearanceInvocations;
- (void)_applyAutoresizingMaskWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_applyISEngineLayoutToSubviewsSkippingSubview:(id)arg1;
- (void)_applyISEngineLayoutValues;
- (BOOL)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (void)_applyScreenScaleToContentScaleFactorIfNotSpecifiedByDeveloperTargetScreen:(id)arg1;
- (BOOL)_areAccessibilityButtonShapesEnabled;
- (BOOL)_associatedViewControllerForwardsAppearanceCallbacks:(id)arg1 performHierarchyCheck:(BOOL)arg2 isRoot:(BOOL)arg3;
- (float)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (float)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (id)_autolayoutTrace;
- (id)_autoresizingConstraints;
- (BOOL)_autoresizingConstraintsAreUpdated;
- (void)_autoresizingConstraints_frameDidChange;
- (id)_autoresizingDescription;
- (int)_backdropMaskViewFlags;
- (id)_backdropMaskViewForColorBurnTint;
- (id)_backdropMaskViewForColorTint;
- (id)_backdropMaskViewForDarkeningTint;
- (id)_backdropMaskViewForFilters;
- (id)_backdropMaskViewForFlag:(int)arg1;
- (id)_backdropMaskViewForGrayscaleTint;
- (id)_backdropMaskViews;
- (struct CGColor { }*)_backgroundCGColor;
- (id)_backgroundColor;
- (id)_backgroundColorSystemColorName;
- (float)_baselineOffsetFromBottom;
- (float)_baselineOffsetFromNearestEdgeForLayoutAttribute:(int)arg1;
- (id)_baselineViewForConstraint:(id)arg1 forFirstItem:(BOOL)arg2 withOffset:(float*)arg3;
- (id)_basicAnimationWithKeyPath:(id)arg1;
- (BOOL)_becomeFirstResponderWhenPossible;
- (void)_beginOcclusion:(id)arg1;
- (void)_beginSuspendingMotionEffects;
- (BOOL)_bitFlagValueAfterIncrementingHiddenManagementCountForKey:(const char *)arg1 withIncrement:(int)arg2 bitFlagValue:(BOOL)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_boundsForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_boundsHeightVariable;
- (id)_boundsWidthVariable;
- (float)_calculatedIntrinsicHeight;
- (struct CGSize { float x1; float x2; })_calculatedSystemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(BOOL*)arg4;
- (BOOL)_canBeParentTraitEnvironment;
- (BOOL)_canBeReusedInPickerView;
- (BOOL)_canBecomeFirstResponderWhenPossible;
- (BOOL)_canBecomeLayoutEngineDelegate;
- (BOOL)_canDrawContent;
- (BOOL)_canHandleStatusBarTouchAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_canStartRotationFromEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_canStartZoomFromEvent:(struct __GSEvent { }*)arg1;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 contentInsetScale:(float)arg3;
- (id)_childFocusRegions;
- (id)_childFocusRegionsInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_cleanUpLayoutArrangements;
- (void)_clearAnimationFilters;
- (void)_clearBecomeFirstResponderWhenCapable;
- (void)_clearBecomeFirstResponderWhenCapableOnSubtree;
- (int)_clipCorners;
- (int)_clipCornersOfView:(id)arg1;
- (void)_collectKeyViews:(id)arg1;
- (id)_colorViewBoundsOverlayCreateIfNecessary:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_compatibleBounds;
- (void)_configureAutolayoutFlagsNeedingLayout:(BOOL)arg1;
- (void)_constantsForHorizontalAutoresizingConstraints:(float*)arg1 :(float*)arg2;
- (void)_constantsForVerticalAutoresizingConstraints:(float*)arg1 :(float*)arg2;
- (void)_constrainViewToSuperview;
- (struct CGPoint { float x1; float x2; })_constrainedScrollPoint:(struct CGPoint { float x1; float x2; })arg1 contentSize:(struct CGSize { float x1; float x2; })arg2;
- (id)_constraintForIdentifier:(id)arg1;
- (id)_constraintsArray;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (id)_constraintsEquivalentToAutoresizingMask;
- (id)_constraintsExceptingSubviewAutoresizingConstraints;
- (id)_constraintsValidityDescription;
- (void)_constraints_didChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (void)_constraints_frameDidChange;
- (void)_constraints_subviewDidChangeSuperview:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (void)_constraints_viewGeometryDidChange;
- (void)_constraints_willChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (BOOL)_containedInAbsoluteResponderChain;
- (int)_containerStyle;
- (id)_containingScrollView;
- (BOOL)_containsPreferredFocusableView;
- (struct CGSize { float x1; float x2; })_contentCompressionResistancePriorities;
- (id)_contentHeightVariable;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize { float x1; float x2; })_contentHuggingPriorities;
- (float)_contentMargin;
- (id)_contentSizeConstraints;
- (id)_contentSizeNotificationToken;
- (id)_contentWidthVariable;
- (float)_continuousCornerRadius;
- (BOOL)_controlsOwnScaleFactor;
- (struct CGPoint { float x1; float x2; })_convertOffset:(struct CGPoint { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })_convertOffset:(struct CGPoint { float x1; float x2; })arg1 toView:(id)arg2;
- (void)_convertToAutolayoutSizingIfNecessary;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_convertViewPointToSceneSpaceForKeyboard:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)_convertVisualAltitude:(float)arg1 fromView:(id)arg2;
- (float)_convertVisualAltitude:(float)arg1 toView:(id)arg2;
- (unsigned int)_countOfFocusedAncestorTrackingViewsInSubtree;
- (unsigned int)_countOfMotionEffectsInSubtree;
- (void*)_createIOSurfaceWithPadding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (id)_createIfNeededAnchorForAssocObjectKey:(char *)arg1 class:(Class)arg2 withAttribute:(int)arg3;
- (void*)_createImageFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 padding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (void)_createJostledViewsIfNecessary;
- (void)_createLayerWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_currentContentSizeHeightConstraint;
- (id)_currentFocusAnimationCoordinator;
- (float)_currentScreenScale;
- (int)_currentUserInterfaceIdiom;
- (void)_decrementHiddenManagedByLayoutArrangementCount;
- (void)_decrementPendingHiddenCount;
- (struct CGSize { float x1; float x2; })_defaultContentCompressionResistancePriorities;
- (struct CGSize { float x1; float x2; })_defaultContentHuggingPriorities;
- (id)_defaultLayoutDescription;
- (int)_defaultTintAdjustmentMode;
- (BOOL)_delaysTouchesForSystemGestures;
- (int)_depthFirstCompare:(id)arg1;
- (id)_descendantWithAmbiguousLayout;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (id)_descriptionForLayoutTrace;
- (void)_didAddDependentConstraint:(id)arg1;
- (void)_didChangeFromIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_didChangeFromIdiomOnScreen:(id)arg1 traverseHierarchy:(BOOL)arg2;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (void)_didRemoveSubview:(id)arg1;
- (void)_didScroll;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_dimensionExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 useContentVariables:(BOOL)arg3;
- (BOOL)_disableGeometryObserverNotification;
- (void)_disableLayoutFlushing;
- (id)_disabledColor;
- (void)_discardLayoutEngine:(id)arg1;
- (void)_dispatchMotionEffectsVisitorWithDelta:(int)arg1;
- (void)_dispatchTintColorVisitorWithReasons:(unsigned int)arg1;
- (void)_dispatchTrackingFocusVisitorWithDelta:(int)arg1;
- (BOOL)_dontUpdateInferredLayoutMargins;
- (BOOL)_drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_drawsAsBackdropOverlay;
- (id)_dummyFittingSizeInfo;
- (id)_edgeExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 max:(BOOL)arg3 contentInsetScale:(float)arg4;
- (unsigned int)_effectiveAutoresizingMask;
- (void)_effectiveAutoresizingMask_autoresizesSubviewsChanged;
- (void)_enableLayerKitPatternDrawing:(BOOL)arg1;
- (void)_enableLayoutFlushing;
- (id)_enclosingScrollableScrollerIncludingSelf;
- (id)_enclosingScrollerIncludingSelf;
- (id)_encodableSubviews;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)_encodeFrameWithCoder:(id)arg1;
- (void)_endOcclusion:(id)arg1;
- (void)_endSuspendingMotionEffects;
- (void)_engineHostConstraints_frameDidChange;
- (void)_enumerateDescendentViews:(id /* block */)arg1;
- (BOOL)_fakeShouldAnimatePropertyWithKey:(id)arg1;
- (id)_findFirstSubviewWantingToBecomeFirstResponder;
- (void)_finishTemporaryInternalConstraints:(id)arg1 withEngine:(id)arg2;
- (float)_firstBaselineOffsetFromTop;
- (id)_firstCommonAncestorToView:(id)arg1;
- (id)_firstResponder;
- (void)_flushConstraintsPendingAnimatedChanges;
- (id)_focusDebugOverlayParentView;
- (id)_focusItemsOverlayCreateIfNecessary:(BOOL)arg1;
- (BOOL)_focusRegionCanBecomeFocused;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_focusRegionFrame;
- (id)_focusRegionGuides;
- (BOOL)_focusRegionIsEligibleForFocus;
- (id)_focusRegionItem;
- (id)_focusRegionView;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_focusableContentMargins;
- (void)_focusedAncestorDidChange:(id)arg1;
- (void)_focusedAncestorWillChange:(id)arg1;
- (int)_focusedSound;
- (void)_focusedViewDidChange:(id)arg1;
- (void)_focusedViewWillChange:(id)arg1;
- (BOOL)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (id)_fulfillPromisedFocusRegion;
- (id)_generateBackdropMaskImage;
- (id)_generateBackdropMaskViewForFlag:(int)arg1;
- (id)_generateContentSizeConstraints;
- (void)_geometryChanges:(id)arg1 forAncestor:(id)arg2;
- (void)_gestureChanged:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_gestureEnded:(struct __GSEvent { }*)arg1;
- (id)_gestureInfo;
- (id)_gestureRecognizers;
- (BOOL)_hasAutolayoutHeightConstraint;
- (BOOL)_hasCustomAutolayoutNeighborSpacing;
- (BOOL)_hasLayoutArrangements;
- (BOOL)_hasLayoutEngine;
- (BOOL)_hasNormalTintAdjustmentMode;
- (BOOL)_hasOpaqueBackground;
- (int)_hiddenManagedByLayoutArrangementCount;
- (int)_hiddenManagementCountForKey:(const char *)arg1 bitFlagValue:(BOOL)arg2;
- (id)_hierarchyRepresentation;
- (id)_hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (BOOL)_hostsLayoutEngine;
- (id)_idleModeLayoutAttributes;
- (float)_imageButtonMargin;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_imageSnapshotCapturedAllContent;
- (void)_incrementHiddenManagedByLayoutArrangementCount;
- (void)_incrementPendingHiddenCount;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_inferredLayoutMargins;
- (void)_informContainerThatSubviewsNeedUpdateConstraints;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(BOOL)arg1;
- (id)_inheritedInteractionTintColor;
- (id)_inheritedRenderConfig;
- (id)_initWithLayer:(id)arg1;
- (id)_initWithMaskImage:(id)arg1;
- (void)_initializeHostedLayoutEngine;
- (void)_initializeLayoutEngine;
- (id)_interactionTintColor;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent { }*)arg1;
- (id)_internalConstraints;
- (float)_internalScaleForScale:(float)arg1;
- (void)_internalUpdateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1 forSecondPass:(BOOL)arg2;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)arg1;
- (void)_invalidateAppearanceForTraitCollection:(id)arg1;
- (void)_invalidateAutoresizingConstraints;
- (void)_invalidateEngineHostConstraints;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(BOOL)arg1;
- (void)_invalidateLayerContents;
- (void)_invalidateLayoutEngineHostConstraints;
- (void)_invalidateSubviewCache;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;
- (BOOL)_isAlphaHittableAndHasAlphaHittableAncestors;
- (BOOL)_isAncestorOfFirstResponder;
- (BOOL)_isChargeEnabled;
- (BOOL)_isDeallocating;
- (BOOL)_isEligibleForFocus;
- (BOOL)_isFloatingLayoutItem;
- (BOOL)_isFocusDirectionFlippedHorizontally;
- (BOOL)_isFocusableElement;
- (BOOL)_isFocusedOrAncestorOfFocusedView;
- (BOOL)_isHiddenForReuse;
- (BOOL)_isInAWindow;
- (BOOL)_isInAnimatedLayout;
- (BOOL)_isInExclusiveTouchSubviewTree;
- (BOOL)_isInHierarchyAllowingMotionEffects;
- (BOOL)_isInTransitionBlock;
- (BOOL)_isInVisibleHierarchy;
- (BOOL)_isInteractiveElement;
- (BOOL)_isMemberOfViewControllerHierarchy:(id)arg1;
- (BOOL)_isPromiseFocusRegion;
- (BOOL)_isRootForKeyResponderCycle;
- (BOOL)_isRubberBanding;
- (BOOL)_isScrollingEnabled;
- (BOOL)_isTransparentFocusRegion;
- (BOOL)_isUnsatisfiableConstraintsLoggingSuspended;
- (BOOL)_isViewHierarchyPreparedForConstraint:(id)arg1;
- (void)_is_layout;
- (BOOL)_is_needsLayout;
- (void)_is_setNeedsLayout;
- (int)_keyboardOrientation;
- (BOOL)_la_isVisible;
- (id)_layer;
- (Class)_layerClass;
- (id)_layoutDebuggingIdentifier;
- (id)_layoutDebuggingTitle;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_layoutEngine;
- (id)_layoutEngineCreateIfNecessary;
- (id)_layoutEngineHostConstraints;
- (id)_layoutEngineIfAvailable;
- (BOOL)_layoutEngine_didAddLayoutConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_layoutEngine_willRemoveLayoutConstraint:(id)arg1;
- (void)_layoutEngine_windowDidChange;
- (void)_layoutMarginsDidChange;
- (id)_layoutVariablesWithAmbiguousValue;
- (id)_legendEntryForDescriptionForLayout;
- (BOOL)_lightStyleRenderConfig;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)arg1 YExpression:(id)arg2 vertical:(BOOL)arg3 container:(id)arg4;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 copySublayers:(BOOL)arg4;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(BOOL)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3;
- (id)_maskView;
- (BOOL)_mayRemainFocused;
- (id)_minXVariable;
- (id)_minYVariable;
- (float)_minimumZoomScaleDelta;
- (BOOL)_monitorsSubtree;
- (id)_motionEffects;
- (BOOL)_motionEffectsAreSuspended;
- (void)_movedToFront;
- (id)_mutableLayoutArrangements;
- (id)_mutableLayoutArrangementsCreateIfNecessary;
- (id)_mutableLayoutGuides;
- (id)_mutableLayoutGuidesCreateIfNecessary;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (BOOL)_needsLayoutOnAnimatedBoundsChangeForNewBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_nextKeyResponder;
- (id)_normalInheritedTintColor;
- (void)_noteTraitsDidChangeRecursively;
- (void)_notifyArrangementsOfChangeInItem:(id)arg1 withSelector:(SEL)arg2;
- (void)_notifyGeometryObserversWithChangeInfo:(id)arg1;
- (void)_notifyReferenceViewSizeChange;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_nsis_bounds;
- (void)_nsis_center:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (void)_nsis_center:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3 forLayoutGuide:(id)arg4;
- (struct CGSize { float x1; float x2; })_nsis_contentSize;
- (struct CGPoint { float x1; float x2; })_nsis_origin;
- (void)_nsis_origin:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (unsigned int)_numberOfColumns:(BOOL)arg1;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (BOOL)_old_nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4;
- (id)_parallaxMotionEffect;
- (id)_parentFocusEnvironment;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (int)_pendingHiddenCount;
- (void)_performUpdatesForPossibleChangesOfIdiom:(int)arg1 orScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_populateEngineWithConstraintsForViewSubtree:(id)arg1 forComputingFittingSizeOfView:(id)arg2;
- (void)_postMovedFromSuperview:(id)arg1;
- (BOOL)_potentiallyHasDanglyConstraints;
- (id)_preferredConfigurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (double)_preferredDurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (float)_preferredDurationScaleFactorForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (struct CGSize { float x1; float x2; })_preferredLayoutEngineToUserScalingCoefficients;
- (void)_prepareToAppearInNavigationItem:(id)arg1 onLeft:(BOOL)arg2;
- (id)_presentationControllerToNotifyOnLayoutSubviews;
- (id)_previewingSegueTemplateStorageForLocation:(struct CGPoint { float x1; float x2; })arg1 inView:(id)arg2;
- (id)_previousKeyResponder;
- (id)_primitiveContentCompressionResistancePrioritiesValue;
- (id)_primitiveContentHuggingPrioritiesValue;
- (int)_primitiveTintAdjustmentMode;
- (Class)_printFormatterClass;
- (void)_processDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 forceNotification:(BOOL)arg3;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (float)_proportionalFillLengthForOrderedArrangement:(id)arg1 relevantParentAxis:(int)arg2;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_rawLayoutMargins;
- (void)_rebuildLayoutFromScratch;
- (void)_receiveVisitor:(id)arg1;
- (BOOL)_recordBaselineLoweringInfo;
- (void)_recordConstraintBrokenWhileUnsatisfiableConstraintsLoggingSuspended:(id)arg1;
- (id)_recursiveAutolayoutTraceAtLevel:(int)arg1;
- (void)_recursiveCollectTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(BOOL)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3;
- (id)_recursiveConstraintsTraceAtLevel:(int)arg1;
- (id)_recursiveLayoutEngineDescription;
- (void)_recursivelyConsiderResumingMotionEffects;
- (void)_recursivelyNameLayerTree;
- (void)_recursivelyReconsiderMotionEffectSuspension;
- (void)_recursivelySetHiddenForBackdropMaskViews:(BOOL)arg1;
- (void)_recursivelySuspendMotionEffects;
- (void)_reestablishConstraintsForTransformChange;
- (void*)_referenceView;
- (void)_registerAsReferenceView;
- (void)_registerForGeometryChanges;
- (void)_removeAlignmentDebuggingOverlays;
- (void)_removeAllAnimations:(BOOL)arg1;
- (void)_removeAutolayoutSizingConstraints;
- (void)_removeBackdropMaskViews;
- (void)_removeColorViewBoundsOverlays;
- (void)_removeConstraint:(id)arg1;
- (void)_removeFirstResponderFromSubtree;
- (void)_removeFocusItemOverlayViews;
- (void)_removeGeometryChangeObserver:(id)arg1;
- (void)_removeLayoutArrangement:(id)arg1;
- (void)_removeMotionEffect:(id)arg1;
- (void)_removeParentGeometryObservers;
- (void)_renderLayerContentsWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderLayerWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_replaceLayer:(id)arg1;
- (id)_representationOfHierarchyForXcode;
- (void)_resetContentRect;
- (void)_resetContentStretch;
- (void)_resetZoomingWithEvent:(struct __GSEvent { }*)arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_resizeWithOldSuperviewSize_ancient:(struct CGSize { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_responderSelectionRectForWindow:(id)arg1;
- (id)_rootForKeyResponderCycle;
- (id)_rootInputWindowController;
- (id)_rootView;
- (void)_rotateFromEvent:(struct __GSEvent { }*)arg1;
- (void)_rotateToDegrees:(float)arg1 duration:(float)arg2 event:(struct __GSEvent { }*)arg3;
- (float)_rubberBandScaleForScale:(float)arg1;
- (void)_rubberbandZoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2;
- (float)_scaleForInternalScale:(float)arg1;
- (id)_screen;
- (id)_scriptingInfo;
- (struct CGPoint { float x1; float x2; })_scrollPointForPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 constrain:(BOOL)arg3 snapToEdge:(BOOL)arg4;
- (id)_scrollViewWantingUpdateInConstraint:(id)arg1;
- (id)_scroller;
- (struct CGSize { float x1; float x2; })_scrollerContentSize;
- (struct CGSize { float x1; float x2; })_sensitivitySize;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setAncestorDefinesTintAdjustmentMode:(BOOL)arg1;
- (void)_setAncestorDefinesTintColor:(BOOL)arg1;
- (void)_setAppearanceIsInvalid:(BOOL)arg1;
- (void)_setAutoresizingConstraints:(id)arg1;
- (void)_setBackdropMaskView:(id)arg1 forFlag:(int)arg2;
- (void)_setBackdropMaskViewFlags:(int)arg1;
- (void)_setBackdropMaskViewForColorBurnTint:(id)arg1;
- (void)_setBackdropMaskViewForColorTint:(id)arg1;
- (void)_setBackdropMaskViewForDarkeningTint:(id)arg1;
- (void)_setBackdropMaskViewForFilters:(id)arg1;
- (void)_setBackdropMaskViewForGrayscaleTint:(id)arg1;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1 withSystemColorName:(id)arg2;
- (void)_setBackgroundColor:(id)arg1;
- (void)_setBackgroundColorSystemColorName:(id)arg1;
- (void)_setBaselineView:(id)arg1 offset:(float)arg2 forConstraint:(id)arg3 forFirstItem:(BOOL)arg4;
- (void)_setBoundsForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setCanBeParentTraitEnvironment:(BOOL)arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { float x1; float x2; })arg1 convertPoint:(BOOL)arg2;
- (void)_setChargeEnabled:(BOOL)arg1;
- (void)_setContentCompressionResistancePriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setContentImage:(id)arg1;
- (void)_setContentRectInPixels:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { float x1; float x2; })arg2;
- (void)_setContentSizeConstraints:(id)arg1;
- (void)_setContentSizeNotificationToken:(id)arg1;
- (void)_setContentStretchInPixels:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { float x1; float x2; })arg2 shouldTile:(BOOL)arg3;
- (void)_setContentsTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)_setContinuousCornerRadius:(float)arg1;
- (void)_setDelaysTouchesForSystemGestures:(BOOL)arg1;
- (void)_setDontUpdateInferredLayoutMargins:(BOOL)arg1;
- (void)_setDrawsAsBackdropOverlay:(BOOL)arg1;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(int)arg1;
- (void)_setFocusableContentMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 convertFrame:(BOOL)arg2;
- (void)_setGestureInfoZoomScale:(float)arg1;
- (void)_setHiddenForBackdropMaskViews:(BOOL)arg1;
- (void)_setHiddenForReuse:(BOOL)arg1;
- (void)_setHostsLayoutEngine:(BOOL)arg1;
- (void)_setIdleModeLayoutAttributes:(id)arg1;
- (void)_setInAnimatedLayout:(BOOL)arg1;
- (void)_setInferredLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setInteractionTintColor:(id)arg1;
- (void)_setInterceptMouseEvent:(BOOL)arg1;
- (void)_setInternalConstraints:(id)arg1;
- (void)_setIsAncestorOfFirstResponder:(BOOL)arg1;
- (void)_setLayoutDebuggingIdentifier:(id)arg1;
- (void)_setLayoutEngine:(id)arg1;
- (void)_setLayoutEngineHostConstraints:(id)arg1;
- (void)_setLayoutMarginsGuide:(id)arg1;
- (void)_setMaskView:(id)arg1;
- (void)_setMayRemainFocused:(BOOL)arg1;
- (void)_setMonitorsSubtree:(BOOL)arg1;
- (void)_setNeedsNonDeferredFocusUpdate;
- (void)_setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(BOOL)arg1;
- (void)_setPotentiallyHasDanglyConstraints:(BOOL)arg1;
- (void)_setPresentationControllerToNotifyOnLayoutSubviews:(id)arg1;
- (void)_setPrimitiveContentCompressionResistancePrioritiesValue:(id)arg1;
- (void)_setPrimitiveContentHuggingPrioritiesValue:(id)arg1;
- (void)_setRawLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setReadableContentGuide:(id)arg1;
- (void)_setRenderConfig:(id)arg1;
- (void)_setRotationAnimationProgress:(id)arg1;
- (void)_setShouldArchiveUIAppearanceTags:(BOOL)arg1;
- (void)_setShouldRasterize:(BOOL)arg1;
- (void)_setSpeedBumpEdges:(unsigned int)arg1;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(BOOL)arg1;
- (void)_setTracksFocusedAncestors:(BOOL)arg1;
- (void)_setTraitStorageConstraints:(id)arg1;
- (void)_setTraitStorageList:(id)arg1;
- (void)_setTraitStorageSubviews:(id)arg1;
- (void)_setTransformForBackdropMaskViews:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)_setUnsatisfiableConstraintsLoggingSuspended:(BOOL)arg1;
- (void)_setUserInterfaceIdiom:(int)arg1;
- (void)_setViewDelegate:(id)arg1;
- (void)_setViewsJostledDuringUpdateConstraintsPass:(id)arg1;
- (void)_setVisualAltitude:(float)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize { float x1; float x2; })arg1;
- (void)_setWantsAutolayout;
- (void)_setZoomAnimationProgress:(id)arg1;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (BOOL)_shouldApplyExclusiveTouch;
- (BOOL)_shouldArchiveUIAppearanceTags;
- (BOOL)_shouldDelayTouchForSystemGestures:(id)arg1;
- (BOOL)_shouldDirtyLayoutForConstraints;
- (BOOL)_shouldEnclosedScrollViewFlashIndicators:(id)arg1;
- (BOOL)_shouldInheritScreenScaleAsContentScaleFactor;
- (BOOL)_shouldNotifyGeometryObservers;
- (BOOL)_shouldResignFirstResponderWithInteractionDisabled;
- (BOOL)_shouldReverseLayoutDirection;
- (BOOL)_shouldTryPromoteDescendantToFirstResponder;
- (BOOL)_shouldUpdateFocusInContext:(id)arg1;
- (BOOL)_shouldUseKeyboardBackground;
- (unsigned int)_speedBumpEdges;
- (void)_startGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (BOOL)_startRotationFromEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_startZoomFromEvent:(struct __GSEvent { }*)arg1;
- (void)_stopGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_stopRotationFromEvent:(struct __GSEvent { }*)arg1;
- (void)_stopZoomFromEvent:(struct __GSEvent { }*)arg1;
- (int)_style;
- (BOOL)_subclassImplementsDrawRect;
- (BOOL)_subclassImplementsIntrinsicContentSize;
- (BOOL)_subclassImplementsIntrinsicSizeWithinSize;
- (BOOL)_subclassImplementsViewForBaselineLayout;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (id)_subviewAtIndex:(int)arg1;
- (id)_superDescription;
- (BOOL)_supportsBecomeFirstResponderWhenPossible;
- (BOOL)_supportsContentDimensionVariables;
- (void)_switchToLayoutEngine:(id)arg1;
- (id)_syntheticTouch;
- (id)_syntheticUIEventWithGSEvent:(struct __GSEvent { }*)arg1 touchPhase:(int)arg2;
- (struct CGSize { float x1; float x2; })_systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (struct CGSize { float x1; float x2; })_systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(BOOL*)arg4;
- (float)_textButtonMargin;
- (id)_tintColorArchivingKey;
- (int)_topToBottomLeftToRightViewCompare:(id)arg1;
- (id)_touchForceObservable;
- (float)_touchSloppinessFactor;
- (BOOL)_touchesInsideShouldHideCalloutBar;
- (BOOL)_tracksFocusedAncestors;
- (void)_traitCollectionDidChangeFromOldCollection:(id)arg1 toNewCollection:(id)arg2 scaleDidChange:(BOOL)arg3;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
- (id)_traitStorageConstraints;
- (id)_traitStorageSubviews;
- (BOOL)_tryRetain;
- (BOOL)_tryToAddConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (BOOL)_tryToAddConstraintWithoutUpdatingConstraintsArray:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (BOOL)_uiib_hostsLayoutEngine;
- (void)_uiib_invalidateAutoresizingConstraints;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (void)_uiib_setHostsLayoutEngine:(BOOL)arg1;
- (BOOL)_uiib_tryToAddConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (BOOL)_unapplyMotionEffect:(id)arg1;
- (void)_unregisterAllMotionEffects;
- (void)_unregisterAsReferenceView;
- (void)_unregisterForGeometryChanges;
- (void)_unregisterFromAnimators;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)_updateAutoresizingConstraints;
- (void)_updateBackdropMaskFrames;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_updateConstraintsAsNecessaryAndApplyLayoutFromEngine;
- (void)_updateConstraintsAtEngineLevelIfNeeded;
- (void)_updateConstraintsIfNeeded;
- (void)_updateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1 forSecondPass:(BOOL)arg2;
- (void)_updateContentSizeConstraints;
- (void)_updateFocusItemOverlayViews;
- (void)_updateInferredLayoutMargins;
- (void)_updateLayoutEngineHostConstraints;
- (void)_updateLayoutMarginsGuideConstraintsIfApplicable;
- (void)_updateNeedsDisplayOnBoundsChange;
- (void)_updateParallaxEffectWithAltitude:(float)arg1 bias:(struct CGSize { float x1; float x2; })arg2;
- (BOOL)_useContentDimensionVariablesForConstraintLowering;
- (int)_userInterfaceIdiom;
- (BOOL)_usesAutoresizingConstraints;
- (BOOL)_usesLayoutEngineHostingConstraints;
- (void)_vendedBaselineViewDidMoveForFirst:(BOOL)arg1;
- (void)_vendedBaselineViewParametersDidChange;
- (id)_viewControllerForAncestor;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (id)_viewDelegate;
- (id)_viewForBaselineLayout;
- (id)_viewForBaselineLayoutAttribute:(int)arg1;
- (id)_viewForBaselineLayoutAttribute:(int)arg1 suppressHierarchyCheck:(BOOL)arg2;
- (void)_viewHierarchyUnpreparedForConstraint:(id)arg1;
- (id)_viewIndexPath;
- (int)_viewOrderRelativeToView:(id)arg1;
- (id)_viewsJostledDuringUpdateConstraintsPass;
- (id)_viewsJostledDuringUpdateConstraintsPassSuppressingDebugAssertion:(BOOL)arg1;
- (float)_visualAltitude;
- (struct CGSize { float x1; float x2; })_visualAltitudeBias;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithVisualAltitude:(float)arg1 edges:(unsigned int)arg2;
- (BOOL)_wantsAutolayout;
- (BOOL)_wantsBaselineUpdatingFollowingConstraintsPass;
- (BOOL)_wantsGeometryChangeNotification;
- (BOOL)_wantsReapplicationOfAutoLayoutWithLayoutDirtyOnEntry:(BOOL)arg1;
- (void)_webCustomViewWasAddedAsSubviewOfView:(id)arg1;
- (void)_webCustomViewWasRemovedFromSuperview:(id)arg1;
- (void)_webCustomViewWillBeRemovedFromSuperview;
- (id)_whyIsThisViewNotEligibleForFocus;
- (id)_whyIsThisViewNotEligibleForFocusWithLinePrefix:(id)arg1;
- (id)_whyIsThisViewNotFocusable;
- (void)_willChangeToIdiom:(int)arg1 onScreen:(id)arg2;
- (void)_willChangeToIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_willChangeToIdiomOnScreen:(id)arg1 traverseHierarchy:(BOOL)arg2;
- (void)_willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1 withAncestorView:(id)arg2;
- (void)_willRemoveSubviewWantingAutolayout:(id)arg1;
- (void)_willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_window;
- (void)_withAutomaticEngineOptimizationDisabled:(id /* block */)arg1;
- (void)_withAutomaticEngineOptimizationDisabledIfEngineExists:(id /* block */)arg1;
- (void)_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:(id /* block */)arg1;
- (void)_wrappedProcessDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 scaleDidChange:(BOOL)arg3 forceNotification:(BOOL)arg4;
- (float)_zoomAnimationDurationForScale:(float)arg1;
- (float)_zoomAnimationProgress;
- (float)_zoomScale;
- (void)_zoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2 animate:(BOOL)arg3 constrainScrollPoint:(BOOL)arg4;
- (void)_zoomToScale:(float)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_zoomToScrollPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3 event:(struct __GSEvent { }*)arg4;
- (void)_zoomToWindowPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3 constrainScrollPoint:(BOOL)arg4 event:(struct __GSEvent { }*)arg5;
- (BOOL)_zoomWithEvent:(struct __GSEvent { }*)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (void)addGestureRecognizer:(id)arg1;
- (void)addLayoutGuide:(id)arg1;
- (void)addMotionEffect:(id)arg1;
- (void)addSubview:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentRectForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (float)alpha;
- (void)animator:(id)arg1 startAnimation:(id)arg2;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (id)autorelease;
- (BOOL)autoresizesSubviews;
- (unsigned int)autoresizingMask;
- (id)backgroundColor;
- (BOOL)becomeFirstResponder;
- (id)bottomAnchor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bounds;
- (void)bringSubviewToFront:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canBecomeFocused;
- (BOOL)canHandleGestures;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (struct CGPoint { float x1; float x2; })center;
- (id)centerXAnchor;
- (id)centerYAnchor;
- (float)charge;
- (BOOL)clearsContextBeforeDrawing;
- (BOOL)clipsToBounds;
- (int)compareTextEffectsOrdering:(id)arg1;
- (id)constraints;
- (id)constraintsAffectingLayoutForAxis:(int)arg1;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (BOOL)containsView:(id)arg1;
- (float)contentCompressionResistancePriorityForAxis:(int)arg1;
- (float)contentHuggingPriorityForAxis:(int)arg1;
- (int)contentMode;
- (float)contentScaleFactor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentStretch;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGSize { float x1; float x2; })convertSize:(struct CGSize { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGSize { float x1; float x2; })convertSize:(struct CGSize { float x1; float x2; })arg1 toView:(id)arg2;
- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (void)deferredBecomeFirstResponder;
- (BOOL)deliversButtonsForGesturesToSuperview;
- (BOOL)deliversTouchesForGesturesToSuperview;
- (id)description;
- (void)didAddSubview:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didUpdateFocusFromView:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forViewPrintFormatter:(id)arg2;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 afterScreenUpdates:(BOOL)arg2;
- (int)enabledGestures;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)endEditing:(BOOL)arg1;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;
- (void)exchangeSubviewAtIndex:(int)arg1 withSubviewAtIndex:(int)arg2;
- (void)exerciseAmbiguityInLayout;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })extent;
- (id)firstBaselineAnchor;
- (id)focusGuides;
- (id)focusedView;
- (void)focusedViewDidChange;
- (void)focusedViewWillChange;
- (void)forceDisplayIfNeeded;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })frameOrigin;
- (void)gestureChanged:(struct __GSEvent { }*)arg1;
- (id)gestureDelegate;
- (void)gestureEnded:(struct __GSEvent { }*)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)gestureRecognizers;
- (void)gestureStarted:(struct __GSEvent { }*)arg1;
- (BOOL)gesturesEnabled;
- (BOOL)hasAmbiguousLayout;
- (id)heightAnchor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })hitRect;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)insertSubview:(id)arg1 above:(id)arg2;
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)insertSubview:(id)arg1 atIndex:(int)arg2;
- (void)insertSubview:(id)arg1 below:(id)arg2;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (id)interactionTintColor;
- (void)interactionTintColorDidChange;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isAncestorOfItem:(id)arg1;
- (BOOL)isDescendantOfView:(id)arg1;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (BOOL)isEnabled;
- (BOOL)isExclusiveTouch;
- (BOOL)isFocused;
- (BOOL)isHidden;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (BOOL)isMultipleTouchEnabled;
- (BOOL)isOpaque;
- (BOOL)isUserInteractionEnabled;
- (id)lastBaselineAnchor;
- (id)layer;
- (void)layoutBelowIfNeeded;
- (id)layoutGuides;
- (void)layoutIfNeeded;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })layoutMargins;
- (void)layoutMarginsDidChange;
- (BOOL)layoutMarginsFollowReadableWidth;
- (id)layoutMarginsGuide;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)layoutSubviews;
- (id)leadingAnchor;
- (id)leftAnchor;
- (id)maskView;
- (id)motionEffects;
- (void)movedFromSuperview:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)movedToSuperview:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (BOOL)needsDisplay;
- (BOOL)needsDisplayOnBoundsChange;
- (BOOL)needsUpdateConstraints;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)nextResponder;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (void)nsli_addConstraint:(id)arg1;
- (unsigned int)nsli_autoresizingMask;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (struct CGSize { float x1; float x2; })nsli_convertSizeFromEngineSpace:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })nsli_convertSizeToEngineSpace:(struct CGSize { float x1; float x2; })arg1;
- (id)nsli_description;
- (BOOL)nsli_descriptionIncludesPointer;
- (struct CGSize { float x1; float x2; })nsli_engineToUserScalingCoefficients;
- (struct CGSize { float x1; float x2; })nsli_engineToUserScalingCoefficientsInEngine:(id)arg1;
- (id)nsli_installedConstraints;
- (BOOL)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)arg1;
- (BOOL)nsli_isFlipped;
- (id)nsli_layoutEngine;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 container:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4 onBehalfOfLayoutGuide:(id)arg5;
- (float)nsli_marginOffsetForAttribute:(int)arg1;
- (id)nsli_minXVariable;
- (id)nsli_minYVariable;
- (BOOL)nsli_removeConstraint:(id)arg1;
- (BOOL)nsli_resolvedValue:(float*)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id*)arg4;
- (id)nsli_superitem;
- (struct CGPoint { float x1; float x2; })origin;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (struct CGPoint { float x1; float x2; })position;
- (id)preferredFocusedItem;
- (id)preferredFocusedView;
- (BOOL)preservesSuperviewLayoutMargins;
- (id)previewingSegueTemplateStorage;
- (id)readableContentGuide;
- (id)recursiveDescription;
- (void)recursivelyForceDisplayIfNeeded;
- (void)reduceWidth:(float)arg1;
- (oneway void)release;
- (void)removeAllGestureRecognizers;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (void)removeFromSuperview;
- (void)removeGestureRecognizer:(id)arg1;
- (void)removeLayoutGuide:(id)arg1;
- (void)removeMotionEffect:(id)arg1;
- (id)resizableSnapshotFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 afterScreenUpdates:(BOOL)arg2 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg3;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (void)resizeSubviewsWithOldSize:(struct CGSize { float x1; float x2; })arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)restoreUserActivityState:(id)arg1;
- (id)retain;
- (unsigned int)retainCount;
- (id)rightAnchor;
- (void)rotateToDegrees:(float)arg1;
- (float)rotationDegrees;
- (id)scriptingInfoWithChildren;
- (int)semanticContentAttribute;
- (void)sendSubviewToBack:(id)arg1;
- (void)setAlpha:(float)arg1;
- (void)setAutoresizesSubviews:(BOOL)arg1;
- (void)setAutoresizingMask:(unsigned int)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setCenter:(struct CGPoint { float x1; float x2; })arg1;
- (void)setCharge:(float)arg1;
- (void)setClearsContext:(BOOL)arg1;
- (void)setClearsContextBeforeDrawing:(BOOL)arg1;
- (void)setClipsSubviews:(BOOL)arg1;
- (void)setClipsToBounds:(BOOL)arg1;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(int)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(int)arg2;
- (void)setContentMode:(int)arg1;
- (void)setContentScaleFactor:(float)arg1;
- (void)setContentStretch:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setContentsPosition:(int)arg1;
- (void)setDeliversButtonsForGesturesToSuperview:(BOOL)arg1;
- (void)setDeliversTouchesForGesturesToSuperview:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setEnabledGestures:(int)arg1;
- (void)setExclusiveTouch:(BOOL)arg1;
- (void)setFixedBackgroundPattern:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forFields:(int)arg2;
- (void)setFrameOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setGestureDelegate:(id)arg1;
- (void)setGestureRecognizers:(id)arg1;
- (void)setGesturesEnabled:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setInteractionTintColor:(id)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setLayoutMarginsFollowReadableWidth:(BOOL)arg1;
- (void)setMaskView:(id)arg1;
- (void)setMotionEffects:(id)arg1;
- (void)setMultipleTouchEnabled:(BOOL)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayOnBoundsChange:(BOOL)arg1;
- (void)setNeedsFocusUpdate;
- (void)setNeedsLayout;
- (void)setNeedsPreferredFocusedItemUpdate;
- (void)setNeedsUpdateConstraints;
- (void)setOpaque:(BOOL)arg1;
- (void)setOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)setPreservesSuperviewLayoutMargins:(BOOL)arg1;
- (void)setPreviewingSegueTemplateStorage:(id)arg1;
- (void)setRotationBy:(float)arg1;
- (void)setRotationDegrees:(float)arg1 duration:(double)arg2;
- (void)setSemanticContentAttribute:(int)arg1;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setSkipsSubviewEnumeration:(BOOL)arg1;
- (void)setTag:(int)arg1;
- (void)setTapDelegate:(id)arg1;
- (void)setTintAdjustmentMode:(int)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)arg1;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (void)setValue:(id)arg1 forGestureAttribute:(int)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setViewTraversalMark:(BOOL)arg1;
- (void)set_countOfFocusedAncestorTrackingViewsInSubtree:(unsigned int)arg1;
- (void)set_countOfMotionEffectsInSubtree:(unsigned int)arg1;
- (BOOL)shouldChangeFocusedItem:(id)arg1;
- (BOOL)shouldChangeFocusedItem:(id)arg1 heading:(unsigned int)arg2;
- (BOOL)shouldUpdateFocusFromView:(id)arg1 toView:(id)arg2 heading:(unsigned int)arg3;
- (BOOL)shouldUpdateFocusInContext:(id)arg1;
- (struct CGSize { float x1; float x2; })size;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)sizeToFit;
- (BOOL)skipsSubviewEnumeration;
- (id)snapshot;
- (id)snapshotView;
- (id)snapshotViewAfterScreenUpdates:(BOOL)arg1;
- (void)startHeartbeat:(SEL)arg1 inRunLoopMode:(id)arg2;
- (int)stateForGestureType:(int)arg1;
- (void)stopHeartbeat:(SEL)arg1;
- (id)subviews;
- (id)superview;
- (struct CGSize { float x1; float x2; })systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (int)tag;
- (id)tapDelegate;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)textInputView;
- (int)tintAdjustmentMode;
- (id)tintColor;
- (void)tintColorDidChange;
- (id)topAnchor;
- (id)trailingAnchor;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })transform;
- (BOOL)translatesAutoresizingMaskIntoConstraints;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (void)updateFocusIfNeeded;
- (void)updatePreferredFocusedItemIfNeeded;
- (void)updateUserActivityState:(id)arg1;
- (BOOL)useBlockyMagnificationInClassic;
- (id)valueForGestureAttribute:(int)arg1;
- (void)viewDidMoveToSuperview;
- (id)viewForBaselineLayout;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (id)viewPrintFormatter;
- (BOOL)viewTraversalMark;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)viewWithTag:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBounds;
- (id)widthAnchor;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)willUpdateFocusToView:(id)arg1;
- (id)window;
- (void)zoomToScale:(float)arg1;

// Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI

- (id)abIndexPathOfSubview:(id)arg1;
- (void)abSetLayoutDebuggingColor:(id)arg1;
- (id)abSubviewAtIndexPath:(id)arg1;
- (id)ancestorBackdropView;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

- (void)_cnui_applyContactStyle;
- (void)_cnui_applyContactStyleStark;
- (id)_cnui_contactStyle;
- (void)abSetLayoutDebuggingColor:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

+ (id)_mapkit_currentAnimationTimingFunction;
+ (BOOL)_mapkit_shouldAdoptImplicitAnimationParameters;
+ (void)_maps_setDoesNotTranslateAutoresizingConstraintsForViewsDictionary:(id)arg1;

- (id)_mapKit_mapView;
- (void)_mapKit_setNeedsDisplay;
- (BOOL)_mapkit_YCoordinate:(float)arg1 liesInDirection:(int)arg2 startingFromYCoordinate:(float)arg3;
- (float)_mapkit_YCoordinateAtDistance:(float)arg1 inDirection:(int)arg2 fromEdge:(int)arg3;
- (float)_mapkit_YCoordinateAtDistance:(float)arg1 inDirection:(int)arg2 fromYCoordinate:(float)arg3;
- (id)_mapkit_accessoryControlToExtendWithCallout;
- (float)_mapkit_contentCompressionResistancePriorityForAxis:(int)arg1;
- (float)_mapkit_contentHuggingPriorityForAxis:(int)arg1;
- (unsigned int)_mapkit_countOfSet:(id)arg1 minusSubset:(id)arg2;
- (id)_mapkit_currentLayer;
- (struct CADoubleRect { struct CADoublePoint { double x_1_1_1; double x_1_1_2; } x1; struct CADoubleSize { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_doubleFrame;
- (struct CGSize { float x1; float x2; })_mapkit_fittingSize;
- (void)_mapkit_insertSubviewBelowAllOtherSubviews:(id)arg1;
- (void)_mapkit_layoutIfNeeded;
- (float)_mapkit_leadingMargin;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_mapkit_rectWithSize:(struct CGSize { float x1; float x2; })arg1 XCoordinate:(float)arg2 atDistance:(float)arg3 inDirection:(int)arg4 fromEdge:(int)arg5;
- (void)_mapkit_setBackgroundColor:(id)arg1;
- (void)_mapkit_setContentCompressionResistancePriority:(float)arg1 forAxis:(int)arg2;
- (void)_mapkit_setContentHuggingPriority:(float)arg1 forAxis:(int)arg2;
- (void)_mapkit_setNeedsLayout;
- (void)_mapkit_setNeedsUpdateConstraints;
- (struct CGSize { float x1; float x2; })_mapkit_sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)_mapkit_sizeToFit;
- (float)_mapkit_trailingMargin;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

- (id)artworkCatalog;
- (void)clearArtworkCatalogs;
- (id)mpAncestorViewController;
- (id)mpFirstLabelSubview;
- (void)mpPerformRecursiveBlock:(id /* block */)arg1;
- (void)mpSetFrameOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)mpSetFrameSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setFrameEndX:(float)arg1 y:(float)arg2;
- (void)setFrameHeight:(float)arg1;
- (void)setFrameOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setFrameSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setFrameWidth:(float)arg1;
- (void)setFrameX:(float)arg1;
- (void)setFrameY:(float)arg1;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

- (float)mf_currentScreenScale;
- (id)mf_enclosingScrollView;
- (id)mf_frontSibling;

// Image: /System/Library/Frameworks/PassKit.framework/PassKit

+ (void)_pkui_animateUsingFactory:(id)arg1 withDelay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)pkui_animateUsingOptions:(unsigned int)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)pkui_animateUsingOptions:(unsigned int)arg1 delay:(double)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)pkui_animateUsingOptions:(unsigned int)arg1 delay:(double)arg2 velocity:(float)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

- (void)addDefaultTransformSpringWithStartTime:(float)arg1;
- (void)addDefaultTranslationSpringWithVelocity:(float)arg1 startTime:(float)arg2;
- (void)addTransformSpringWithMass:(float)arg1 stiffness:(float)arg2 damping:(float)arg3 startTime:(float)arg4 timing:(id)arg5;
- (void)addTranslationSpringWithMass:(float)arg1 stiffness:(float)arg2 damping:(float)arg3 startTime:(float)arg4 timing:(id)arg5;
- (void)addTranslationSpringWithMass:(float)arg1 stiffness:(float)arg2 damping:(float)arg3 startTime:(float)arg4 velocity:(float)arg5 timing:(id)arg6;
- (void)pk_applyAppearance:(struct _PKAppearanceSpecifier { BOOL x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; unsigned short x61; unsigned char x62; void*x63; void*x64; void*x65; unsigned int x66/* : ? */; long x67; void*x68; long doublex69; void*x70; long x71; void*x72; void*x73; int x74; out in void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; unsigned char x89; void*x90; unsigned short x91; void*x92; short x93; void*x94; void*x95; void*x96; void*x97; unsigned long x98; int x99; unsigned int x100/* : ? */; const void*x101; const void*x102; void*x103; void*x104; const int x105; void x106; void*x107; void*x108; void*x109; void*x110; const void*x111; void*x112; void*x113; void*x114; out const void*x115; short x116; void*x117; int x118; void*x119; out const void*x120; unsigned int x121; void*x122; void*x123; out const void*x124; void*x125; float x126; const void*x127; void*x128; void*x129; void*x130; out const void*x131; void*x132; int x133; void*x134; out const void*x135; unsigned int x136; void*x137; void*x138; out const void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; char *x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; unsigned int x266; void*x267; bool x268; unsigned short x269; void*x270; long x271; int x272; void*x273; void*x274; out void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; in void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; unsigned int x328; void*x329; bool x330; unsigned short x331; void*x332; long x333; int x334; void*x335; void*x336; out void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; id x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; bool x421; void*x422; void*x423; const short x424; out in void*x425; void*x426; unsigned int x427/* : ? */; long x428; void*x429; oneway int x430; void*x431; void*x432; unsigned int x433; void*x434; void*x435; void*x436; void*x437; long doublex438; void*x439; void*x440; void*x441; long doublex442; void*x443; long x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; bool x464; void*x465; void*x466; const short x467; out in void*x468; void*x469; unsigned int x470/* : ? */; long x471; void*x472; oneway int x473; void*x474; void*x475; unsigned int x476; void*x477; void*x478; void*x479; void*x480; long doublex481; void*x482; void*x483; void*x484; long doublex485; void*x486; long x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; id x506; unsigned short x507; void*x508; short x509; void*x510; void*x511; void*x512; void*x513; unsigned long x514; int x515; unsigned int x516/* : ? */; const void*x517; const void*x518; void*x519; void*x520; const void*x521; void*x522; void*x523; void*x524; out const void*x525; short x526; void*x527; double x528; double x529; const void*x530; short x531; short x532; bool x533; out out void*x534; void*x535; unsigned int x536; void*x537; float x538; const void*x539; void*x540; void*x541; void*x542; out const void*x543; void*x544; double x545; double x546; const void*x547; short x548; short x549; bool x550; out out void*x551; void*x552; unsigned int x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; unsigned short x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; id x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; bool x649; void*x650; void*x651; const short x652; out in unsigned int x653; void*x654; void*x655; void*x656; void*x657; long doublex658; void*x659; void*x660; void*x661; long doublex662; void*x663; long x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; oneway void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; unsigned char x724; void*x725; void*x726; long x727; void*x728; short x729; void*x730; unsigned char x731; out void*x732; void*x733; void*x734; in double x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; in void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; unsigned long x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; unsigned char x816; void*x817; void*x818; long x819; void*x820; short x821; void*x822; unsigned char x823; out void*x824; void*x825; void*x826; in double x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; unsigned short x846; void*x847; short x848; void*x849; void*x850; void*x851; void*x852; unsigned long x853; int x854; unsigned int x855/* : ? */; const void*x856; const void*x857; void*x858; void*x859; const int x860; void x861; void*x862; void*x863; void*x864; void*x865; const void*x866; void*x867; void*x868; void*x869; out const void*x870; short x871; void*x872; unsigned char x873; void*x874; void*x875; void*x876; const void*x877; void*x878; unsigned int x879; void*x880; float x881; const void*x882; void*x883; void*x884; void*x885; out const void*x886; void*x887; unsigned char x888; void*x889; void*x890; void*x891; const void*x892; void*x893; unsigned int x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; bool x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; SEL x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; out in void*x982; unsigned short x983; out long x984; int x985; double x986; bool x987; const void*x988; short x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; struct  float x_2_1_1; float x_2_1_2;  {} x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; unsigned long long x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; out in void*x1106; unsigned short x1107; out long x1108; int x1109; double x1110; bool x1111; const void*x1112; short x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; unsigned short x1131; void*x1132; short x1133; void*x1134; void*x1135; void*x1136; void*x1137; unsigned long x1138; int x1139; unsigned int x1140/* : ? */; const void*x1141; const void*x1142; void*x1143; void*x1144; const int x1145; void x1146; void*x1147; void*x1148; void*x1149; void*x1150; const void*x1151; void*x1152; void*x1153; void*x1154; out const void*x1155; short x1156; void*x1157; bycopy float x1158; float x1159; int x1160; BOOL x1161; void*x1162; unsigned int x1163; void*x1164; void*x1165; out const void*x1166; void*x1167; float x1168; const void*x1169; void*x1170; void*x1171; void*x1172; out const void*x1173; void*x1174; bycopy float x1175; float x1176; int x1177; BOOL x1178; void*x1179; unsigned int x1180; void*x1181; void*x1182; out const void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; id x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; id x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; unsigned short x1290; long doublex1291; void*x1292; const void*x1293; void*x1294; void*x1295; unsigned int x1296; void*x1297; void*x1298; void*x1299; void*x1300; unsigned char x1301; void*x1302; BOOL x1303; void*x1304; void*x1305; void*x1306; in void*x1307; const void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; unsigned short x1335; long doublex1336; void*x1337; const void*x1338; void*x1339; void*x1340; unsigned int x1341; void*x1342; void*x1343; void*x1344; void*x1345; unsigned char x1346; void*x1347; BOOL x1348; void*x1349; void*x1350; void*x1351; in void*x1352; const void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; unsigned char x1378; void*x1379; unsigned short x1380; void*x1381; short x1382; void*x1383; void*x1384; void*x1385; void*x1386; unsigned long x1387; int x1388; unsigned int x1389/* : ? */; const void*x1390; const void*x1391; void*x1392; void*x1393; const int x1394; void x1395; void*x1396; void*x1397; void*x1398; void*x1399; const void*x1400; void*x1401; void*x1402; void*x1403; out const void*x1404; short x1405; void*x1406; int x1407; void*x1408; out const void*x1409; unsigned int x1410; void*x1411; void*x1412; out const void*x1413; void*x1414; float x1415; const void*x1416; void*x1417; void*x1418; void*x1419; out const void*x1420; void*x1421; int x1422; void*x1423; out const void*x1424; unsigned int x1425; void*x1426; void*x1427; out const void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; Class x1441; void*x1442; void*x1443; void*x1444; void x1445; void*x1446; out void*x1447; int x1448; void*x1449; double x1450; void*x1451; char *x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; unsigned long x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; unsigned long x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void**x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; void*x1657; void*x1658; BOOL x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; unsigned long x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; unsigned long x1699; void*x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; void*x1732; void*x1733; void*x1734; void*x1735; void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; unsigned long x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; in void*x1775; void*x1776; void*x1777; void x1778; void*x1779; out void*x1780; int x1781; void*x1782; double x1783; void*x1784; char *x1785; void*x1786; void*x1787; void*x1788; void*x1789; void*x1790; void*x1791; void*x1792; void*x1793; void*x1794; void*x1795; void*x1796; void*x1797; void*x1798; void*x1799; void*x1800; void*x1801; void*x1802; void*x1803; void*x1804; void*x1805; void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; void*x1816; void*x1817; void*x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; void*x1824; void*x1825; void*x1826; void*x1827; void*x1828; void*x1829; void*x1830; void*x1831; void*x1832; void*x1833; void*x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; void*x1844; void*x1845; void*x1846; void*x1847; void*x1848; void*x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; void*x1862; void*x1863; void*x1864; void*x1865; void*x1866; void*x1867; void*x1868; void*x1869; void*x1870; void*x1871; void*x1872; void*x1873; void*x1874; void*x1875; void*x1876; void*x1877; void*x1878; void*x1879; void*x1880; void*x1881; void*x1882; void*x1883; void*x1884; void*x1885; void*x1886; void*x1887; unsigned long x1888; void*x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; void*x1915; void*x1916; void*x1917; void*x1918; void*x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; void*x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; void*x1943; void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; void*x1960; void*x1961; void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; void*x1969; void*x1970; void*x1971; void*x1972; void*x1973; void*x1974; void*x1975; void*x1976; void*x1977; void*x1978; void*x1979; void*x1980; void*x1981; void*x1982; void*x1983; Class x1984; void*x1985; void*x1986; void*x1987; void*x1988; void*x1989; void*x1990; void*x1991; void*x1992; void*x1993; void*x1994; void*x1995; unsigned short x1996; void*x1997; short x1998; void*x1999; void*x2000; void*x2001; void*x2002; unsigned long x2003; int x2004; unsigned int x2005/* : ? */; const void*x2006; const void*x2007; void*x2008; void*x2009; const int x2010; void x2011; void*x2012; void*x2013; void*x2014; void*x2015; const void*x2016; void*x2017; void*x2018; void*x2019; out const void*x2020; short x2021; void*x2022; bycopy float x2023; float x2024; int x2025; BOOL x2026; void*x2027; unsigned int x2028; void*x2029; void*x2030; out const void*x2031; void*x2032; float x2033; const void*x2034; void*x2035; void*x2036; void*x2037; out const void*x2038; void*x2039; bycopy float x2040; float x2041; int x2042; BOOL x2043; void*x2044; unsigned int x2045; void*x2046; void*x2047; out const void*x2048; void*x2049; void*x2050; void*x2051; void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; id x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; void*x2079; void*x2080; void*x2081; void*x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; void*x2091; unsigned int x2092; BOOL x2093; BOOL x2094; void*x2095; short x2096; short x2097; int x2098; unsigned int x2099/* : ? */; int x2100; long x2101; int x2102; void*x2103; void*x2104; void*x2105; const void*x2106; short x2107; void*x2108; in void*x2109; int x2110; in void*x2111; oneway int x2112; void*x2113; void*x2114; unsigned char x2115; out in void*x2116; const out long x2117; long x2118; void*x2119; const void*x2120; void*x2121; void*x2122; void*x2123; void*x2124; void*x2125; void*x2126; void*x2127; void*x2128; void*x2129; void*x2130; void*x2131; void*x2132; void*x2133; void*x2134; void*x2135; void*x2136; void*x2137; void*x2138; void*x2139; void*x2140; void*x2141; void*x2142; void*x2143; void*x2144; void*x2145; void*x2146; void*x2147; void*x2148; void*x2149; void*x2150; void*x2151; void*x2152; void*x2153; void*x2154; void*x2155; void*x2156; void*x2157; void*x2158; void*x2159; void*x2160; void*x2161; void*x2162; void*x2163; void*x2164; void*x2165; void*x2166; void*x2167; void*x2168; void*x2169; void*x2170; void*x2171; void*x2172; void*x2173; void*x2174; void*x2175; void*x2176; void*x2177; void*x2178; void*x2179; void*x2180; void*x2181; void*x2182; void*x2183; void*x2184; void*x2185; void*x2186; void*x2187; void*x2188; void*x2189; void*x2190; void*x2191; void*x2192; void*x2193; void*x2194; void*x2195; void*x2196; void*x2197; void*x2198; void*x2199; void*x2200; void*x2201; void*x2202; void*x2203; void*x2204; void*x2205; void*x2206; void*x2207; void*x2208; void*x2209; void*x2210; void*x2211; void*x2212; void*x2213; void*x2214; void*x2215; void*x2216; void*x2217; void*x2218; void*x2219; void*x2220; void*x2221; void*x2222; void*x2223; void*x2224; void*x2225; unsigned short x2226; void*x2227; short x2228; void*x2229; void*x2230; void*x2231; void*x2232; unsigned long x2233; int x2234; unsigned int x2235/* : ? */; const void*x2236; const void*x2237; void*x2238; void*x2239; const int x2240; void x2241; void*x2242; void*x2243; void*x2244; void*x2245; const void*x2246; void*x2247; void*x2248; void*x2249; out const void*x2250; short x2251; void*x2252; unsigned char x2253; void*x2254; long x2255; void*x2256; short x2257; void*x2258; int x2259; void*x2260; long x2261; void*x2262; float x2263; const void*x2264; void*x2265; void*x2266; void*x2267; out const void*x2268; void*x2269; unsigned char x2270; void*x2271; long x2272; void*x2273; short x2274; void*x2275; int x2276; void*x2277; long x2278; void*x2279; void*x2280; void*x2281; void*x2282; void*x2283; void*x2284; void*x2285; void*x2286; void*x2287; void*x2288; void*x2289; void*x2290; void*x2291; void*x2292; void*x2293; void*x2294; void*x2295; void*x2296; void*x2297; void*x2298; void*x2299; void*x2300; void*x2301; void*x2302; void*x2303; void*x2304; void*x2305; void*x2306; void*x2307; void*x2308; void*x2309; void*x2310; void*x2311; void*x2312; void*x2313; void*x2314; void*x2315; void*x2316; void*x2317; void*x2318; void*x2319; void*x2320; void*x2321; void*x2322; void*x2323; void*x2324; void*x2325; void*x2326; void*x2327; Class x2328; void*x2329; void*x2330; void*x2331; Class x2332; void*x2333; void*x2334; void*x2335; void*x2336; void*x2337; void*x2338; void*x2339; void*x2340; void*x2341; void*x2342; void*x2343; void*x2344; void*x2345; void*x2346; void*x2347; void*x2348; void*x2349; void*x2350; void*x2351; void*x2352; void*x2353; void*x2354; void*x2355; void*x2356; void*x2357; void*x2358; void*x2359; unsigned short x2360; void*x2361; void*x2362; unsigned int x2363; unsigned short x2364; long x2365; int x2366; double x2367; void*x2368; short x2369; void*x2370; out void*x2371; oneway int x2372; void*x2373; void*x2374; unsigned char x2375; out in void*x2376; const out long x2377; long x2378; void*x2379; const void*x2380; void*x2381; void*x2382; void*x2383; void*x2384; void*x2385; void*x2386; void*x2387; void*x2388; void*x2389; void*x2390; void*x2391; void*x2392; void*x2393; void*x2394; void*x2395; void*x2396; void*x2397; void*x2398; void*x2399; void*x2400; unsigned short x2401; void*x2402; void*x2403; unsigned int x2404; unsigned short x2405; long x2406; int x2407; double x2408; void*x2409; short x2410; void*x2411; out void*x2412; oneway int x2413; void*x2414; void*x2415; unsigned char x2416; out in void*x2417; const out long x2418; long x2419; void*x2420; const void*x2421; void*x2422; void*x2423; void*x2424; void*x2425; void*x2426; void*x2427; void*x2428; void*x2429; void*x2430; void*x2431; void*x2432; void*x2433; void*x2434; void*x2435; void*x2436; void*x2437; void*x2438; void*x2439; void*x2440; void*x2441; unsigned short x2442; void*x2443; short x2444; void*x2445; void*x2446; void*x2447; void*x2448; unsigned long x2449; int x2450; unsigned int x2451/* : ? */; const void*x2452; const void*x2453; void*x2454; void*x2455; const int x2456; void x2457; void*x2458; void*x2459; void*x2460; void*x2461; const void*x2462; void*x2463; void*x2464; void*x2465; out const void*x2466; short x2467; void*x2468; unsigned short x2469; void*x2470; out const void*x2471; void*x2472; int x2473; void*x2474; void*x2475; unsigned int x2476; void*x2477; float x2478; const void*x2479; void*x2480; void*x2481; void*x2482; out const void*x2483; void*x2484; unsigned short x2485; void*x2486; out const void*x2487; void*x2488; int x2489; void*x2490; void*x2491; unsigned int x2492; void*x2493; void*x2494; void*x2495; void*x2496; void*x2497; void*x2498; void*x2499; void*x2500; void*x2501; void*x2502; void*x2503; void*x2504; void*x2505; void*x2506; void*x2507; void*x2508; void*x2509; void*x2510; void*x2511; void*x2512; void*x2513; void*x2514; void*x2515; void*x2516; void*x2517; void*x2518; void*x2519; void*x2520; void*x2521; void*x2522; void*x2523; void*x2524; void*x2525; void*x2526; void*x2527; void*x2528; void*x2529; void*x2530; unsigned long x2531; void*x2532; void*x2533; void*x2534; void*x2535; void*x2536; void*x2537; void*x2538; void*x2539; void*x2540; void*x2541; void*x2542; unsigned long x2543; void*x2544; void*x2545; void*x2546; void*x2547; void*x2548; void*x2549; id x2550; void*x2551; void*x2552; void*x2553; void*x2554; void*x2555; void*x2556; void*x2557; void*x2558; void*x2559; void*x2560; void*x2561; void*x2562; void*x2563; void*x2564; void*x2565; void*x2566; void*x2567; void*x2568; void*x2569; void*x2570; void*x2571; void*x2572; void*x2573; unsigned long x2574; void*x2575; void*x2576; void*x2577; void*x2578; void*x2579; void*x2580; void*x2581; void*x2582; void*x2583; void*x2584; void*x2585; void*x2586; void*x2587; void*x2588; void*x2589; void*x2590; void*x2591; void*x2592; void*x2593; void*x2594; void*x2595; void*x2596; void*x2597; void*x2598; void*x2599; void*x2600; void*x2601; void*x2602; void*x2603; void*x2604; void*x2605; void*x2606; void*x2607; void*x2608; void*x2609; void*x2610; void*x2611; void*x2612; void*x2613; void*x2614; void*x2615; void*x2616; void*x2617; void*x2618; void*x2619; void*x2620; void*x2621; void*x2622; void*x2623; void*x2624; void*x2625; void*x2626; void*x2627; void*x2628; void*x2629; void*x2630; void*x2631; void*x2632; void*x2633; void*x2634; void*x2635; void*x2636; void*x2637; unsigned long x2638; void*x2639; void*x2640; void*x2641; void*x2642; void*x2643; void*x2644; void*x2645; void*x2646; void*x2647; void*x2648; void*x2649; void*x2650; void*x2651; void*x2652; void*x2653; void*x2654; void*x2655; void*x2656; void*x2657; void*x2658; void*x2659; void*x2660; void*x2661; void*x2662; void*x2663; void*x2664; void*x2665; void*x2666; void*x2667; void*x2668; void*x2669; void*x2670; void*x2671; void*x2672; void*x2673; void*x2674; void*x2675; void*x2676; void*x2677; void*x2678; void*x2679; void*x2680; void*x2681; void*x2682; void*x2683; void*x2684; void*x2685; void*x2686; void*x2687; void*x2688; void*x2689; void*x2690; void*x2691; void*x2692; void*x2693; void*x2694; void*x2695; void*x2696; void*x2697; void*x2698; void*x2699; void*x2700; void*x2701; void*x2702; void*x2703; void*x2704; void*x2705; void*x2706; void*x2707; void*x2708; void*x2709; void*x2710; void*x2711; void*x2712; void*x2713; void*x2714; void*x2715; void*x2716; void*x2717; void*x2718; void*x2719; void*x2720; const void*x2721; void*x2722; void*x2723; void*x2724; void*x2725; void*x2726; void*x2727; void*x2728; void*x2729; void*x2730; void*x2731; void*x2732; void*x2733; void*x2734; void*x2735; id x2736; void*x2737; void*x2738; void*x2739; void*x2740; void*x2741; void*x2742; void*x2743; void*x2744; void*x2745; void*x2746; void*x2747; void*x2748; void*x2749; void*x2750; void*x2751; void*x2752; void*x2753; void*x2754; void*x2755; void*x2756; void*x2757; void*x2758; void*x2759; id x2760; void*x2761; void*x2762; void*x2763; void*x2764; void*x2765; void*x2766; void*x2767; void*x2768; void*x2769; void*x2770; void*x2771; void*x2772; void*x2773; void*x2774; void*x2775; unsigned short x2776; void*x2777; short x2778; void*x2779; void*x2780; void*x2781; void*x2782; unsigned long x2783; int x2784; unsigned int x2785/* : ? */; const void*x2786; const void*x2787; void*x2788; void*x2789; const void*x2790; void*x2791; void*x2792; void*x2793; out const void*x2794; short x2795; void*x2796; unsigned char x2797; out const void*x2798; long doublex2799; void*x2800; void*x2801; void*x2802; void*x2803; float x2804; const void*x2805; void*x2806; void*x2807; void*x2808; out const void*x2809; void*x2810; unsigned char x2811; out const void*x2812; long doublex2813; void*x2814; void*x2815; void*x2816; void*x2817; void*x2818; void*x2819; void*x2820; void*x2821; void*x2822; void*x2823; void*x2824; void*x2825; void*x2826; inout unsigned short x2827; unsigned short x2828; unsigned long long x2829; unsigned long x2830; void*x2831; void*x2832; void*x2833; const void*x2834; short x2835; short x2836; int x2837; out in unsigned int x2838; in void*x2839; void*x2840; const void*x2841; void*x2842; double x2843; int x2844; void*x2845; void*x2846; void*x2847; void*x2848; void*x2849; void*x2850; void*x2851; void*x2852; void*x2853; void*x2854; void*x2855; void*x2856; void*x2857; void*x2858; void*x2859; void*x2860; void*x2861; void*x2862; void*x2863; void*x2864; void*x2865; void*x2866; void*x2867; void*x2868; void*x2869; void*x2870; void*x2871; void*x2872; void*x2873; void*x2874; void*x2875; void*x2876; void*x2877; void*x2878; void*x2879; void*x2880; void*x2881; void*x2882; void*x2883; void*x2884; void*x2885; void*x2886; void*x2887; void*x2888; void*x2889; void*x2890; void*x2891; void*x2892; void*x2893; void*x2894; unsigned long long x2895; void*x2896; void*x2897; void*x2898; void*x2899; void*x2900; void*x2901; void*x2902; void*x2903; void*x2904; void*x2905; void*x2906; void*x2907; void*x2908; void*x2909; void*x2910; void*x2911; void*x2912; void*x2913; void*x2914; void*x2915; void*x2916; void*x2917; void*x2918; void*x2919; void*x2920; unsigned long x2921; void*x2922; void*x2923; void*x2924; void*x2925; void*x2926; void*x2927; void*x2928; void*x2929; void*x2930; void*x2931; void*x2932; void*x2933; void*x2934; void*x2935; void*x2936; void*x2937; void*x2938; void*x2939; void*x2940; void*x2941; void*x2942; void*x2943; void*x2944; void*x2945; void*x2946; void*x2947; void*x2948; void*x2949; in void*x2950; void*x2951; void*x2952; double x2953; void*x2954; void*x2955; void*x2956; long x2957; void*x2958; out void*x2959; in void*x2960; void*x2961; void*x2962; void*x2963; void*x2964; void*x2965; void*x2966; void*x2967; void*x2968; void*x2969; void*x2970; void*x2971; void*x2972; void*x2973; void*x2974; void*x2975; void*x2976; void*x2977; char *x2978; void*x2979; void*x2980; void*x2981; void*x2982; void*x2983; void*x2984; void*x2985; void*x2986; void*x2987; void*x2988; void*x2989; void*x2990; void*x2991; void*x2992; void*x2993; void*x2994; void*x2995; void*x2996; void*x2997; void*x2998; void*x2999; void*x3000; void*x3001; void*x3002; void*x3003; void*x3004; void*x3005; void*x3006; void*x3007; void*x3008; void*x3009; void*x3010; void*x3011; void*x3012; void*x3013; unsigned long x3014; void*x3015; void*x3016; void*x3017; void*x3018; void*x3019; void*x3020; void*x3021; char *x3022; void*x3023; void*x3024; void*x3025; void*x3026; void*x3027; void*x3028; void*x3029; void*x3030; void*x3031; void*x3032; void*x3033; void*x3034; void*x3035; void*x3036; void*x3037; void*x3038; void*x3039; void*x3040; void*x3041; void*x3042; void*x3043; void*x3044; void*x3045; void*x3046; void*x3047; void*x3048; void*x3049; void*x3050; void*x3051; void*x3052; void*x3053; void*x3054; void*x3055; void*x3056; union x3057; void*x3058; void*x3059; void*x3060; void*x3061; unsigned long x3062; void*x3063; void*x3064; void*x3065; void*x3066; void*x3067; void*x3068; void*x3069; void*x3070; void*x3071; void*x3072; void*x3073; void*x3074; void*x3075; void*x3076; void*x3077; void*x3078; void*x3079; void*x3080; void*x3081; void*x3082; void*x3083; void*x3084; void*x3085; void*x3086; void*x3087; void*x3088; void*x3089; void*x3090; void*x3091; void*x3092; void*x3093; unsigned long x3094; void*x3095; void*x3096; void*x3097; void*x3098; void*x3099; void*x3100; void*x3101; void*x3102; void*x3103; void*x3104; void*x3105; void*x3106; void*x3107; void*x3108; void*x3109; void*x3110; void*x3111; void*x3112; void*x3113; void*x3114; void*x3115; void*x3116; void*x3117; }*)arg1;
- (id)pk_childrenForAppearance;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })pkui_readableContentBoundsWithMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)pkui_shakeWithCompletion:(id /* block */)arg1;
- (id)pkui_translationAnimation;
- (id)pkui_viewControllerFromResponderChain;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

+ (void)_pu_animateView:(id)arg1 toCenter:(struct CGPoint { float x1; float x2; })arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 withInitialVelocity:(struct PUDisplayVelocity { float x1; float x2; float x3; float x4; })arg5 usingSpringAnimation:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)_pu_animateViews:(id)arg1 withAnimationBlock:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
+ (void)_pu_animateWithDuration:(double)arg1 enforced:(BOOL)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)ph_animateView:(id)arg1 toCenter:(struct CGPoint { float x1; float x2; })arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 withDuration:(double)arg5 delay:(double)arg6 usingSpringWithDamping:(float)arg7 initialVelocity:(struct PHDisplayVelocity { float x1; float x2; float x3; float x4; })arg8 options:(unsigned int)arg9 completion:(id /* block */)arg10;
+ (void)pu_animateView:(id)arg1 toCenter:(struct CGPoint { float x1; float x2; })arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 usingDefaultDampedSpringWithDelay:(double)arg5 initialVelocity:(struct PUDisplayVelocity { float x1; float x2; float x3; float x4; })arg6 options:(unsigned int)arg7 completion:(id /* block */)arg8;
+ (void)pu_animateView:(id)arg1 toCenter:(struct CGPoint { float x1; float x2; })arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 usingSpringWithDuration:(double)arg5 delay:(double)arg6 options:(unsigned int)arg7 mass:(float)arg8 stiffness:(float)arg9 damping:(float)arg10 initialVelocity:(struct PUDisplayVelocity { float x1; float x2; float x3; float x4; })arg11 completion:(id /* block */)arg12;
+ (void)pu_animateView:(id)arg1 toCenter:(struct CGPoint { float x1; float x2; })arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 withDuration:(double)arg5 delay:(double)arg6 usingSpringWithDamping:(float)arg7 initialVelocity:(struct PUDisplayVelocity { float x1; float x2; float x3; float x4; })arg8 options:(unsigned int)arg9 completion:(id /* block */)arg10;
+ (void)pu_animateViews:(id)arg1 usingDefaultDampedSpringWithDelay:(double)arg2 initialSpringVelocity:(float)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)pu_animateViews:(id)arg1 usingSpringWithDuration:(double)arg2 delay:(double)arg3 options:(unsigned int)arg4 mass:(float)arg5 stiffness:(float)arg6 damping:(float)arg7 initialVelocity:(float)arg8 animations:(id /* block */)arg9 completion:(id /* block */)arg10;
+ (void)pu_animateViews:(id)arg1 withDuration:(double)arg2 delay:(double)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)pu_animateViews:(id)arg1 withDuration:(double)arg2 delay:(double)arg3 usingSpringWithDamping:(float)arg4 initialSpringVelocity:(float)arg5 options:(unsigned int)arg6 animations:(id /* block */)arg7 completion:(id /* block */)arg8;
+ (void)pu_animateWithDuration:(double)arg1 animations:(id /* block */)arg2;
+ (void)pu_animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)pu_animateWithEnforcedDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (double)pu_springOscillationRootAtIndex:(int)arg1 forMass:(double)arg2 stiffness:(double)arg3 damping:(double)arg4 initialVelocity:(double)arg5;
+ (void)pu_transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

- (id)_pu_ancestorSharedWithView:(id)arg1;
- (id)_pu_animationDictionary;
- (id)_pu_referenceBasicAnimationForCurrentAnimation;
- (void)pu_addTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)pu_animateBarTransitionWithContext:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })pu_convertTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 fromView:(id)arg2;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })pu_convertTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 toView:(id)arg2;
- (void)pu_setCenterAndBoundsForFrameRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

// Image: /System/Library/Frameworks/ReplayKit.framework/ReplayKit

+ (id)_srVideoOverlayButtonWithStyle:(int)arg1;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

+ (void)sf_animate:(BOOL)arg1 usingDefaultTimingWithOptions:(unsigned int)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;

- (BOOL)_sf_usesLeftToRightLayout;
- (void)ss_setUntransformedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })ss_untransformedFrame;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

- (id)_findDescendantViewAtPoint:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)_recursiveFindDescendantScrollViewAtPoint:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)_web_setSubviews:(id)arg1;

// Image: /System/Library/Frameworks/iAd.framework/iAd

- (BOOL)_iAd_isFeldsparClientVisibleFast;
- (BOOL)_iAd_isVisible:(id /* block */)arg1;
- (BOOL)_iAd_isVisibleFast;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_iAd_screenFrame;

// Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AccessibilityUIUtilities.framework/AccessibilityUIUtilities

- (unsigned int)_ax_depth;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToConstant:(float)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToConstant:(float)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToConstant:(float)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToConstant:(float)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6;
- (id)ax_addedConstraintForLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6 priority:(float)arg7;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToConstant:(float)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToConstant:(float)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToConstant:(float)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToConstant:(float)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)ax_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6;
- (void)ax_constrainLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6 priority:(float)arg7;
- (id)ax_firstCommonAncestorWithView:(id)arg1;
- (id)ax_pinConstraintsInAllDimensionsToView:(id)arg1;
- (void)ax_setContentHuggingAndCompressionResistance:(struct { float x1; float x2; float x3; float x4; })arg1;

// Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit

- (id)akEnclosingScrollView;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })akVisibleRect;

// Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit

+ (double)cam_setHiddenAnimationDuration;
+ (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })cam_transformForDeviceOrientation:(int)arg1;

- (id)_cam_associatedConstraints;
- (void)cam_addConstraint:(id)arg1 forKey:(id)arg2;
- (void)cam_addConstraints:(id)arg1 forKey:(id)arg2;
- (void)cam_clearAllConstraintsForKey:(id)arg1;
- (id)cam_constraintsForKey:(id)arg1;
- (BOOL)cam_hasConstraintForKey:(id)arg1;
- (BOOL)cam_isOnScreen:(id)arg1;
- (BOOL)cam_isOnScreen:(id)arg1;
- (void)cam_removeAllConstraintsForKey:(id)arg1;
- (void)cam_rotateWithDeviceOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)cam_setHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)cam_setHidden:(BOOL)arg1 delay:(double)arg2 animated:(BOOL)arg3;

// Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI

+ (double)cam_setHiddenAnimationDuration;
+ (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })cam_transformForInterfaceOrientation:(int)arg1;

- (void)cam_ensureSubview:(id)arg1;
- (BOOL)cam_isOnScreen:(id)arg1;
- (BOOL)cam_isOnScreen:(id)arg1;
- (void)cam_rotateWithInterfaceOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)cam_setBorderColor:(id)arg1;
- (void)cam_setBorderColor:(id)arg1 width:(float)arg2;
- (void)cam_setHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)cam_setHidden:(BOOL)arg1 delay:(double)arg2 animated:(BOOL)arg3;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (id)__ck_addEqualityConstraintWithItem:(id)arg1 toItem:(id)arg2 usingAttribute:(int)arg3;
- (struct CGSize { float x1; float x2; })__ck_alignmentRectSizeForFrameSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)__ck_containsFirstResponder;
- (struct CGSize { float x1; float x2; })__ck_frameSizeForAlignmentRectSize:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutGradientViewsIfNeeded;
- (BOOL)pointMostlyInside:(struct CGPoint { float x1; float x2; })arg1 threshold:(float)arg2 velocity:(struct CGPoint { float x1; float x2; })arg3;
- (void)setGradientViewsNeedLayout;

// Image: /System/Library/PrivateFrameworks/CompassUI.framework/CompassUI

- (id)currentLayer;
- (id)rotateView:(id)arg1 byAngle:(float)arg2;

// Image: /System/Library/PrivateFrameworks/FMCoreUI.framework/FMCoreUI

+ (void)_ISDynamicTypeSupportSetup;

- (id)addConstraintsToFillSuperview;
- (id)addConstraintsToSetSize:(struct CGSize { float x1; float x2; })arg1;
- (id)allSubviews;
- (void)centerHorizontallyInSuperview;
- (void)centerVerticallyInSuperview;
- (id)debugHighlight;
- (id)generateImage;
- (struct CGPath { }*)newPathForRoundedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 radius:(float)arg2;
- (id)roundedRectBackgroundColor;
- (id)roundedRectBorderColor;
- (id)roundedRectBorderWidth;
- (void)setDebugHighlight:(id)arg1;
- (void)setRandomDebugHighlight;
- (void)setRoundedRectBackgroundColor:(id)arg1;
- (void)setRoundedRectBorderColor:(id)arg1;
- (void)setRoundedRectBorderWidth:(id)arg1;

// Image: /System/Library/PrivateFrameworks/FMFUI.framework/FMFUI

- (void)centerHorizontalInView:(id)arg1;
- (void)centerVerticalInView:(id)arg1;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (void)_music_layoutInsets_didMoveToSuperview;
- (void)_music_updateInheritedLayoutInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })music_inheritedLayoutInsets;
- (void)music_inheritedLayoutInsetsDidChange;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })music_layoutInsets;
- (void)music_setLayoutInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;

// Image: /System/Library/PrivateFrameworks/GameCenterPrivateUI.framework/GameCenterPrivateUI

- (void)_gkAddPositionConstraints:(struct CGPoint { float x1; float x2; })arg1 forBubble:(id)arg2;
- (void)_gkRemovePositionConstraintsForBubble:(id)arg1;
- (void)_gkSetNeedsRender;

// Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI

+ (id)_gkStandardBackdropView;

- (void)_gkAddStandardFadeTransition;
- (id)_gkAncestryAffectingVisualLayout;
- (id)_gkAncestryDescription;
- (void)_gkApplyBackdropViewIfNeededWithGroupName:(id)arg1;
- (void)_gkApplyBackdropViewWithGroupName:(id)arg1;
- (id)_gkApplyFakeStatusBarView;
- (void)_gkApplyPerspectiveTransform;
- (id)_gkBackdropView;
- (void)_gkClearPerspectiveTransform;
- (void)_gkEnumerateSubviewsUsingBlock:(id /* block */)arg1;
- (void)_gkPerformWithoutAnimationWhenRotating:(id /* block */)arg1;
- (float)_gkPerspectiveTransformEZ;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_gkPopoverPresentationArea;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_gkPopoverPresentationInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_gkPopoverPresentationRect;
- (id)_gkRecursiveDescriptionForKey:(id)arg1;
- (id)_gkRecursiveDescriptionForKey:(id)arg1 depth:(int)arg2;
- (id)_gkRecursiveDescriptionForValue:(id)arg1 forKey:(id)arg2;
- (id)_gkRecursiveDescriptionForValue:(id)arg1 forKey:(id)arg2 depth:(int)arg3;
- (void)_gkRecursivelyApplyBlock:(id /* block */)arg1 depth:(int)arg2;
- (void)_gkSetDrawsAsBackdropOverlay:(BOOL)arg1;
- (void)_gkSetDrawsAsKnockout:(BOOL)arg1 inBackdrop:(id)arg2;
- (BOOL)_gkSuperviewHasPerspectiveTransform;
- (void)_gkUseAsModalSheetBackgroundWithGroupName:(id)arg1;
- (struct CGPoint { float x1; float x2; })integralCenter;
- (void)setIntegralCenter:(struct CGPoint { float x1; float x2; })arg1;

// Image: /System/Library/PrivateFrameworks/HealthKitUI.framework/HealthKitUI

- (id)hk_addConstraintsWithFormat:(id)arg1 options:(unsigned int)arg2 views:(id)arg3;
- (id)hk_addEqualsConstraintWithItem:(id)arg1 attribute:(int)arg2 relatedTo:(id)arg3 attribute:(int)arg4 constant:(float)arg5;
- (id)hk_addEqualsConstraintWithItem:(id)arg1 attribute:(int)arg2 relatedTo:(id)arg3 constant:(float)arg4;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

- (id)MPU_vibrantContentEffectView;
- (id)initForAutolayout;

// Image: /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer

- (void)mt_concatPixelAlignedTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)mt_setPixelAlignedCenter:(struct CGPoint { float x1; float x2; })arg1;

// Image: /System/Library/PrivateFrameworks/NetAppsUtilitiesUI.framework/NetAppsUtilitiesUI

+ (void)_naui_beginDebuggingAutolayout;
+ (void)naui_beginDisablingAnimations;
+ (void)naui_endDisablingAnimations;
+ (void)naui_performAnimateableChangesWithAnimationDuration:(double)arg1 setupBlock:(id /* block */)arg2 animatablesBlock:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)naui_prepareToAutolayoutProperDescendantsOfView:(id)arg1 inConstraints:(id)arg2;

- (id)_naui_constraintsByNameDictionary:(BOOL)arg1;
- (id)_naui_constraintsNamed:(id)arg1;
- (void)naui_addConstraint:(id)arg1;
- (void)naui_addConstraints:(id)arg1;
- (BOOL)naui_canAnimate;
- (id)naui_descendantsWithAmbiguousLayout;
- (id)naui_dynamicFontTextStyleDescriptor;
- (BOOL)naui_isProperDescendantOfView:(id)arg1;
- (void)naui_reloadDynamicFontWithTextStyleDescriptor:(id)arg1;
- (void)naui_removeConstraint:(id)arg1;
- (void)naui_removeConstraints:(id)arg1;
- (void)naui_removeConstraintsNamed:(id)arg1;
- (void)naui_removeNamedConstraints;
- (BOOL)naui_replaceConstraint:(id)arg1 withConstraints:(id)arg2;
- (BOOL)naui_replaceConstraints:(id)arg1 withConstraints:(id)arg2;
- (void)naui_setDynamicFontTextStyleDescriptor:(id)arg1;
- (void)naui_setNamedConstraints:(id)arg1 forName:(id)arg2;
- (void)naui_showAllViewBoundsRecursively:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

- (void)addBorderWithColor:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Pegasus.framework/Pegasus

+ (void)PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:(float)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)PG_animateUsingDefaultTimingWithAnimations:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (void)PG_performWithoutAnimation:(id /* block */)arg1;
+ (void)PG_transitionViews:(id)arg1 hidden:(BOOL)arg2 animated:(BOOL)arg3;

- (BOOL)PG_allowsEdgeAntialiasing;
- (struct CGPoint { float x1; float x2; })PG_anchorPoint;
- (id)PG_compositingFilter;
- (float)PG_cornerRadius;
- (void)PG_setAllowsEdgeAntialiasing:(BOOL)arg1;
- (void)PG_setAnchorPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)PG_setCompositingFilter:(id)arg1;
- (void)PG_setCornerRadius:(float)arg1;
- (void)PG_setHasRoundedCorners:(BOOL)arg1 animated:(BOOL)arg2;

// Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary

+ (double)pl_setHiddenAnimationDuration;
+ (id)pl_videoOverlayButtonWithStyle:(int)arg1;

- (void)pl_drawBorderWithColor:(id)arg1 width:(float)arg2;
- (BOOL)pl_isOnScreen:(id)arg1;
- (void)pl_setHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)pl_setHidden:(BOOL)arg1 delay:(double)arg2 animated:(BOOL)arg3;

// Image: /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools

- (id)ancestorViews;
- (id)descendantViews;
- (int)indexInSuperview;
- (int)levelInHierarchy;
- (void)setLayerMaskWithImage:(id)arg1;
- (id)siblingViewsAbove;
- (id)siblingViewsUnder;
- (id)viewsAbove;
- (id)viewsUnder;

// Image: /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI

- (void)recursive_setSemanticContentAttribute:(int)arg1;

// Image: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusFoundation.framework/OpusFoundation

- (id)ancestorViewOfClass:(Class)arg1;
- (id)ancestorViewOfInstance:(id)arg1;
- (id)layerFromSnapshot;
- (id)layerFromSnapshot:(BOOL)arg1;
- (id)snapshot;
- (id)snapshot:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/SpotlightUI.framework/SpotlightUI

- (void)setHiddenForAutoLayout:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI

- (void)sbui_drawEagerly;

// Image: /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices

- (void)sb_setBoundsAndPositionFromFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

// Image: /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI

- (int)action;
- (void)setAction:(int)arg1;

// Image: /System/Library/PrivateFrameworks/ToneKit.framework/ToneKit

- (id)_tk_autolayoutTrace;
- (id)_tk_recursiveAutolayoutTraceAtLevel:(int)arg1 anyDescendantHasAmbiguousLayout:(BOOL*)arg2;
- (unsigned int)_tl_depth;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withMultiplier:(float)arg4;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withMultiplier:(float)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6;
- (id)tk_addedConstraintFotLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToConstant:(float)arg2;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withMultiplier:(float)arg4;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToLayoutAttribute:(int)arg2 ofView:(id)arg3 withOffset:(float)arg4;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withMultiplier:(float)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 asEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(float)arg3;
- (void)tk_constrainLayoutAttribute:(int)arg1 relatedBy:(int)arg2 toItem:(id)arg3 attribute:(int)arg4 multiplier:(float)arg5 constant:(float)arg6;
- (id)tk_firstCommonAncestorWithView:(id)arg1;

// Image: /System/Library/PrivateFrameworks/UIAccessibility.framework/UIAccessibility

+ (id)_accessibilityElementsAndContainersDescendingFromViews:(id)arg1 options:(id)arg2 sorted:(BOOL)arg3;

- (BOOL)_accessibilityAllowsSiblingsWhenOvergrown;
- (struct CGSize { float x1; float x2; })_accessibilityFrameExpansion;
- (BOOL)_accessibilityIsSortingInUpperFrame;
- (BOOL)_accessibilityObscuresScreen;
- (BOOL)_accessibilityOverridesInvalidFrames;
- (void)_accessibilitySetAllowsSiblingsWhenOvergrown:(BOOL)arg1;
- (void)_accessibilitySetFrameExpansion:(struct CGSize { float x1; float x2; })arg1;
- (void)_accessibilitySetIsSortingInUpperFrame:(BOOL)arg1;
- (void)_accessibilitySetObscuresScreen:(BOOL)arg1;
- (void)_accessibilitySetStoredObscuresScreen:(id)arg1;
- (void)_accessibilitySetViewIsVisible:(BOOL)arg1;
- (BOOL)_accessibilityShouldBeAddedToViewChildrenWithOptions:(id)arg1;
- (BOOL)_accessibilityShouldBeProcessed:(id)arg1;
- (BOOL)_accessibilityShouldUseSupplementaryViews;
- (id)_accessibilityStoredObscuresScreen;
- (id)_accessibilitySubviews;
- (id)_accessibilitySubviewsForGettingElementsWithOptions:(id)arg1;
- (id)_accessibilityViewChildrenWithOptions:(id)arg1;
- (BOOL)_accessibilityViewIsActive;
- (BOOL)_accessibilityViewIsVisible;
- (BOOL)_accessibilityViewIsVisibleIgnoringAXOverrides:(BOOL)arg1;
- (id)_accessibleSubviews;
- (void)_addAccessibilityElementsAndOrderedContainersWithOptions:(id)arg1 toCollection:(id)arg2;
- (struct CGPoint { float x1; float x2; })accessibilityConvertPointFromSceneReferenceCoordinates:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityConvertRectToSceneReferenceCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

+ (void)rc_beginDebuggingAutolayout;
+ (void)rc_beginDisablingAnimations;
+ (void)rc_endDisablingAnimations;
+ (void)rc_performAnimateableChangesWithAnimationDuration:(double)arg1 setupBlock:(id /* block */)arg2 animatablesBlock:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)rc_prepareToAutolayoutProperDescendantsOfView:(id)arg1 inConstraints:(id)arg2;

- (id)_rc_constraintsByNameDictionary:(BOOL)arg1;
- (id)_rc_constraintsNamed:(id)arg1;
- (void)rc_addConstraint:(id)arg1;
- (void)rc_addConstraints:(id)arg1;
- (void)rc_addConstraintsForFittingToMinimumSize;
- (id)rc_autoUpdatingTextStyle;
- (id)rc_autolayoutView;
- (BOOL)rc_canAnimate;
- (float)rc_charge;
- (BOOL)rc_isProperDescendantOfView:(id)arg1;
- (void)rc_layoutBelowIfNeeded;
- (void)rc_loadInvariantConstraintsWithBlock:(id /* block */)arg1;
- (void)rc_reloadConstraintsNamed:(id)arg1 stalenessToken:(id)arg2 loadConstraintsBlock:(id /* block */)arg3;
- (void)rc_removeConstraint:(id)arg1;
- (void)rc_removeConstraints:(id)arg1;
- (void)rc_removeConstraintsNamed:(id)arg1;
- (void)rc_removeNamedConstraints;
- (BOOL)rc_replaceConstraint:(id)arg1 withConstraints:(id)arg2;
- (BOOL)rc_replaceConstraints:(id)arg1 withConstraints:(id)arg2;
- (void)rc_setAccessibilityLabel:(id)arg1;
- (void)rc_setAutoUpdatingTextStyle:(id)arg1;
- (void)rc_setCharge:(float)arg1;
- (void)rc_setNamedConstraints:(id)arg1 forName:(id)arg2;
- (void)rc_showAllViewBoundsRecursively:(BOOL)arg1;
- (void)rc_updateConstraintsAndLayoutSubtree;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

- (id)_firstDescendantOfKind:(Class)arg1;
- (void)centerSubviewInBounds:(id)arg1;
- (id)firstScrollViewDescendant;
- (id)superviewOfClass:(Class)arg1;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

- (void)addBorderWithColor:(id)arg1;

@end
