/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIApplication : UIResponder <FBSDisplayLayoutObserver, FBSSceneDelegate, FBSUIApplicationSystemServiceDelegate, FBSUIApplicationWorkspaceDelegate, NSUserActivityDelegate, UIAlertViewDelegate, UNSRemoteNotificationRegistrarDelegate> {
    id /* block */ ___queuedOrientationChange;
    int __expectedViewOrientation;
    NSMutableSet *_actionsPendingInitialization;
    BOOL _alwaysHitTestsForMainScreen;
    struct { 
        unsigned int deactivatingReasonFlags : 13; 
        unsigned int isSuspended : 1; 
        unsigned int isSuspendedEventsOnly : 1; 
        unsigned int isLaunchedSuspended : 1; 
        unsigned int calledNonSuspendedLaunchDelegate : 1; 
        unsigned int calledSuspendedLaunchDelegate : 1; 
        unsigned int isHandlingURL : 1; 
        unsigned int statusBarShowsProgress : 1; 
        unsigned int statusBarHidden : 1; 
        unsigned int statusBarHiddenDefault : 1; 
        unsigned int statusBarHiddenVerticallyCompact : 1; 
        unsigned int blockInteractionEvents : 4; 
        unsigned int receivesMemoryWarnings : 1; 
        unsigned int showingProgress : 1; 
        unsigned int receivesPowerMessages : 1; 
        unsigned int launchEventReceived : 1; 
        unsigned int activateEventReceived : 1; 
        unsigned int systemIsAnimatingApplicationLifecycleEvent : 1; 
        unsigned int isActivating : 1; 
        unsigned int isSuspendedUnderLock : 1; 
        unsigned int shouldExitAfterSendSuspend : 1; 
        unsigned int terminating : 1; 
        unsigned int isHandlingShortCutURL : 1; 
        unsigned int idleTimerDisabled : 1; 
        unsigned int deviceOrientation : 3; 
        unsigned int delegateShouldBeReleasedUponSet : 1; 
        unsigned int delegateHandleOpenURL : 1; 
        unsigned int delegateOpenURL : 1; 
        unsigned int delegateOpenURLOptions : 1; 
        unsigned int delegateDidReceiveMemoryWarning : 1; 
        unsigned int delegateWillTerminate : 1; 
        unsigned int delegateSignificantTimeChange : 1; 
        unsigned int delegateWillChangeInterfaceOrientation : 1; 
        unsigned int delegateDidChangeInterfaceOrientation : 1; 
        unsigned int delegateWillChangeStatusBarFrame : 1; 
        unsigned int delegateDidChangeStatusBarFrame : 1; 
        unsigned int delegateDeviceAccelerated : 1; 
        unsigned int delegateDeviceChangedOrientation : 1; 
        unsigned int delegateDidBecomeActive : 1; 
        unsigned int delegateWillResignActive : 1; 
        unsigned int delegateDidEnterBackground : 1; 
        unsigned int delegateDidEnterBackgroundWasSent : 1; 
        unsigned int delegateWillEnterForeground : 1; 
        unsigned int delegateWillSuspend : 1; 
        unsigned int delegateDidResume : 1; 
        unsigned int delegateSupportsStateRestoration : 1; 
        unsigned int delegateSupportedInterfaceOrientations : 1; 
        unsigned int delegateHandleSiriTask : 1; 
        unsigned int delegateSupportsWatchKitRequests : 1; 
        unsigned int idleModeVisualEffectsEnabled : 1; 
        unsigned int userDefaultsSyncDisabled : 1; 
        unsigned int headsetButtonClickCount : 4; 
        unsigned int isHeadsetButtonDown : 1; 
        unsigned int isFastForwardActive : 1; 
        unsigned int isRewindActive : 1; 
        unsigned int shakeToEdit : 1; 
        unsigned int zoomInClassicMode : 1; 
        unsigned int ignoreHeadsetClicks : 1; 
        unsigned int touchRotationDisabled : 1; 
        unsigned int taskSuspendingUnsupported : 1; 
        unsigned int taskSuspendingOnLockUnsupported : 1; 
        unsigned int isUnitTests : 1; 
        unsigned int requiresHighResolution : 1; 
        unsigned int singleUseLaunchOrientation : 3; 
        unsigned int defaultInterfaceOrientation : 3; 
        unsigned int supportedInterfaceOrientationsMask : 5; 
        unsigned int delegateWantsNextResponder : 1; 
        unsigned int isRunningInApplicationSwitcher : 1; 
        unsigned int isSendingEventForProgrammaticTouchCancellation : 1; 
        unsigned int delegateWantsStatusBarTouchesEnded : 1; 
        unsigned int interfaceLayoutDirectionIsValid : 1; 
        unsigned int interfaceLayoutDirection : 3; 
        unsigned int restorationExtended : 1; 
        unsigned int normalRestorationInProgress : 1; 
        unsigned int normalRestorationCompleted : 1; 
        unsigned int isDelayingTintViewChange : 1; 
        unsigned int isUpdatingTintViewColor : 1; 
        unsigned int isHandlingMemoryWarning : 1; 
        unsigned int forceStatusBarTintColorChanges : 1; 
        unsigned int disableLegacyAutorotation : 1; 
        unsigned int couldNotRestoreStateWhenLocked : 1; 
        unsigned int disableStyleOverrides : 1; 
        unsigned int legibilityAccessibilitySettingEnabled : 1; 
        unsigned int viewControllerBasedStatusBarAppearance : 1; 
        unsigned int fakingRequiresHighResolution : 1; 
        unsigned int isStatusBarFading : 1; 
        unsigned int systemWindowsSecure : 1; 
        unsigned int isFrontBoardForeground : 1; 
        unsigned int isObservingPIP : 1; 
        unsigned int shouldRestoreKeyboardInputState : 1; 
        unsigned int subclassOverridesInterfaceOrientation : 1; 
    } _applicationFlags;
    UIWindow *_backgroundHitTestWindow;
    BKSAnimationFenceHandle *_cachedSystemAnimationFence;
    struct __CFDictionary { } *_childEventMap;
    int _classicMode;
    NSProgress *_currentActivityContinuationProgress;
    BOOL _currentActivityContinuationProgressDisplayingUI;
    NSString *_currentActivityContinuationType;
    NSString *_currentActivityContinuationUUIDString;
    struct CGPoint { 
        float x; 
        float y; 
    } _currentLocationWhereFirstTouchCameDown;
    double _currentTimestampWhenFirstTouchCameDown;
    UIColor *_defaultTopNavBarTintColor;
    void *_delegate;
    int _disableTouchCoalescingCount;
    FBSDisplayLayoutMonitor *_displayLayoutMonitor;
    UIAlertView *_editAlertView;
    NSMutableDictionary *_estimatedTouchRecordsByContextID;
    UIEvent *_event;
    NSMutableArray *_eventQueue;
    NSMutableSet *_exclusiveTouchWindows;
    unsigned int _externalDeactivationReasons;
    BKSProcessAssertion *_fenceTaskAssertion;
    _UIGameControllerEvent *_gameControllerEvent;
    NSTimer *_hideNetworkActivityIndicatorTimer;
    _UIIdleModeController *_idleModeController;
    NSMutableSet *_idleTimerDisabledReasons;
    int _ignoredStyleOverrides;
    UIRepeatedAction *_keyRepeatAction;
    struct CGPoint { 
        float x; 
        float y; 
    } _lastLocationWhereAllTouchesLifted;
    struct CGPoint { 
        float x; 
        float y; 
    } _lastLocationWhereFirstTouchCameDown;
    double _lastTimestampWhenAllTouchesLifted;
    double _lastTimestampWhenFirstTouchCameDown;
    NSString *_mainStoryboardName;
    UIEvent *_motionEvent;
    UIMoveEvent *_moveEvent;
    int _networkResourcesCurrentlyLoadingCount;
    UNSNotificationScheduler *_notificationScheduler;
    NSMutableArray *_observerBlocks;
    NSMutableDictionary *_physicalKeyCommandMap;
    UIPhysicalKeyboardEvent *_physicalKeyboardEvent;
    NSMutableOrderedSet *_physicalKeycodeMap;
    NSMutableArray *_postCommitActions;
    BOOL _postCommitActionsNeedToSynchronize;
    NSString *_preferredContentSizeCategory;
    NSString *_preferredContentSizeCategoryName;
    UIPressesEvent *_pressesEvent;
    NSMutableDictionary *_pressesMap;
    int _redoButtonIndex;
    UIEvent *_remoteControlEvent;
    int _remoteControlEventObservers;
    UNSRemoteNotificationRegistrar *_remoteNotificationRegistrar;
    BOOL _saveStateRestorationArchiveWithFileProtectionCompleteUntilFirstUserAuthentication;
    BOOL _sceneSettingsGeometryHostingBoundsMutated;
    BOOL _sceneSettingsGeometryInterfaceOrientationMutated;
    UIApplicationSceneSettingsDiffInspector *_sceneSettingsGeometryMutationDiffInspector;
    UIApplicationSceneSettingsDiffInspector *_sceneSettingsPostLifecycleEventDiffInspector;
    UIApplicationSceneSettingsDiffInspector *_sceneSettingsPreLifecycleEventDiffInspector;
    SBSApplicationShortcutService *_shortcutService;
    UIStatusBar *_statusBar;
    int _statusBarRequestedStyle;
    NSMutableArray *_statusBarTintColorLockingControllers;
    int _statusBarTintColorLockingCount;
    UIStatusBarWindow *_statusBarWindow;
    UISystemNavigationAction *_systemNavigationAction;
    NSMutableArray *_tintViewDurationStack;
    NSArray *_topLevelNibObjects;
    UIEvent *_touchesEvent;
    int _undoButtonIndex;
    UNSUserNotificationRegistrar *_userNotificationRegistrar;
    int _virtualHorizontalSizeClass;
    int _virtualVerticalSizeClass;
    struct CGSize { 
        float width; 
        float height; 
    } _virtualWindowSizeInSceneReferenceSpace;
    UIWheelEvent *_wheelEvent;
    BOOL optOutOfRTL;
}

@property (setter=__setQueuedOrientationChange:, nonatomic, copy) id /* block */ __queuedOrientationChange;
@property (setter=_setExpectedViewOrientation:, nonatomic) int _expectedViewOrientation;
@property (readonly) int _virtualHorizontalSizeClass;
@property (readonly) int _virtualVerticalSizeClass;
@property (readonly) struct CGSize { float x1; float x2; } _virtualWindowSizeInSceneReferenceSpace;
@property (nonatomic, retain) NSDate *accessibilityLastGesturedTextInputStatusChange;
@property (nonatomic) int applicationIconBadgeNumber;
@property (nonatomic, readonly) int applicationState;
@property (nonatomic) BOOL applicationSupportsShakeToEdit;
@property (nonatomic, readonly) int backgroundRefreshStatus;
@property (nonatomic, readonly) double backgroundTimeRemaining;
@property (getter=_currentActivityContinuationProgress, setter=_setCurrentActivityContinuationProgress:, nonatomic, retain) NSProgress *currentActivityContinuationProgress;
@property (getter=_isCurrentActivityContinuationDisplayingUI, setter=_setCurrentActivityContinuationProgressDisplayingUI:, nonatomic) BOOL currentActivityContinuationProgressDisplayingUI;
@property (getter=_currentActivityContinuationType, setter=_setCurrentActivityContinuationType:, nonatomic, copy) NSString *currentActivityContinuationType;
@property (getter=_currentActivityContinuationUUIDString, setter=_setCurrentActivityContinuationUUIDString:, nonatomic, copy) NSString *currentActivityContinuationUUIDString;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIApplicationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (getter=isIdleTimerDisabled, nonatomic) BOOL idleTimerDisabled;
@property (nonatomic, readonly) UIWindow *keyWindow;
@property (getter=_lastLocationWhereAllTouchesLifted, setter=_setLastLocationWhereAllTouchesLifted:, nonatomic) struct CGPoint { float x1; float x2; } lastLocationWhereAllTouchesLifted;
@property (getter=_lastLocationWhereFirstTouchCameDown, setter=_setLastLocationWhereFirstTouchCameDown:, nonatomic) struct CGPoint { float x1; float x2; } lastLocationWhereFirstTouchCameDown;
@property (getter=_lastTimestampWhenAllTouchesLifted, setter=_setLastTimestampWhenAllTouchesLifted:, nonatomic) double lastTimestampWhenAllTouchesLifted;
@property (getter=_lastTimestampWhenFirstTouchCameDown, setter=_setLastTimestampWhenFirstTouchCameDown:, nonatomic) double lastTimestampWhenFirstTouchCameDown;
@property (getter=isNetworkActivityIndicatorVisible, nonatomic) BOOL networkActivityIndicatorVisible;
@property (getter=_shouldOptOutOfRTL, setter=_setOptOutOfRTL:, nonatomic) BOOL optOutOfRTL;
@property (nonatomic, readonly) NSString *preferredContentSizeCategory;
@property (setter=_setPreferredContentSizeCategoryName:, nonatomic, copy) NSString *preferredContentSizeCategoryName;
@property (getter=isProtectedDataAvailable, nonatomic, readonly) BOOL protectedDataAvailable;
@property (nonatomic, retain) SBSApplicationShortcutService *shortcutService;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } statusBarFrame;
@property (getter=isStatusBarHidden, nonatomic, readonly) BOOL statusBarHidden;
@property (nonatomic, readonly) int statusBarOrientation;
@property (nonatomic, readonly) double statusBarOrientationAnimationDuration;
@property (nonatomic, readonly) int statusBarStyle;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int userInterfaceLayoutDirection;
@property (nonatomic, readonly) NSArray *windows;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (int)_backgroundStyleForString:(id)arg1;
+ (id)_cachedScenePropertiesForScene:(id)arg1;
+ (id)_defaultContentSizeCategory;
+ (void)_installAfterCACommitHandler;
+ (BOOL)_isAfterCACommitHandlerInstalled;
+ (BOOL)_isBackgroundStyleTransparent:(int)arg1;
+ (void)_noteInterfaceOrientationChangingTo:(int)arg1;
+ (void)_removeCachedScenePropertiesForScene:(id)arg1;
+ (id)_scenePropertiesCache;
+ (void)_setCachedSceneProperties:(id)arg1 forScene:(id)arg2;
+ (void)_startStatusBarServerIfNecessary;
+ (void)_startWindowServerIfNecessary;
+ (Class)_statusBarClass;
+ (int)_statusBarStyleOverridesForArray:(id)arg1;
+ (Class)_statusBarWindowClass;
+ (id)_stringForBackgroundStyle:(int)arg1;
+ (id)_systemAnimationFenceExemptQueue;
+ (int)interfaceOrientationForString:(id)arg1;
+ (BOOL)isRunningEventPump;
+ (BOOL)isRunningInStoreDemoMode;
+ (BOOL)registerAsSystemApp;
+ (void)registerObjectForStateRestoration:(id)arg1 restorationIdentifier:(id)arg2;
+ (BOOL)rendersLocally;
+ (int)runningInStoreDemoModeFProgramNumber;
+ (id)sharedApplication;
+ (BOOL)shouldBackgroundMainThreadOnSuspendedLaunch;
+ (BOOL)shouldMakeUIForDefaultPNG;
+ (int)statusBarStyleForString:(id)arg1;
+ (id)stringForInterfaceOrientation:(int)arg1;
+ (id)stringForStatusBarStyle:(int)arg1;

- (void).cxx_destruct;
- (struct __GSKeyboard { }*)GSKeyboardForHWLayout:(id)arg1 forceRebuild:(BOOL)arg2;
- (void)__completeAndRunAsPlugin;
- (void)__forceEndIgnoringInteractionEvents;
- (id /* block */)__queuedOrientationChange;
- (void)__setQueuedOrientationChange:(id /* block */)arg1;
- (BOOL)_accessibilityApplicationIsSystemWideServer;
- (Class)_accessibilityBundlePrincipalClass;
- (BOOL)_accessibilityCaptureSimulatorEvent:(struct __GSEvent { }*)arg1;
- (void)_accessibilityInit;
- (void)_accessibilitySetUpQuickSpeak;
- (id)_accessibilitySettingsBundle;
- (void)_accessibilityStatusChanged:(id)arg1;
- (BOOL)_activityContinuationsAreBeingTracked;
- (void)_addAfterCACommitBlockForViewController:(id)arg1;
- (void)_addDocument:(id)arg1 forUserActivity:(id)arg2;
- (void)_addRecorder:(id)arg1;
- (void)_addResponder:(id)arg1 document:(id)arg2 forUserActivity:(id)arg3;
- (void)_addResponder:(id)arg1 forUserActivity:(id)arg2;
- (void)_addViewControllerForLockingStatusBarTintColor:(id)arg1;
- (void)_alertSheetStackChanged;
- (BOOL)_alertWindowShouldRotate;
- (BOOL)_alwaysHitTestsForMainScreen;
- (void)_applicationDidEnterBackground;
- (void)_applicationHandleSiriTask:(id)arg1;
- (void)_applicationHandleWatchKitRequest:(id)arg1;
- (BOOL)_applicationLaunchesIntoPortrait;
- (void)_applicationOpenURL:(id)arg1 payload:(id)arg2;
- (id)_applicationProxyForURL:(id)arg1 publicURLsOnly:(BOOL)arg2;
- (id)_applicationProxyForURLScheme:(id)arg1 publicURLsOnly:(BOOL)arg2;
- (void)_applicationShouldRequestHealthAuthorization;
- (BOOL)_areFrontBoardKeyboardHUDsEnabled;
- (BOOL)_areSystemWindowsSecure;
- (id)_backgroundModes;
- (unsigned int)_beginBackgroundTaskWithExpirationHandler:(id /* block */)arg1;
- (unsigned int)_beginBackgroundTaskWithName:(id)arg1 expirationHandler:(id /* block */)arg2;
- (void)_beginFenceTaskIfNecessary;
- (void)_beginShowingNetworkActivityIndicator;
- (void)_beginSnapshotSessionForScene:(id)arg1 withSnapshotBlock:(id /* block */)arg2;
- (id)_cachedSystemAnimationFenceCreatingIfNecessary:(BOOL)arg1;
- (BOOL)_callContinueUserActivity:(id)arg1;
- (void)_callDidFailToContinueUserActivityWithType:(id)arg1 error:(id)arg2;
- (void)_callInitializationDelegatesForMainScene:(id)arg1 transitionContext:(id)arg2;
- (BOOL)_canOpenURL:(id)arg1 publicURLsOnly:(BOOL)arg2;
- (BOOL)_canReceiveDeviceOrientationEvents;
- (BOOL)_canShowTextServices;
- (void)_cancelAllInputs;
- (void)_cancelAllTouches;
- (void)_cancelCurrentTouchEvent;
- (void)_cancelGestureRecognizers:(id)arg1;
- (void)_cancelGestureRecognizersForView:(id)arg1;
- (void)_cancelPhysicalButtonsWithType:(int)arg1;
- (void)_cancelTouches:(id)arg1 withEvent:(id)arg2;
- (void)_cancelTouches:(id)arg1 withEvent:(id)arg2 includingGestures:(BOOL)arg3 notificationBlock:(id /* block */)arg4;
- (void)_cancelUnfinishedTouchesForEvent:(id)arg1;
- (void)_cancelViewProcessingOfTouches:(id)arg1 withEvent:(id)arg2 sendingTouchesCancelledToViewsOfTouches:(id)arg3;
- (int)_carefulChoiceOrientation;
- (int)_carefulChoiceOrientationForWindow:(id)arg1;
- (void)_checkActivityContinuationAndBecomeCurrentIfNeeded;
- (void)_checkBackgroundRefreshAPIAdoption;
- (int)_classicMode;
- (void)_cleanupUserActivity:(id)arg1 activityIdentifier:(id)arg2;
- (void)_clearCurrentActivityContinuationCancelingProgress:(BOOL)arg1;
- (void)_clearSystemNavigationAction;
- (void)_clearTouchesForView:(id)arg1;
- (void)_configureSnapshotContext:(id)arg1 forScreen:(id)arg2 sceneSettings:(id)arg3;
- (id)_createSnapshotContextForScene:(id)arg1 withName:(id)arg2 performLayoutWithSettings:(id)arg3;
- (void)_createStatusBarWithRequestedStyle:(int)arg1 orientation:(int)arg2 hidden:(BOOL)arg3;
- (id)_currentActivityContinuationProgress;
- (id)_currentActivityContinuationType;
- (id)_currentActivityContinuationUUIDString;
- (int)_currentExpectedInterfaceOrientation;
- (id)_currentFrameCountForTestDisplay;
- (id)_currentTests;
- (double)_currentTintViewDuration;
- (id)_currentTintViewWindow;
- (unsigned int)_currentlySupportedInterfaceOrientations;
- (void)_deactivateForReason:(int)arg1;
- (void)_deactivateForReason:(int)arg1 notify:(BOOL)arg2;
- (void)_deactivateReachability;
- (id)_defaultTopNavBarTintColor;
- (BOOL)_delegateHandledContinueActivityWithType:(id)arg1;
- (void)_deliverRemainingKeyUpEvents;
- (void)_destroyContextsAndNotifySpringBoard;
- (BOOL)_didEatCurrentTouch;
- (void)_disableTouchCoalescingWithCount:(int)arg1;
- (void)_displayCurrentActivityContinuationProgressUI;
- (BOOL)_doRestorationIfNecessary;
- (void)_dumpScreenContents:(struct __GSEvent { }*)arg1;
- (void)_dumpUIHierarchy:(struct __GSEvent { }*)arg1;
- (void)_eatCurrentTouch;
- (void)_enableTouchCoalescingWithCount:(int)arg1;
- (void)_endBackgroundTask:(unsigned int)arg1;
- (void)_endCurrentActivityContinuationAndDisplayError:(id)arg1;
- (void)_endCurrentActivityContinuationAndPerformBlock:(id /* block */)arg1;
- (void)_endFenceTask:(id)arg1;
- (void)_endShowingNetworkActivityIndicator;
- (void)_enqueueHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (id)_event;
- (id)_exclusiveTouchWindows;
- (double)_execOrResumeTime;
- (BOOL)_executableWasLinkedWithUIKit;
- (void)_executeNextResizeSubTest;
- (void)_executeResizeTest;
- (int)_expectedViewOrientation;
- (id)_extendLaunchTest;
- (BOOL)_fakingRequiresHighResolution;
- (id)_fallbackPresentationViewController;
- (void)_fetchInfoPlistFlags;
- (id)_fetchUserActivityWithUUID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_findBestActivityToMakeCurrent:(id)arg1;
- (void)_finishButtonEvent:(id)arg1;
- (id)_firstEligibleResponderForPress:(id)arg1;
- (void)_fixupBackgroundHitTestWindow;
- (int)_frontMostAppOrientation;
- (unsigned int)_frontmostApplicationPort;
- (id)_gameControllerEvent;
- (id)_getActivityContinuationDictionaryIfPresent:(id)arg1;
- (unsigned char)_getIOHIDKeyboardTypeForGSKeyboardType:(unsigned char)arg1;
- (int)_getSpringBoardOrientation;
- (void*)_getSymbol:(id)arg1 forFramework:(id)arg2;
- (void)_handleActivityContinuation:(id)arg1;
- (void)_handleApplicationActivationWithScene:(id)arg1 transitionContext:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleApplicationDeactivationWithScene:(id)arg1 shouldForceExit:(BOOL)arg2 transitionContext:(id)arg3 completion:(id /* block */)arg4;
- (void)_handleApplicationLaunchEventWithCompletion:(id /* block */)arg1;
- (void)_handleApplicationLifecycleEventWithScene:(id)arg1 transitionContext:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleApplicationShortcutAction:(id)arg1;
- (BOOL)_handleDelegateCallbacksWithOptions:(id)arg1 isSuspended:(BOOL)arg2 restoreState:(BOOL)arg3;
- (void)_handleGameControllerEvent:(id)arg1;
- (void)_handleHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_handleHeadsetButtonClick;
- (void)_handleHeadsetButtonDoubleClick;
- (void)_handleHeadsetButtonTripleClick;
- (void)_handleKeyEvent:(struct __GSEvent { }*)arg1;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)_handleNonLaunchSpecificActions:(id)arg1 forScene:(id)arg2 withTransitionContext:(id)arg3 completion:(id /* block */)arg4;
- (BOOL)_handlePhysicalButtonEvent:(id)arg1;
- (void)_handleScreenshot;
- (void)_handleSnapshotAction:(id)arg1 forScene:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleUnicodeEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_handleUserDefaultsDidChange:(id)arg1;
- (struct __GSKeyboard { }*)_hardwareKeyboard;
- (BOOL)_hasApplicationCalledLaunchDelegate;
- (BOOL)_hasCalledRunWithMainScene;
- (BOOL)_hasNormalRestorationCompleted;
- (BOOL)_hasStatusBarTintColorLockingController;
- (BOOL)_hasStoryboard;
- (void)_headsetButtonDown:(struct __IOHIDEvent { }*)arg1;
- (void)_headsetButtonUp:(struct __IOHIDEvent { }*)arg1;
- (void)_hideCurrentActivityContinuationProgressUI;
- (void)_hideNetworkActivityIndicator;
- (id)_implicitStatusBarAnimationParametersWithClass:(Class)arg1;
- (id)_implicitStatusBarHiddenAnimationParametersWithViewController:(id)arg1 animation:(int)arg2;
- (id)_implicitStatusBarStyleAnimationParametersWithViewController:(id)arg1;
- (void)_installAutoreleasePoolsIfNecessaryForMode:(struct __CFString { }*)arg1;
- (void)_installEventRunLoopSource;
- (BOOL)_isActivated;
- (BOOL)_isActivating;
- (BOOL)_isAppleApp;
- (BOOL)_isAutorotationDisabledForAppWindows;
- (BOOL)_isClassic;
- (BOOL)_isCurrentActivityContinuationDisplayingUI;
- (BOOL)_isHandlingMemoryWarning;
- (BOOL)_isIdleModeVisualEffectsEnabled;
- (BOOL)_isInStatusBarFadeAnimation;
- (BOOL)_isInteractionEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_isLaunchedSuspended;
- (BOOL)_isNormalRestorationInProgress;
- (BOOL)_isOrientationVerticallyCompact:(int)arg1;
- (BOOL)_isRestorationExtended;
- (BOOL)_isSendingEventForProgrammaticTouchCancellation;
- (BOOL)_isSensitiveUIEnabled;
- (BOOL)_isShowingRemoteSheet;
- (BOOL)_isSpringBoard;
- (BOOL)_isSpringBoardShowingAnAlert;
- (BOOL)_isStatusBarHiddenForOrientation:(int)arg1;
- (BOOL)_isStatusBarTintColorLocked;
- (BOOL)_isSupportedOrientation:(int)arg1;
- (BOOL)_isTrackingAnyTouch;
- (BOOL)_isViewContentScalingDisabled;
- (BOOL)_isWindowServerHostingManaged;
- (BOOL)_keyCommandIsCurrentlyPerformable:(id)arg1;
- (id)_keyWindowForScreen:(id)arg1;
- (struct CGPoint { float x1; float x2; })_lastLocationWhereAllTouchesLifted;
- (struct CGPoint { float x1; float x2; })_lastLocationWhereFirstTouchCameDown;
- (double)_lastTimestampWhenAllTouchesLifted;
- (double)_lastTimestampWhenFirstTouchCameDown;
- (id)_launchTestName;
- (double)_launchTime;
- (void)_leak;
- (BOOL)_legacyAutorotationIsDisabled;
- (int)_loadMainInterfaceFile;
- (int)_loadMainNibFileNamed:(id)arg1 bundle:(id)arg2;
- (int)_loadMainStoryboardFileNamed:(id)arg1 bundle:(id)arg2;
- (id)_localCachesDirectory;
- (id)_localizedApplicationName;
- (id)_mainScene;
- (void)_mainSceneCompatibilityModeZoomDidChange;
- (id)_mainSceneForDisplay:(id)arg1;
- (id)_mainStoryboardName;
- (id)_motionEvent;
- (id)_motionKeyWindow;
- (id)_moveEvent;
- (BOOL)_needsShakesWhenInactive;
- (id)_newDefaultStoryboardWindow;
- (id)_newSceneForWindow:(id)arg1 oldDisplay:(id)arg2 newDisplay:(id)arg3;
- (void)_noteAnimationFinished:(id)arg1;
- (void)_noteAnimationStarted:(id)arg1;
- (id)_notificationScheduler;
- (void)_notifyDidChangeStatusBarFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_notifySpringBoardOfStatusBarOrientationChangeAndFenceWithAnimationDuration:(double)arg1;
- (void)_notifyWillChangeStatusBarFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_openURL:(id)arg1;
- (void)_openURL:(id)arg1 originatingView:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_overrideDefaultInterfaceOrientationWithOrientation:(int)arg1;
- (BOOL)_overridesDynamicCaret;
- (id)_pathForFrameworkName:(id)arg1 inPrivate:(BOOL)arg2;
- (void)_performBlockAfterCATransactionCommitSynchronizes:(id /* block */)arg1;
- (void)_performBlockAfterCATransactionCommits:(id /* block */)arg1;
- (void)_performChanges:(id /* block */)arg1 withTransitionContext:(id)arg2;
- (void)_performMemoryWarning;
- (void)_performSnapshotsWithAction:(id)arg1 forScene:(id)arg2 completion:(id /* block */)arg3;
- (int)_physicalButtonTypeForKeyCode:(int)arg1 isTextual:(BOOL*)arg2;
- (id)_physicalKeyboardEvent;
- (void)_pipStateDidChange;
- (void)_playbackEvents:(id)arg1 atPlaybackRate:(float)arg2 messageWhenDone:(id)arg3 withSelector:(SEL)arg4;
- (void)_playbackTimerCallback:(id)arg1;
- (void)_popStatusBarTintColorLock;
- (void)_popTintViewDuration;
- (void)_postSimpleRemoteNotificationForAction:(int)arg1 andContext:(int)arg2 trackID:(id)arg3;
- (id)_preferredContentSizeCategory:(unsigned int)arg1;
- (BOOL)_prepareButtonEvent:(id)arg1 type:(int)arg2 phase:(int)arg3 timestamp:(double)arg4;
- (BOOL)_prepareButtonEvent:(id)arg1 type:(int)arg2 phase:(int)arg3 timestamp:(double)arg4 force:(float)arg5;
- (BOOL)_prepareButtonEvent:(id)arg1 type:(int)arg2 phase:(int)arg3 timestamp:(double)arg4 force:(float)arg5 isSynthetic:(BOOL)arg6;
- (id)_pressForType:(int)arg1;
- (id)_pressesEvent;
- (void)_purgeSharedInstances;
- (struct __CFMessagePort { }*)_purplePPTServerPort;
- (void)_pushStatusBarTintColorLock;
- (void)_pushTintViewDuration:(double)arg1;
- (void)_receivedMemoryNotification;
- (void)_registerEstimatedTouches:(id)arg1 event:(id)arg2 forTouchable:(id)arg3;
- (void)_registerForAlertItemStateChangeNotification;
- (void)_registerForBackgroundRefreshStatusChangedNotification;
- (void)_registerForKeyBagLockStatusNotification;
- (void)_registerForLanguageChangedNotification;
- (void)_registerForLegibilitySettingChangedNotification;
- (void)_registerForLocaleChangedNotification;
- (void)_registerForLocaleWillChangeNotification;
- (void)_registerForNameLayerTreeNotification;
- (void)_registerForPreferredContentSizeChangedNotification;
- (void)_registerForSignificantTimeChangeNotification;
- (void)_registerForUserDefaultsChanges;
- (void)_reloadKeyboardArbiterState;
- (id)_remoteControlEvent;
- (id)_remoteNotificationRegistrar;
- (void)_removeDefaultInterfaceOrientatationOverride;
- (void)_removeDocument:(id)arg1 forUserActivity:(id)arg2;
- (void)_removeRecorder:(id)arg1;
- (void)_removeResponder:(id)arg1 document:(id)arg2 forUserActivity:(id)arg3;
- (void)_removeResponder:(id)arg1 forUserActivity:(id)arg2;
- (void)_removeViewControllerForLockingStatusBarTintColor:(id)arg1;
- (void)_reportMainSceneUpdateFinished:(id /* block */)arg1;
- (void)_reportResults:(id)arg1;
- (BOOL)_requiresHighResolution;
- (id)_responderForKeyEvents;
- (void)_restoreApplicationPreservationStateWithSessionIdentifier:(id)arg1 beginHandler:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
- (id)_rootViewControllers;
- (BOOL)_rotationDisabledDuringTouch;
- (void)_run;
- (void)_runSubTestForKeyboardBringupWithName:(id)arg1 withShowKeyboardBlock:(id /* block */)arg2 withHideKeyboardBlock:(id /* block */)arg3 withExtraResultsBlock:(id /* block */)arg4 withCleanupBlock:(id /* block */)arg5;
- (void)_runSubTestForKeyboardDismissalWithName:(id)arg1 withHideKeyboardBlock:(id /* block */)arg2 withExtraResultsBlock:(id /* block */)arg3 withCleanupBlock:(id /* block */)arg4;
- (void)_runSubTestForKeyboardMergeWithName:(id)arg1 withExtraResultsBlock:(id /* block */)arg2 withCleanupBlock:(id /* block */)arg3;
- (void)_runSubTestForKeyboardSplitWithName:(id)arg1 withShowKeyboardBlock:(id /* block */)arg2 withExtraResultsBlock:(id /* block */)arg3 withCleanupBlock:(id /* block */)arg4;
- (void)_runWithMainScene:(id)arg1 transitionContext:(id)arg2 completion:(id /* block */)arg3;
- (void)_saveApplicationPreservationState:(id)arg1 viewController:(id)arg2 sessionIdentifier:(id)arg3 beginHandler:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (void)_saveApplicationPreservationStateIfSupported;
- (BOOL)_saveSnapshotWithName:(id)arg1;
- (id)_sceneIDForScreen:(id)arg1;
- (id)_sceneSettingsGeometryMutationDiffInspector;
- (id)_sceneSettingsPostLifecycleEventDiffInspector;
- (id)_sceneSettingsPreLifecycleEventDiffInspector;
- (void)_scrollsToTopInitiatorView:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3;
- (void)_sendButtonEventWithType:(int)arg1 phase:(int)arg2 timestamp:(double)arg3;
- (void)_sendButtonEventWithType:(int)arg1 phase:(int)arg2 timestamp:(double)arg3 synthetic:(BOOL)arg4;
- (void)_sendDictionaryToPPT:(id)arg1;
- (void)_sendHeadsetOriginatedMediaRemoteCommand:(unsigned int)arg1;
- (void)_sendMotionBegan:(int)arg1;
- (void)_sendMotionCancelled:(int)arg1;
- (void)_sendMotionEnded:(int)arg1;
- (void)_sendMoveEventWithDirection:(int)arg1 heading:(unsigned int)arg2 fromEvent:(id)arg3;
- (void)_sendMoveEventWithPhysicalButtonsEvent:(id)arg1;
- (void)_sendRemoteControlEvent:(int)arg1;
- (void)_sendWillEnterForegroundCallbacks;
- (void)_setAlwaysHitTestsForMainScreen:(BOOL)arg1;
- (void)_setAmbiguousControlCenterActivationMargin:(float)arg1;
- (void)_setApplicationBackdropStyle:(int)arg1;
- (void)_setApplicationIsOpaque:(BOOL)arg1;
- (void)_setBackgroundStyle:(int)arg1;
- (void)_setClassicMode:(int)arg1;
- (void)_setCompatibilityModeOnSettings:(id)arg1;
- (void)_setCurrentActivityContinuationProgress:(id)arg1;
- (void)_setCurrentActivityContinuationProgressDisplayingUI:(BOOL)arg1;
- (void)_setCurrentActivityContinuationType:(id)arg1;
- (void)_setCurrentActivityContinuationUUIDString:(id)arg1;
- (void)_setDefaultTopNavBarTintColor:(id)arg1;
- (void)_setDelegate:(id)arg1 assumeOwnership:(BOOL)arg2;
- (void)_setExpectedViewOrientation:(int)arg1;
- (void)_setHandlingURL:(BOOL)arg1 url:(id)arg2;
- (void)_setIdleModeVisualEffectsEnabled:(BOOL)arg1;
- (void)_setIdleTimerDisabled:(BOOL)arg1 forReason:(id)arg2;
- (void)_setIgnoreHeadsetClicks:(BOOL)arg1;
- (void)_setLastLocationWhereAllTouchesLifted:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setLastLocationWhereFirstTouchCameDown:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setLastTimestampWhenAllTouchesLifted:(double)arg1;
- (void)_setLastTimestampWhenFirstTouchCameDown:(double)arg1;
- (void)_setOptOutOfRTL:(BOOL)arg1;
- (void)_setPreferredContentSizeCategory:(id)arg1;
- (void)_setPreferredContentSizeCategoryName:(id)arg1;
- (void)_setPress:(id)arg1 forType:(int)arg2;
- (void)_setReachabilitySupported:(BOOL)arg1;
- (void)_setRestorationExtended:(BOOL)arg1;
- (void)_setRotationDisabledDuringTouch:(BOOL)arg1;
- (void)_setSaveStateRestorationArchiveWithFileProtectionCompleteUntilFirstUserAuthentication;
- (void)_setShouldFixMainThreadPriority:(BOOL)arg1;
- (void)_setShouldZoom:(BOOL)arg1;
- (void)_setStatusBarHidden:(BOOL)arg1 animationParameters:(id)arg2 changeApplicationFlag:(BOOL)arg3;
- (void)_setStatusBarMode:(int)arg1;
- (void)_setStatusBarOrientation:(int)arg1;
- (void)_setStatusBarOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)_setStatusBarShowsProgress:(BOOL)arg1;
- (void)_setStatusBarStyle:(int)arg1 animationParameters:(id)arg2;
- (void)_setSupportedInterfaceOrientationsIsEnabled:(BOOL)arg1;
- (void)_setSuspended:(BOOL)arg1;
- (void)_setSuspendedEventsOnly:(BOOL)arg1;
- (void)_setSuspendedUnderLock:(BOOL)arg1;
- (void)_setSystemNavigationAction:(id)arg1;
- (void)_setSystemWindowsSecure:(BOOL)arg1;
- (void)_setTextLegibilityEnabled:(BOOL)arg1;
- (void)_setTopNavBarTintColor:(id)arg1 withDuration:(double)arg2;
- (void)_setUserDefaultsSyncEnabled:(BOOL)arg1;
- (void)_setVirtualWindowSizeInSceneReferenceSpace:(struct CGSize { float x1; float x2; })arg1 virtualHorizontalSizeClass:(int)arg2 virtualVerticalSizeClass:(int)arg3;
- (void)_sheetWithRemoteIdentifierDidDismiss:(id)arg1;
- (BOOL)_shouldAllowKeyboardArbiter;
- (BOOL)_shouldAttemptOpenURL:(id)arg1;
- (BOOL)_shouldBigify;
- (BOOL)_shouldDelayTouchesForControlCenter;
- (BOOL)_shouldDisableTouchCoalescing;
- (BOOL)_shouldForceClassicMode;
- (BOOL)_shouldHandleTestURL:(id)arg1;
- (BOOL)_shouldIgnoreHeadsetClicks;
- (BOOL)_shouldOptOutOfRTL;
- (BOOL)_shouldTintStatusBar;
- (BOOL)_shouldUseHiResForClassic;
- (BOOL)_shouldZoom;
- (void)_showEditAlertView;
- (void)_showEditAlertViewWithUndoManager:(id)arg1 window:(id)arg2;
- (id)_showServiceForText:(id)arg1 type:(int)arg2 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 inView:(id)arg4;
- (void)_startHangTracer;
- (void)_startPlaybackTimer;
- (id)_statusBarControllingWindow;
- (BOOL)_statusBarOrientationFollowsWindow:(id)arg1;
- (int)_statusBarOrientationForWindow:(id)arg1;
- (void)_stopDeactivatingForReason:(int)arg1;
- (void)_stopHangTracer;
- (void)_stopPlayback;
- (unsigned int)_supportedInterfaceOrientationsForWindow:(id)arg1;
- (BOOL)_supportedInterfaceOrientationsIsEnabled;
- (BOOL)_supportsCompactStatusBarHiding;
- (BOOL)_supportsShakesWhenNotActive;
- (void)_synchronizeSystemAnimationFencesWithSpinCleanUpBlock:(id /* block */)arg1;
- (id)_systemAnimationFenceCreatingIfNecessary:(BOOL)arg1;
- (id)_systemAnimationFenceExemptQueue;
- (id)_systemNavigationAction;
- (id)_targetInChainForAction:(SEL)arg1 sender:(id)arg2;
- (BOOL)_taskSuspendingUnsupported;
- (void)_terminateWithStatus:(int)arg1;
- (int)_testOrientation:(id)arg1 options:(id)arg2;
- (id)_touchesEvent;
- (void)_trackSystemAnimationFence:(id)arg1;
- (void)_unregisterForLanguageChangedNotification;
- (void)_unregisterForLocaleChangedNotification;
- (void)_unregisterForSignificantTimeChangeNotification;
- (void)_unregisterForTimeChangedNotification;
- (void)_unregisterForUserDefaultsChanges;
- (void)_updateAccessibilityItunesSettings;
- (void)_updateAccessibilitySettingsLoader;
- (void)_updateAppPriorityForSuspendedState;
- (void)_updateApplicationAccessibility;
- (void)_updateCurrentStatusBarViewControllerAppearance;
- (void)_updateCurrentTintViewColor;
- (void)_updateCurrentTintViewForWindow:(id)arg1;
- (BOOL)_updateDefaultImage;
- (void)_updateEstimatedTouchesWithEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_updateForcedStatusBarHidden;
- (void)_updateForcedStatusBarStyle;
- (void)_updateIdleModeStatus;
- (void)_updateLargeTextNotification;
- (void)_updateOrientation;
- (void)_updateSceneGeometryWithSettingObserverContext:(struct { id x1; id x2; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; long doublex28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; long doublex61; int x62; short x63; void*x64; long x65; void*x66; void*x67; unsigned long x68; int x69; in void*x70; void*x71; void*x72; in void*x73; void*x74; void*x75; const void*x76; void*x77; void*x78; long doublex79; void*x80; void*x81; union { void x_82_1_1; out int x_82_1_2; double x_82_1_3; } x82; void*x83; short x84; void*x85; in double x86; void*x87; void*x88; void*x89; double x90; short x91; void*x92; void*x93; bycopy const int x94; void*x95; int x96; in void*x97; void*x98; void*x99; double x100; void*x101; void*x102; double x103; int x104; void*x105; void*x106; void*x107; void*x108; out void*x109; void*x110; unsigned char x111; out void*x112; void*x113; void*x114; in double x115; SEL x116; union { void*x_117_1_1; in short x_117_1_2; int x_117_1_3; void*x_117_1_4; in void*x_117_1_5; double x_117_1_6; void*x_117_1_7; int x_117_1_8; in void*x_117_1_9; } x117; void*x118; const void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; unsigned char x141; void*x142; unsigned short x143; void*x144; short x145; void*x146; void*x147; void*x148; void*x149; unsigned long x150; int x151; unsigned int x152/* : ? */; const void*x153; const void*x154; void*x155; void*x156; const int x157; void x158; void*x159; void*x160; void*x161; void*x162; const void*x163; void*x164; void*x165; void*x166; out const void*x167; short x168; void*x169; void*x170; void*x171; void*x172; long x173; void*x174; void*x175; void*x176; int x177; void*x178; void*x179; unsigned int x180; void*x181; float x182; const void*x183; void*x184; void*x185; void*x186; out const void*x187; void*x188; void*x189; void*x190; void*x191; long x192; void*x193; void*x194; void*x195; int x196; void*x197; void*x198; unsigned int x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; unsigned long x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; in void*x262; void*x263; void*x264; void x265; void*x266; out void*x267; int x268; void*x269; double x270; void*x271; char *x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; unsigned long x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; unsigned long x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; unsigned long x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; unsigned int x499; void*x500; void*x501; void*x502; out void x503; void*x504; unsigned char x505; out in void*x506; const out long x507; void*x508; void*x509; void*x510; void*x511; void*x512; const void*x513; void*x514; void*x515; void*x516; int x517; void*x518; void*x519; void*x520; int x521; out in void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; short x532; void*x533; void*x534; void*x535; void*x536; out void*x537; int x538; void*x539; double x540; void*x541; char *x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; id x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; Class x597; inout inout void*x598; void*x599; void*x600; void*x601; short x602; short x603; void*x604; void*x605; void*x606; unsigned char x607; out in void*x608; void*x609; in void*x610; unsigned short x611; void*x612; in BOOL x613; unsigned short x614; void*x615; const void x616; int x617; BOOL x618; void*x619; unsigned short x620; void*x621; const void x622; void*x623; const void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; Class x636; inout inout void*x637; void*x638; void*x639; void*x640; short x641; short x642; void*x643; void*x644; void*x645; unsigned char x646; out in void*x647; void*x648; in void*x649; unsigned short x650; void*x651; in BOOL x652; unsigned short x653; void*x654; const void x655; int x656; BOOL x657; void*x658; unsigned short x659; void*x660; const void x661; void*x662; const void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; bycopy void*x675; unsigned short x676; void*x677; short x678; void*x679; void*x680; void*x681; void*x682; unsigned long x683; int x684; unsigned int x685/* : ? */; const void*x686; const void*x687; void*x688; void*x689; const int x690; void x691; void*x692; void*x693; void*x694; void*x695; const void*x696; void*x697; void*x698; void*x699; out const void*x700; short x701; void*x702; inout void*x703; in out void*x704; void*x705; int x706; long x707; void*x708; int x709; void*x710; unsigned short x711; void*x712; const void x713; void*x714; const void*x715; float x716; const void*x717; void*x718; void*x719; void*x720; out const void*x721; void*x722; inout void*x723; in out void*x724; void*x725; int x726; long x727; void*x728; int x729; void*x730; unsigned short x731; void*x732; const void x733; void*x734; const void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; unsigned char x787; out void*x788; void*x789; void*x790; in double x791; unsigned int x792; short x793; unsigned char x794; void*x795; const const void*x796; in void*x797; long x798; void*x799; void*x800; void*x801; const float x802; out const void*x803; void*x804; unsigned int x805/* : ? */; long x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; unsigned long x824; void*x825; void*x826; void*x827; double x828; short x829; short x830; void*x831; void*x832; void*x833; void*x834; in void*x835; void*x836; void*x837; const void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; const float x855; out const void*x856; bool x857; long x858; out BOOL x859; void*x860; float x861; void*x862; void*x863; const unsigned char x864; void*x865; const void*x866; in short x867; void*x868; BOOL x869; void*x870; int x871; out in unsigned char x872; out void*x873; void*x874; int x875; void*x876; short x877; SEL x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; unsigned int x928/* : ? */; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; unsigned long x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; union x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; unsigned int x958/* : ? */; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; unsigned long x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; unsigned int x998; unsigned short x999; oneway int x1000; void*x1001; void*x1002; long x1003; int x1004; void*x1005; void*x1006; double x1007; void*x1008; void*x1009; void*x1010; int x1011; void x1012; void*x1013; void*x1014; int x1015; long x1016; void*x1017; void*x1018; const void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; unsigned long x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; unsigned long x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; unsigned short x1140; void*x1141; short x1142; void*x1143; void*x1144; void*x1145; void*x1146; unsigned long x1147; int x1148; unsigned int x1149/* : ? */; const void*x1150; const void*x1151; void*x1152; void*x1153; const int x1154; void x1155; void*x1156; void*x1157; void*x1158; void*x1159; const void*x1160; void*x1161; void*x1162; void*x1163; out const void*x1164; short x1165; void*x1166; void*x1167; void*x1168; void*x1169; out void*x1170; void*x1171; void*x1172; unsigned int x1173; void*x1174; float x1175; const void*x1176; void*x1177; void*x1178; void*x1179; out const void*x1180; void*x1181; void*x1182; void*x1183; void*x1184; out void*x1185; void*x1186; void*x1187; unsigned int x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; id x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; long doublex1240; bool x1241; void*x1242; short x1243; void*x1244; unsigned int x1245/* : ? */; void*x1246; in double x1247; void*x1248; out void*x1249; void*x1250; const void*x1251; out out long x1252; void*x1253; void*x1254; unsigned int x1255; short x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; long doublex1282; bool x1283; void*x1284; short x1285; void*x1286; unsigned int x1287/* : ? */; void*x1288; in double x1289; void*x1290; out void*x1291; void*x1292; const void*x1293; out out long x1294; void*x1295; void*x1296; unsigned int x1297; short x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; char *x1322; void*x1323; void*x1324; short x1325; const void*x1326; long x1327; int x1328; unsigned int x1329/* : ? */; void*x1330; long x1331; int x1332; unsigned int x1333/* : ? */; void*x1334; long doublex1335; unsigned short x1336; void*x1337; void*x1338; void*x1339; out const void*x1340; void*x1341; const void*x1342; void*x1343; void*x1344; void*x1345; out const void*x1346; void*x1347; double x1348; void*x1349; long x1350; int x1351; unsigned int x1352/* : ? */; void*x1353; void*x1354; void*x1355; unsigned int x1356; void*x1357; void*x1358; struct x1359; void*x1360; void*x1361; void*x1362; void*x1363; unsigned long x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; unsigned long x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; unsigned long x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; unsigned long x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; unsigned long x1620; void*x1621; void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; unsigned int x1676; void*x1677; void*x1678; void*x1679; void*x1680; in void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void* x1687[ /* ? */ ]; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; const void*x1700; })arg1;
- (void)_updateSerializableKeyCommandsForResponder:(id)arg1;
- (void)_updateSnapshotAndStateRestorationArchiveForBackgroundEvent:(id /* block */)arg1 saveState:(BOOL)arg2 exitIfCouldNotRestoreState:(BOOL)arg3;
- (void)_updateSnapshotAndStateRestorationWithAction:(id)arg1;
- (void)_updateSnapshotForBackgroundApplication:(BOOL)arg1;
- (void)_userActivityWillSave:(id)arg1;
- (id)_userNotificationRegistrar;
- (BOOL)_usesEmoji;
- (BOOL)_usesPreMTAlertBehavior;
- (int)_virtualHorizontalSizeClass;
- (int)_virtualVerticalSizeClass;
- (struct CGSize { float x1; float x2; })_virtualWindowSizeInSceneReferenceSpace;
- (void)_wakeTimerFired;
- (void)_wheelChangedWithEvent:(id)arg1;
- (id)_wheelEvent;
- (id)_workspace;
- (void)acceleratedInX:(float)arg1 Y:(float)arg2 Z:(float)arg3;
- (void)accessoryKeyStateChanged:(struct __GSEvent { }*)arg1;
- (int)activeInterfaceOrientation;
- (void)addStatusBarImageNamed:(id)arg1;
- (void)addStatusBarImageNamed:(id)arg1 removeOnExit:(BOOL)arg2;
- (void)addStatusBarItem:(int)arg1;
- (void)addStatusBarItem:(int)arg1 removeOnExit:(BOOL)arg2;
- (void)addStatusBarStyleOverrides:(int)arg1;
- (void)addWebClipToHomeScreen:(id)arg1;
- (int)alertInterfaceOrientation;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)applicationDidBeginSuspendAnimation;
- (void)applicationDidEndResumeAnimation;
- (void)applicationDidResume;
- (void)applicationDidResumeForEventsOnly;
- (void)applicationDidResumeFromUnderLock;
- (int)applicationIconBadgeNumber;
- (void)applicationOpenToShortCut:(id)arg1;
- (void)applicationOpenURL:(id)arg1;
- (int)applicationState;
- (BOOL)applicationSupportsShakeToEdit;
- (void)applicationSuspend;
- (void)applicationWillSuspend;
- (void)applicationWillSuspendForEventsOnly;
- (void)applicationWillSuspendUnderLock;
- (void)applicationWillTerminate;
- (int)backgroundRefreshStatus;
- (double)backgroundTimeRemaining;
- (float)backlightLevel;
- (void)batteryStatusDidChange:(id)arg1;
- (BOOL)becomeFirstResponder;
- (unsigned int)beginBackgroundTaskWithExpirationHandler:(id /* block */)arg1;
- (unsigned int)beginBackgroundTaskWithName:(id)arg1 expirationHandler:(id /* block */)arg2;
- (void)beginIgnoringInteractionEvents;
- (void)beginReceivingRemoteControlEvents;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void*)arg4;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void*)arg4 requireTopApplication:(BOOL)arg5;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void*)arg4 requireTopApplication:(BOOL)arg5 opaque:(BOOL)arg6 presentAnimated:(BOOL)arg7;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void*)arg4 requireTopApplication:(BOOL)arg5 presentAnimated:(BOOL)arg6;
- (void)beginRemoteSheetController:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void*)arg4 requireTopApplication:(BOOL)arg5 opaque:(BOOL)arg6 presentAnimated:(BOOL)arg7;
- (void)beginRemoteSheetController:(id)arg1 viewOrNil:(id)arg2 delegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void*)arg5 requireTopApplication:(BOOL)arg6 opaque:(BOOL)arg7 presentAnimated:(BOOL)arg8;
- (unsigned int)blockInteractionEventsCount;
- (BOOL)canOpenURL:(id)arg1;
- (BOOL)canShowAlerts;
- (void)cancelAllLocalNotifications;
- (void)cancelLocalNotification:(id)arg1;
- (void)clearHardwareKeyboardState;
- (void)clearKeepAliveTimeout;
- (void)completeStateRestoration;
- (id)currentUserNotificationSettings;
- (void)dealloc;
- (double)defaultImageSnapshotExpiration;
- (id)delegate;
- (void)didDismissActionSheet;
- (void)didDismissMiniAlert;
- (void)didReceiveMemoryWarning;
- (id)displayIDForURLScheme:(id)arg1 isPublic:(BOOL)arg2;
- (id)displayIdentifier;
- (int)doubleHeightMode;
- (void)enableFramebufferStatisticsGathering;
- (unsigned int)enabledRemoteNotificationTypes;
- (void)endBackgroundTask:(unsigned int)arg1;
- (void)endIgnoringInteractionEvents;
- (void)endReceivingRemoteControlEvents;
- (void)endRemoteSheet:(id)arg1;
- (void)endRemoteSheet:(id)arg1 returnCode:(int)arg2;
- (void)endRemoteSheet:(id)arg1 returnCode:(int)arg2 dismissAnimated:(BOOL)arg3;
- (void)extendStateRestoration;
- (void)failedTest:(id)arg1;
- (void)failedTest:(id)arg1 withFailure:(id)arg2;
- (void)failedTest:(id)arg1 withFailure:(id)arg2 withResults:(id)arg3;
- (void)failedTest:(id)arg1 withResults:(id)arg2;
- (void)finishedIPTest:(id)arg1;
- (void)finishedIPTest:(id)arg1 extraResults:(id)arg2;
- (void)finishedIPTest:(id)arg1 extraResults:(id)arg2 withTeardownBlock:(id /* block */)arg3;
- (void)finishedIPTest:(id)arg1 waitForCommit:(BOOL)arg2 extraResults:(id)arg3 withTeardownBlock:(id /* block */)arg4;
- (void)finishedSubTest:(id)arg1 forTest:(id)arg2;
- (void)finishedTest:(id)arg1;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3 withTeardownBlock:(id /* block */)arg4;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 withTeardownBlock:(id /* block */)arg3;
- (void)finishedTest:(id)arg1 waitForCommit:(BOOL)arg2 extraResults:(id)arg3;
- (void)finishedTest:(id)arg1 waitForCommit:(BOOL)arg2 extraResults:(id)arg3 withTeardownBlock:(id /* block */)arg4;
- (BOOL)handleDoubleHeightStatusBarTap:(int)arg1;
- (BOOL)handleEvent:(struct __GSEvent { }*)arg1;
- (BOOL)handleEvent:(struct __GSEvent { }*)arg1 withNewEvent:(id)arg2;
- (void)handleKeyEvent:(struct __GSEvent { }*)arg1;
- (void)handleKeyHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)handleKeyUIEvent:(id)arg1;
- (BOOL)handleTestURL:(id)arg1;
- (void)headsetAvailabilityChanged:(struct __GSEvent { }*)arg1;
- (void)headsetButtonDown:(struct __GSEvent { }*)arg1;
- (void)headsetButtonUp:(struct __GSEvent { }*)arg1;
- (BOOL)homeScreenCanAddIcons;
- (id)idleTimerDisabledReasons;
- (void)ignoreSnapshotOnNextApplicationLaunch;
- (BOOL)ignoresInteractionEvents;
- (id)init;
- (void)installCACommitCompletionBlock:(id /* block */)arg1;
- (void)installNotificationObserverForNotificationName:(id)arg1 forOneNotification:(BOOL)arg2 usingBlock:(id /* block */)arg3;
- (int)interfaceOrientation;
- (BOOL)isFrontBoard;
- (BOOL)isHandlingOpenShortCut;
- (BOOL)isHandlingURL;
- (BOOL)isIdleTimerDisabled;
- (BOOL)isIgnoringInteractionEvents;
- (BOOL)isLocked;
- (BOOL)isNetworkActivityIndicatorVisible;
- (BOOL)isPPTAvailable;
- (BOOL)isPasscodeRequiredToUnlock;
- (BOOL)isProtectedDataAvailable;
- (BOOL)isProximitySensingEnabled;
- (BOOL)isRegisteredForRemoteNotifications;
- (BOOL)isRunningInTaskSwitcher;
- (BOOL)isRunningQuitTest;
- (BOOL)isRunningSuspendTest;
- (BOOL)isRunningTest;
- (BOOL)isRunningTest:(id)arg1;
- (BOOL)isStatusBarHidden;
- (BOOL)isSuspended;
- (BOOL)isSuspendedEventsOnly;
- (BOOL)isSuspendedUnderLock;
- (id)keyCommands;
- (id)keyWindow;
- (BOOL)launchApplicationWithIdentifier:(id)arg1 suspended:(BOOL)arg2;
- (BOOL)launchedToTest;
- (void)layoutMonitor:(id)arg1 didUpdateDisplayLayout:(id)arg2 withContext:(id)arg3;
- (void)lockButtonDown:(struct __GSEvent { }*)arg1;
- (void)lockButtonUp:(struct __GSEvent { }*)arg1;
- (void)lockDevice:(struct __GSEvent { }*)arg1;
- (void)mediaKeyDown:(struct __GSEvent { }*)arg1;
- (void)mediaKeyUp:(struct __GSEvent { }*)arg1;
- (void)menuButtonDown:(struct __GSEvent { }*)arg1;
- (void)menuButtonUp:(struct __GSEvent { }*)arg1;
- (void)motionEnded:(int)arg1 withEvent:(id)arg2;
- (id)nameOfDefaultImageToUpdateAtSuspension;
- (id)nextResponder;
- (void)noteActiveInterfaceOrientationDidChangeToOrientation:(int)arg1 willAnimateWithSettings:(id)arg2 fromOrientation:(int)arg3;
- (void)noteActiveInterfaceOrientationWillChangeToOrientation:(int)arg1;
- (BOOL)openURL:(id)arg1;
- (void)openURL:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)pathToDefaultImageNamed:(id)arg1 forScreen:(id)arg2;
- (void)performDisablingStatusBarStyleValidation:(id /* block */)arg1;
- (void)popRunLoopMode:(id)arg1;
- (void)popRunLoopMode:(id)arg1 requester:(id)arg2;
- (id)preferredContentSizeCategory;
- (id)preferredContentSizeCategoryName;
- (void)prepareForDefaultImageSnapshot;
- (void)prepareForDefaultImageSnapshotForScreen:(id)arg1;
- (void)presentLocalNotificationNow:(id)arg1;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)proximityStateChanged:(BOOL)arg1;
- (void)pushRunLoopMode:(id)arg1;
- (void)pushRunLoopMode:(id)arg1 requester:(id)arg2;
- (void)registerForRemoteNotificationTypes:(unsigned int)arg1;
- (void)registerForRemoteNotifications;
- (void)registerUserNotificationSettings:(id)arg1;
- (void)remoteNotificationRegistrar:(id)arg1 didReceiveDeviceToken:(id)arg2;
- (void)removeApplicationPreservationStateWithSessionIdentifier:(id)arg1;
- (BOOL)removeDefaultImage:(id)arg1;
- (BOOL)removeDefaultImage:(id)arg1 forScreen:(id)arg2;
- (void)removeStatusBarImageNamed:(id)arg1;
- (void)removeStatusBarItem:(int)arg1;
- (void)removeStatusBarStyleOverrides:(int)arg1;
- (BOOL)reportApplicationSuspended;
- (void)requestDeviceUnlock;
- (void)resetIdleTimerAndUndim;
- (void)restoreApplicationPreservationStateWithSessionIdentifier:(id)arg1 viewController:(id)arg2 beginHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (id)resultsForTest:(id)arg1;
- (void)ringerChanged:(int)arg1;
- (BOOL)rotateIfNeeded:(int)arg1;
- (void)rotateIfNeeded:(int)arg1 completion:(id /* block */)arg2;
- (void)runModal:(id)arg1;
- (void)runTest:(id)arg1 forAnimation:(id)arg2;
- (BOOL)runTest:(id)arg1 options:(id)arg2;
- (void)runTest:(id)arg1 startingBeforeAnimation:(id)arg2 stoppingAfterAnimation:(id)arg3;
- (void)runTestForKeyboardBringupAndDismissalWithName:(id)arg1 withShowKeyboardBlock:(id /* block */)arg2 withHideKeyboardBlock:(id /* block */)arg3 withExtraResultsBlock:(id /* block */)arg4 withCleanupBlock:(id /* block */)arg5;
- (void)runTestForKeyboardRotationWithName:(id)arg1 fromOrientation:(int)arg2 withShowKeyboardBlock:(id /* block */)arg3 withExtraResultsBlock:(id /* block */)arg4 withCleanupBlock:(id /* block */)arg5;
- (void)runTestForKeyboardSplitAndMergeWithName:(id)arg1 withShowKeyboardBlock:(id /* block */)arg2 withExtraResultsBlock:(id /* block */)arg3 withCleanupBlock:(id /* block */)arg4;
- (void)saveApplicationPreservationStateWithSessionIdentifier:(id)arg1 viewController:(id)arg2 beginHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateWithDiff:(id)arg2 transitionContext:(id)arg3 completion:(id /* block */)arg4;
- (void)scheduleLocalNotification:(id)arg1;
- (id)scheduledLocalNotifications;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3 forEvent:(id)arg4;
- (BOOL)sendAction:(SEL)arg1 toTarget:(id)arg2 fromSender:(id)arg3 forEvent:(id)arg4;
- (void)sendEvent:(id)arg1;
- (void)setApplicationBadgeString:(id)arg1;
- (void)setApplicationIconBadgeNumber:(int)arg1;
- (void)setApplicationSupportsShakeToEdit:(BOOL)arg1;
- (void)setBacklightLevel:(float)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoubleHeightMode:(int)arg1;
- (void)setDoubleHeightMode:(int)arg1 glowAnimationEnabled:(BOOL)arg2;
- (void)setDoubleHeightPrefixText:(id)arg1;
- (void)setDoubleHeightStatusText:(id)arg1;
- (void)setDoubleHeightStatusText:(id)arg1 forStyle:(int)arg2;
- (void)setExpectsFaceContact:(BOOL)arg1;
- (void)setExpectsFaceContact:(BOOL)arg1 inLandscape:(BOOL)arg2;
- (void)setGlowAnimationEnabled:(BOOL)arg1 forStyle:(int)arg2;
- (void)setHardwareKeyboardLayoutName:(id)arg1;
- (void)setIdleTimerDisabled:(BOOL)arg1;
- (void)setIgnoresInteractionEvents:(BOOL)arg1;
- (BOOL)setKeepAliveTimeout:(double)arg1 handler:(id /* block */)arg2;
- (void)setMinimumBackgroundFetchInterval:(double)arg1;
- (void)setNetworkActivityIndicatorVisible:(BOOL)arg1;
- (void)setNewsstandIconImage:(id)arg1;
- (void)setProximityEventsEnabled:(BOOL)arg1;
- (void)setProximitySensingEnabled:(BOOL)arg1;
- (void)setReceivesMemoryWarnings:(BOOL)arg1;
- (void)setScheduledLocalNotifications:(id)arg1;
- (void)setShortcutItems:(id)arg1;
- (void)setShortcutService:(id)arg1;
- (void)setStatusBarHidden:(BOOL)arg1;
- (void)setStatusBarHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setStatusBarHidden:(BOOL)arg1 animationParameters:(id)arg2;
- (void)setStatusBarHidden:(BOOL)arg1 animationParameters:(id)arg2 changeApplicationFlag:(BOOL)arg3;
- (void)setStatusBarHidden:(BOOL)arg1 duration:(double)arg2;
- (void)setStatusBarHidden:(BOOL)arg1 duration:(double)arg2 changeApplicationFlag:(BOOL)arg3;
- (void)setStatusBarHidden:(BOOL)arg1 withAnimation:(int)arg2;
- (void)setStatusBarMode:(int)arg1 duration:(float)arg2;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(int)arg2 duration:(float)arg3;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(int)arg2 duration:(float)arg3 animation:(int)arg4;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(int)arg2 duration:(float)arg3 animation:(int)arg4 startTime:(double)arg5;
- (void)setStatusBarOrientation:(int)arg1;
- (void)setStatusBarOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)setStatusBarOrientation:(int)arg1 animation:(int)arg2 duration:(double)arg3;
- (void)setStatusBarOrientation:(int)arg1 animationParameters:(id)arg2;
- (void)setStatusBarOrientation:(int)arg1 animationParameters:(id)arg2 notifySpringBoardAndFence:(BOOL)arg3;
- (void)setStatusBarOrientation:(int)arg1 animationParameters:(id)arg2 notifySpringBoardAndFence:(BOOL)arg3 updateBlock:(id /* block */)arg4;
- (void)setStatusBarShowsProgress:(BOOL)arg1;
- (void)setStatusBarStyle:(int)arg1;
- (void)setStatusBarStyle:(int)arg1 animated:(BOOL)arg2;
- (void)setStatusBarStyle:(int)arg1 animation:(int)arg2;
- (void)setStatusBarStyle:(int)arg1 animation:(int)arg2 startTime:(double)arg3 duration:(double)arg4 curve:(int)arg5;
- (void)setStatusBarStyle:(int)arg1 animationParameters:(id)arg2;
- (void)setStatusBarStyle:(int)arg1 duration:(double)arg2;
- (void)setSuspensionAnimationDelay:(double)arg1;
- (void)setSystemVolumeHUDEnabled:(BOOL)arg1;
- (void)setSystemVolumeHUDEnabled:(BOOL)arg1 forAudioCategory:(id)arg2;
- (void)setUsesBackgroundNetwork:(BOOL)arg1;
- (void)setWantsLockEvents:(BOOL)arg1;
- (void)setWantsVolumeButtonEvents:(BOOL)arg1;
- (id)shortcutItems;
- (id)shortcutService;
- (BOOL)shouldFenceStatusBarRotation;
- (BOOL)shouldLaunchSafe;
- (BOOL)shouldRecordExtendedLaunchTime;
- (void)showKeyboardUsingBlock:(id /* block */)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)showNetworkPromptsIfNecessary:(BOOL)arg1;
- (void)showTTYPromptForNumber:(id)arg1 withID:(int)arg2;
- (void)significantTimeChange;
- (void)startCHUDRecording:(id)arg1;
- (void)startLeaking;
- (void)startedIPTest:(id)arg1;
- (void)startedSubTest:(id)arg1 forTest:(id)arg2;
- (void)startedSubTest:(id)arg1 forTest:(id)arg2 withMetrics:(id)arg3;
- (void)startedTest:(id)arg1;
- (id)statusBar;
- (void)statusBar:(id)arg1 didAnimateFromHeight:(float)arg2 toHeight:(float)arg3 animation:(int)arg4;
- (int)statusBar:(id)arg1 styleForRequestedStyle:(int)arg2 overrides:(int)arg3;
- (void)statusBar:(id)arg1 willAnimateFromHeight:(float)arg2 toHeight:(float)arg3 duration:(double)arg4 animation:(int)arg5;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })statusBarFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })statusBarFrameForOrientation:(int)arg1;
- (float)statusBarHeight;
- (float)statusBarHeightForOrientation:(int)arg1;
- (float)statusBarHeightForOrientation:(int)arg1 ignoreHidden:(BOOL)arg2;
- (int)statusBarMode;
- (int)statusBarOrientation;
- (double)statusBarOrientationAnimationDuration;
- (int)statusBarStyle;
- (id)statusBarSystemNavigationAction:(id)arg1;
- (id)statusBarWindow;
- (void)stopCHUDRecording;
- (void)stopLeaking;
- (void)stopModal;
- (id)subTest:(id)arg1 ForTest:(id)arg2 withMetrics:(id)arg3;
- (unsigned int)supportedInterfaceOrientationsForWindow:(id)arg1;
- (void)suspend;
- (void)suspendReturningToLastApp:(BOOL)arg1;
- (BOOL)systemIsAnimatingApplicationLifecycleEvent;
- (void)terminateWithSuccess;
- (void)testPrep:(id)arg1 options:(id)arg2;
- (id)textInputMode;
- (void)unregisterForRemoteNotifications;
- (void)updateSuspendedSettings:(id)arg1;
- (void)userActivityWillSave:(id)arg1;
- (id)userCachesDirectory;
- (void)userDefaultsDidChange:(id)arg1;
- (id)userHomeDirectory;
- (id)userInfoDictionaryForRunLoopMode:(id)arg1 requester:(id)arg2;
- (int)userInterfaceLayoutDirection;
- (id)userLibraryDirectory;
- (BOOL)usesBackgroundNetwork;
- (void)vibrateForDuration:(int)arg1;
- (void)volumeChanged:(struct __GSEvent { }*)arg1;
- (void)willDismissMiniAlert;
- (void)willDisplayMiniAlert;
- (double)windowRotationDuration;
- (id)windows;
- (void)workspace:(id)arg1 didCreateScene:(id)arg2 withTransitionContext:(id)arg3 completion:(id /* block */)arg4;
- (void)workspace:(id)arg1 didLaunchWithCompletion:(id /* block */)arg2;
- (void)workspace:(id)arg1 didReceiveActions:(id)arg2;
- (void)workspace:(id)arg1 willDestroyScene:(id)arg2 withTransitionContext:(id)arg3 completion:(id /* block */)arg4;
- (void)workspaceDidEndTransaction:(id)arg1;
- (void)workspaceNoteAssertionExpirationImminent:(id)arg1;
- (void)workspaceShouldExit:(id)arg1;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

- (BOOL)isSuspendedForAnyReason;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

+ (id)_pu_debugSearchViewController:(id)arg1 usingBlock:(id /* block */)arg2;
+ (id)_pu_debugSearchViewControllerHierarchyUsingBlock:(id /* block */)arg1;
+ (id)pu_debugCurrentAsset;
+ (id)pu_debugCurrentViewModel;
+ (id)pu_firstViewControllerPassingTest:(id /* block */)arg1;

- (id)pu_beginDisablingIdleTimer;
- (void)pu_endDisablingIdleTimer:(id)arg1;

// Image: /System/Library/Frameworks/QuickLook.framework/QuickLook

- (void)ql_setStatusBarHiddenWithoutChangingApplicationFlag:(BOOL)arg1 withAnimation:(int)arg2;

// Image: /System/Library/Frameworks/Social.framework/Social

+ (void)shouldShowNetworkActivityIndicatorInRemoteApplication:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI

- (BOOL)_gkSendAction:(SEL)arg1 viaResponder:(id)arg2 withObject:(id)arg3;
- (id)_gkTargetForAction:(SEL)arg1 viaResponder:(id)arg2;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

+ (int)MPU_compareContentSizeCategory:(id)arg1 toContentSizeCategory:(id)arg2;

- (BOOL)MPU_isPreferredContentSizeCategoryGreaterThan:(id)arg1;
- (BOOL)MPU_isPreferredContentSizeCategoryLessThan:(id)arg1;

// Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary

- (void)_setDelaySuspend:(id)arg1;
- (void)setDelaySuspend:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/UIAccessibility.framework/UIAccessibility

- (void)_accessibilityAddKeyboardWindowToArray:(id)arg1 forModalWindow:(id)arg2;
- (id)_accessibilityElementWindowsWithOptions:(id)arg1 referenceWindow:(id)arg2;
- (void)_accessibilityEnumerateSiblingsWithParent:(id*)arg1 options:(id)arg2 usingBlock:(id /* block */)arg3;
- (BOOL)_accessibilityIsSystemAppServer;
- (BOOL)_accessibilitySystemAppServerIsReady;
- (id)_accessibilityViewChildrenWithOptions:(id)arg1;
- (id)_accessibilityViewChildrenWithOptions:(id)arg1 referenceWindow:(id)arg2;
- (id)accessibilityLastGesturedTextInputStatusChange;
- (id)accessibilityPresentingViewController;
- (void)setAccessibilityLastGesturedTextInputStatusChange:(id)arg1;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

+ (double)rc_animationDragCoefficient;
+ (id)rc_beginTemporaryInteractionEventIgnoringWithTimeout:(double)arg1 sessionWillEndHandler:(id /* block */)arg2;
+ (void)rc_endTemporaryInteractionEventIgnoringForToken:(id)arg1;
+ (BOOL)rc_isRunningInStoreDemoMode;
+ (BOOL)rc_shouldMakeUIForDefaultPNG;

- (void)rc_createDefaultPNG;
- (id)rc_rootViewController;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

- (void)beginPPTWithName:(id)arg1;
- (void)endCurrentPPT;

@end
