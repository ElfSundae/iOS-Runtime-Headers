/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKBRenderFactory : NSObject {
    BOOL  _allowsPaddles;
    BOOL  _boldTextEnabled;
    BOOL  _lightweightFactory;
    BOOL  _preferStringKeycapOverImage;
    UIKBRenderingContext * _renderingContext;
    float  _rivenSizeFactor;
    float  _scale;
    NSMutableArray * _segmentTraits;
    struct CGSize { 
        float width; 
        float height; 
    }  _stretchFactor;
    BOOL  _suppressSegmentTraits;
}

@property (nonatomic) BOOL allowsPaddles;
@property (nonatomic, readonly) BOOL boldTextEnabled;
@property (nonatomic) BOOL lightweightFactory;
@property (nonatomic) BOOL preferStringKeycapOverImage;
@property (getter=renderConfig, readonly) UIKBRenderConfig *renderConfig;
@property (nonatomic, retain) UIKBRenderingContext *renderingContext;
@property (nonatomic) float rivenSizeFactor;
@property (nonatomic) float scale;
@property (nonatomic, readonly) NSArray *segmentTraits;
@property (nonatomic) struct CGSize { float x1; float x2; } stretchFactor;

+ (id)_characterSetForGlyphSelectors;
+ (BOOL)_enabled;
+ (int)_graphicsQuality;
+ (id)cacheKeyForString:(id)arg1 withRenderFlags:(int)arg2 renderingContext:(id)arg3;
+ (BOOL)couldUseGlyphSelectorForDisplayString:(id)arg1;
+ (Class)factoryClassForVisualStyle:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1;
+ (id)factoryForVisualStyle:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1 renderingContext:(id)arg2;
+ (id)factoryForVisualStyle:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1 renderingContext:(id)arg2 skipLayoutSegments:(BOOL)arg3;
+ (id)lightweightFactoryForVisualStyle:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1 renderingContext:(id)arg2;
+ (id)segmentedControlColor:(BOOL)arg1;

- (float)RivenFactor:(float)arg1;
- (id)_controlKeyBackgroundColorName;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderingContext:(id)arg3 keycapsFontName:(id)arg4;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)addLayoutSegment:(id)arg1;
- (BOOL)allowsPaddles;
- (void)applyBoldTextForContent:(id)arg1 withKey:(id)arg2;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)biuKeyImageName;
- (id)boldKeyImageName;
- (BOOL)boldTextEnabled;
- (id)controlKeyBackgroundColorName;
- (id)controlKeyForegroundColorName;
- (id)controlKeyShadowColorName;
- (id)copyKeyImageName;
- (id)cutKeyImageName;
- (void)dealloc;
- (id)defaultKeyBackgroundColorName;
- (id)defaultKeyShadowColorName;
- (id)deleteKeyImageName;
- (id)deleteOnKeyImageName;
- (id)dictationKeyImageName;
- (id)dismissKeyImageName;
- (id)displayContentsForKey:(id)arg1;
- (struct CGPoint { float x1; float x2; })dualStringKeyBottomTextOffset:(id)arg1 keyplane:(id)arg2;
- (struct CGPoint { float x1; float x2; })dualStringKeyTopTextOffset:(id)arg1 keyplane:(id)arg2;
- (float)emojiPopupDividerKeyOffset;
- (int)enabledBlendForm;
- (id)extraPasscodePaddleTraits;
- (id)globalEmojiKeyImageName;
- (id)globalKeyImageName;
- (int)glyphSelectorForDisplayString:(id)arg1;
- (id)handwritingMoreKeyImageName;
- (id)hashStringElement;
- (id)initWithRenderingContext:(id)arg1 skipLayoutSegments:(BOOL)arg2;
- (float)keyCornerRadius;
- (id)keyImageNameWithSkinnyVariation:(id)arg1;
- (BOOL)keyIsRightToLeftSensitive:(id)arg1;
- (id)leftArrowKeyImageName;
- (int)lightHighQualityEnabledBlendForm;
- (id)lightKeycapsFontName;
- (id)lightPadKeycapsFontName;
- (id)lightTextFontName;
- (BOOL)lightweightFactory;
- (id)lowQualityLayeredBackgroundColorName;
- (void)lowQualityTraits:(id)arg1;
- (id)messagesWriteboardKeyImageName;
- (void)modifyKeyTraitsForPasscode:(id)arg1 forKey:(id)arg2 onKeyplane:(id)arg3;
- (void)modifyTraitsForDetachedInputSwitcher:(id)arg1 withKey:(id)arg2;
- (void)modifyTraitsForDividerVariant:(id)arg1 withKey:(id)arg2;
- (id)multitapCompleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)passcodeActiveControlKeyTraits;
- (id)passcodeBackgroundTraitsForKeyplane:(id)arg1;
- (id)passcodeControlKeyTraits;
- (float)passcodeEdgeWeight;
- (id)passcodeKeyEdgeColorName;
- (id)passcodeShiftedControlKeyTraits;
- (id)pasteKeyImageName;
- (BOOL)preferStringKeycapOverImage;
- (id)renderConfig;
- (id)renderingContext;
- (id)rightArrowKeyImageName;
- (float)rivenSizeFactor;
- (float)scale;
- (void)scaleTraits:(id)arg1;
- (id)segmentTraits;
- (void)setAllowsPaddles:(BOOL)arg1;
- (void)setLightweightFactory:(BOOL)arg1;
- (void)setPreferStringKeycapOverImage:(BOOL)arg1;
- (void)setRenderingContext:(id)arg1;
- (void)setRivenSizeFactor:(float)arg1;
- (void)setScale:(float)arg1;
- (void)setStretchFactor:(struct CGSize { float x1; float x2; })arg1;
- (void)setupLayoutSegments;
- (id)shiftKeyImageName;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (BOOL)shouldClearBaseDisplayStringForVariants:(id)arg1;
- (float)skinnyKeyThreshold;
- (struct CGSize { float x1; float x2; })stretchFactor;
- (BOOL)supportsGestureBehaviors;
- (BOOL)supportsInputTraits:(id)arg1 forKeyplane:(id)arg2;
- (void)suppressLayoutSegments;
- (id)thinKeycapsFontName;
- (id)thinTextFontName;
- (id)traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)traitsHashStringForKey:(id)arg1 withGeometry:(id)arg2 withSymbolStyle:(id)arg3 controlOpacities:(BOOL)arg4;
- (float)translucentGapWidth;
- (id)undoKeyImageName;
- (BOOL)useBlueThemingForKey:(id)arg1;

@end
