/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIFocusRegionMapSnapshot : NSObject {
    BOOL _clipToSnapshotRect;
    BOOL _committed;
    NSMutableArray *_detectedFocusContainerGuideMapEntries;
    NSMutableArray *_detectedFocusableGuideMapEntries;
    NSMutableArray *_detectedFocusableViewMapEntries;
    BOOL _didSetRegionClipFrame;
    NSArray *_finalFocusableRegionMapEntries;
    unsigned int _focusHeading;
    UIView *_focusableRegionAncestorView;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _focusedRect;
    BOOL _isFocusedRectEmpty;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _mapEntriesFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _regionClipFrame;
    UIView *_rootView;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _snapshottedRect;
    NSArray *_sortedFocusContainerGuideMapEntries;
    UIImage *_visualRepresentation;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _visualRepresentationMinimumArea;
}

@property (nonatomic, readonly, copy) NSArray *allFocusableRegionMapEntries;
@property (nonatomic) BOOL clipToSnapshotRect;
@property (getter=isCommitted, nonatomic) BOOL committed;
@property (nonatomic, retain) NSMutableArray *detectedFocusContainerGuideMapEntries;
@property (nonatomic, retain) NSMutableArray *detectedFocusableGuideMapEntries;
@property (nonatomic, retain) NSMutableArray *detectedFocusableViewMapEntries;
@property (nonatomic, copy) NSArray *finalFocusableRegionMapEntries;
@property (nonatomic) unsigned int focusHeading;
@property (nonatomic) UIView *focusableRegionAncestorView;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } focusedRect;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } mapEntriesFrame;
@property (nonatomic, readonly) UIView *rootView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } snapshottedRect;
@property (nonatomic, copy) NSArray *sortedFocusContainerGuideMapEntries;
@property (nonatomic, readonly) UIImage *visualRepresentation;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } visualRepresentationMinimumArea;

- (void).cxx_destruct;
- (void)_addFocusContainerGuide:(id)arg1;
- (void)_addFocusableRegion:(id)arg1 isFocusGuide:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_clippedRegionFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_commit;
- (id)_finalFocusableRegionMapEntriesFromMapEntries:(id)arg1;
- (id)_finalFocusableRegionMapEntriesFromViewMapEntries:(id)arg1 guideMapEntries:(id)arg2;
- (id)_initWithRootView:(id)arg1 snapshotRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)_occludeFocusInRegion:(id)arg1;
- (void)_punchHoleInMap:(id)arg1 atFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)_sortedEligibleFocusContainerGuidesInArray:(id)arg1;
- (id)allFocusableRegionMapEntries;
- (BOOL)clipToSnapshotRect;
- (id)debugQuickLookObject;
- (id)detectedFocusContainerGuideMapEntries;
- (id)detectedFocusableGuideMapEntries;
- (id)detectedFocusableViewMapEntries;
- (id)finalFocusableRegionMapEntries;
- (unsigned int)focusHeading;
- (id)focusableRegionAncestorView;
- (id)focusableRegionMapEntriesLimitedByFocusContainerGuide:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })focusedRect;
- (id)init;
- (BOOL)isCommitted;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })mapEntriesFrame;
- (id)rootView;
- (void)setClipToSnapshotRect:(BOOL)arg1;
- (void)setCommitted:(BOOL)arg1;
- (void)setDetectedFocusContainerGuideMapEntries:(id)arg1;
- (void)setDetectedFocusableGuideMapEntries:(id)arg1;
- (void)setDetectedFocusableViewMapEntries:(id)arg1;
- (void)setFinalFocusableRegionMapEntries:(id)arg1;
- (void)setFocusHeading:(unsigned int)arg1;
- (void)setFocusableRegionAncestorView:(id)arg1;
- (void)setFocusedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setSortedFocusContainerGuideMapEntries:(id)arg1;
- (void)setVisualRepresentationMinimumArea:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })snapshottedRect;
- (id)sortedFocusContainerGuideMapEntries;
- (id)visualRepresentation;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visualRepresentationMinimumArea;
- (id)visualRepresentationWithMinimumArea:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

@end
