/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIPageCurl : NSObject {
    NSMutableArray *_activeStateQueue;
    NSMutableSet *_completedStates;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _contentRect;
    UIView *_contentView;
    double _delayBetweenSuccessiveAnimations;
    float _manualPageCurlMaxDAngle;
    _UIPageCurlState *_manualPageCurlState;
    float _pageDiagonalAngle;
    float _pageDiagonalLength;
    NSMutableArray *_pendingStateQueue;
    int _spineLocation;
}

@property (getter=_isManualPageCurlInProgressAndUncommitted, nonatomic, readonly) BOOL _manualPageCurlInProgressAndUncommitted;
@property (setter=_setManualPageCurlMaxDAngle:, nonatomic) float _manualPageCurlMaxDAngle;
@property (nonatomic, readonly) int _spineLocation;
@property (nonatomic, readonly) NSNumber *_wrappedManualPageCurlDirection;

- (void).cxx_destruct;
- (void)_abortManualCurlAtLocation:(struct CGPoint { float x1; float x2; })arg1 withSuggestedVelocity:(float)arg2;
- (id)_animationKeyPaths;
- (BOOL)_areAnimationsInFlightOrPending;
- (float)_baseAngleOffsetForState:(id)arg1;
- (void)_beginCurlWithState:(id)arg1 previousState:(id)arg2;
- (void)_cancelAllActiveTransitionsAndAbandonCallbacks:(BOOL)arg1;
- (void)_cancelTransitionWithState:(id)arg1 invalidatingPageCurl:(BOOL)arg2;
- (void)_cleanupState:(id)arg1;
- (void)_completeManualCurlAtLocation:(struct CGPoint { float x1; float x2; })arg1 withSuggestedVelocity:(float)arg2;
- (float)_distanceToTravelWithCurrentSpineLocation;
- (float)_durationForManualCurlEndAnimationWithSuggestedVelocity:(float)arg1 shouldComplete:(BOOL)arg2;
- (void)_endManualCurlAtLocation:(struct CGPoint { float x1; float x2; })arg1 withSuggestedVelocity:(float)arg2 shouldComplete:(BOOL)arg3;
- (void)_enqueueCurlOfType:(int)arg1 fromLocation:(struct CGPoint { float x1; float x2; })arg2 inDirection:(int)arg3 withView:(id)arg4 revealingView:(id)arg5 completion:(id /* block */)arg6 finally:(id /* block */)arg7;
- (void)_ensureCurlFilterOnLayer:(id)arg1;
- (void)_forceCleanupState:(id)arg1 finished:(BOOL)arg2 completed:(BOOL)arg3;
- (void)_fromValue:(float*)arg1 toValue:(float*)arg2 fromState:(id)arg3 forAnimationWithKeyPath:(id)arg4;
- (float)_inputTimeForProgress:(float)arg1 distanceToTravel:(float)arg2 radius:(float*)arg3 minRadius:(float)arg4 angle:(float)arg5 dAngle:(float)arg6 touchLocation:(struct CGPoint { float x1; float x2; })arg7 state:(id)arg8;
- (BOOL)_isManualPageCurlInProgressAndUncommitted;
- (BOOL)_isPreviousCurlCompatibleWithCurlOfType:(int)arg1 inDirection:(int)arg2;
- (float)_manualPageCurlMaxDAngle;
- (id)_newAnimationForState:(id)arg1 withKeyPath:(id)arg2 duration:(float)arg3 fromValue:(id)arg4;
- (id)_newCurlFilter;
- (void)_pageCurlAnimationDidStop:(id)arg1 withState:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_pageViewFrame:(BOOL)arg1;
- (BOOL)_populateFromValue:(float*)arg1 toValue:(float*)arg2 fromState:(id)arg3 forAnimationWithKeyPath:(id)arg4;
- (struct CGPoint { float x1; float x2; })_referenceLocationForInitialLocation:(struct CGPoint { float x1; float x2; })arg1 direction:(int)arg2;
- (void)_setContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setManualPageCurlMaxDAngle:(float)arg1;
- (int)_spineLocation;
- (void)_updateCurlFromState:(id)arg1 withTime:(float)arg2 radius:(float)arg3 angle:(float)arg4 addingAnimations:(id)arg5;
- (void)_updateManualCurlToLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_updatedInputsFromState:(id)arg1 forLocation:(struct CGPoint { float x1; float x2; })arg2 time:(float*)arg3 radius:(float*)arg4 angle:(float*)arg5;
- (int)_validatedPageCurlTypeForPageCurlType:(int)arg1 inDirection:(int)arg2;
- (id)_wrappedManualPageCurlDirection;
- (void)dealloc;
- (id)initWithSpineLocation:(int)arg1 andContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 inContentView:(id)arg3;

@end
