/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface AR3DSkeletonRetargetingTechnique : ARTechnique {
    bool  _automaticSkeletonScaleEstimationEnabled;
    struct shared_ptr<arkit::btr::BodyRegistration> { 
        struct BodyRegistration {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _btr;
    struct basic_ofstream<char, std::__1::char_traits<char> > { 
        int (**_vptr$basic_ostream)(); 
        struct basic_filebuf<char, std::__1::char_traits<char> > { 
            int (**_vptr$basic_streambuf)(); 
            struct locale { 
                struct __imp {} *__locale_; 
            } __loc_; 
            char *__binp_; 
            char *__ninp_; 
            char *__einp_; 
            char *__bout_; 
            char *__nout_; 
            char *__eout_; 
            char *__extbuf_; 
            char *__extbufnext_; 
            char *__extbufend_; 
            BOOL __extbuf_min_[8]; 
            unsigned long long __ebs_; 
            char *__intbuf_; 
            unsigned long long __ibs_; 
            struct __sFILE {} *__file_; 
            struct codecvt<char, char, __mbstate_t> {} *__cv_; 
            union { 
                BOOL __mbstate8[128]; 
                long long _mbstateL; 
            } __st_; 
            union { 
                BOOL __mbstate8[128]; 
                long long _mbstateL; 
            } __st_last_; 
            unsigned int __om_; 
            unsigned int __cm_; 
            bool __owns_eb_; 
            bool __owns_ib_; 
            bool __always_noconv_; 
        } __sb_; 
        int (**_vptr$ios_base)(); 
        unsigned int __fmtflags_; 
        long long __precision_; 
        long long __width_; 
        unsigned int __rdstate_; 
        unsigned int __exceptions_; 
        void *__rdbuf_; 
        void *__loc_; 
        int (**__fn_)(); 
        int *__index_; 
        unsigned long long __event_size_; 
        unsigned long long __event_cap_; 
        long long *__iarray_; 
        unsigned long long __iarray_size_; 
        unsigned long long __iarray_cap_; 
        void **__parray_; 
        unsigned long long __parray_size_; 
        unsigned long long __parray_cap_; 
        struct basic_ostream<char, std::__1::char_traits<char> > {} *__tie_; 
        int __fill_; 
    }  _btrf;
    struct basic_ofstream<char, std::__1::char_traits<char> > { 
        int (**_vptr$basic_ostream)(); 
        struct basic_filebuf<char, std::__1::char_traits<char> > { 
            int (**_vptr$basic_streambuf)(); 
            struct locale { 
                struct __imp {} *__locale_; 
            } __loc_; 
            char *__binp_; 
            char *__ninp_; 
            char *__einp_; 
            char *__bout_; 
            char *__nout_; 
            char *__eout_; 
            char *__extbuf_; 
            char *__extbufnext_; 
            char *__extbufend_; 
            BOOL __extbuf_min_[8]; 
            unsigned long long __ebs_; 
            char *__intbuf_; 
            unsigned long long __ibs_; 
            struct __sFILE {} *__file_; 
            struct codecvt<char, char, __mbstate_t> {} *__cv_; 
            union { 
                BOOL __mbstate8[128]; 
                long long _mbstateL; 
            } __st_; 
            union { 
                BOOL __mbstate8[128]; 
                long long _mbstateL; 
            } __st_last_; 
            unsigned int __om_; 
            unsigned int __cm_; 
            bool __owns_eb_; 
            bool __owns_ib_; 
            bool __always_noconv_; 
        } __sb_; 
        int (**_vptr$ios_base)(); 
        unsigned int __fmtflags_; 
        long long __precision_; 
        long long __width_; 
        unsigned int __rdstate_; 
        unsigned int __exceptions_; 
        void *__rdbuf_; 
        void *__loc_; 
        int (**__fn_)(); 
        int *__index_; 
        unsigned long long __event_size_; 
        unsigned long long __event_cap_; 
        long long *__iarray_; 
        unsigned long long __iarray_size_; 
        unsigned long long __iarray_cap_; 
        void **__parray_; 
        unsigned long long __parray_size_; 
        unsigned long long __parray_cap_; 
        struct basic_ostream<char, std::__1::char_traits<char> > {} *__tie_; 
        int __fill_; 
    }  _btrts;
    ARWorldTrackingPoseData * _currentWorldTrackingPose;
    float  _estimatedScale;
    struct ARRigEvaluationData { 
        struct RERigAssetBuilder {} *rigAssetBuilder; 
        struct RERigEvaluation {} *rigEvaluation; 
    }  _evaluationRigData;
    bool  _is_tracking;
    struct array<arkit::btr::RegistrationData, 5> { 
        struct RegistrationData { 
            struct Matrix<float, 2, 16, false> { 
                float m_data[32]; 
            } image_points; 
            struct Matrix<float, 3, 16, false> { 
                float m_data[48]; 
            } lifted_points; 
            struct Matrix<float, 3, 3, false> { 
                float m_data[9]; 
            } intrinsics; 
            struct SE3GroupStorage<float, cva::Matrix<float, 4, 4, false> > { 
                float m_data[16]; 
            } cam_from_obj; 
            struct SE3GroupStorage<float, cva::Matrix<float, 4, 4, false> > { 
                float m_data[16]; 
            } cam_from_vio; 
            double timestamp_obj; 
            double timestamp_vio; 
        } __elems_[5]; 
    }  _last_btr_poses;
    int  _last_btr_poses_idx;
    double  _last_detection_timestamp;
    ARCoreRESkeletonResults * _latestResults;
    NSObject<OS_dispatch_semaphore> * _resultSemaphore;
    struct shared_ptr<arkit::btr::ScaleCorrection> { 
        struct ScaleCorrection {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _scaler;
    NSUUID * _skeletonIdentifier;
}

@property (nonatomic) bool automaticSkeletonScaleEstimationEnabled;
@property (nonatomic, retain) ARWorldTrackingPoseData *currentWorldTrackingPose;
@property (nonatomic) struct ARRigEvaluationData { struct RERigAssetBuilder {} *x1; struct RERigEvaluation {} *x2; } evaluationRigData;
@property (nonatomic, retain) ARCoreRESkeletonResults *latestResults;
@property (nonatomic, retain) NSObject<OS_dispatch_semaphore> *resultSemaphore;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)_estimateCameraPoseFromMatchingImageData:(id)arg1 to3DData:(id)arg2 pCameraFromBody:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }*)arg3 pScaleOut:(float*)arg4;
- (id)_retargetSkeleton:(id)arg1;
- (bool)automaticSkeletonScaleEstimationEnabled;
- (id)currentWorldTrackingPose;
- (void)dealloc;
- (struct ARRigEvaluationData { struct RERigAssetBuilder {} *x1; struct RERigEvaluation {} *x2; })evaluationRigData;
- (id)init;
- (bool)isEqual:(id)arg1;
- (id)latestResults;
- (id)processData:(id)arg1;
- (id)processResultData:(id)arg1 timestamp:(double)arg2 context:(id)arg3;
- (void)requestResultDataAtTimestamp:(double)arg1 context:(id)arg2;
- (id)resultSemaphore;
- (void)setAutomaticSkeletonScaleEstimationEnabled:(bool)arg1;
- (void)setCurrentWorldTrackingPose:(id)arg1;
- (void)setEvaluationRigData:(struct ARRigEvaluationData { struct RERigAssetBuilder {} *x1; struct RERigEvaluation {} *x2; })arg1;
- (void)setLatestResults:(id)arg1;
- (void)setResultSemaphore:(id)arg1;

@end
