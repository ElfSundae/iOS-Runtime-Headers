/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface ARInternalCompositor : NSObject {
    <MTLRenderPipelineState> * _alignmentPipelineState;
    <MTLBuffer> * _alignmentVertexBuffer;
    struct __CVMetalTextureCache { } * _capturedImageTextureCache;
    <MTLCommandQueue> * _commandQueue;
    ARPresentationDescriptor * _descriptor;
    ARPresentationDisplay * _display;
    int  _eyeCount;
    NSArray * _eyes;
    <MTLRenderPipelineState> * _forwardFlowPipelineState;
    <MTLBuffer> * _forwardFlowVertexBuffer;
    ARPresentationFramePool * _framePool;
    <MTLRenderPipelineState> * _heldPipelineState;
    bool  _isInitialized;
    bool  _isReady;
    float  _markerHeight;
    float  _markerThickness;
    ARMatteGenerator * _matteGenerator;
    ARPresentationOverrides * _overrides;
    <MTLRenderPipelineState> * _posWarpPipelineState;
    ARPresentation * _presentation;
    <MTLRenderPipelineState> * _rotWarpPipelineState;
    bool  _showAlignmentMarker;
    bool  _supportsMatting;
    bool  _usePackedVertices;
}

@property (nonatomic, readonly) bool isInitialized;
@property (getter=isWarpActive, nonatomic, readonly) bool warpActive;

- (void).cxx_destruct;
- (id)_createTextureFromPixelBuffer:(struct __CVBuffer { }*)arg1 pixelFormat:(unsigned long long)arg2 planeIndex:(long long)arg3;
- (void)_prepare;
- (id)compositeAndDistortFrame:(id)arg1 destinationTexture:(id)arg2 backgroundPixelBuffer:(struct __CVBuffer { }*)arg3;
- (void)compositeHeldMode:(id)arg1 commandBuffer:(id)arg2 outputTarget:(id)arg3 backgroundPixelBuffer:(struct __CVBuffer { }*)arg4;
- (bool)createAlignmentLinePipelineStateWithMTLLib:(id)arg1;
- (bool)createCompositeHeldModePipelineStateWithMTLLib:(id)arg1;
- (id)createDistortionVertexPipeline:(id)arg1 vs:(id)arg2 fs:(id)arg3;
- (bool)createForwardFlowPipelineStateWithMTLLib:(id)arg1;
- (id)createFullscreenQuadPipeline:(id)arg1 vs:(id)arg2 fs:(id)arg3;
- (bool)createPosWarpPipelineStateWithMTLLib:(id)arg1;
- (bool)createRotWarpPipelineStateWithMTLLib:(id)arg1;
- (void)dealloc;
- (float)gammaFromLuminance:(float)arg1;
- (id)initWithCommandQueue:(id)arg1 presentation:(id)arg2 framePool:(id)arg3 overrides:(id)arg4;
- (bool)isInitialized;
- (bool)isWarpActive;
- (void)setDescriptor:(id)arg1 display:(id)arg2;
- (struct { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; bool x8; float x9; float x10; })setupDistortWithFrame:(id)arg1;
- (void)setupMonoOrNoDistortion;
- (void)setupStereoDistortion;
- (void)warpAndDistortWornMode:(id)arg1 commandBuffer:(id)arg2 outputTarget:(id)arg3;

@end
