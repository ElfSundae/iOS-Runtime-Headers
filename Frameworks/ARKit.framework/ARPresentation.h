/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface ARPresentation : NSObject <ARBoardControllerDelegate, ARInternalSessionObserver> {
    ARPresentationDescriptor * _activeDescriptor;
    ARPresentationDisplay * _activeDisplay;
    long long  _actualFramesPerSecond;
    <MTLSharedEvent> * _applicationEvent;
    ARBoardController * _boardController;
    bool  _cameraCompositingDisabled;
    double  _compositeCASlopTime;
    double  _compositeSchedulingSlop;
    ARCompositeSignaler * _compositeSignaler;
    double  _compositeSlop;
    ARRollingNumberSeries * _compositeTimes;
    ARRollingNumberSeries * _compositeVsyncsMissed;
    NSMutableArray * _compositorBlockQueue;
    <MTLCommandQueue> * _compositorCommandQueue;
    CADisplayLink * _compositorDisplayLink;
    <MTLSharedEvent> * _compositorEvent;
    ARRunLoop * _compositorRunLoop;
    <MTLCaptureScope> * _compositorScope;
    NSTimer * _compositorSettingsTimer;
    ARCriticalTimer * _compositorSleepTimer;
    ARPresentationFrame * _currentPresentationFrame;
    <ARPresentationDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    unsigned long long  _eyeCount;
    bool  _firstTimeApplyChanges;
    bool  _firstTimeInit;
    ARFrame * _frameCopy;
    unsigned long long  _frameNumber;
    ARPresentationFramePool * _framePool;
    ARCompositeStats * _frameStatsComposite;
    int  _frameStatsCompositeIndex;
    NSArray * _frameStatsCompositePool;
    int  _frameStatsIndex;
    NSArray * _frameStatsRender;
    bool  _headLocked;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _headLockedTransform;
    bool  _heldModeSupported;
    ARPresentationDisplay * _heldPresentationDisplay;
    bool  _heldShowStatistics;
    ARInternalCompositor * _internalCompositor;
    bool  _isARSessionStateIgnored;
    _Atomic bool  _isPaused;
    bool  _isSceneKitBasedView;
    _Atomic bool  _isStarted;
    double  _lastNewPresentationFrameCallTime;
    double  _lastPresentedTime;
    bool  _logTimings;
    NSTimer * _longPressTimer;
    _Atomic long long  _makePresentationFrameCount;
    <MTLDevice> * _metalDevice;
    int  _minVsyncsPerFrame;
    int  _minVsyncsPerFrameRange;
    <ARPresentationInternalObserver> * _observer;
    ARPresentationOverrides * _overrides;
    ARPredictionStats * _predictionStats;
    long long  _preferredFramesPerSecond;
    <MTLCaptureScope> * _presentCaptureScope;
    SRSPresentationAssertion * _presentationAssertion;
    long long  _presentationMode;
    double  _renderEndEstimate;
    double  _renderEndEstimateSnapped;
    MTLSharedEventListener * _renderEventListener;
    NSCondition * _renderPausedCondition;
    NSThread * _renderThread;
    ARRollingNumberSeries * _renderTimes;
    ARRollingNumberSeries * _renderTimesCPU;
    ARRollingNumberSeries * _renderVsyncsMissed;
    ARSession * _session;
    long long  _state;
    double  _timstampOfLastRenderInHeldMode;
    ARPresentationDescriptor * _transitionDescriptor;
    ARPresentationDisplay * _transitionPresentationDisplay;
    bool  _updatingSettings;
    UIView * _view;
    long long  _viewOrientation;
    struct CGSize { 
        double width; 
        double height; 
    }  _viewSize;
    unsigned long long  _vsyncTarget;
    bool  _waitRenderOnCompositorGPUWork;
    bool  _willUpdateSettings;
    bool  _wornModeSupported;
    unsigned long long  vsyncCounter;
}

@property (nonatomic, readonly, copy) ARPresentationDescriptor *activeDescriptor;
@property (nonatomic, readonly, copy) ARPresentationDisplay *activeDisplay;
@property (nonatomic) long long actualFramesPerSecond;
@property (nonatomic, readonly) ARBoardController *boardController;
@property (getter=isCameraCompositingDisabled, nonatomic) bool cameraCompositingDisabled;
@property (retain) ARPresentationFrame *currentPresentationFrame;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ARPresentationDelegate> *delegate;
@property (retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (retain) ARFrame *frameCopy;
@property (nonatomic, readonly) ARPresentationFramePool *framePool;
@property (readonly) unsigned long long hash;
@property bool headLocked;
@property struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } headLockedTransform;
@property bool isARSessionStateIgnored;
@property (nonatomic) <ARPresentationInternalObserver> *observer;
@property (nonatomic, readonly) ARPresentationOverrides *overrides;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) long long presentationMode;
@property (nonatomic, readonly) NSThread *renderThread;
@property (nonatomic) ARSession *session;
@property long long state;
@property (readonly) Class superclass;
@property bool updatingSettings;
@property (nonatomic) UIView *view;
@property bool willUpdateSettings;

+ (bool)_ARDeviceHeldModeSupported;
+ (bool)compositorForceDisabled;
+ (bool)compositorPlistKeysEnabled;
+ (bool)isCompositorEnabled;
+ (bool)isSupportedOnOSVersion;
+ (bool)isWornModeSupported;
+ (void)setCompositorForceDisabled:(bool)arg1;
+ (void)setWornModeForceDisabled:(bool)arg1;
+ (bool)supportsPresentationMode:(long long)arg1;
+ (bool)supportsStereoAR;
+ (bool)wornModeForceDisabled;

- (void).cxx_destruct;
- (void)_acquirePresentationAssertion;
- (void)_addNotifyListener:(id)arg1;
- (void)_applyChangesIfNeeded;
- (void)_commonInitWithView:(id)arg1;
- (void)_compositorDisplayLinkCallback;
- (void)_compositorRunLoopCallback;
- (struct { })_createAlignmentQuaternionForTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 controllerOrientation:(struct { })arg2;
- (void)_createCompositorCommandQueue;
- (double)_getDisplayPersistenceTime:(double)arg1;
- (void)_handleControllerDidConnectNotification:(id)arg1;
- (void)_handleControllerEvent:(id)arg1 button:(id)arg2 value:(float)arg3 pressed:(bool)arg4;
- (unsigned long long)_indexForEyeLocation:(long long)arg1;
- (void)_pauseSystem;
- (void)_recenterController:(id)arg1;
- (void)_registerSystemButtonEvents:(id)arg1;
- (void)_releasePresentationAssertion;
- (id)_renderStatsString;
- (void)_renderThreadCallback;
- (void)_resumeSystem;
- (bool)_setRealTimePriority;
- (void)_setupGCStereoARInteraction;
- (void)_signalPausedRenderThreadAtShutdown;
- (bool)_standardPriority;
- (void)_startCompositorRunLoop;
- (void)_startOrResumeSystem;
- (void)_startRenderThread;
- (void)_startSystem;
- (void)_stopCompositorRunLoop;
- (void)_stopRenderThread;
- (void)_stopSystem;
- (bool)_supportsPresentationMode:(long long)arg1;
- (bool)_tickRendererOnVsync;
- (void)_updateAntialiasingIfNeeded;
- (void)_updateSignalValue:(unsigned long long)arg1;
- (void)_updateStatisticsWidgets;
- (id)activeDescriptor;
- (id)activeDisplay;
- (long long)actualFramesPerSecond;
- (void)advanceFrameCopy;
- (void)boardControlerDidSwitchToDeviceHeld:(id)arg1;
- (id)boardController;
- (void)boardController:(id)arg1 didSwitchToDeviceWorn:(id)arg2;
- (void)compositeAndDistort;
- (id)currentPresentationFrame;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (void)dispatchOnNextComposite:(id /* block */)arg1;
- (void)executeDispatchedBlocks;
- (id)frameCopy;
- (id)framePool;
- (id)getReprojectionPoseForTime:(double)arg1;
- (void)handleSTARData:(id)arg1;
- (bool)headLocked;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })headLockedTransform;
- (id)initWithView:(id)arg1;
- (bool)isARSessionStateIgnored;
- (bool)isCameraCompositingDisabled;
- (bool)isDescriptorSupported:(id)arg1 error:(id*)arg2;
- (bool)isFrameCopyValid:(id)arg1;
- (id)makePresentationFrame;
- (id)newDummyARFrame;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)observer;
- (void)orientationChanged:(id)arg1;
- (id)overrides;
- (void)pause;
- (long long)preferredFramesPerSecond;
- (void)present;
- (long long)presentationMode;
- (id)renderThread;
- (void)resume;
- (id)session;
- (void)session:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)sessionWasInterrupted:(id)arg1;
- (void)setActualFramesPerSecond:(long long)arg1;
- (void)setCameraCompositingDisabled:(bool)arg1;
- (void)setCurrentPresentationFrame:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (bool)setDescriptor:(id)arg1 presentationDisplay:(id)arg2 error:(id*)arg3;
- (void)setDeviceHeld;
- (void)setDeviceWorn:(id)arg1;
- (void)setFrameCopy:(id)arg1;
- (void)setHeadLocked:(bool)arg1;
- (void)setHeadLockedTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setHeldModeConfig;
- (void)setIsARSessionStateIgnored:(bool)arg1;
- (void)setModeFromDisplayConfig:(id)arg1;
- (void)setObserver:(id)arg1;
- (void)setPreferredFramesPerSecond:(long long)arg1;
- (void)setPresentationMode:(long long)arg1;
- (void)setSession:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setUpdatingSettings:(bool)arg1;
- (void)setView:(id)arg1;
- (void)setWillUpdateSettings:(bool)arg1;
- (void)shutdown;
- (unsigned long long)startFrame;
- (long long)state;
- (unsigned long long)supportedInterfaceOrientations;
- (void)togglePresentationMode;
- (bool)transitionToDescriptor:(id)arg1 error:(id*)arg2;
- (void)updateLayerBounds;
- (void)updatePresentationModeOverride;
- (void)updatePresentationStats:(id)arg1;
- (bool)updateSettingsPending;
- (bool)updatingSettings;
- (id)view;
- (void)waitForOptimalPrediction;
- (bool)willUpdateSettings;

@end
