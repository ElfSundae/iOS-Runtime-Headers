/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHMemory : PHAssetCollection {
    NSData * _assetListPredicate;
    int  _category;
    NSDate * _creationDate;
    BOOL  _didLoadTitleCategory;
    BOOL  _favorite;
    NSDate * _lastMoviePlayedDate;
    NSDate * _lastViewedDate;
    NSString * _localizedSubtitle;
    NSDictionary * _movieAssetState;
    NSData * _movieData;
    BOOL  _pending;
    NSData * _photosGraphData;
    long long  _photosGraphVersion;
    BOOL  _rejected;
    double  _score;
    int  _subcategory;
    int  _titleCategory;
    NSString * _titleFontName;
    BOOL  _userCreated;
}

@property (nonatomic, readonly) NSData *assetListPredicate;
@property (nonatomic, readonly) int category;
@property (getter=isFavorite, nonatomic, readonly) BOOL favorite;
@property (nonatomic, readonly) NSSet *featuredPeopleIdentifiers;
@property (nonatomic, readonly) BOOL isContiguous;
@property (nonatomic, readonly) NSDate *lastMoviePlayedDate;
@property (nonatomic, readonly) NSDate *lastViewedDate;
@property (nonatomic, readonly) NSData *movieData;
@property (getter=isPending, nonatomic, readonly) BOOL pending;
@property (nonatomic, readonly) NSData *photosGraphData;
@property (nonatomic, readonly) long long photosGraphVersion;
@property (getter=isRejected, nonatomic, readonly) BOOL rejected;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) int subcategory;
@property (nonatomic, readonly) NSString *subtitle;
@property (getter=isUserCreated, nonatomic, readonly) BOOL userCreated;

+ (id)_transformValueExpression:(id)arg1 forKeyPath:(id)arg2;
+ (id)assetListPredicateFromQueryHintObjects:(id)arg1;
+ (id)entityKeyForPropertyKey:(id)arg1;
+ (id)fetchPredicateFromComparisonPredicate:(id)arg1 options:(id)arg2;
+ (id)fetchType;
+ (void)generateMemoriesWithOptions:(id)arg1 completion:(id /* block */)arg2;
+ (id)identifierCode;
+ (id)managedEntityName;
+ (BOOL)managedObjectSupportsPendingState;
+ (BOOL)managedObjectSupportsRejectedState;
+ (BOOL)managedObjectSupportsTrashedState;
+ (id)movieDataWithTitleFontName:(id)arg1;
+ (id)propertiesToFetchWithHint:(unsigned int)arg1;
+ (id)stringForCategory:(int)arg1;
+ (id)stringForSubcategory:(int)arg1;
+ (id)titleFontNameFromMovieData:(id)arg1;

- (void).cxx_destruct;
- (id)_representativeAndCuratedAssetIDs;
- (id)assetListPredicate;
- (BOOL)canContainAssets;
- (BOOL)canPerformEditOperation:(int)arg1;
- (BOOL)canShowAvalancheStacks;
- (int)category;
- (Class)changeRequestClass;
- (BOOL)collectionHasFixedOrder;
- (id)creationDate;
- (id)description;
- (id)featuredPeopleIdentifiers;
- (id)initWithFetchDictionary:(id)arg1 propertyHint:(unsigned int)arg2 photoLibrary:(id)arg3;
- (BOOL)isContiguous;
- (BOOL)isFavorite;
- (BOOL)isPending;
- (BOOL)isRejected;
- (BOOL)isUserCreated;
- (id)lastMoviePlayedDate;
- (id)lastViewedDate;
- (id)localizedSubtitle;
- (id)movieData;
- (id)movieStateDataForAsset:(id)arg1;
- (id)photosGraphData;
- (long long)photosGraphVersion;
- (id)predicateForAllAssets;
- (id)predicateForAllMomentsFromRepresentativeAssets;
- (double)score;
- (int)subcategory;
- (id)subtitle;
- (int)titleCategory;
- (id)titleFontName;
- (unsigned int)titleFontNameHash;

@end
