/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreText.framework/CoreText
 */

@interface _CTFontFallbacksArray : NSArray {
    const struct TBaseFont { int (**x1)(); int x2; struct TCFRef<const __CFData *> { struct __CFData {} *x_3_1_1; } x3; struct TCFRef<const __CFData *> { struct __CFData {} *x_4_1_1; } x4; struct TCFRef<const __CFData *> { struct __CFData {} *x_5_1_1; } x5; struct TCFRef<const __CFData *> { struct __CFData {} *x_6_1_1; } x6; struct TCFRef<const __CFData *> { struct __CFData {} *x_7_1_1; } x7; struct TCFRef<const __CFData *> { struct __CFData {} *x_8_1_1; } x8; struct TCFRef<const __CFData *> { struct __CFData {} *x_9_1_1; } x9; struct TCFRef<const __CFData *> { struct __CFData {} *x_10_1_1; } x10; struct TCFRef<const __CFURL *> { struct __CFURL {} *x_11_1_1; } x11; int x12; struct TCFRef<__CFDictionary *> { struct __CFDictionary {} *x_13_1_1; } x13; struct TCFRef<const __CFArray *> { struct __CFArray {} *x_14_1_1; } x14; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_15_1_1; } x15; struct TCFRef<const __CFArray *> { struct __CFArray {} *x_16_1_1; } x16; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_17_1_1; } x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_22_1_1; } x22; struct TCFRef<const __CFData *> { struct __CFData {} *x_23_1_1; } x23; int x24; struct TBMPDataCache {} *x25; struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > {} *x26; struct TTraitsValues {} *x27; unsigned short x28; struct UnscaledAdvancesPage {} *x29; struct StrikeMetrics { float x_30_1_1; float x_30_1_2; float x_30_1_3; unsigned int x_30_1_4; struct CGPoint { float x_5_2_1; float x_5_2_2; } x_30_1_5; struct CGRect { struct CGPoint { float x_1_3_1; float x_1_3_2; } x_6_2_1; struct CGSize { float x_2_3_1; float x_2_3_2; } x_6_2_2; } x_30_1_6; bool x_30_1_7; } x30; unsigned int x31; unsigned int x32; unsigned int x33; struct TMutex { id x_34_1_1; struct TInlineVector<TCFRef<const __CFData *>, 4> { struct TCFRef<const __CFData *> {} *x_2_2_1; struct TCFRef<const __CFData *> {} *x_2_2_2; struct __compressed_pair<TCFRef<const __CFData *> *, TInlineBufferAllocator<TCFRef<const __CFData *>, 4> > { struct TCFRef<const __CFData *> {} *x_3_3_1; struct TInlineBufferAllocator<TCFRef<const __CFData *>, 4> { struct type { unsigned char x_1_5_1[16]; } x_2_4_1; struct TCFRef<const __CFData *> {} *x_2_4_2; } x_3_3_2; } x_2_2_3; } x_34_1_2; struct array<TCFRef<__CFDictionary *>, 7> { struct TCFRef<__CFDictionary *> { struct __CFDictionary {} *x_1_3_1; } x_3_2_1[7]; } x_34_1_3; } x34; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void x43; void*x44; out void*x45; int x46; void*x47; double x48; void*x49; void*x50; void*x51; double x52; void*x53; void*x54; void*x55; void*x56; void*x57; long x58; void*x59; long x60; void*x61; out void*x62; BOOL x63; void*x64; void*x65; void*x66; void*x67; void*x68; long x69; void*x70; void*x71; void*x72; inout void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; out void*x80; const void*x81; void*x82; void*x83; unsigned char x84; void*x85; out void*x86; double x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; const void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; int x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; Class x187; void*x188; void*x189; void*x190; char *x191; void*x192; void*x193; void*x194; void*x195; void*x196; union x197; void*x198; void*x199; void*x200; char *x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; SEL x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; id x245; void*x246; bool x247; void*x248; unsigned char x249; void*x250; long doublex251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; unsigned int x261; void*x262; void*x263; void*x264; void*x265; void*x266; unsigned long x267; void*x268; void*x269; void*x270; inout void*x271; bycopy void*x272; void*x273; void*x274; unsigned long long x275; void*x276; void*x277; void*x278; unsigned short x279; void*x280; void*x281; void*x282; void*x283; void*x284; oneway void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void* x294[ /* ? */ ]; void*x295; void*x296; void*x297; void*x298; void*x299; void**x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; unsigned int x307/* : ? */; void*x308; BOOL x309; void*x310; double x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; float x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; int x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; long x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; in void*x445; void*x446; void*x447; out void*x448; long long x449; void*x450; void*x451; void*x452; const void*x453; void*x454; void*x455; short x456; void*x457; void*x458; void*x459; void*x460; void*x461; void x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; struct x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; } *_baseFont;
    NSArray *_cascade;
    struct CharRangeToDescriptorMap { struct TInlineVector<std::__1::tuple<unsigned short, unsigned short, const __CTFontDescriptor *>, 30> { struct tuple<unsigned short, unsigned short, const __CTFontDescriptor *> {} *x_1_1_1; struct tuple<unsigned short, unsigned short, const __CTFontDescriptor *> {} *x_1_1_2; struct __compressed_pair<std::__1::tuple<unsigned short, unsigned short, const __CTFontDescriptor *> *, TInlineBufferAllocator<std::__1::tuple<unsigned short, unsigned short, const __CTFontDescriptor *>, 30> > { struct tuple<unsigned short, unsigned short, const __CTFontDescriptor *> {} *x_3_2_1; struct TInlineBufferAllocator<std::__1::tuple<unsigned short, unsigned short, const __CTFontDescriptor *>, 30> { struct type { unsigned char x_1_4_1[240]; } x_2_3_1; struct tuple<unsigned short, unsigned short, const __CTFontDescriptor *> {} *x_2_3_2; } x_3_2_2; } x_1_1_3; } x1; struct __wrap_iter<const std::__1::tuple<unsigned short, unsigned short, const __CTFontDescriptor *> *> { struct tuple<unsigned short, unsigned short, const __CTFontDescriptor *> {} *x_2_1_1; } x2; } *_charMap;
    unsigned int _count;
    NSMutableArray *_fallbacks;
    int _lock;
}

- (struct __CTFontDescriptor { }*)cachedDescriptorForCharacter:(unsigned short)arg1;
- (unsigned int)count;
- (unsigned int)countByEnumeratingWithState:(struct { unsigned long x1; id *x2; unsigned long x3; unsigned long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned int)arg3;
- (void)dealloc;
- (void)getObjects:(id*)arg1 range:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2;
- (id)initWithBaseFont:(const struct TBaseFont { int (**x1)(); int x2; struct TCFRef<const __CFData *> { struct __CFData {} *x_3_1_1; } x3; struct TCFRef<const __CFData *> { struct __CFData {} *x_4_1_1; } x4; struct TCFRef<const __CFData *> { struct __CFData {} *x_5_1_1; } x5; struct TCFRef<const __CFData *> { struct __CFData {} *x_6_1_1; } x6; struct TCFRef<const __CFData *> { struct __CFData {} *x_7_1_1; } x7; struct TCFRef<const __CFData *> { struct __CFData {} *x_8_1_1; } x8; struct TCFRef<const __CFData *> { struct __CFData {} *x_9_1_1; } x9; struct TCFRef<const __CFData *> { struct __CFData {} *x_10_1_1; } x10; struct TCFRef<const __CFURL *> { struct __CFURL {} *x_11_1_1; } x11; int x12; struct TCFRef<__CFDictionary *> { struct __CFDictionary {} *x_13_1_1; } x13; struct TCFRef<const __CFArray *> { struct __CFArray {} *x_14_1_1; } x14; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_15_1_1; } x15; struct TCFRef<const __CFArray *> { struct __CFArray {} *x_16_1_1; } x16; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_17_1_1; } x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct TCFRef<const __CFCharacterSet *> { struct __CFCharacterSet {} *x_22_1_1; } x22; struct TCFRef<const __CFData *> { struct __CFData {} *x_23_1_1; } x23; int x24; struct TBMPDataCache {} *x25; struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > {} *x26; struct TTraitsValues {} *x27; unsigned short x28; struct UnscaledAdvancesPage {} *x29; struct StrikeMetrics { float x_30_1_1; float x_30_1_2; float x_30_1_3; unsigned int x_30_1_4; struct CGPoint { float x_5_2_1; float x_5_2_2; } x_30_1_5; struct CGRect { struct CGPoint { float x_1_3_1; float x_1_3_2; } x_6_2_1; struct CGSize { float x_2_3_1; float x_2_3_2; } x_6_2_2; } x_30_1_6; bool x_30_1_7; } x30; unsigned int x31; unsigned int x32; unsigned int x33; struct TMutex { id x_34_1_1; struct TInlineVector<TCFRef<const __CFData *>, 4> { struct TCFRef<const __CFData *> {} *x_2_2_1; struct TCFRef<const __CFData *> {} *x_2_2_2; struct __compressed_pair<TCFRef<const __CFData *> *, TInlineBufferAllocator<TCFRef<const __CFData *>, 4> > { struct TCFRef<const __CFData *> {} *x_3_3_1; struct TInlineBufferAllocator<TCFRef<const __CFData *>, 4> { struct type { unsigned char x_1_5_1[16]; } x_2_4_1; struct TCFRef<const __CFData *> {} *x_2_4_2; } x_3_3_2; } x_2_2_3; } x_34_1_2; struct array<TCFRef<__CFDictionary *>, 7> { struct TCFRef<__CFDictionary *> { struct __CFDictionary {} *x_1_3_1; } x_3_2_1[7]; } x_34_1_3; } x34; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; in void*x45; void*x46; void*x47; long x48; void*x49; unsigned short x50; void*x51; void*x52; void*x53; const void*x54; void*x55; void*x56; in void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; SEL x64; void*x65; union x66; void*x67; int x68; void*x69; double x70; void*x71; void*x72; void*x73; void*x74; void*x75; const void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; BOOL x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; in void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; short x111; void*x112; void*x113; void*x114; void*x115; void*x116; id x117; void*x118; void*x119; const void*x120; out void*x121; void*x122; void*x123; void*x124; void*x125; const void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; struct x143; void*x144; void*x145; void*x146; int x147; void*x148; double x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; short x173; void*x174; void*x175; void*x176; const void*x177; void*x178; void*x179; BOOL x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; unsigned int x188; void*x189; in void*x190; long x191; void*x192; int x193; void*x194; in void*x195; void*x196; void*x197; oneway void*x198; void*x199; void*x200; BOOL x201; void*x202; void*x203; void*x204; out void*x205; const void*x206; void*x207; void*x208; void*x209; void*x210; unsigned char x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; float x219; void*x220; void*x221; void*x222; BOOL x223; void*x224; out void*x225; in void*x226; short x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; unsigned char x237; void*x238; void*x239; void*x240; long doublex241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; char *x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; struct x265; void*x266; void*x267; void*x268; short x269; void*x270; void*x271; void*x272; const void*x273; void*x274; void*x275; BOOL x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; unsigned char x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; float x292; void*x293; void*x294; void*x295; BOOL x296; void*x297; out void*x298; in void*x299; short x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; unsigned char x310; void*x311; void*x312; void*x313; long doublex314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; char *x324; void*x325; void*x326; void*x327; void*x328; void*x329; struct x330; void*x331; }*)arg1 cascade:(id)arg2;
- (id)objectAtIndex:(unsigned int)arg1;
- (id)objectAtIndex:(unsigned int)arg1 shouldLock:(bool)arg2 addRanges:(bool)arg3;

@end
