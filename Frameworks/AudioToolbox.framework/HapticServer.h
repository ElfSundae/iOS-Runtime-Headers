/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 */

@interface HapticServer : NSObject <NSXPCListenerDelegate> {
    unsigned int  _initCount;
    NSXPCListener * _listener;
    struct ServerManager { struct map<unsigned int, std::__1::shared_ptr<ClientEntry>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ClientEntry> > > > { struct __tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> > > > { struct __tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::less<unsigned int>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_1_1_1; } x1; } * _manager;
    unsigned int  _prewarmCount;
    struct map<int, std::__1::bitset<255>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::bitset<255> > > > { 
        struct __tree<std::__1::__value_type<int, std::__1::bitset<255> >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::bitset<255> >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::bitset<255> > > > { 
            struct __tree_node<std::__1::__value_type<int, std::__1::bitset<255> >, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::bitset<255> >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::bitset<255> >, std::__1::less<int>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _processIndexMap;
    unsigned int  _runningChannelIDCount;
    unsigned int  _runningCount;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (readonly) unsigned int initCount;
@property (readonly) /* Warning: unhandled struct encoding: '{ServerManager={map<unsigned int' */ struct *manager; /* unknown property attribute:  unsigned long>=LL}^{HapticSynth}{HapticMutex=^^?*^{_opaque_pthread_t}{_opaque_pthread_mutex_t=l[40c]}}^{VibeEngine}d^{opaqueCMSession}iBiBBBB@^{RealtimeMessenger}} */
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)addProcessEntry:(int)arg1;
- (long)cancelPatternWithOptions:(struct __CFDictionary { }*)arg1;
- (void)dealloc;
- (void)decrementInit;
- (void)decrementPrewarmCount;
- (void)decrementRunningCount:(id /* block */)arg1;
- (struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })entryWithID:(unsigned int)arg1;
- (unsigned int)getChannelID;
- (BOOL)incrementInit:(id*)arg1;
- (unsigned int)incrementPrewarmCount;
- (unsigned int)incrementRunningCount;
- (id)init;
- (unsigned int)initCount;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (long)loadSynthPreset;
- (struct ServerManager { struct map<unsigned int, std::__1::shared_ptr<ClientEntry>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ClientEntry> > > > { struct __tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> > > > { struct __tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ClientEntry> >, std::__1::less<unsigned int>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_1_1_1; } x1; }*)manager;
- (long)playVibePattern:(struct __CFDictionary { }*)arg1 gain:(float)arg2 synchronizer:(struct SSPlayerSynchronizer { }*)arg3 flags:(unsigned long)arg4 atTime:(double)arg5 completionHandler:(id /* block */)arg6;
- (void)removeProcessEntry:(unsigned int)arg1;
- (long)setupClient:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (long)startPrewarm;
- (long)stopPrewarm;

@end
