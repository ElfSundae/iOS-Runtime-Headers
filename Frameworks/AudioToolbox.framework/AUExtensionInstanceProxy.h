/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 */

@interface AUExtensionInstanceProxy : NSObject {
    struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; } *_auInstance;
}

@property (nonatomic) struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; /* Warning: unhandled struct encoding: '{vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener' */ struct x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; id x68; int x69; void*x70; void*x71; void*x72; int x73; void*x74; void*x75; void*x76; int x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; unsigned short x100; void*x101; bool x102; void*x103; void*x104; BOOL x105; void*x106; unsigned short x107; void*x108; in BOOL x109; void*x110; in double x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; unsigned short x131; void*x132; short x133; void*x134; void*x135; void*x136; void*x137; unsigned long x138; int x139; unsigned int x140/* : ? */; const void*x141; const void*x142; void*x143; void*x144; const int x145; void x146; void*x147; void*x148; void*x149; void*x150; const void*x151; void*x152; void*x153; void*x154; out const void*x155; short x156; void*x157; unsigned char x158; out void*x159; void*x160; void*x161; in int x162; out in unsigned short x163; void*x164; in BOOL x165; void*x166; float x167; const void*x168; void*x169; void*x170; void*x171; out const void*x172; void*x173; unsigned char x174; out void*x175; void*x176; void*x177; in int x178; out in unsigned short x179; void*x180; in BOOL x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; unsigned int x238; void*x239; unsigned short x240; void*x241; short x242; void*x243; void*x244; void*x245; void*x246; unsigned long x247; int x248; unsigned int x249/* : ? */; const void*x250; const void*x251; void*x252; void*x253; const int x254; void x255; void*x256; void*x257; void*x258; void*x259; const void*x260; void*x261; void*x262; void*x263; out const void*x264; short x265; void*x266; unsigned char x267; void*x268; long x269; void*x270; in double x271; void*x272; const long doublex273; void*x274; void*x275; void*x276; out in void*x277; float x278; const void*x279; void*x280; void*x281; void*x282; out const void*x283; void*x284; unsigned char x285; void*x286; long x287; void*x288; in double x289; void*x290; const long doublex291; void*x292; void*x293; void*x294; out in void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; unsigned long x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; int x351; void*x352; union x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; inout unsigned short x376; inout void*x377; short x378; void*x379; void*x380; double x381; long doublex382; int x383; BOOL x384; void*x385; int x386; out in void*x387; const void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; int x435; void*x436; void*x437; in void*x438; void*x439; id x440; int x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; unsigned short x456; void*x457; void*x458; unsigned int x459/* : ? */; }*auInstance; /* unknown property attribute:  std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> >=^{ScopeElementIDObj}}}}{HostCallbackInfo=^v^?^?^?^?}} */

- (struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)auInstance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setAuInstance:(struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)arg1;

@end
