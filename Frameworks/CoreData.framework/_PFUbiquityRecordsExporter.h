/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@interface _PFUbiquityRecordsExporter : NSObject {
    BOOL _allowTempLogStorage;
    NSDate *_lastTransactionDate;
    NSString *_localPeerID;
    PFUbiquityLocation *_localRootLocation;
    BOOL _pendingTempLogMove;
    NSMutableDictionary *_pendingTransactionsToStoreNameAndTransactionNumber;
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSString *_storeName;
    BOOL _throwOptimisticLockingException;
    NSLock *_transactionLock;
    PFUbiquityLocation *_ubiquityRootLocation;
    BOOL _useLocalStorage;
}

@property (nonatomic) BOOL allowTempLogStorage;
@property (nonatomic, readonly) PFUbiquityLocation *currentRootLocation;
@property (retain) NSDate *lastTransactionDate;
@property (nonatomic, readonly) NSString *localPeerID;
@property (nonatomic, readonly) PFUbiquityLocation *localRootLocation;
@property (nonatomic, readonly) BOOL pendingTempLogMove;
@property (nonatomic) BOOL throwOptimisticLockingException;
@property (nonatomic, retain) PFUbiquityLocation *ubiquityRootLocation;
@property (nonatomic) BOOL useLocalStorage;

- (BOOL)allowTempLogStorage;
- (void)beginWatchingForChangesFromStore:(id)arg1;
- (void)cleanUpFromRolledbackPendingTransaction:(id)arg1 withNotification:(id)arg2;
- (id)createDictionaryForObjectsInSaveNotification:(id)arg1 forTransactionOfType:(int)arg2 withExportContext:(id)arg3 andSaveSnapshot:(id)arg4;
- (id)currentRootLocation;
- (void)dealloc;
- (id)description;
- (id)init;
- (id)initWithLocalPeerID:(id)arg1 forStoreName:(id)arg2 ubiquityRootLocation:(id)arg3 localRootLocation:(id)arg4 andProcessingQueue:(id)arg5;
- (id)lastTransactionDate;
- (id)localPeerID;
- (id)localRootLocation;
- (void)managedObjectContextDidSave:(id)arg1;
- (void)moveLogsFromTempDirectory;
- (BOOL)pendingTempLogMove;
- (void)scheduleTempLogMove;
- (void)setAllowTempLogStorage:(BOOL)arg1;
- (void)setLastTransactionDate:(id)arg1;
- (void)setThrowOptimisticLockingException:(BOOL)arg1;
- (void)setUbiquityRootLocation:(id)arg1;
- (void)setUseLocalStorage:(BOOL)arg1;
- (BOOL)shouldRespondToSaveNotification:(id)arg1;
- (void)stopWatchingForChanges;
- (BOOL)throwOptimisticLockingException;
- (id)ubiquityRootLocation;
- (BOOL)useLocalStorage;

@end
