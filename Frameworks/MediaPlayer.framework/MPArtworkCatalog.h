/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPArtworkCatalog : NSObject {
    NSString * _cacheIdentifier;
    id /* block */  _configurationBlock;
    <MPArtworkDataSource> * _dataSource;
    id  _destination;
    float  _destinationScale;
    struct CGSize { 
        float width; 
        float height; 
    }  _fittingSize;
    BOOL  _loadingRepresentation;
    long long  _modelRevisionID;
    unsigned int  _renderHint;
    id  _requestingContext;
    id  _token;
}

@property (nonatomic, readonly) int MP_artworkType;
@property (nonatomic, readonly) NSCache *cache;
@property (nonatomic, copy) NSString *cacheIdentifier;
@property (nonatomic, copy) id /* block */ configurationBlock;
@property (nonatomic) <MPArtworkDataSource> *dataSource;
@property (nonatomic) id destination;
@property (nonatomic) float destinationScale;
@property (nonatomic) struct CGSize { float x1; float x2; } fittingSize;
@property (nonatomic, readonly) BOOL hasImageOnDisk;
@property (getter=isLoadingRepresentation) BOOL loadingRepresentation;
@property (nonatomic) unsigned int renderHint;
@property (nonatomic) id requestingContext;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } scaledFittingSize;
@property (nonatomic, retain) id token;
@property (nonatomic, readonly) <NSCopying> *visualIdenticalityIdentifier;

+ (id)_artworkCacheForIdentifier:(id)arg1 requestingContext:(id)arg2;
+ (id)_artworkLoadQueue;
+ (void)setCacheLimit:(unsigned int)arg1 forCacheIdentifier:(id)arg2 requestingContext:(id)arg3;
+ (void)setCachePurgesWhenEnteringBackground:(BOOL)arg1 forCacheIdentifier:(id)arg2 requestingContext:(id)arg3;
+ (id)staticArtworkCatalogWithImage:(id)arg1;

- (void).cxx_destruct;
- (int)MP_artworkType;
- (void)_loadBestRepresentationIfNeeded;
- (void)_updateRepresentation;
- (void)_updateWithRepresentation:(id)arg1 isBestRepresentation:(BOOL)arg2 modelRevisionID:(long long)arg3;
- (id)bestImageFromDisk;
- (id)cache;
- (id)cacheIdentifier;
- (id /* block */)configurationBlock;
- (id)dataSource;
- (void)dealloc;
- (id)description;
- (id)destination;
- (float)destinationScale;
- (id)existingColorAnalysisWithAlgorithm:(int)arg1;
- (struct CGSize { float x1; float x2; })fittingSize;
- (BOOL)hasImageOnDisk;
- (unsigned int)hash;
- (id)initWithToken:(id)arg1 dataSource:(id)arg2;
- (BOOL)isArtworkVisuallyIdenticalToCatalog:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isLoadingRepresentation;
- (unsigned int)renderHint;
- (void)requestColorAnalysisWithAlgorithm:(int)arg1 completionHandler:(id /* block */)arg2;
- (void)requestFocusRegionsWithCompletionHandler:(id /* block */)arg1;
- (void)requestImageWithCompletionHandler:(id /* block */)arg1;
- (void)requestRadiosityImageWithCompletionHandler:(id /* block */)arg1;
- (id)requestingContext;
- (struct CGSize { float x1; float x2; })scaledFittingSize;
- (void)setCacheIdentifier:(id)arg1;
- (void)setCacheIdentifier:(id)arg1 forRequestingContext:(id)arg2;
- (void)setConfigurationBlock:(id /* block */)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestination:(id)arg1 configurationBlock:(id /* block */)arg2;
- (void)setDestination:(id)arg1 progressiveConfigurationBlock:(id /* block */)arg2;
- (void)setDestinationScale:(float)arg1;
- (void)setFittingSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setLoadingRepresentation:(BOOL)arg1;
- (void)setRenderHint:(unsigned int)arg1;
- (void)setRequestingContext:(id)arg1;
- (void)setToken:(id)arg1;
- (id)token;
- (id)visualIdenticalityIdentifier;

@end
