/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPQueueFeeder : NSObject <MPQueueBehaviorManaging, MusicEntityValueProviding, NSCoding> {
    unsigned int _activeShuffleType;
    <MPQueueFeederDelegate> *_delegate;
    NSMutableDictionary *_nextStartTimes;
    unsigned int _repeatType;
    BOOL _requiresQueueChangeVerification;
    unsigned int _shuffleType;
    struct { 
        int numberOfAvailableSkips; 
        int skipFrequency; 
        double skipInterval; 
    } _skipLimit;
    unsigned int _state;
}

@property (nonatomic, readonly) MPUContentItemIdentifierCollection *MPU_contentItemIdentifierCollection;
@property (nonatomic) unsigned int activeShuffleType;
@property (nonatomic, readonly) BOOL allowsUserVisibleUpcomingItems;
@property (nonatomic, readonly) BOOL canReorder;
@property (nonatomic, readonly) BOOL canSeek;
@property (nonatomic, readonly) BOOL canSkipToPreviousItem;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MPQueueFeederDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) Class itemClass;
@property (nonatomic, readonly) unsigned int itemCount;
@property (setter=mpuReporting_setFeatureName:, nonatomic, copy) NSString *mpuReporting_featureName;
@property (setter=mpuReporting_setRecommendationData:, nonatomic, copy) NSData *mpuReporting_recommendationData;
@property (nonatomic, readonly) int playbackMode;
@property (nonatomic, readonly) BOOL playerPreparesItemsForPlaybackAsynchronously;
@property (nonatomic, readonly) unsigned int realRepeatType;
@property (nonatomic, readonly) unsigned int realShuffleType;
@property (nonatomic) unsigned int repeatType;
@property (nonatomic) BOOL requiresQueueChangeVerification;
@property (nonatomic) unsigned int shuffleType;
@property (nonatomic) struct { int x1; int x2; double x3; } skipLimit;
@property (nonatomic) unsigned int state;
@property (nonatomic, readonly) RadioStation *station;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL trackChangesCanEndPlayback;
@property (nonatomic, readonly) BOOL userCanChangeShuffleAndRepeatType;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

+ (BOOL)supportsStateRestoration;

- (void).cxx_destruct;
- (BOOL)_canPurgeNextStartTimes;
- (unsigned int)activeShuffleType;
- (BOOL)allowsUserVisibleUpcomingItems;
- (id)audioSessionModeForItemAtIndex:(unsigned int)arg1;
- (BOOL)canReorder;
- (BOOL)canSeek;
- (BOOL)canSkipItem:(id)arg1;
- (BOOL)canSkipToPreviousItem;
- (void)contentsDidChangeWithPreferredStartIndex:(unsigned int)arg1;
- (void)contentsDidChangeWithPreferredStartIndex:(unsigned int)arg1 error:(id)arg2;
- (void)contentsDidChangeWithReplacementPlaybackContext:(id)arg1;
- (id)copyRawItemAtIndex:(unsigned int)arg1;
- (id)delegate;
- (void)encodeWithCoder:(id)arg1;
- (id)errorResolverForItem:(id)arg1;
- (BOOL)hasItemForIndex:(unsigned int)arg1;
- (BOOL)hasValidItemAtIndex:(unsigned int)arg1;
- (id)identifierAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfItemWithIdentifier:(id)arg1;
- (unsigned int)indexOfMediaItem:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned int)initialPlaybackQueueDepthForStartingIndex:(unsigned int)arg1;
- (void)invalidateAssets;
- (Class)itemClass;
- (unsigned int)itemCount;
- (id)itemForIdentifier:(id)arg1;
- (id)itemForIndex:(unsigned int)arg1;
- (unsigned int)itemTypeForIndex:(unsigned int)arg1;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)mediaItemAtIndex:(unsigned int)arg1;
- (id)metadataItemForIdentifier:(id)arg1;
- (id)pathAtIndex:(unsigned int)arg1;
- (id)playbackInfoForIdentifier:(id)arg1;
- (int)playbackMode;
- (void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2;
- (void)player:(id)arg1 currentItemWillChangeFromItem:(id)arg2;
- (BOOL)player:(id)arg1 shouldContinuePlaybackForNetworkType:(int)arg2 returningError:(id*)arg3;
- (BOOL)playerPreparesItemsForPlaybackAsynchronously;
- (id)preferredLanguages;
- (unsigned int)realRepeatType;
- (unsigned int)realShuffleType;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned int)repeatType;
- (BOOL)requiresQueueChangeVerification;
- (void)setActiveShuffleType:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setNextStartTime:(double)arg1 forIndentifier:(id)arg2;
- (void)setRepeatType:(unsigned int)arg1;
- (void)setRequiresQueueChangeVerification:(BOOL)arg1;
- (void)setShuffleType:(unsigned int)arg1;
- (void)setSkipLimit:(struct { int x1; int x2; double x3; })arg1;
- (void)setState:(unsigned int)arg1;
- (BOOL)shouldBeginPlaybackOfItem:(id)arg1 error:(id*)arg2;
- (BOOL)shouldReuseQueueFeederForPlaybackContext:(id)arg1;
- (void)shuffleItemsWithAnchor:(unsigned int*)arg1;
- (unsigned int)shuffleType;
- (struct { int x1; int x2; double x3; })skipLimit;
- (unsigned int)state;
- (BOOL)trackChangesCanEndPlayback;
- (BOOL)userCanChangeShuffleAndRepeatType;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (id)entityUniqueIdentifier;
- (id)imageURLForEntityArtworkProperty:(id)arg1 fittingSize:(struct CGSize { float x1; float x2; })arg2 destinationScale:(float)arg3;
- (id)valueForEntityProperty:(id)arg1;
- (id)valuesForEntityProperties:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

- (id)MPU_contentItemIdentifierCollection;
- (id)mpuReporting_featureName;
- (id)mpuReporting_recommendationData;
- (void)mpuReporting_setFeatureName:(id)arg1;
- (void)mpuReporting_setRecommendationData:(id)arg1;

// Image: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI

- (BOOL)isRadioQueueFeeder;
- (id)station;

@end
