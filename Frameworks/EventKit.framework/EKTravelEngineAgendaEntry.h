/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@interface EKTravelEngineAgendaEntry : NSObject {
    NSObject<OS_dispatch_queue> *_callbackQueue;
    BOOL _dismissed;
    id /* block */ _entrySignificantlyChangedBlock;
    CLLocation *_geoLocation;
    BOOL _geocodedEventEncountered;
    CalGeocoder *_geocoder;
    GEORouteHypothesizer *_hypothesizer;
    BOOL _hypothesizerSentAtLeastOneHypothesis;
    EKTravelEngineHypothesis *_latestHypothesis;
    NSData *_mapKitHandle;
    double _maximumTravelDurationEncountered;
    EKTravelEngineOriginalEvent *_originalEventInternal;
    EKTravelEngineThrottle *_throttle;
    int _travelTimeThresholdExceededState;
    id /* block */ _updateBlock;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic) BOOL dismissed;
@property (nonatomic, copy) id /* block */ entrySignificantlyChangedBlock;
@property (nonatomic, retain) CLLocation *geoLocation;
@property (nonatomic) BOOL geocodedEventEncountered;
@property (nonatomic, retain) CalGeocoder *geocoder;
@property (nonatomic, retain) GEORouteHypothesizer *hypothesizer;
@property (nonatomic) BOOL hypothesizerSentAtLeastOneHypothesis;
@property (nonatomic, retain) EKTravelEngineHypothesis *latestHypothesis;
@property (nonatomic, retain) NSData *mapKitHandle;
@property (nonatomic) double maximumTravelDurationEncountered;
@property (nonatomic, readonly) EKTravelEngineOriginalEvent *originalEvent;
@property (nonatomic, retain) EKTravelEngineOriginalEvent *originalEventInternal;
@property (nonatomic, retain) EKTravelEngineThrottle *throttle;
@property (nonatomic) int travelTimeThresholdExceededState;
@property (nonatomic, copy) id /* block */ updateBlock;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (void)_accountForGeocodingFailureWithError:(id)arg1;
+ (void)_accountForHypothesizerNeverHavingSentHypothesis;
+ (void)_accountForHypothesizerSendingHypothesis;
+ (void)_accountForLocationEnhancementSuccess;
+ (void)_accountForNoLocationEnhancementNeeded;
+ (double)_maximumAllowableTravelTime;
+ (double)fuzzyMaximumInitialUpdateIntervalBeforeStartDate;

- (void).cxx_destruct;
- (void)_accountForGeocodedEventEncounter;
- (void)_accountForMaximumTravelDuration;
- (void)_accountForTravelDurationThresholdExceededState;
- (void)_clearEverything;
- (void)_createHypothesizerForDestination:(id)arg1;
- (void)_createSyntheticHypothesis;
- (void)_enhanceLocation;
- (id)_generateDestination;
- (void)_performAnalyticsPostProcessing;
- (void)_sendFeedbackToHypothesizerForPostingNotification:(unsigned int)arg1;
- (void)_setUpRouteMonitoring;
- (void)_updateTravelTimeExceededThresholdStateUsingExceededValue:(BOOL)arg1;
- (void)_updateWithHypothesis:(id)arg1;
- (id)callbackQueue;
- (BOOL)dismissed;
- (id /* block */)entrySignificantlyChangedBlock;
- (id)geoLocation;
- (BOOL)geocodedEventEncountered;
- (id)geocoder;
- (id)hypothesizer;
- (BOOL)hypothesizerSentAtLeastOneHypothesis;
- (id)init;
- (id)latestHypothesis;
- (id)mapKitHandle;
- (double)maximumTravelDurationEncountered;
- (id)originalEvent;
- (id)originalEventInternal;
- (void)reset;
- (void)sendFeedbackForPostingLeaveByNotification;
- (void)sendFeedbackForPostingLeaveNowNotification;
- (void)setCallbackQueue:(id)arg1;
- (void)setDismissed:(BOOL)arg1;
- (void)setEntrySignificantlyChangedBlock:(id /* block */)arg1;
- (void)setGeoLocation:(id)arg1;
- (void)setGeocodedEventEncountered:(BOOL)arg1;
- (void)setGeocoder:(id)arg1;
- (void)setHypothesizer:(id)arg1;
- (void)setHypothesizerSentAtLeastOneHypothesis:(BOOL)arg1;
- (void)setLatestHypothesis:(id)arg1;
- (void)setMapKitHandle:(id)arg1;
- (void)setMaximumTravelDurationEncountered:(double)arg1;
- (void)setOriginalEventInternal:(id)arg1;
- (void)setThrottle:(id)arg1;
- (void)setTravelTimeThresholdExceededState:(int)arg1;
- (void)setUpdateBlock:(id /* block */)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)throttle;
- (int)travelTimeThresholdExceededState;
- (id /* block */)updateBlock;
- (void)updateWithOriginalEvent:(id)arg1;
- (id)workQueue;

@end
