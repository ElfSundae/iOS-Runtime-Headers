/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@interface EKTravelAdvisoryTimelinessAuthority : NSObject <CalActivatable> {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    BOOL  _internalActive;
    unsigned int  _internalPeriod;
    id /* block */  _internalPeriodChangedCallback;
    NSDate * _startOfLeaveNowPeriod;
    NSDate * _startOfRunningLatePeriod;
    NSObject<OS_dispatch_source> * _timer;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly) BOOL active;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) BOOL internalActive;
@property (nonatomic) unsigned int internalPeriod;
@property (nonatomic, copy) id /* block */ internalPeriodChangedCallback;
@property (nonatomic, readonly) unsigned int period;
@property (nonatomic, copy) id /* block */ periodChangedCallback;
@property (nonatomic, retain) NSDate *startOfLeaveNowPeriod;
@property (nonatomic, retain) NSDate *startOfRunningLatePeriod;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *timer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)stringForPeriod:(unsigned int)arg1;

- (void).cxx_destruct;
- (void)_refresh;
- (void)_refreshOnDate:(id)arg1;
- (void)_refreshPeriod;
- (void)_refreshTimer;
- (void)_uninstallTimer;
- (void)activate;
- (BOOL)active;
- (id)callbackQueue;
- (void)deactivate;
- (void)dealloc;
- (id)init;
- (BOOL)internalActive;
- (unsigned int)internalPeriod;
- (id /* block */)internalPeriodChangedCallback;
- (unsigned int)period;
- (id /* block */)periodChangedCallback;
- (void)setCallbackQueue:(id)arg1;
- (void)setInternalActive:(BOOL)arg1;
- (void)setInternalPeriod:(unsigned int)arg1;
- (void)setInternalPeriodChangedCallback:(id /* block */)arg1;
- (void)setPeriodChangedCallback:(id /* block */)arg1;
- (void)setStartOfLeaveNowPeriod:(id)arg1;
- (void)setStartOfRunningLatePeriod:(id)arg1;
- (void)setTimer:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)startOfLeaveNowPeriod;
- (id)startOfRunningLatePeriod;
- (id)timer;
- (void)updateWithHypothesis:(id)arg1;
- (id)workQueue;

@end
