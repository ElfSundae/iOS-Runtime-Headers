/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook
 */

@interface QLMediaItemViewController : QLScrollableContentItemViewController <QLToolbarButtonAction> {
    double  _elapsedTime;
    NSError * _error;
    struct CGSize { 
        float width; 
        float height; 
    }  _imageSize;
    BOOL  _isFullScreen;
    BOOL  _isVisible;
    AVAsset * _mediaAsset;
    double  _mediaDuration;
    float  _mediaVolume;
    BOOL  _mediaWasPausedOnResignActive;
    BOOL  _playable;
    int  _playbackTimeFormat;
    NSTimer * _playbackTimeHiddenTimer;
    NSObject * _playbackTimeObserver;
    AVPlayer * _player;
    AVPlayerLayer * _playerLayer;
    UIView * _playerView;
    BOOL  _playing;
    NSMutableDictionary * _playingInfo;
    int  _playingStatus;
    id /* block */  _previewItemLoadingBlock;
    double  _remainingTime;
    UIScrollView * _scrubberScrollView;
    UILabel * _timeLabel;
    UIView * _timeLabelBackground;
    NSLayoutConstraint * _timeLabelConstraintX;
    NSLayoutConstraint * _timeLabelConstraintY;
    BOOL  _visualTracksEnabled;
}

@property (nonatomic) float currentPlaybackHeadPosition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double elapsedTime;
@property (nonatomic, readonly) BOOL endOfMediaReached;
@property (nonatomic, retain) NSError *error;
@property (readonly) unsigned int hash;
@property (nonatomic) double mediaDuration;
@property (nonatomic, readonly) float mediaVolume;
@property (nonatomic, readonly) BOOL playable;
@property (nonatomic, readonly) AVPlayer *player;
@property (nonatomic, readonly) AVPlayerLayer *playerLayer;
@property (nonatomic, readonly) UIView *playerView;
@property (nonatomic, readonly) int playingStatus;
@property (nonatomic) double remainingTime;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL visualTracksEnabled;

- (void).cxx_destruct;
- (id)_playingInfoWithPlaybackDuration:(double)arg1 elapsedTime:(double)arg2;
- (void)_registerForCommandCenterHandlers;
- (void)_unregisterForCommandCenterHandlers;
- (void)_updateCommandCencerPlayingInfoWithCurrentPlaybackTimeInformation;
- (void)_updateExternalPlayback;
- (void)_updatePlayingStatus;
- (void)buttonPressedWithIdentifier:(id)arg1;
- (float)currentPlaybackHeadPosition;
- (void)dealloc;
- (void)didChangePlayingStatus;
- (void)didReachEndOfMedia;
- (double)elapsedTime;
- (BOOL)endOfMediaReached;
- (id)error;
- (void)hideTimeLabel;
- (void)hideTimeLabelAfterDelay;
- (void)hideTimeLabelAnimated:(BOOL)arg1;
- (void)hostApplicationDidBecomeActive;
- (void)hostApplicationDidEnterBackground:(id)arg1;
- (struct CGSize { float x1; float x2; })imageSize;
- (id)labelTextWithFormat:(int)arg1 elapsedInterval:(double)arg2 remainingInterval:(double)arg3;
- (void)loadPreviewControllerWithPreviewItem:(id)arg1 completionHandler:(id /* block */)arg2;
- (double)mediaDuration;
- (float)mediaVolume;
- (void)observePlayingTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)play;
- (BOOL)playable;
- (id)player;
- (void)playerItemDidReachEnd:(id)arg1;
- (id)playerLayer;
- (id)playerView;
- (int)playingStatus;
- (void)previewBecameFullScreen:(BOOL)arg1 animated:(BOOL)arg2;
- (void)previewDidAppear:(BOOL)arg1;
- (void)previewDidDisappear:(BOOL)arg1;
- (void)previewIsAppearingWithProgress:(float)arg1;
- (void)previewWillAppear:(BOOL)arg1;
- (void)previewWillDisappear:(BOOL)arg1;
- (id)registeredKeyCommands;
- (double)remainingTime;
- (void)removeTimeLabel;
- (void)resetToBeginning;
- (void)setAppearance:(id)arg1 animated:(BOOL)arg2;
- (void)setCurrentPlaybackHeadPosition:(float)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setError:(id)arg1;
- (void)setMediaDuration:(double)arg1;
- (void)setMediaVolume:(float)arg1;
- (void)setRemainingTime:(double)arg1;
- (void)setTimeLabelNeedsUpdate;
- (void)setUpTimeLabelIfNeeded;
- (void)showTimeLabel;
- (void)showTimeLabelIfNeeded;
- (void)stop;
- (id)stringFromTimeInterval:(double)arg1;
- (id)timeLabelScrollView;
- (void)togglePlayback;
- (id)toolbarButtons;
- (void)transitionDidFinish:(BOOL)arg1 didComplete:(BOOL)arg2;
- (void)userScrubbedInControlCenter:(id)arg1;
- (BOOL)visualTracksEnabled;

@end
