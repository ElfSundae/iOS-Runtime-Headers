/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ModelIO.framework/ModelIO
 */

@interface MDLScene : NSObject {
    NSMutableArray *_objects;
    /* Warning: unhandled struct encoding: '{vector<MDLLight *, std::__1::allocator<MDLLight *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MDLLight *__strong *, std::__1::allocator<MDLLight *> >="__first_"^@}}' */ struct vector<MDLLight *, std::__1::allocator<MDLLight *> > { 
        __end_ **__begin_; 
    } _sceneLights;
    struct mutex { struct _opaque_pthread_mutex_t { long x_1_1_1; BOOL x_1_1_2[40]; } x1; } *_sceneMutex;
    struct vector<ModelIO::RTRenderable *, std::__1::allocator<ModelIO::RTRenderable *> > { 
        struct RTRenderable {} **__begin_; 
        struct RTRenderable {} **__end_; 
        struct __compressed_pair<ModelIO::RTRenderable **, std::__1::allocator<ModelIO::RTRenderable *> > { 
            struct RTRenderable {} **__first_; 
        } __end_cap_; 
    } _sceneObjects;
    int _signature;
}

@property (nonatomic, readonly, retain) NSArray *objects;

- (id).cxx_construct;
- (void).cxx_destruct;
- (int)acquireLockGuard;
- (void)addObject:(id)arg1;
- (BOOL)castRayFrom:(void *)arg1 withDirection:(void *)arg2 usingCamera:(void *)arg3 result:(void *)arg4; // needs 4 arg types, found 2: struct RTCamera { int (**x1)(); unsigned int x2; unsigned int x3; float x4; float x5; int x6; float *x7; id **x8; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x9; void*x10; void*x11[4]; }*, struct RTIntersectionResult { float x1; struct RTGeometry {} *x2; id x3; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; unsigned short x29; void*x30; short x31; void*x32; void*x33; void*x34; void*x35; unsigned long x36; int x37; unsigned int x38/* : ? */; const void*x39; const void*x40; void*x41; void*x42; const int x43; void x44; void*x45; void*x46; void*x47; void*x48; const void*x49; void*x50; void*x51; void*x52; out const void*x53; short x54; void*x55; unsigned short x56; void*x57; out const void*x58; void*x59; int x60; void*x61; void*x62; unsigned int x63; void*x64; float x65; const void*x66; void*x67; void*x68; void*x69; out const void*x70; void*x71; unsigned short x72; void*x73; out const void*x74; void*x75; int x76; void*x77; void*x78; unsigned int x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; long long x137; void*x138; void*x139; }*
- (void)clear;
- (void)dealloc;
- (void)hitTestRayFrom:(void *)arg1 withDirection:(void *)arg2 usingCamera:(void *)arg3; // needs 3 arg types, found 1: id
- (id)init;
- (id)objects;
- (id)raytraceSceneWithCamera:(void *)arg1 reflection:(void *)arg2 irradiance:(void *)arg3 size:(void *)arg4; // needs 4 arg types, found 3: const struct RTCamera { int (**x1)(); unsigned int x2; unsigned int x3; float x4; float x5; int x6; float *x7; id **x8; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x9; void*x10; void*x11[4]; }*, id, id
- (void)releaseLockGuard:(int)arg1;

@end
