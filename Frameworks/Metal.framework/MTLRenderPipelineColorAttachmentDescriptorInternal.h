/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@interface MTLRenderPipelineColorAttachmentDescriptorInternal : MTLRenderPipelineColorAttachmentDescriptor {
    struct MTLRenderPipelineAttachmentDescriptorPrivate { 
        union { 
            struct { 
                unsigned int blendingEnabled : 1; 
                unsigned int rgbBlendOperation : 3; 
                unsigned int alphaBlendOperation : 3; 
                unsigned int sourceRGBBlendFactor : 4; 
                unsigned int sourceAlphaBlendFactor : 4; 
                unsigned int destinationRGBBlendFactor : 4; 
                unsigned int destinationAlphaBlendFactor : 4; 
                unsigned int writeMask : 4; 
                unsigned int logicOp : 4; 
                unsigned int logicOpEnabled : 1; 
                unsigned int pixelFormat; 
            } ; 
            struct { 
                unsigned long long hash; 
            } ; 
        } ; 
    } _private;
}

- (const struct MTLRenderPipelineAttachmentDescriptorPrivate { union { struct { unsigned int x_1_2_1 : 1; unsigned int x_1_2_2 : 3; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 4; unsigned int x_1_2_5 : 4; unsigned int x_1_2_6 : 4; unsigned int x_1_2_7 : 4; unsigned int x_1_2_8 : 4; unsigned int x_1_2_9 : 4; unsigned int x_1_2_10 : 1; unsigned int x_1_2_11; } x_1_1_1; struct { unsigned long long x_2_2_1; } x_1_1_2; } x1; }*)_descriptorPrivate;
- (unsigned int)alphaBlendOperation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (unsigned int)destinationAlphaBlendFactor;
- (unsigned int)destinationRGBBlendFactor;
- (unsigned int)hash;
- (id)init;
- (BOOL)isBlendingEnabled;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)pixelFormat;
- (unsigned int)rgbBlendOperation;
- (void)setAlphaBlendOperation:(unsigned int)arg1;
- (void)setBlendingEnabled:(BOOL)arg1;
- (void)setDestinationAlphaBlendFactor:(unsigned int)arg1;
- (void)setDestinationRGBBlendFactor:(unsigned int)arg1;
- (void)setPixelFormat:(unsigned int)arg1;
- (void)setRgbBlendOperation:(unsigned int)arg1;
- (void)setSourceAlphaBlendFactor:(unsigned int)arg1;
- (void)setSourceRGBBlendFactor:(unsigned int)arg1;
- (void)setWriteMask:(unsigned int)arg1;
- (unsigned int)sourceAlphaBlendFactor;
- (unsigned int)sourceRGBBlendFactor;
- (unsigned int)writeMask;

@end
