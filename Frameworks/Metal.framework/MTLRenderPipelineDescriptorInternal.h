/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@interface MTLRenderPipelineDescriptorInternal : MTLRenderPipelineDescriptor {
    struct MTLRenderPipelineDescriptorPrivate { 
        MTLRenderPipelineColorAttachmentDescriptorArrayInternal *attachments; 
        unsigned int rtBlendDescHash[8]; 
        unsigned int depthAttachmentPixelFormat; 
        unsigned int stencilAttachmentPixelFormat; 
        unsigned int sampleCount; 
        unsigned int sampleMask; 
        union { 
            unsigned int sampleCoverageHash; 
            float sampleCoverage; 
        } ; 
        union { 
            unsigned int miscHash; 
            struct { 
                unsigned int alphaToCoverageEnabled : 1; 
                unsigned int alphaToOneEnabled : 1; 
                unsigned int rasterizationEnabled : 1; 
                unsigned int inputPrimitiveTopology : 2; 
                unsigned int vertexEnabled : 1; 
                unsigned int pad : 26; 
            } ; 
        } ; 
        NSString *label; 
        <MTLFunction> *vertexFunction; 
        <MTLFunction> *fragmentFunction; 
        MTLVertexDescriptorInternal *vertexDescriptor; 
    } _private;
}

- (const struct MTLRenderPipelineDescriptorPrivate { id x1; /* Warning: Unrecognized filer type: '8' using 'void*' */ void*x2; unsigned int x3; void*x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; union { unsigned int x_9_1_1; float x_9_1_2; } x9; union { unsigned int x_10_1_1; struct { unsigned int x_2_2_1 : 1; unsigned int x_2_2_2 : 1; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 2; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 26; } x_10_1_2; } x10; id x11; id x12; }*)_descriptorPrivate;
- (id)colorAttachments;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (unsigned int)depthAttachmentPixelFormat;
- (id)description;
- (id)fastBlendDescriptorAtIndex:(unsigned int)arg1;
- (id)fragmentFunction;
- (unsigned int)hash;
- (id)init;
- (BOOL)isAlphaToCoverageEnabled;
- (BOOL)isAlphaToOneEnabled;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isRasterizationEnabled;
- (BOOL)isVertexEnabled;
- (id)label;
- (id)newSerializedVertexDataWithFlags:(unsigned int)arg1 error:(id*)arg2;
- (void)reset;
- (unsigned int)sampleCount;
- (float)sampleCoverage;
- (unsigned int)sampleMask;
- (id)serializeFragmentData;
- (id)serializedVertexData;
- (void)setAlphaToCoverageEnabled:(BOOL)arg1;
- (void)setAlphaToOneEnabled:(BOOL)arg1;
- (void)setDepthAttachmentPixelFormat:(unsigned int)arg1;
- (void)setFragmentFunction:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setRasterizationEnabled:(BOOL)arg1;
- (void)setSampleCount:(unsigned int)arg1;
- (void)setSampleCoverage:(float)arg1;
- (void)setSampleMask:(unsigned int)arg1;
- (void)setStencilAttachmentPixelFormat:(unsigned int)arg1;
- (void)setVertexDescriptor:(id)arg1;
- (void)setVertexEnabled:(BOOL)arg1;
- (void)setVertexFunction:(id)arg1;
- (unsigned int)stencilAttachmentPixelFormat;
- (void)validateWithDevice:(id)arg1;
- (id)vertexDescriptor;
- (id)vertexFunction;

@end
