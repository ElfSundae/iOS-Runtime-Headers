/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

@interface CABasicAnimation : CAPropertyAnimation

@property (retain) id byValue;
@property float endAngle;
@property (retain) id fromValue;
@property BOOL roundsToInteger;
@property float startAngle;
@property (retain) id toValue;

// Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore

- (void)CA_prepareRenderValue;
- (struct Animation { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; float x3; struct Ref<CA::Render::Timing> { struct Timing {} *x_4_1_1; } x4; struct Ref<CA::Render::Vector> { struct Vector {} *x_5_1_1; } x5; struct __CFString {} *x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; }*)_copyRenderAnimationForLayer:(id)arg1;
- (BOOL)_setCARenderAnimation:(struct Animation { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; float x3; struct Ref<CA::Render::Timing> { struct Timing {} *x_4_1_1; } x4; struct Ref<CA::Render::Vector> { struct Vector {} *x_5_1_1; } x5; struct __CFString {} *x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; }*)arg1 layer:(id)arg2;
- (double)_timeFunction:(double)arg1;
- (void)applyForTime:(double)arg1 presentationObject:(id)arg2 modelObject:(id)arg3;
- (id)byValue;
- (float)endAngle;
- (id)fromValue;
- (BOOL)roundsToInteger;
- (void)setByValue:(id)arg1;
- (void)setEndAngle:(float)arg1;
- (void)setFromValue:(id)arg1;
- (void)setRoundsToInteger:(BOOL)arg1;
- (void)setStartAngle:(float)arg1;
- (void)setToValue:(id)arg1;
- (float)startAngle;
- (id)toValue;

// Image: /System/Library/Frameworks/PassKit.framework/PassKit

- (void)pkui_updateForAdditiveAnimationFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)pkui_updateForAdditiveAnimationFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 withLayerPoint:(struct CGPoint { float x1; float x2; })arg3;
- (void)pkui_updateForAdditiveAnimationFromScalar:(float)arg1 toScalar:(float)arg2;
- (void)pkui_updateForAdditiveAnimationFromScalar:(float)arg1 toScalar:(float)arg2 withLayerScalar:(float)arg3;
- (void)pkui_updateForAdditiveAnimationFromSize:(struct CGSize { float x1; float x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2;
- (void)pkui_updateForAdditiveAnimationFromSize:(struct CGSize { float x1; float x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2 withLayerSize:(struct CGSize { float x1; float x2; })arg3;
- (void)pkui_updateForAdditiveAnimationFromTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 toTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg2;
- (void)pkui_updateForAdditiveAnimationFromTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 toTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg2 withLayerTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg3;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (id)normalizedAnimationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

- (id)TSDCAAnimationContextCache;
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (double)p_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2 contextCache:(id)arg3;
- (void)p_getValue:(id*)arg1 animationPercent:(double*)arg2 atTime:(double)arg3 initialValue:(id)arg4 contextCache:(id)arg5;
- (id)p_interpolatedValueFrom:(id)arg1 to:(id)arg2 percent:(float)arg3 contextCache:(id)arg4;
- (id)p_valueAtTime:(double)arg1 initialValue:(id)arg2 contextCache:(id)arg3;

@end
