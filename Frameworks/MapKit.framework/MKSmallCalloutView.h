/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@interface MKSmallCalloutView : UIView <CalloutViewControllerProtocol> {
    MKCalloutBackgroundView * _calloutBackgroundView;
    UILayoutGuide * _centerContentLeadingGuide;
    UILayoutGuide * _centerContentTrailingGuide;
    UIView<_MKCalloutAccessoryView> * _detailView;
    NSLayoutConstraint * _detailViewBottomConstraint;
    NSLayoutConstraint * _detailViewMinTopConstraint;
    NSLayoutConstraint * _detailViewTrailingConstraint;
    UIView<_MKCalloutAccessoryView> * _externalLeftView;
    UIView<_MKCalloutAccessoryView> * _externalRightView;
    UIView<_MKCalloutAccessoryView> * _leftView;
    NSLayoutConstraint * _leftViewCenterContentMarginConstraint;
    NSLayoutConstraint * _leftViewHorizontalPositionConstraint;
    UILayoutGuide * _leftViewLeftSpacer;
    NSLayoutConstraint * _leftViewMinCalloutWidthConstraint;
    UILayoutGuide * _leftViewTopSpacer;
    NSLayoutConstraint * _leftViewTopSpacerBottomConstraint;
    struct { 
        unsigned char timePeriod; 
        unsigned char overlayType; 
        unsigned char applicationState; 
        unsigned char searchResultsType; 
        BOOL mapHasLabels; 
    }  _mapDisplayStyle;
    _MKSmallCalloutPassthroughButton * _maskedContainerView;
    NSLayoutConstraint * _maxWidthConstraint;
    NSLayoutConstraint * _minWidthConstraint;
    BOOL  _needsPreferredContentSizeUpdate;
    struct CGSize { 
        float width; 
        float height; 
    }  _preferredContentSize;
    UIView<_MKCalloutAccessoryView> * _rightView;
    NSLayoutConstraint * _rightViewCenterContentMarginConstraint;
    NSLayoutConstraint * _rightViewHorizontalPositionConstraint;
    NSLayoutConstraint * _rightViewMinCalloutWidthConstraint;
    UILayoutGuide * _rightViewRightSpacer;
    UILayoutGuide * _rightViewTopSpacer;
    NSLayoutConstraint * _rightViewTopSpacerBottomConstraint;
    BOOL  _shouldPositionTitleForMapsTransitionMovingSideways;
    _MKUILabel * _subtitleLabel;
    NSLayoutConstraint * _titleBaselineFromTopConstraint;
    NSLayoutConstraint * _titleBaselineFromTopMinimumConstraint;
    _MKUILabel * _titleLabel;
    NSArray * _titleLabelConstraints;
    NSLayoutConstraint * _titleMinimumBaselineToBottomConstraint;
    NSLayoutConstraint * _unmaskedContainerLeadingConstraint;
    NSLayoutConstraint * _unmaskedContainerTrailingConstraint;
    UIView * _unmaskedContainerView;
}

@property (nonatomic, retain) MKCalloutBackgroundView *calloutBackgroundView;
@property (nonatomic, copy) NSString *calloutSubtitle;
@property (nonatomic, copy) NSString *calloutTitle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIView *detailView;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) UIView *leftView;
@property (nonatomic) struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; BOOL x5; } mapDisplayStyle;
@property (nonatomic) float maximumWidth;
@property (nonatomic) float minimumWidth;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } preferredContentSize;
@property (nonatomic, retain) UIView *rightView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (id)_maskedContainerView;
- (void)_setNeedsUpdatePreferredContentSize;
- (void)_updateAccessoryViewStyles;
- (void)_updatePreferredContentSize;
- (void)_updatePreferredContentSizeIfNeeded;
- (void)beginMapsTransitionMovingSideways;
- (id)calloutBackgroundView;
- (id)calloutSubtitle;
- (id)calloutTitle;
- (BOOL)canDisplayCompleteTitleWhenExpanded;
- (void)dealloc;
- (id)detailView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)leftView;
- (struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; BOOL x5; })mapDisplayStyle;
- (float)maximumWidth;
- (float)minimumWidth;
- (struct CGSize { float x1; float x2; })preferredContentSize;
- (void)reset;
- (id)rightView;
- (void)setCalloutBackgroundView:(id)arg1;
- (void)setCalloutSubtitle:(id)arg1;
- (void)setCalloutSubtitle:(id)arg1 animated:(BOOL)arg2;
- (void)setCalloutTitle:(id)arg1;
- (void)setDetailView:(id)arg1;
- (void)setDetailView:(id)arg1 animated:(BOOL)arg2;
- (void)setLeftView:(id)arg1;
- (void)setLeftView:(id)arg1 animated:(BOOL)arg2;
- (void)setMapDisplayStyle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; BOOL x5; })arg1;
- (void)setMaximumWidth:(float)arg1;
- (void)setMinimumWidth:(float)arg1;
- (void)setRightView:(id)arg1;
- (void)setRightView:(id)arg1 animated:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;

@end
