/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@interface MKAmbientLightMonitor : NSObject {
    int  _ambientLightLevel;
    struct __IOHIDEventSystemClient { } * _client;
    BOOL  _debugLogLux;
    float  _lightLevelLowThreshold;
    float  _lightLevelMediumThreshold;
    float  _lightLevelNoneThreshold;
    BOOL  _monitoring;
    NSHashTable * _observers;
    struct deque<float, std::__1::allocator<float> > { 
        struct __split_buffer<float *, std::__1::allocator<float *> > { 
            float **__first_; 
            float **__begin_; 
            float **__end_; 
            struct __compressed_pair<float **, std::__1::allocator<float *> > { 
                float **__first_; 
            } __end_cap_; 
        } __map_; 
        unsigned int __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<float> > { 
            unsigned long __first_; 
        } __size_; 
    }  _runningStatBuffer;
    unsigned int  _runningStatSize;
    float  _runningStatSum;
}

@property (nonatomic, readonly) int ambientLightLevel;
@property (nonatomic) BOOL debugLogLux;
@property (getter=isMonitoring, nonatomic, readonly) BOOL monitoring;

+ (id)sharedAmbientLightMonitor;

- (id).cxx_construct;
- (void).cxx_destruct;
- (float)_addSampleAndComputeMean:(const float*)arg1;
- (void)_startMonitoring;
- (void)_stopMonitoring;
- (void)_updateThresholds;
- (int)ambientLightLevel;
- (void)dealloc;
- (BOOL)debugLogLux;
- (void)handleIOHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (id)init;
- (BOOL)isMonitoring;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setDebugLogLux:(BOOL)arg1;
- (void)startMonitoringWithObserver:(id)arg1;
- (void)stopMonitoringWithObserver:(id)arg1;

@end
