/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

@interface SKSCNRenderer : NSObject {
    float _backingScaleFactor;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _bounds;
    BOOL _disableInput;
    float _fps;
    int _frames;
    BOOL _hasRenderedForCurrentUpdate;
    BOOL _hasRenderedOnce;
    BOOL _isInTransition;
    float _prevBackingScaleFactor;
    unsigned int _prevSpritesRendered;
    unsigned int _prevSpritesRenderedSubmitted;
    float _prevViewAspect;
    SKScene *_scene;
    struct SKCRenderer { id x1; struct shared_ptr<SKCRenderPass> { struct SKCRenderPass {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; unsigned int x3; struct shared_ptr<jet_command_buffer> { struct jet_command_buffer {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass> > > { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> { struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> {} *x_1_2_1; struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> {} *x_1_2_2; } x_5_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<SKCRenderPass>, void *> > > { unsigned long x_2_2_1; } x_5_1_2; } x5; struct { unsigned int x_6_1_1; unsigned int x_6_1_2; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_3_2_1[4]; void*x_3_2_2; void*x_3_2_3; void*x_3_2_4; void*x_3_2_5; void*x_3_2_6; void*x_3_2_7; void*x_3_2_8; void*x_3_2_9; void*x_3_2_10; void*x_3_2_11; void*x_3_2_12; void*x_3_2_13; void*x_3_2_14; void*x_3_2_15; void*x_3_2_16; void*x_3_2_17; void*x_3_2_18; void*x_3_2_19; void*x_3_2_20; void*x_3_2_21; void*x_3_2_22; void*x_3_2_23; BOOL x_3_2_24; void*x_3_2_25; out void*x_3_2_26; void*x_3_2_27; void*x_3_2_28; void*x_3_2_29; void*x_3_2_30; const void*x_3_2_31; void*x_3_2_32; void*x_3_2_33; short x_3_2_34; void*x_3_2_35; short x_3_2_36; void*x_3_2_37; void*x_3_2_38; void*x_3_2_39; double x_3_2_40; void*x_3_2_41; void*x_3_2_42; void*x_3_2_43; void*x_3_2_44; void*x_3_2_45; void*x_3_2_46; void*x_3_2_47; int x_3_2_48; void*x_3_2_49; const void*x_3_2_50; void*x_3_2_51; void*x_3_2_52; void*x_3_2_53; void*x_3_2_54; in void*x_3_2_55; short x_3_2_56; void*x_3_2_57; int x_3_2_58; void*x_3_2_59; void*x_3_2_60; void*x_3_2_61; in void*x_3_2_62; void*x_3_2_63; void*x_3_2_64; double x_3_2_65; void*x_3_2_66; void*x_3_2_67; void*x_3_2_68; long x_3_2_69; void*x_3_2_70; out void*x_3_2_71; in void*x_3_2_72; void*x_3_2_73; void*x_3_2_74; void*x_3_2_75; void*x_3_2_76; void*x_3_2_77; void*x_3_2_78; short x_3_2_79; void*x_3_2_80; void*x_3_2_81; void*x_3_2_82; double x_3_2_83; void*x_3_2_84; SEL x_3_2_85; void*x_3_2_86; SEL x_3_2_87; void*x_3_2_88; void*x_3_2_89; void*x_3_2_90; void*x_3_2_91; void*x_3_2_92; void*x_3_2_93; void*x_3_2_94; SEL x_3_2_95; void*x_3_2_96; SEL x_3_2_97; void*x_3_2_98; void*x_3_2_99; void*x_3_2_100; long x_3_2_101; void*x_3_2_102; long x_3_2_103; void*x_3_2_104; out void*x_3_2_105; BOOL x_3_2_106; void*x_3_2_107; void*x_3_2_108; void*x_3_2_109; void*x_3_2_110; void*x_3_2_111; out void*x_3_2_112; const void*x_3_2_113; void*x_3_2_114; void*x_3_2_115; short x_3_2_116; void*x_3_2_117; void*x_3_2_118; void*x_3_2_119; double x_3_2_120; void*x_3_2_121; SEL x_3_2_122; void*x_3_2_123; SEL x_3_2_124; void*x_3_2_125; void*x_3_2_126; void*x_3_2_127; void*x_3_2_128; void*x_3_2_129; void*x_3_2_130; void*x_3_2_131; SEL x_3_2_132; void*x_3_2_133; SEL x_3_2_134; void*x_3_2_135; void*x_3_2_136; void*x_3_2_137; void*x_3_2_138; void*x_3_2_139; void*x_3_2_140; void*x_3_2_141; void*x_3_2_142; void*x_3_2_143; short x_3_2_144; void*x_3_2_145; void*x_3_2_146; void*x_3_2_147; void*x_3_2_148; void*x_3_2_149; in void*x_3_2_150; out void*x_3_2_151; double x_3_2_152; void*x_3_2_153; void*x_3_2_154; void*x_3_2_155; void*x_3_2_156; void*x_3_2_157; short x_3_2_158; void*x_3_2_159; void*x_3_2_160; void*x_3_2_161; double x_3_2_162; void*x_3_2_163; SEL x_3_2_164; void*x_3_2_165; SEL x_3_2_166; void*x_3_2_167; void*x_3_2_168; void*x_3_2_169; void*x_3_2_170; void*x_3_2_171; void*x_3_2_172; void*x_3_2_173; SEL x_3_2_174; void*x_3_2_175; SEL x_3_2_176; void*x_3_2_177; void*x_3_2_178; void*x_3_2_179; void*x_3_2_180; void*x_3_2_181; void*x_3_2_182; void*x_3_2_183; void*x_3_2_184; void*x_3_2_185; short x_3_2_186; void*x_3_2_187; void*x_3_2_188; void*x_3_2_189; void*x_3_2_190; void*x_3_2_191; void x_3_2_192; void*x_3_2_193; void*x_3_2_194; void*x_3_2_195; long x_3_2_196; void*x_3_2_197; void*x_3_2_198; void*x_3_2_199; void*x_3_2_200; void*x_3_2_201; void*x_3_2_202; void*x_3_2_203; void*x_3_2_204; void*x_3_2_205; void*x_3_2_206; void*x_3_2_207; void*x_3_2_208; void*x_3_2_209; void*x_3_2_210; void*x_3_2_211; void*x_3_2_212; void*x_3_2_213; short x_3_2_214; void*x_3_2_215; void*x_3_2_216; void*x_3_2_217; double x_3_2_218; void*x_3_2_219; SEL x_3_2_220; void*x_3_2_221; SEL x_3_2_222; void*x_3_2_223; void*x_3_2_224; void*x_3_2_225; void*x_3_2_226; void*x_3_2_227; int x_3_2_228; void*x_3_2_229; double x_3_2_230; void*x_3_2_231; void*x_3_2_232; void*x_3_2_233; void*x_3_2_234; void*x_3_2_235; void*x_3_2_236; void*x_3_2_237; void*x_3_2_238; void*x_3_2_239; void*x_3_2_240; void*x_3_2_241; short x_3_2_242; void*x_3_2_243; void*x_3_2_244; void*x_3_2_245; const void*x_3_2_246; void*x_3_2_247; void*x_3_2_248; BOOL x_3_2_249; void*x_3_2_250; void*x_3_2_251; void*x_3_2_252; void*x_3_2_253; void*x_3_2_254; short x_3_2_255; void*x_3_2_256; void*x_3_2_257; void*x_3_2_258; void*x_3_2_259; void*x_3_2_260; const void*x_3_2_261; void*x_3_2_262; void*x_3_2_263; double x_3_2_264; void*x_3_2_265; void*x_3_2_266; void*x_3_2_267; void*x_3_2_268; void*x_3_2_269; void*x_3_2_270; void*x_3_2_271; const void*x_3_2_272; void*x_3_2_273; void*x_3_2_274; unsigned short x_3_2_275; void*x_3_2_276; void*x_3_2_277; void*x_3_2_278; unsigned char x_3_2_279; void*x_3_2_280; void*x_3_2_281; void*x_3_2_282; void*x_3_2_283; void*x_3_2_284; in void*x_3_2_285; double x_3_2_286; void*x_3_2_287; void*x_3_2_288; void*x_3_2_289; const void*x_3_2_290; void*x_3_2_291; void*x_3_2_292; void*x_3_2_293; void*x_3_2_294; short x_3_2_295; void*x_3_2_296; short x_3_2_297; void*x_3_2_298; void*x_3_2_299; void*x_3_2_300; void*x_3_2_301; void*x_3_2_302; struct x_3_2_303; void*x_3_2_304; void*x_3_2_305; void*x_3_2_306; short x_3_2_307; void*x_3_2_308; void*x_3_2_309; void*x_3_2_310; const void*x_3_2_311; void*x_3_2_312; void*x_3_2_313; BOOL x_3_2_314; void*x_3_2_315; void*x_3_2_316; void*x_3_2_317; void*x_3_2_318; void*x_3_2_319; unsigned short x_3_2_320; void*x_3_2_321; void*x_3_2_322; void*x_3_2_323; unsigned char x_3_2_324; void*x_3_2_325; void*x_3_2_326; void*x_3_2_327; void*x_3_2_328; void*x_3_2_329; in void*x_3_2_330; double x_3_2_331; void*x_3_2_332; void*x_3_2_333; void*x_3_2_334; const void*x_3_2_335; void*x_3_2_336; void*x_3_2_337; void*x_3_2_338; void*x_3_2_339; short x_3_2_340; void*x_3_2_341; short x_3_2_342; void*x_3_2_343; void*x_3_2_344; void*x_3_2_345; struct x_3_2_346; void*x_3_2_347; } ***x_6_1_3; void*x_6_1_4; void*x_6_1_5; void*x_6_1_6; char *x_6_1_7; void*x_6_1_8; void*x_6_1_9; void*x_6_1_10; void*x_6_1_11; void*x_6_1_12; void*x_6_1_13; void*x_6_1_14; void*x_6_1_15; void*x_6_1_16; void*x_6_1_17; void*x_6_1_18; void*x_6_1_19; void*x_6_1_20; void*x_6_1_21; void*x_6_1_22; void*x_6_1_23; void*x_6_1_24; void*x_6_1_25; void*x_6_1_26; short x_6_1_27; void*x_6_1_28; void*x_6_1_29; void*x_6_1_30; const void*x_6_1_31; void*x_6_1_32; void*x_6_1_33; BOOL x_6_1_34; void*x_6_1_35; void*x_6_1_36; void*x_6_1_37; void*x_6_1_38; void*x_6_1_39; void*x_6_1_40; void*x_6_1_41; void*x_6_1_42; void*x_6_1_43; short x_6_1_44; void*x_6_1_45; void*x_6_1_46; void*x_6_1_47; void*x_6_1_48; void*x_6_1_49; const void*x_6_1_50; void*x_6_1_51; void*x_6_1_52; double x_6_1_53; void*x_6_1_54; void*x_6_1_55; void*x_6_1_56; void*x_6_1_57; void*x_6_1_58; void*x_6_1_59; void*x_6_1_60; void*x_6_1_61; void*x_6_1_62; void*x_6_1_63; void*x_6_1_64; void*x_6_1_65; void*x_6_1_66; BOOL x_6_1_67; void*x_6_1_68; out void*x_6_1_69; void*x_6_1_70; void*x_6_1_71; in void*x_6_1_72; void*x_6_1_73; void*x_6_1_74; void*x_6_1_75; void*x_6_1_76; struct x_6_1_77; void*x_6_1_78; } x6; void*x7; void*x8; void*x9; char *x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; } *_skcRenderer;
    unsigned int _spritesRendered;
    unsigned int _spritesSubmitted;
    SKLabelNode *_statsLabel;
    double _timeBeginFrameCount;
    double _timePreviousUpdate;
    BOOL showsFPS;
    BOOL showsNodeCount;
}

@property (nonatomic) float backingScaleFactor;
@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } bounds;
@property (nonatomic) BOOL ignoresSiblingOrder;
@property (nonatomic, retain) SKScene *scene;
@property (nonatomic) BOOL showsDrawCount;
@property (nonatomic) BOOL showsFPS;
@property (nonatomic) BOOL showsFields;
@property (nonatomic) BOOL showsNodeCount;
@property (nonatomic) BOOL showsPhysics;

+ (int)getOpenGLFramebuffer:(id)arg1;
+ (id)rendererWithContext:(id)arg1 options:(id)arg2;
+ (id)rendererWithDevice:(id)arg1 options:(id)arg2;
+ (void)restoreDefaultOpenGLState:(id)arg1 frameBuffer:(int)arg2;
+ (void)setPrefersOpenGL:(BOOL)arg1;

- (void).cxx_destruct;
- (float)_fps;
- (void)_getDestBounds;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; void*x2; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; bool x27; void*x28; int x29; void*x30; out const void*x31; unsigned short x32; void*x33; void*x34; const int x35; in void*x36; unsigned int x37; in float x38; out void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; unsigned long x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; unsigned int x118/* : ? */; void*x119; long x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; unsigned long x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; unsigned long x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; int x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; unsigned short x436; void*x437; short x438; void*x439; void*x440; void*x441; void*x442; unsigned long x443; int x444; unsigned int x445/* : ? */; const void*x446; const void*x447; void*x448; void*x449; const int x450; void x451; void*x452; void*x453; void*x454; void*x455; const void*x456; void*x457; void*x458; void*x459; out const void*x460; short x461; void*x462; unsigned char x463; out const void*x464; unsigned char x465; long doublex466; void*x467; unsigned int x468; in void*x469; void*x470; const in void*x471; long x472; void*x473; float x474; const void*x475; void*x476; void*x477; void*x478; out const void*x479; void*x480; unsigned char x481; out const void*x482; unsigned char x483; long doublex484; void*x485; unsigned int x486; in void*x487; void*x488; const in void*x489; long x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; unsigned long x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; unsigned long x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; unsigned long long x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; unsigned short x688; void*x689; void*x690; unsigned short x691; void*x692; void*x693; BOOL x694; unsigned long x695; int x696; short x697; void*x698; unsigned short x699; void*x700; void*x701; long x702; void*x703; unsigned int x704; void*x705; void*x706; void*x707; void*x708; long doublex709; void*x710; void*x711; void*x712; void*x713; const void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; struct x740; void*x741; void*x742; void*x743; void*x744; unsigned long x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; int x778; void*x779; in void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; unsigned long x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; unsigned long x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; in char *x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; unsigned long x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; in void*x1044; void*x1045; void*x1046; double x1047; void*x1048; void*x1049; void*x1050; BOOL x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; const void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; unsigned long x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; in void*x1154; void*x1155; void*x1156; double x1157; void*x1158; void*x1159; void*x1160; int x1161; void*x1162; in void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; out void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; unsigned long x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; unsigned long x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; unsigned long x1314; void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; unsigned long x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; oneway void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; unsigned long x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; id x1428; union x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; bool x1443; void*x1444; void*x1445; void*x1446; void*x1447; })_getMatrix;
- (id)_getOptions;
- (void)_getViewport;
- (void)_initialize;
- (id)_scene;
- (BOOL)_shouldCenterStats;
- (void)_showAllStats;
- (BOOL)_showsCPUStats;
- (BOOL)_showsCoreAnimationFPS;
- (BOOL)_showsCulledNodesInNodeCount;
- (BOOL)_showsGPUStats;
- (BOOL)_showsOutlineInterior;
- (BOOL)_showsSpriteBounds;
- (BOOL)_showsTotalAreaRendered;
- (int)_spriteRenderCount;
- (int)_spriteSubmitCount;
- (void)_update:(double)arg1;
- (float)backingScaleFactor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bounds;
- (void)dealloc;
- (BOOL)ignoresSiblingOrder;
- (id)init;
- (id)initWithSKCRenderer:(struct SKCRenderer { id x1; struct shared_ptr<SKCRenderPass> { struct SKCRenderPass {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; unsigned int x3; struct shared_ptr<jet_command_buffer> { struct jet_command_buffer {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass> > > { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> { struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> {} *x_1_2_1; struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> {} *x_1_2_2; } x_5_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<SKCRenderPass>, void *> > > { unsigned long x_2_2_1; } x_5_1_2; } x5; struct { unsigned int x_6_1_1; unsigned int x_6_1_2; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_3_2_1[4]; void*x_3_2_2; void*x_3_2_3; void*x_3_2_4; void*x_3_2_5; void*x_3_2_6; void*x_3_2_7; void*x_3_2_8; void*x_3_2_9; void*x_3_2_10; void*x_3_2_11; void*x_3_2_12; void*x_3_2_13; void*x_3_2_14; void*x_3_2_15; void*x_3_2_16; void*x_3_2_17; void*x_3_2_18; void*x_3_2_19; void*x_3_2_20; void*x_3_2_21; void*x_3_2_22; void*x_3_2_23; void*x_3_2_24; void*x_3_2_25; void x_3_2_26; void*x_3_2_27; out void*x_3_2_28; int x_3_2_29; void*x_3_2_30; double x_3_2_31; void*x_3_2_32; char *x_3_2_33; void*x_3_2_34; void*x_3_2_35; void*x_3_2_36; void*x_3_2_37; void*x_3_2_38; void*x_3_2_39; void*x_3_2_40; void*x_3_2_41; void*x_3_2_42; void*x_3_2_43; void*x_3_2_44; void*x_3_2_45; void*x_3_2_46; void x_3_2_47; void*x_3_2_48; out void*x_3_2_49; int x_3_2_50; void*x_3_2_51; double x_3_2_52; void*x_3_2_53; char *x_3_2_54; void*x_3_2_55; void*x_3_2_56; void*x_3_2_57; void*x_3_2_58; void*x_3_2_59; void*x_3_2_60; void*x_3_2_61; void*x_3_2_62; void*x_3_2_63; void*x_3_2_64; void*x_3_2_65; void*x_3_2_66; void*x_3_2_67; void x_3_2_68; void*x_3_2_69; out void*x_3_2_70; int x_3_2_71; void*x_3_2_72; double x_3_2_73; void*x_3_2_74; char *x_3_2_75; void*x_3_2_76; void*x_3_2_77; void*x_3_2_78; void*x_3_2_79; void*x_3_2_80; void*x_3_2_81; void*x_3_2_82; void*x_3_2_83; void*x_3_2_84; void*x_3_2_85; void*x_3_2_86; void*x_3_2_87; void*x_3_2_88; void x_3_2_89; void*x_3_2_90; out void*x_3_2_91; int x_3_2_92; void*x_3_2_93; double x_3_2_94; void*x_3_2_95; char *x_3_2_96; void*x_3_2_97; void*x_3_2_98; void*x_3_2_99; void*x_3_2_100; void*x_3_2_101; void*x_3_2_102; void*x_3_2_103; void*x_3_2_104; void*x_3_2_105; void*x_3_2_106; void*x_3_2_107; void*x_3_2_108; void*x_3_2_109; void x_3_2_110; void*x_3_2_111; out void*x_3_2_112; int x_3_2_113; void*x_3_2_114; double x_3_2_115; void*x_3_2_116; char *x_3_2_117; void*x_3_2_118; void*x_3_2_119; void*x_3_2_120; void*x_3_2_121; void*x_3_2_122; void*x_3_2_123; void*x_3_2_124; void*x_3_2_125; void*x_3_2_126; void*x_3_2_127; void*x_3_2_128; void*x_3_2_129; void*x_3_2_130; void x_3_2_131; void*x_3_2_132; out void*x_3_2_133; int x_3_2_134; void*x_3_2_135; double x_3_2_136; void*x_3_2_137; char *x_3_2_138; void*x_3_2_139; void*x_3_2_140; void*x_3_2_141; void*x_3_2_142; void*x_3_2_143; void*x_3_2_144; void*x_3_2_145; void*x_3_2_146; void*x_3_2_147; void*x_3_2_148; void*x_3_2_149; void*x_3_2_150; void*x_3_2_151; void x_3_2_152; void*x_3_2_153; out void*x_3_2_154; int x_3_2_155; void*x_3_2_156; double x_3_2_157; void*x_3_2_158; char *x_3_2_159; void*x_3_2_160; void*x_3_2_161; void*x_3_2_162; void*x_3_2_163; void*x_3_2_164; void*x_3_2_165; void*x_3_2_166; void*x_3_2_167; void*x_3_2_168; void*x_3_2_169; void*x_3_2_170; void*x_3_2_171; void*x_3_2_172; void x_3_2_173; void*x_3_2_174; out void*x_3_2_175; int x_3_2_176; void*x_3_2_177; double x_3_2_178; void*x_3_2_179; char *x_3_2_180; void*x_3_2_181; void*x_3_2_182; void*x_3_2_183; void*x_3_2_184; void*x_3_2_185; void*x_3_2_186; void*x_3_2_187; void*x_3_2_188; void*x_3_2_189; void*x_3_2_190; void*x_3_2_191; void*x_3_2_192; void*x_3_2_193; void x_3_2_194; void*x_3_2_195; out void*x_3_2_196; int x_3_2_197; void*x_3_2_198; double x_3_2_199; void*x_3_2_200; char *x_3_2_201; void*x_3_2_202; void*x_3_2_203; void*x_3_2_204; void*x_3_2_205; void*x_3_2_206; void*x_3_2_207; void*x_3_2_208; void*x_3_2_209; void*x_3_2_210; void*x_3_2_211; void*x_3_2_212; void*x_3_2_213; void*x_3_2_214; void x_3_2_215; void*x_3_2_216; out void*x_3_2_217; int x_3_2_218; void*x_3_2_219; double x_3_2_220; void*x_3_2_221; char *x_3_2_222; void*x_3_2_223; void*x_3_2_224; void*x_3_2_225; void*x_3_2_226; void*x_3_2_227; void*x_3_2_228; void*x_3_2_229; int x_3_2_230; void*x_3_2_231; double x_3_2_232; void*x_3_2_233; void*x_3_2_234; void*x_3_2_235; void*x_3_2_236; void*x_3_2_237; void*x_3_2_238; void*x_3_2_239; void*x_3_2_240; void*x_3_2_241; void*x_3_2_242; void*x_3_2_243; short x_3_2_244; void*x_3_2_245; void*x_3_2_246; void*x_3_2_247; const void*x_3_2_248; void*x_3_2_249; void*x_3_2_250; BOOL x_3_2_251; void*x_3_2_252; void*x_3_2_253; void*x_3_2_254; void*x_3_2_255; void*x_3_2_256; short x_3_2_257; void*x_3_2_258; void*x_3_2_259; void*x_3_2_260; void*x_3_2_261; void*x_3_2_262; const void*x_3_2_263; void*x_3_2_264; void*x_3_2_265; double x_3_2_266; void*x_3_2_267; void*x_3_2_268; void*x_3_2_269; void*x_3_2_270; void*x_3_2_271; void*x_3_2_272; void*x_3_2_273; const void*x_3_2_274; void*x_3_2_275; void*x_3_2_276; unsigned short x_3_2_277; void*x_3_2_278; void*x_3_2_279; void*x_3_2_280; unsigned char x_3_2_281; void*x_3_2_282; void*x_3_2_283; void*x_3_2_284; void*x_3_2_285; void*x_3_2_286; in void*x_3_2_287; double x_3_2_288; void*x_3_2_289; void*x_3_2_290; void*x_3_2_291; const void*x_3_2_292; void*x_3_2_293; void*x_3_2_294; void*x_3_2_295; void*x_3_2_296; short x_3_2_297; void*x_3_2_298; short x_3_2_299; void*x_3_2_300; void*x_3_2_301; void*x_3_2_302; void*x_3_2_303; void*x_3_2_304; struct x_3_2_305; void*x_3_2_306; void*x_3_2_307; void*x_3_2_308; short x_3_2_309; void*x_3_2_310; void*x_3_2_311; void*x_3_2_312; const void*x_3_2_313; void*x_3_2_314; void*x_3_2_315; BOOL x_3_2_316; void*x_3_2_317; void*x_3_2_318; void*x_3_2_319; void*x_3_2_320; void*x_3_2_321; unsigned short x_3_2_322; void*x_3_2_323; void*x_3_2_324; void*x_3_2_325; unsigned char x_3_2_326; void*x_3_2_327; void*x_3_2_328; void*x_3_2_329; void*x_3_2_330; void*x_3_2_331; in void*x_3_2_332; double x_3_2_333; void*x_3_2_334; void*x_3_2_335; void*x_3_2_336; const void*x_3_2_337; void*x_3_2_338; void*x_3_2_339; void*x_3_2_340; void*x_3_2_341; short x_3_2_342; void*x_3_2_343; short x_3_2_344; void*x_3_2_345; void*x_3_2_346; void*x_3_2_347; struct x_3_2_348; void*x_3_2_349; } ***x_6_1_3; void*x_6_1_4; void*x_6_1_5; void*x_6_1_6; char *x_6_1_7; void*x_6_1_8; void*x_6_1_9; void*x_6_1_10; void*x_6_1_11; void*x_6_1_12; void*x_6_1_13; void*x_6_1_14; void*x_6_1_15; void*x_6_1_16; void*x_6_1_17; void*x_6_1_18; void*x_6_1_19; void*x_6_1_20; void*x_6_1_21; void*x_6_1_22; void*x_6_1_23; void*x_6_1_24; void*x_6_1_25; void*x_6_1_26; short x_6_1_27; void*x_6_1_28; void*x_6_1_29; void*x_6_1_30; const void*x_6_1_31; void*x_6_1_32; void*x_6_1_33; BOOL x_6_1_34; void*x_6_1_35; void*x_6_1_36; void*x_6_1_37; void*x_6_1_38; void*x_6_1_39; void*x_6_1_40; void*x_6_1_41; void*x_6_1_42; void*x_6_1_43; short x_6_1_44; void*x_6_1_45; void*x_6_1_46; void*x_6_1_47; void*x_6_1_48; void*x_6_1_49; const void*x_6_1_50; void*x_6_1_51; void*x_6_1_52; double x_6_1_53; void*x_6_1_54; void*x_6_1_55; void*x_6_1_56; void*x_6_1_57; void*x_6_1_58; void*x_6_1_59; void*x_6_1_60; void*x_6_1_61; void*x_6_1_62; void*x_6_1_63; void*x_6_1_64; void*x_6_1_65; void*x_6_1_66; BOOL x_6_1_67; void*x_6_1_68; out void*x_6_1_69; void*x_6_1_70; void*x_6_1_71; in void*x_6_1_72; void*x_6_1_73; void*x_6_1_74; void*x_6_1_75; void*x_6_1_76; struct x_6_1_77; void*x_6_1_78; } x6; void*x7; void*x8; void*x9; char *x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; }*)arg1;
- (struct CGSize { float x1; float x2; })pixelSize;
- (void)render:(BOOL)arg1;
- (void)renderToFramebuffer:(int)arg1 shouldClear:(BOOL)arg2;
- (void)renderToTexture:(id)arg1 commandQueue:(id)arg2;
- (void)renderTransition:(id)arg1 toFramebuffer:(int)arg2 withInputTexture:(unsigned int)arg3 outputTexture:(unsigned int)arg4 inputTextureSize:(struct CGSize { float x1; float x2; })arg5 outputTextureSize:(struct CGSize { float x1; float x2; })arg6 time:(float)arg7;
- (void)renderTransition:(id)arg1 withInputTexture:(unsigned int)arg2 outputTexture:(unsigned int)arg3 inputTextureSize:(struct CGSize { float x1; float x2; })arg4 outputTextureSize:(struct CGSize { float x1; float x2; })arg5 time:(float)arg6;
- (void)renderTransition:(id)arg1 withInputTexture:(id)arg2 outputTexture:(id)arg3 time:(float)arg4 encoder:(id)arg5 pass:(id)arg6 commandQueue:(id)arg7;
- (void)renderWithEncoder:(id)arg1 pass:(id)arg2 commandQueue:(id)arg3;
- (id)scene;
- (void)setBackingScaleFactor:(float)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIgnoresSiblingOrder:(BOOL)arg1;
- (void)setScene:(id)arg1;
- (void)setShowsDrawCount:(BOOL)arg1;
- (void)setShowsFPS:(BOOL)arg1;
- (void)setShowsFields:(BOOL)arg1;
- (void)setShowsNodeCount:(BOOL)arg1;
- (void)setShowsPhysics:(BOOL)arg1;
- (void)setShowsQuadCount:(BOOL)arg1;
- (void)setShowsSpriteBounds:(BOOL)arg1;
- (void)set_shouldCenterStats:(BOOL)arg1;
- (void)set_showsCPUStats:(BOOL)arg1;
- (void)set_showsCoreAnimationFPS:(BOOL)arg1;
- (void)set_showsCulledNodesInNodeCount:(BOOL)arg1;
- (void)set_showsGPUStats:(BOOL)arg1;
- (void)set_showsOutlineInterior:(BOOL)arg1;
- (void)set_showsSpriteBounds:(BOOL)arg1;
- (void)set_showsTotalAreaRendered:(BOOL)arg1;
- (void)settingsForTransition:(id)arg1 atTime:(float)arg2 renderIncomingToTexture:(BOOL*)arg3 renderOutgoingToTexture:(BOOL*)arg4 renderIncomingToScreen:(BOOL*)arg5 renderOutgoingToScreen:(BOOL*)arg6;
- (void)setupContext;
- (BOOL)showsDrawCount;
- (BOOL)showsFPS;
- (BOOL)showsFields;
- (BOOL)showsNodeCount;
- (BOOL)showsPhysics;
- (BOOL)showsQuadCount;
- (BOOL)showsSpriteBounds;
- (void)updateAtTime:(double)arg1;

@end
