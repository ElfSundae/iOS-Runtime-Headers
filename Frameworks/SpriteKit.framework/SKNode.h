/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

@interface SKNode : UIResponder <NSCoding, NSCopying> {
    NSMutableArray *_actions;
    NSMutableDictionary *_attributeValues;
    NSMutableArray *_children;
    NSArray *_constraints;
    NSMutableDictionary *_info;
    NSMutableDictionary *_keyedActions;
    NSMutableDictionary *_keyedSubSprites;
    NSString *_name;
    SKNode *_parent;
    SKReachConstraints *_reachConstraints;
    struct SKCNode { int (**x1)(); id x2; struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; id x4; struct SKCNode {} *x5; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_6_1_1; struct SKCNode {} **x_6_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_6_1_3; } x6; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_7_1_1; struct SKCNode {} **x_7_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_7_1_3; } x7; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_8_1_1; struct SKCNode {} **x_8_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_8_1_3; } x8; id x9; float x10; bool x11; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_12_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_12_1_2; } x12; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_13_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_13_1_2; } x13; bool x14; id x15; short x16; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x17; void*x18; const void*x19; double x20; void*x21; void*x22; void*x23; const void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; struct PKPath {} *x33; struct __shared_weak_count {} *x34; } *_skcNode;
    NSMutableDictionary *_userData;
    BOOL _userInteractionEnabled;
    unsigned int _version;
}

@property (nonatomic, readonly) struct shared_ptr<PKCAether> { struct PKCAether {} *x1; struct __shared_weak_count {} *x2; } _aether;
@property (nonatomic, readonly) NSArray *_allActions;
@property (nonatomic) struct CGPoint { float x1; float x2; } _anchorPoint;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{SKCNode=^^?@B{unordered_map<std::__1::basic_string<char>' */ struct *_backingNode; /* unknown property attribute:  void *> > >=L}}B@{shared_ptr<PKPath>=^{PKPath}^{__shared_weak_count}}BiBffBB{?=[4]}{?=[4]}} */
@property (nonatomic, retain) NSMutableDictionary *_info;
@property (nonatomic) BOOL _showBounds;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } _size;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _untransformedBounds;
@property (nonatomic) float alpha;
@property (nonatomic, copy) NSDictionary *attributeValues;
@property (nonatomic, readonly) NSArray *children;
@property (nonatomic, copy) NSArray *constraints;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; void*x2; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; id x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; unsigned char x58; void*x59; BOOL x60; void*x61; void*x62; long doublex63; void*x64; long x65; void*x66; void*x67; void*x68; unsigned short x69; void*x70; const void x71; int x72; BOOL x73; void*x74; unsigned long x75; int x76; short x77; void*x78; void*x79; in void*x80; const void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; unsigned char x103; void*x104; BOOL x105; void*x106; void*x107; long doublex108; void*x109; long x110; void*x111; void*x112; void*x113; unsigned short x114; void*x115; const void x116; int x117; BOOL x118; void*x119; unsigned long x120; int x121; short x122; void*x123; void*x124; in void*x125; const void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; unsigned char x147; void*x148; unsigned short x149; void*x150; short x151; void*x152; void*x153; void*x154; void*x155; unsigned long x156; int x157; unsigned int x158/* : ? */; const void*x159; const void*x160; void*x161; void*x162; const int x163; void x164; void*x165; void*x166; void*x167; void*x168; const void*x169; void*x170; void*x171; void*x172; out const void*x173; short x174; void*x175; unsigned char x176; void*x177; BOOL x178; void*x179; void*x180; long doublex181; void*x182; long x183; void*x184; void*x185; void*x186; void*x187; float x188; const void*x189; void*x190; void*x191; void*x192; out const void*x193; void*x194; unsigned char x195; void*x196; BOOL x197; void*x198; void*x199; long doublex200; void*x201; long x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; unsigned int x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; BOOL x274; void*x275; } globalAccumulatedBoundingVerts;
@property (nonatomic, readonly) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; void*x2; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; unsigned short x60; void*x61; short x62; void*x63; void*x64; void*x65; void*x66; unsigned long x67; int x68; unsigned int x69/* : ? */; const void*x70; const void*x71; void*x72; void*x73; const int x74; void x75; void*x76; void*x77; void*x78; void*x79; const void*x80; void*x81; void*x82; void*x83; out const void*x84; short x85; void*x86; void*x87; void*x88; void*x89; long x90; void*x91; void*x92; long doublex93; void*x94; void*x95; void*x96; out in void*x97; float x98; const void*x99; void*x100; void*x101; void*x102; out const void*x103; void*x104; void*x105; void*x106; void*x107; long x108; void*x109; void*x110; long doublex111; void*x112; void*x113; void*x114; out in void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; long doublex127; void*x128; void*x129; void*x130; void*x131; double x132; void*x133; void*x134; void*x135; oneway void*x136; long x137; void*x138; void*x139; void*x140; in void*x141; int x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; unsigned long x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; unsigned short x252; void*x253; short x254; void*x255; void*x256; void*x257; void*x258; unsigned long x259; int x260; unsigned int x261/* : ? */; const void*x262; const void*x263; void*x264; void*x265; const int x266; void x267; void*x268; void*x269; void*x270; void*x271; const void*x272; void*x273; void*x274; void*x275; out const void*x276; short x277; void*x278; unsigned char x279; void*x280; void*x281; void*x282; const void*x283; void*x284; int x285; void*x286; void*x287; float x288; const void*x289; void*x290; void*x291; void*x292; out const void*x293; void*x294; unsigned char x295; void*x296; void*x297; void*x298; const void*x299; void*x300; int x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; unsigned char x320; void*x321; void*x322; void*x323; void*x324; in out const void*x325; void*x326; void*x327; unsigned char x328; void*x329; void*x330; void*x331; void*x332; const void*x333; void*x334; void*x335; const void*x336; void*x337; void*x338; void*x339; void*x340; const short x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; short x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; long x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; out void*x473; int x474; void*x475; double x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; unsigned short x522; void*x523; short x524; void*x525; void*x526; void*x527; void*x528; unsigned long x529; int x530; unsigned int x531/* : ? */; const void*x532; const void*x533; void*x534; void*x535; const void*x536; void*x537; void*x538; void*x539; out const void*x540; short x541; void*x542; unsigned char x543; out in void*x544; void*x545; BOOL x546; void*x547; short x548; void*x549; float x550; const void*x551; void*x552; void*x553; void*x554; out const void*x555; void*x556; unsigned char x557; out in void*x558; void*x559; BOOL x560; void*x561; short x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; unsigned char x573; inout unsigned char x574; out in void*x575; void*x576; int x577; in void*x578; const unsigned int x579; double x580; void*x581; in void*x582; int x583; float x584; int x585; void*x586; const long doublex587; void*x588; short x589; BOOL x590; const int x591; void*x592; void*x593; int x594; out in void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; unsigned short x611; void*x612; void*x613; unsigned int x614; void*x615; const out double x616; void*x617; BOOL x618; void*x619; void*x620; void*x621; void*x622; void*x623; long doublex624; void*x625; void*x626; void*x627; unsigned char x628; out in short x629; void*x630; void*x631; void*x632; const void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; id x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; unsigned short x718; void*x719; short x720; void*x721; void*x722; void*x723; void*x724; unsigned long x725; int x726; unsigned int x727/* : ? */; const void*x728; const void*x729; void*x730; void*x731; const int x732; void x733; void*x734; void*x735; void*x736; void*x737; const void*x738; void*x739; void*x740; void*x741; out const void*x742; short x743; void*x744; void*x745; void*x746; short x747; void*x748; void*x749; unsigned int x750; void*x751; float x752; const void*x753; void*x754; void*x755; void*x756; out const void*x757; void*x758; void*x759; void*x760; short x761; void*x762; void*x763; unsigned int x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; short x790; int x791; BOOL x792; void*x793; void*x794; inout void*x795; void*x796; void*x797; oneway int x798; void*x799; void*x800; void*x801; void*x802; double x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; bycopy void*x849; unsigned short x850; void*x851; short x852; void*x853; void*x854; void*x855; void*x856; unsigned long x857; int x858; unsigned int x859/* : ? */; const void*x860; const void*x861; void*x862; void*x863; const int x864; void x865; void*x866; void*x867; void*x868; void*x869; const void*x870; void*x871; void*x872; void*x873; out const void*x874; short x875; void*x876; short x877; short x878; int x879; short x880; void*x881; void*x882; in void*x883; unsigned short x884; void*x885; const void x886; int x887; BOOL x888; void*x889; short x890; void*x891; float x892; const void*x893; void*x894; void*x895; void*x896; out const void*x897; void*x898; short x899; short x900; int x901; short x902; void*x903; void*x904; in void*x905; unsigned short x906; void*x907; const void x908; int x909; BOOL x910; void*x911; short x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; unsigned short x963; void*x964; short x965; void*x966; void*x967; void*x968; void*x969; unsigned long x970; int x971; unsigned int x972/* : ? */; const void*x973; const void*x974; void*x975; void*x976; const int x977; void x978; void*x979; void*x980; void*x981; void*x982; const void*x983; void*x984; void*x985; void*x986; out const void*x987; short x988; void*x989; unsigned int x990; long doublex991; unsigned short x992; void*x993; out void*x994; in double x995; void*x996; void*x997; int x998; out in void*x999; float x1000; const void*x1001; void*x1002; void*x1003; void*x1004; out const void*x1005; void*x1006; unsigned int x1007; long doublex1008; unsigned short x1009; void*x1010; out void*x1011; in double x1012; void*x1013; void*x1014; int x1015; out in void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; unsigned int x1041; long doublex1042; unsigned short x1043; void*x1044; void*x1045; short x1046; void*x1047; void*x1048; void*x1049; in double x1050; long x1051; void*x1052; const void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; unsigned short x1168; void*x1169; short x1170; void*x1171; void*x1172; void*x1173; void*x1174; unsigned long x1175; int x1176; unsigned int x1177/* : ? */; const void*x1178; const void*x1179; void*x1180; void*x1181; const int x1182; void x1183; void*x1184; void*x1185; void*x1186; void*x1187; const void*x1188; void*x1189; void*x1190; void*x1191; out const void*x1192; short x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; unsigned char x1199; void*x1200; in void*x1201; void*x1202; const void*x1203; unsigned int x1204; void*x1205; float x1206; const void*x1207; void*x1208; void*x1209; void*x1210; out const void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; unsigned char x1217; void*x1218; in void*x1219; void*x1220; const void*x1221; unsigned int x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; inout out void*x1236; int x1237; float x1238; int x1239; BOOL x1240; void*x1241; void*x1242; int x1243; out in bool x1244; void*x1245; in in void*x1246; const void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; bycopy void*x1290; unsigned short x1291; void*x1292; short x1293; void*x1294; void*x1295; void*x1296; void*x1297; unsigned long x1298; int x1299; unsigned int x1300/* : ? */; const void*x1301; const void*x1302; void*x1303; void*x1304; const int x1305; void x1306; void*x1307; void*x1308; void*x1309; void*x1310; const void*x1311; void*x1312; void*x1313; void*x1314; out const void*x1315; short x1316; void*x1317; short x1318; short x1319; int x1320; short x1321; void*x1322; void*x1323; in void*x1324; unsigned short x1325; void*x1326; const void x1327; int x1328; BOOL x1329; void*x1330; short x1331; void*x1332; float x1333; const void*x1334; void*x1335; void*x1336; void*x1337; out const void*x1338; void*x1339; short x1340; short x1341; int x1342; short x1343; void*x1344; void*x1345; in void*x1346; unsigned short x1347; void*x1348; const void x1349; int x1350; BOOL x1351; void*x1352; short x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; unsigned char x1402; void*x1403; unsigned short x1404; void*x1405; short x1406; void*x1407; void*x1408; void*x1409; void*x1410; unsigned long x1411; int x1412; unsigned int x1413/* : ? */; const void*x1414; const void*x1415; void*x1416; void*x1417; const int x1418; void x1419; void*x1420; void*x1421; void*x1422; void*x1423; const void*x1424; void*x1425; void*x1426; void*x1427; out const void*x1428; short x1429; void*x1430; int x1431; void*x1432; out const void*x1433; unsigned int x1434; void*x1435; void*x1436; out const void*x1437; void*x1438; float x1439; const void*x1440; void*x1441; void*x1442; void*x1443; out const void*x1444; void*x1445; int x1446; void*x1447; out const void*x1448; unsigned int x1449; void*x1450; void*x1451; out const void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; unsigned short x1467; long doublex1468; void*x1469; void*x1470; double x1471; int x1472; void*x1473; unsigned int x1474; in float x1475; out void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; bool x1528; bool x1529; bycopy unsigned int x1530/* : ? */; short x1531; void*x1532; const void x1533; void*x1534; const bool x1535; void*x1536; long x1537; long x1538; void*x1539; void*x1540; int x1541; in void*x1542; void*x1543; double x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; short x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; unsigned short x1620; void*x1621; short x1622; void*x1623; void*x1624; void*x1625; void*x1626; unsigned long x1627; int x1628; unsigned int x1629/* : ? */; const void*x1630; const void*x1631; void*x1632; void*x1633; const int x1634; void x1635; void*x1636; void*x1637; void*x1638; void*x1639; const void*x1640; void*x1641; void*x1642; void*x1643; out const void*x1644; short x1645; void*x1646; unsigned short x1647; void*x1648; unsigned int x1649/* : ? */; void*x1650; void*x1651; BOOL x1652; void*x1653; short x1654; void*x1655; float x1656; const void*x1657; void*x1658; void*x1659; void*x1660; out const void*x1661; void*x1662; unsigned short x1663; void*x1664; unsigned int x1665/* : ? */; void*x1666; void*x1667; BOOL x1668; void*x1669; short x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; unsigned short x1688; void*x1689; void*x1690; out in void*x1691; void*x1692; long x1693; void*x1694; void*x1695; oneway out int x1696; BOOL x1697; void*x1698; void*x1699; void*x1700; int x1701; long x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; void*x1732; void*x1733; void*x1734; void*x1735; void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; long doublex1747; unsigned char x1748; out long x1749; out const void*x1750; void*x1751; float x1752; void*x1753; const void*x1754; in BOOL x1755; void*x1756; void*x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; unsigned int x1775; void*x1776; void*x1777; unsigned int x1778/* : ? */; bool x1779; void*x1780; const bool x1781; void*x1782; BOOL x1783; void*x1784; void*x1785; const out void*x1786; in double x1787; oneway int x1788; void*x1789; void*x1790; void*x1791; void*x1792; void*x1793; void*x1794; void*x1795; void*x1796; void*x1797; void*x1798; void*x1799; void*x1800; void*x1801; void*x1802; void*x1803; void*x1804; void*x1805; void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; out void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; unsigned short x1816; void*x1817; unsigned int x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; void*x1824; void*x1825; void*x1826; void*x1827; void*x1828; void*x1829; void*x1830; void*x1831; void*x1832; void*x1833; void*x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; struct x1844; void*x1845; void*x1846; double x1847; int x1848; out void*x1849; void*x1850; void*x1851; void*x1852; unsigned int x1853/* : ? */; long x1854; void*x1855; unsigned short x1856; void*x1857; void*x1858; const BOOL x1859; void*x1860; void*x1861; void*x1862; short x1863; void*x1864; long x1865; void*x1866; unsigned char x1867; void*x1868; void*x1869; void*x1870; void*x1871; out const void*x1872; void*x1873; void*x1874; void*x1875; void*x1876; void*x1877; void*x1878; void*x1879; void*x1880; void*x1881; void*x1882; void*x1883; void*x1884; void*x1885; void*x1886; void*x1887; void*x1888; void*x1889; void*x1890; void*x1891; out void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; double x1897; oneway int x1898; double x1899; void*x1900; out long doublex1901; void*x1902; void*x1903; void*x1904; unsigned short x1905; out void*x1906; const BOOL x1907; void*x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; void*x1915; void*x1916; void*x1917; void*x1918; void*x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; void*x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; unsigned char x1934; out void*x1935; void*x1936; void*x1937; short x1938; short x1939; oneway int x1940; void*x1941; void*x1942; void*x1943; void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; void*x1960; void*x1961; unsigned short x1962; short x1963; void*x1964; in BOOL x1965; void*x1966; const out in out void*x1967; short x1968; void*x1969; void*x1970; void*x1971; BOOL x1972; void*x1973; void*x1974; void*x1975; short x1976; void*x1977; long x1978; void*x1979; void*x1980; void*x1981; void*x1982; void*x1983; void*x1984; void*x1985; void*x1986; void*x1987; void*x1988; void*x1989; void*x1990; void*x1991; void*x1992; void*x1993; void*x1994; void*x1995; void*x1996; void*x1997; void*x1998; void*x1999; void*x2000; void*x2001; void*x2002; unsigned int x2003; void*x2004; unsigned short x2005; void*x2006; void*x2007; const out void*x2008; const void*x2009; short x2010; short x2011; void*x2012; void*x2013; void*x2014; void*x2015; void*x2016; void*x2017; void*x2018; void*x2019; void*x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void*x2028; void*x2029; void*x2030; void*x2031; unsigned int x2032; unsigned char x2033; out long x2034; long x2035; void*x2036; BOOL x2037; void*x2038; int x2039; out in oneway int x2040; void*x2041; void*x2042; void*x2043; const void*x2044; in short x2045; int x2046; void*x2047; int x2048; out in unsigned long x2049; void*x2050; void*x2051; out void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; unsigned long long x2068; void*x2069; void*x2070; void*x2071; bycopy void x2072; void*x2073; const long x2074; void*x2075; void*x2076; unsigned char x2077; out in void*x2078; void*x2079; int x2080; in void*x2081; const oneway int x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; } globalBoundingVerts;
@property (getter=isHidden, nonatomic) BOOL hidden;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) const struct CGPath { }*outline;
@property (nonatomic, readonly) SKNode *parent;
@property (getter=isPaused, nonatomic) BOOL paused;
@property (nonatomic, retain) SKPhysicsBody *physicsBody;
@property (nonatomic) struct CGPoint { float x1; float x2; } position;
@property (nonatomic, copy) SKReachConstraints *reachConstraints;
@property (nonatomic, readonly) SKScene *scene;
@property (nonatomic) float speed;
@property (nonatomic, retain) NSMutableDictionary *userData;
@property (getter=isUserInteractionEnabled, nonatomic) BOOL userInteractionEnabled;
@property (nonatomic) float xRotation;
@property (nonatomic) float xScale;
@property (nonatomic) float yRotation;
@property (nonatomic) float yScale;
@property (nonatomic) float zPosition;
@property (nonatomic) float zRotation;

+ (id)node;
+ (id)nodeWithFileNamed:(id)arg1;
+ (id)obstaclesFromNodeBounds:(id)arg1;
+ (id)obstaclesFromNodePhysicsBodies:(id)arg1;
+ (id)obstaclesFromSpriteTextures:(id)arg1 accuracy:(float)arg2;

- (void).cxx_destruct;
- (struct shared_ptr<PKCAether> { struct PKCAether {} *x1; struct __shared_weak_count {} *x2; })_aether;
- (id)_allActions;
- (struct CGPoint { float x1; float x2; })_anchorPoint;
- (struct SKCNode { int (**x1)(); id x2; struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; id x4; struct SKCNode {} *x5; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_6_1_1; struct SKCNode {} **x_6_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_6_1_3; } x6; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_7_1_1; struct SKCNode {} **x_7_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_7_1_3; } x7; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_8_1_1; struct SKCNode {} **x_8_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_8_1_3; } x8; id x9; float x10; bool x11; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_12_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_12_1_2; } x12; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_13_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_13_1_2; } x13; bool x14; id x15; short x16; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x17; void*x18; const void*x19; double x20; void*x21; void*x22; void*x23; const void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; struct PKPath {} *x33; struct __shared_weak_count {} *x34; }*)_backingNode;
- (id)_copyImageData;
- (void)_debugPrint:(int)arg1;
- (void)_debugPrint:(int)arg1 mask:(unsigned long long)arg2;
- (void)_didMakeBackingNode;
- (void)_enumerateChildNodesWithName:(id)arg1 usingBlock:(id /* block */)arg2 stopPointer:(BOOL*)arg3;
- (void)_flippedChangedFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_getWorldTransform:(float*)arg1 positionY:(float*)arg2 rotation:(float*)arg3 xScale:(float*)arg4 yScale:(float*)arg5;
- (id)_info;
- (struct SKCNode { int (**x1)(); id x2; struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> { struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x_4_3_1; } x_1_2_4; } x_3_1_1; } x3; id x4; struct SKCNode {} *x5; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_6_1_1; struct SKCNode {} **x_6_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_6_1_3; } x6; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_7_1_1; struct SKCNode {} **x_7_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_7_1_3; } x7; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_8_1_1; struct SKCNode {} **x_8_1_2; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode {} **x_3_2_1; } x_8_1_3; } x8; id x9; float x10; bool x11; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_12_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_12_1_2; } x12; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_13_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_13_1_2; } x13; bool x14; id x15; short x16; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x17; void*x18; const void*x19; double x20; void*x21; void*x22; void*x23; const void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; struct PKPath {} *x33; struct __shared_weak_count {} *x34; }*)_makeBackingNode;
- (void)_performCleanup;
- (void)_processSearchTokens:(struct vector<Token, std::__1::allocator<Token> > { struct Token {} *x1; struct Token {} *x2; struct __compressed_pair<Token *, std::__1::allocator<Token> > { struct Token {} *x_3_1_1; } x3; })arg1 visited:(struct set<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *> > { struct __tree<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *> > { struct __tree_node<SKNode *, void *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<SKNode *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::less<SKNode *> > { unsigned long x_3_2_1; } x_1_1_3; } x1; }*)arg2 usingBlock:(id /* block */)arg3 stopPointer:(BOOL*)arg4;
- (void)_removeAction:(id)arg1;
- (void)_removeChild:(id)arg1;
- (void)_runAction:(id)arg1;
- (void)_scaleFactorChangedFrom:(float)arg1 to:(float)arg2;
- (BOOL)_showBounds;
- (struct CGSize { float x1; float x2; })_size;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_untransformedBounds;
- (void)_update:(double)arg1;
- (id)actionForKey:(id)arg1;
- (void)addChild:(id)arg1;
- (void)addChild:(id)arg1 withKey:(id)arg2;
- (id)allIntersectionsWithNode:(id)arg1 useAlphaTest:(BOOL)arg2;
- (float)alpha;
- (id)archiveToFile:(id)arg1;
- (id)attributeValues;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })calculateAccumulatedFrame;
- (id)childNodeWithName:(id)arg1;
- (id)children;
- (id)childrenInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)constraints;
- (id)containingView;
- (BOOL)containsPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)containsPoint:(struct CGPoint { float x1; float x2; })arg1 withRadius:(float)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromNode:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toNode:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPointFromParent:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertPointToParent:(struct CGPoint { float x1; float x2; })arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)debugPrint;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateChildNodesWithName:(id)arg1 usingBlock:(id /* block */)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; void*x2; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; in int x79; void*x80; short x81; void*x82; long x83; void*x84; void*x85; unsigned int x86/* : ? */; void*x87; BOOL x88; void*x89; unsigned long long x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; unsigned short x107; void*x108; short x109; void*x110; void*x111; void*x112; void*x113; unsigned long x114; int x115; unsigned int x116/* : ? */; const void*x117; const void*x118; void*x119; void*x120; const void*x121; void*x122; void*x123; void*x124; out const void*x125; short x126; void*x127; void*x128; void*x129; double x130; int x131; void*x132; void*x133; long x134; void*x135; void*x136; void*x137; const void*x138; float x139; const void*x140; void*x141; void*x142; void*x143; out const void*x144; void*x145; void*x146; void*x147; double x148; int x149; void*x150; void*x151; long x152; void*x153; void*x154; void*x155; const void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; unsigned long x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; unsigned short x240; unsigned short x241; void*x242; short x243; unsigned short x244; in int x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; id x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; unsigned short x301; unsigned short x302; void*x303; short x304; unsigned short x305; in int x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; unsigned short x332; void*x333; short x334; void*x335; void*x336; void*x337; void*x338; unsigned long x339; int x340; unsigned int x341/* : ? */; const void*x342; const void*x343; void*x344; void*x345; const int x346; void x347; void*x348; void*x349; void*x350; void*x351; const void*x352; void*x353; void*x354; void*x355; out const void*x356; short x357; void*x358; unsigned short x359; void*x360; unsigned int x361/* : ? */; void*x362; void*x363; BOOL x364; void*x365; short x366; void*x367; float x368; const void*x369; void*x370; void*x371; void*x372; out const void*x373; void*x374; unsigned short x375; void*x376; unsigned int x377/* : ? */; void*x378; void*x379; BOOL x380; void*x381; short x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; Class x423; void*x424; void*x425; void*x426; void*x427; void*x428; })globalAccumulatedBoundingVerts;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; void*x2; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; double x61; int x62; out double x63; double x64; unsigned short x65; void*x66; void*x67; void*x68; int x69; out in void*x70; void*x71; long long x72; void*x73; void*x74; short x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; unsigned short x88; void*x89; short x90; void*x91; void*x92; void*x93; void*x94; unsigned long x95; int x96; unsigned int x97/* : ? */; const void*x98; const void*x99; void*x100; void*x101; const int x102; void x103; void*x104; void*x105; void*x106; void*x107; const void*x108; void*x109; void*x110; void*x111; out const void*x112; short x113; void*x114; void*x115; void*x116; double x117; int x118; out void*x119; float x120; const void*x121; void*x122; void*x123; void*x124; out const void*x125; void*x126; void*x127; void*x128; double x129; int x130; out void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; unsigned short x253; void*x254; unsigned char x255; out void*x256; void*x257; out in void*x258; in void*x259; void*x260; const int x261; void*x262; void*x263; unsigned char x264; void*x265; void*x266; in in void*x267; long x268; double x269; void*x270; void*x271; void*x272; void*x273; const void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; unsigned char x294; void*x295; short x296; void*x297; out void*x298; unsigned int x299; in short x300; void*x301; void*x302; unsigned char x303; void*x304; long x305; long x306; unsigned long x307; void*x308; void*x309; out void*x310; void*x311; void*x312; void*x313; in void*x314; void*x315; void*x316; const void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; unsigned char x333; void*x334; unsigned short x335; void*x336; short x337; void*x338; void*x339; void*x340; void*x341; unsigned long x342; int x343; unsigned int x344/* : ? */; const void*x345; const void*x346; void*x347; void*x348; const int x349; void x350; void*x351; void*x352; void*x353; void*x354; const void*x355; void*x356; void*x357; void*x358; out const void*x359; short x360; void*x361; void*x362; void*x363; void*x364; long x365; void*x366; void*x367; void*x368; int x369; void*x370; void*x371; unsigned int x372; void*x373; float x374; const void*x375; void*x376; void*x377; void*x378; out const void*x379; void*x380; void*x381; void*x382; void*x383; long x384; void*x385; void*x386; void*x387; int x388; void*x389; void*x390; unsigned int x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; short x429; void*x430; unsigned long long x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; in void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; short x508; void*x509; void*x510; void*x511; short x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; unsigned long x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; short x540; void*x541; void*x542; void*x543; void*x544; long long x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; unsigned short x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; unsigned int x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; long x588; void*x589; BOOL x590; void*x591; void*x592; void*x593; in void*x594; void*x595; void*x596; in void*x597; const void*x598; void*x599; out const void*x600; out const unsigned char x601; void*x602; int x603; in void*x604; short x605; void*x606; void*x607; const void*x608; in short x609; long x610; int x611; void*x612; void*x613; const void*x614; void*x615; int x616; out in void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; unsigned long x663; void*x664; double x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; in void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; id x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; short x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; bool x850; unsigned short x851; void*x852; void*x853; const out int x854; in void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; float x862; void*x863; const void*x864; in BOOL x865; void*x866; void*x867; const out void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; unsigned short x892; void*x893; short x894; void*x895; void*x896; void*x897; void*x898; unsigned long x899; int x900; unsigned int x901/* : ? */; const void*x902; const void*x903; void*x904; void*x905; const int x906; void x907; void*x908; void*x909; void*x910; void*x911; const void*x912; void*x913; void*x914; void*x915; out const void*x916; short x917; void*x918; bool x919; void*x920; short x921; void*x922; bool x923; out void*x924; const double x925; void*x926; float x927; const void*x928; void*x929; void*x930; void*x931; out const void*x932; void*x933; bool x934; void*x935; short x936; void*x937; bool x938; out void*x939; const double x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; unsigned long x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; const void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; unsigned long x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; unsigned char x1149; inout void*x1150; void*x1151; out BOOL x1152; out void*x1153; void*x1154; long x1155; void*x1156; void*x1157; void*x1158; unsigned short x1159; void*x1160; out const void*x1161; unsigned long long x1162; void*x1163; void*x1164; const void*x1165; void*x1166; void*x1167; long x1168; void*x1169; void*x1170; const void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; unsigned short x1190; void*x1191; short x1192; void*x1193; void*x1194; void*x1195; void*x1196; unsigned long x1197; int x1198; unsigned int x1199/* : ? */; const void*x1200; const void*x1201; void*x1202; void*x1203; const int x1204; void x1205; void*x1206; void*x1207; void*x1208; void*x1209; const void*x1210; void*x1211; void*x1212; void*x1213; out const void*x1214; short x1215; void*x1216; unsigned char x1217; out in void*x1218; void*x1219; BOOL x1220; void*x1221; short x1222; void*x1223; void*x1224; out BOOL x1225; out void*x1226; void*x1227; long x1228; void*x1229; void*x1230; void*x1231; void*x1232; float x1233; const void*x1234; void*x1235; void*x1236; void*x1237; out const void*x1238; void*x1239; unsigned char x1240; out in void*x1241; void*x1242; BOOL x1243; void*x1244; short x1245; void*x1246; void*x1247; out BOOL x1248; out void*x1249; void*x1250; long x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; unsigned long x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; oneway void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; bool x1362; void*x1363; void*x1364; void*x1365; void*x1366; const long x1367; int x1368; in void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; unsigned short x1392; void*x1393; short x1394; void*x1395; void*x1396; void*x1397; void*x1398; unsigned long x1399; int x1400; unsigned int x1401/* : ? */; const void*x1402; const void*x1403; void*x1404; void*x1405; const int x1406; void x1407; void*x1408; void*x1409; void*x1410; void*x1411; const void*x1412; void*x1413; void*x1414; void*x1415; out const void*x1416; short x1417; void*x1418; bycopy float x1419; float x1420; int x1421; BOOL x1422; void*x1423; unsigned int x1424; void*x1425; void*x1426; out const void*x1427; void*x1428; float x1429; const void*x1430; void*x1431; void*x1432; void*x1433; out const void*x1434; void*x1435; bycopy float x1436; float x1437; int x1438; BOOL x1439; void*x1440; unsigned int x1441; void*x1442; void*x1443; out const void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; short x1481; void*x1482; void*x1483; void*x1484; short x1485; void*x1486; void*x1487; void*x1488; out void*x1489; void*x1490; void*x1491; int x1492; void*x1493; void*x1494; void*x1495; out in void*x1496; SEL x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; unsigned char x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; bool x1555; out void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; const void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; unsigned short x1580; void*x1581; short x1582; void*x1583; void*x1584; void*x1585; void*x1586; unsigned long x1587; int x1588; unsigned int x1589/* : ? */; const void*x1590; const void*x1591; void*x1592; void*x1593; const int x1594; void x1595; void*x1596; void*x1597; void*x1598; void*x1599; const void*x1600; void*x1601; void*x1602; void*x1603; out const void*x1604; short x1605; void*x1606; unsigned char x1607; out const void*x1608; void*x1609; long doublex1610; void*x1611; void*x1612; float x1613; const void*x1614; void*x1615; void*x1616; void*x1617; out const void*x1618; void*x1619; unsigned char x1620; out const void*x1621; void*x1622; long doublex1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; id x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; unsigned long x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; void*x1732; void*x1733; void*x1734; void*x1735; void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; inout void*x1773; void*x1774; void*x1775; const out void*x1776; out unsigned short x1777; void*x1778; BOOL x1779; void*x1780; const void*x1781; void*x1782; long x1783; void*x1784; void*x1785; void*x1786; in void*x1787; unsigned short x1788; void*x1789; void*x1790; inout void*x1791; void*x1792; void*x1793; void*x1794; void*x1795; void*x1796; void*x1797; in double x1798; out void*x1799; void*x1800; void*x1801; short x1802; void*x1803; out in short x1804; void*x1805; void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; void*x1816; void*x1817; void*x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; unsigned char x1824; void*x1825; unsigned short x1826; void*x1827; short x1828; void*x1829; void*x1830; void*x1831; void*x1832; unsigned long x1833; int x1834; unsigned int x1835/* : ? */; const void*x1836; const void*x1837; void*x1838; void*x1839; const int x1840; void x1841; void*x1842; void*x1843; void*x1844; void*x1845; const void*x1846; void*x1847; void*x1848; void*x1849; out const void*x1850; short x1851; void*x1852; inout void*x1853; in out void*x1854; void*x1855; short x1856; short x1857; void*x1858; int x1859; void*x1860; void*x1861; float x1862; const void*x1863; void*x1864; void*x1865; void*x1866; out const void*x1867; void*x1868; inout void*x1869; in out void*x1870; void*x1871; short x1872; short x1873; void*x1874; int x1875; void*x1876; void*x1877; void*x1878; void*x1879; void*x1880; void*x1881; void*x1882; void*x1883; void*x1884; void*x1885; void*x1886; void*x1887; void*x1888; void*x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; short x1915; void*x1916; void x1917; void**x1918; unsigned long long x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; unsigned long x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; void*x1943; void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; void*x1960; void*x1961; void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; void*x1969; void*x1970; void*x1971; void*x1972; void*x1973; void*x1974; void*x1975; void*x1976; void*x1977; void*x1978; void*x1979; const void*x1980; void*x1981; void*x1982; void*x1983; void*x1984; void*x1985; void*x1986; void*x1987; unsigned long x1988; void*x1989; void*x1990; void*x1991; void*x1992; void*x1993; void*x1994; void*x1995; void*x1996; void*x1997; void*x1998; void*x1999; void*x2000; void*x2001; void*x2002; void*x2003; void*x2004; void*x2005; void*x2006; void*x2007; void*x2008; void*x2009; void*x2010; void*x2011; void*x2012; void*x2013; void*x2014; void*x2015; void*x2016; void*x2017; void*x2018; void*x2019; void*x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void*x2028; void*x2029; void*x2030; void*x2031; void*x2032; void*x2033; void*x2034; void*x2035; void*x2036; void*x2037; void*x2038; void*x2039; void*x2040; void*x2041; void*x2042; void*x2043; void*x2044; void*x2045; void*x2046; void*x2047; void*x2048; void*x2049; void*x2050; void*x2051; void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; void*x2079; void*x2080; void*x2081; void*x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; void*x2091; void*x2092; void*x2093; void*x2094; void*x2095; long doublex2096; void*x2097; out float x2098; unsigned short x2099; void*x2100; void*x2101; void*x2102; int x2103; in void*x2104; short x2105; unsigned int x2106; in float x2107; out void*x2108; void*x2109; void*x2110; void*x2111; void*x2112; void*x2113; void*x2114; void*x2115; void*x2116; void*x2117; void*x2118; void*x2119; void*x2120; void*x2121; bycopy void*x2122; unsigned short x2123; void*x2124; short x2125; void*x2126; void*x2127; void*x2128; void*x2129; unsigned long x2130; int x2131; unsigned int x2132/* : ? */; const void*x2133; const void*x2134; void*x2135; void*x2136; const int x2137; void x2138; void*x2139; void*x2140; void*x2141; void*x2142; const void*x2143; void*x2144; void*x2145; void*x2146; out const void*x2147; short x2148; void*x2149; long doublex2150; void*x2151; void*x2152; void*x2153; BOOL x2154; BOOL x2155; void*x2156; short x2157; short x2158; void*x2159; void*x2160; void*x2161; const void*x2162; short x2163; short x2164; void*x2165; float x2166; const void*x2167; void*x2168; void*x2169; void*x2170; out const void*x2171; void*x2172; long doublex2173; void*x2174; void*x2175; void*x2176; BOOL x2177; BOOL x2178; void*x2179; short x2180; short x2181; void*x2182; void*x2183; void*x2184; const void*x2185; short x2186; short x2187; void*x2188; void*x2189; void*x2190; void*x2191; void*x2192; void*x2193; void*x2194; void*x2195; void*x2196; void*x2197; void*x2198; void*x2199; void*x2200; void*x2201; void*x2202; void*x2203; void*x2204; void*x2205; void*x2206; void*x2207; void*x2208; void*x2209; void*x2210; void*x2211; void*x2212; void*x2213; void*x2214; void*x2215; void*x2216; void*x2217; void*x2218; void*x2219; void*x2220; void*x2221; void*x2222; void*x2223; void*x2224; void*x2225; void*x2226; void*x2227; void*x2228; bycopy void*x2229; void*x2230; })globalBoundingVerts;
- (BOOL)hasActions;
- (BOOL)hasChildren;
- (BOOL)hasUniformAlphaAndIsVisible;
- (BOOL)inParentHierarchy:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(int)arg2;
- (BOOL)intersectsNode:(id)arg1;
- (BOOL)intersectsNode:(id)arg1 useAlphaTest:(BOOL)arg2;
- (BOOL)isEqualToNode:(id)arg1;
- (BOOL)isHidden;
- (BOOL)isPaused;
- (BOOL)isUserInteractionEnabled;
- (void)moveToParent:(id)arg1;
- (id)name;
- (BOOL)needsUpdate;
- (id)nodeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)nodeAtPoint:(struct CGPoint { float x1; float x2; })arg1 recursive:(BOOL)arg2;
- (id)nodesAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (const struct CGPath { }*)outline;
- (id)parent;
- (id)physicsBody;
- (id)physicsField;
- (struct CGPoint { float x1; float x2; })position;
- (id)reachConstraints;
- (void)removeActionForKey:(id)arg1;
- (void)removeAllActions;
- (void)removeAllChildren;
- (void)removeChild:(id)arg1;
- (void)removeChildAtIndex:(int)arg1;
- (void)removeChildrenInArray:(id)arg1;
- (void)removeFromParent;
- (void)runAction:(id)arg1;
- (void)runAction:(id)arg1 completion:(id /* block */)arg2;
- (void)runAction:(id)arg1 withKey:(id)arg2;
- (id)scene;
- (void)setAlpha:(float)arg1;
- (void)setAttributeValues:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setName:(id)arg1;
- (void)setParent:(id)arg1;
- (void)setPaused:(BOOL)arg1;
- (void)setPhysicsBody:(id)arg1;
- (void)setPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)setReachConstraints:(id)arg1;
- (void)setScale:(float)arg1;
- (void)setSpeed:(float)arg1;
- (void)setUserData:(id)arg1;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (void)setValue:(id)arg1 forAttributeNamed:(id)arg2;
- (void)setXRotation:(float)arg1;
- (void)setXScale:(float)arg1;
- (void)setYRotation:(float)arg1;
- (void)setYScale:(float)arg1;
- (void)setZPosition:(float)arg1;
- (void)setZRotation:(float)arg1;
- (void)set_anchorPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)set_info:(id)arg1;
- (void)set_showBounds:(BOOL)arg1;
- (float)speed;
- (Class)swiftClassFromString:(id)arg1 moduleName:(id)arg2;
- (void)updatePhysicsPositionAndScaleFromSprite;
- (id)userData;
- (id)valueForAttributeNamed:(id)arg1;
- (float)xRotation;
- (float)xScale;
- (float)yRotation;
- (float)yScale;
- (float)zPosition;
- (float)zRotation;

@end
