/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSURL : NSObject <CKXPCSuitableString, NSCopying, NSSecureCoding, PQLValuable, QLPreviewItem, SBFFileCacheFileIdentifier, TSUDownloadItem> {
    NSURL *_baseURL;
    void *_clients;
    void *_reserved;
    NSString *_urlString;
}

@property (readonly, copy) NSURL *URLByDeletingLastPathComponent;
@property (readonly, copy) NSURL *URLByDeletingPathExtension;
@property (readonly, copy) NSURL *URLByResolvingSymlinksInPath;
@property (readonly, copy) NSURL *URLByStandardizingPath;
@property (readonly, copy) NSString *absoluteString;
@property (readonly, copy) NSURL *absoluteURL;
@property (readonly) int addressBookUID;
@property (readonly, copy) NSURL *baseURL;
@property (nonatomic, readonly) NSString *br_lastEditorDeviceName;
@property (nonatomic, readonly) NSString *br_lastEditorName;
@property (readonly) int callService;
@property (nonatomic, readonly) BOOL ckShouldShowComposeUI;
@property (readonly, copy) NSData *dataRepresentation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *downloadTaskDescription;
@property (nonatomic, readonly) NSURL *downloadURL;
@property (readonly, copy) NSURL *filePathURL;
@property (readonly) const char *fileSystemRepresentation;
@property (getter=isFileURL, readonly) BOOL fileURL;
@property (readonly) BOOL forceAssist;
@property (readonly, copy) NSString *fragment;
@property (readonly) BOOL hasDirectoryPath;
@property (readonly) unsigned int hash;
@property (readonly, copy) NSString *host;
@property (readonly) BOOL isBasebandLogURL;
@property (readonly) BOOL isEmergencyCallURL;
@property (readonly) BOOL isEmergencyURL;
@property (nonatomic, readonly) BOOL isMapURL;
@property (nonatomic, readonly) BOOL isNewsURL;
@property (nonatomic, readonly) BOOL isPlayImmediatelyURL;
@property (nonatomic, readonly) BOOL isShowNowPlayingURL;
@property (readonly) BOOL isVoicemailURL;
@property (readonly, copy) NSString *lastPathComponent;
@property (nonatomic, readonly) NSString *mpUniversalTrackIDBaseID;
@property (nonatomic, readonly) int mpUniversalTrackIDType;
@property (nonatomic, readonly) BOOL needsDownload;
@property (readonly) NSString *originatingUIIdentifier;
@property (readonly, copy) NSString *parameterString;
@property (readonly, copy) NSString *password;
@property (readonly, copy) NSString *path;
@property (readonly, copy) NSArray *pathComponents;
@property (readonly, copy) NSString *pathExtension;
@property (readonly) NSString *phoneNumber;
@property (readonly, copy) NSNumber *port;
@property (nonatomic, readonly) NSString *previewItemTitle;
@property (nonatomic, readonly) NSURL *previewItemURL;
@property (readonly, copy) NSString *query;
@property (readonly, copy) NSString *relativePath;
@property (readonly, copy) NSString *relativeString;
@property (readonly, copy) NSString *resourceSpecifier;
@property (readonly, copy) NSString *scheme;
@property (nonatomic, readonly) LSAppLink *sf_appLink;
@property (nonatomic, readonly) BOOL sf_isOfflineReadingListURL;
@property (nonatomic, readonly) BOOL sf_isWebSearchURL;
@property (nonatomic, readonly) NSString *shortcutIdentifier;
@property (nonatomic, readonly) BOOL ssb_hasUserInfo;
@property (nonatomic, readonly) BOOL ssb_isSafeURL;
@property (readonly, copy) NSURL *standardizedURL;
@property (readonly) Class superclass;
@property (readonly) BOOL suppressAssist;
@property (nonatomic, readonly) long long totalBytesExpectedToBeDownloaded;
@property (nonatomic, readonly) NSString *tsu_UTI;
@property (nonatomic, readonly) NSURL *uniquedURL;
@property (readonly, copy) NSString *user;
@property (readonly) BOOL wasAlreadyAssisted;

// Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

+ (id)__unurl;
+ (id)bookmarkDataWithContentsOfURL:(id)arg1 error:(id*)arg2;
+ (id)resourceValuesForKeys:(id)arg1 fromBookmarkData:(id)arg2;
+ (BOOL)supportsSecureCoding;
+ (BOOL)writeBookmarkData:(id)arg1 toURL:(id)arg2 options:(unsigned int)arg3 error:(id*)arg4;

- (id)bookmarkDataWithAliasRecord:(id)arg1;
- (id)bookmarkDataWithOptions:(unsigned int)arg1 includingResourceValuesForKeys:(id)arg2 relativeToURL:(id)arg3 error:(id*)arg4;
- (BOOL)checkResourceIsReachableAndReturnError:(id*)arg1;
- (id)filePathURL;
- (id)fileReferenceURL;
- (BOOL)getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (BOOL)isFileReferenceURL;
- (void)removeAllCachedResourceValues;
- (void)removeCachedResourceValueForKey:(id)arg1;
- (id)resourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (BOOL)setResourceValue:(id)arg1 forKey:(id)arg2 error:(id*)arg3;
- (BOOL)setResourceValues:(id)arg1 error:(id*)arg2;
- (void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2;
- (BOOL)startAccessingSecurityScopedResource;
- (void)stopAccessingSecurityScopedResource;

// Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI

+ (id)ab_URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2;
+ (id)ab_faceTimeURLWithDestinationID:(id)arg1;

// Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork

- (BOOL)_isSafeDirectoryForDownloads:(int)arg1;
- (BOOL)_isSafeFileForBackgroundUpload:(int)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (id)CKXPCSuitableString;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)ab_URLWithTelephoneNumber:(id)arg1 contact:(id)arg2;
+ (id)ab_faceTimeURLWithDestinationID:(id)arg1;
+ (id)cnui_faceTimeURLWithDestinationID:(id)arg1 contact:(id)arg2 audioOnly:(BOOL)arg3;

// Image: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight

- (BOOL)cs_addDocumentTracking;
- (BOOL)cs_isInMobileDocuments;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)URLByResolvingAliasFileAtURL:(id)arg1 options:(unsigned int)arg2 error:(id*)arg3;
+ (id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned int)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(BOOL*)arg4 error:(id*)arg5;
+ (id)URLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)URLWithString:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithComponents:(struct { id x1; id x2; int x3; id x4; id x5; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; unsigned int x26; void*x27; unsigned char x28; out void*x29; void*x30; void*x31; in double x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; unsigned int x88; void*x89; unsigned char x90; out void*x91; void*x92; void*x93; in double x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; unsigned short x119; void*x120; short x121; void*x122; void*x123; void*x124; void*x125; unsigned long x126; int x127; unsigned int x128/* : ? */; const void*x129; const void*x130; void*x131; void*x132; const int x133; void x134; void*x135; void*x136; void*x137; void*x138; const void*x139; void*x140; void*x141; void*x142; out const void*x143; short x144; void*x145; unsigned char x146; out const void*x147; void*x148; unsigned char x149; void*x150; float x151; const void*x152; void*x153; void*x154; void*x155; out const void*x156; void*x157; unsigned char x158; out const void*x159; void*x160; unsigned char x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; id x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; long x241; void*x242; void*x243; void*x244; void*x245; long long x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; id x274; void*x275; void*x276; id x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; unsigned int x357; unsigned char x358; void*x359; void*x360; void*x361; out void*x362; void*x363; void*x364; int x365; long x366; void*x367; void*x368; void*x369; void*x370; BOOL x371; void*x372; void*x373; void*x374; in void*x375; long doublex376; out void*x377; in long x378; out void*x379; double x380; void*x381; const void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; unsigned int x393; void*x394; void*x395; unsigned long long x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; union x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; bool x485; bool x486; void*x487; const out void*x488; out long doublex489; int x490; void*x491; void*x492; in out short x493; void*x494; int x495; BOOL x496; short x497; void*x498; in void*x499; unsigned int x500/* : ? */; long x501; void*x502; double x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; long x528; void x529; void*x530; void*x531; int x532; BOOL x533; void*x534; void*x535; inout void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; double x542; int x543; void*x544; void*x545; void*x546; unsigned int x547; void*x548; void*x549; long x550; int x551; BOOL x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; long x566; long long x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; unsigned long x576; void*x577; void*x578; void x579; void*x580; unsigned char x581; out in void*x582; const out long x583; void*x584; const out void*x585; void*x586; void*x587; void*x588; long long x589; void*x590; void*x591; short x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; id x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; in double x617; void*x618; const void*x619; const void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; id x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; unsigned int x643/* : ? */; void*x644; int x645; void*x646; long x647; void*x648; unsigned char x649; void*x650; long x651; long x652; void*x653; int x654; void*x655; void*x656; double x657; double x658; int x659; void*x660; int x661; out in void*x662; long x663; long doublex664; void*x665; void*x666; void*x667; int x668; long x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; id x680; void x681; long long x682; void*x683; void*x684; void*x685; unsigned char x686; void*x687; void*x688; void*x689; BOOL x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; id x711; void*x712; void*x713; id x714; void*x715; unsigned long x716; unsigned short x717; void*x718; out const void*x719; void*x720; void*x721; in void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; id x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; unsigned short x744; void*x745; void*x746; void*x747; long x748; void*x749; void*x750; void*x751; in void*x752; void*x753; const void*x754; oneway int x755; void*x756; void*x757; void*x758; void*x759; void*x760; const int x761; BOOL x762; short x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; id x780; void*x781; void*x782; void*x783; void*x784; inout void*x785; void*x786; unsigned int x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; BOOL x795; void*x796; void*x797; void*x798; in void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; id x807; bycopy void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; const in void*x818; long x819; void*x820; void*x821; float x822; void*x823; const void*x824; in BOOL x825; void*x826; long doublex827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; id x849; void*x850; out void*x851; void*x852; void*x853; void*x854; unsigned int x855; void*x856; const out void*x857; out BOOL x858; out long x859; inout void*x860; void*x861; void*x862; out const void*x863; long doublex864; out void*x865; void*x866; int x867; in void*x868; void x869; void*x870; in void*x871; long doublex872; int x873; short x874; void*x875; void*x876; void*x877; BOOL x878; void*x879; void*x880; const void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; id x900; void*x901; void*x902; void*x903; void*x904; void*x905; unsigned short x906; long doublex907; unsigned long long x908; void*x909; int x910; BOOL x911; void*x912; long x913; out out void*x914; void*x915; void*x916; const short x917; int x918; short x919; void*x920; void*x921; in BOOL x922; void*x923; double x924; double x925; int x926; void*x927; int x928; out in short x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; id x940; void*x941; short x942; void*x943; void*x944; void*x945; void*x946; unsigned int x947; oneway int x948; void*x949; void*x950; unsigned short x951; void*x952; const void x953; int x954; BOOL x955; void*x956; unsigned int x957; in void*x958; void*x959; const float x960; void*x961; BOOL x962; void*x963; unsigned char x964; out in in void*x965; BOOL x966; void*x967; int x968; out in void*x969; void*x970; long long x971; void*x972; void*x973; short x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; id x994; void*x995; void*x996; void*x997; void*x998; void*x999; long doublex1000; void*x1001; void*x1002; void x1003; void*x1004; in void*x1005; unsigned short x1006; void*x1007; const void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; id x1023; void*x1024; long long x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; unsigned long long x1031; void*x1032; int x1033; BOOL x1034; void*x1035; void*x1036; out void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; in void*x1042; void*x1043; void*x1044; const void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; id x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; unsigned char x1058; out in void*x1059; void*x1060; in void*x1061; void*x1062; int x1063; long x1064; void*x1065; void*x1066; const void*x1067; long x1068; void*x1069; void*x1070; int x1071; in void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; id x1077; short x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; const int x1085; double x1086; unsigned long x1087; void*x1088; void*x1089; out void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; const int x1095; BOOL x1096; short x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; struct x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; id x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; unsigned char x1156; out in in void*x1157; BOOL x1158; void*x1159; int x1160; out in unsigned short x1161; void*x1162; void*x1163; void*x1164; int x1165; in void*x1166; short x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; id x1174; bool x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; long doublex1181; void*x1182; void x1183; int x1184; BOOL x1185; void*x1186; unsigned char x1187; out in void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; id x1203; bool x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; unsigned long x1212; void*x1213; void*x1214; void*x1215; void*x1216; const short x1217; void*x1218; const void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; id x1232; bool x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; BOOL x1242; void*x1243; void*x1244; void x1245; void*x1246; in void*x1247; unsigned long long x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; id x1262; bool x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; long doublex1269; void*x1270; unsigned long x1271; int x1272; void*x1273; void*x1274; void*x1275; void*x1276; short x1277; void*x1278; out in short x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; id x1291; bool x1292; void*x1293; void*x1294; void*x1295; void*x1296; unsigned int x1297; unsigned short x1298; void*x1299; out const void*x1300; unsigned int x1301/* : ? */; out void*x1302; const double x1303; void*x1304; void*x1305; void*x1306; long x1307; void*x1308; BOOL x1309; void*x1310; unsigned short x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; void*x1318; void*x1319; long x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; id x1334; bool x1335; void*x1336; void*x1337; void*x1338; void*x1339; void*x1340; void*x1341; double x1342; int x1343; void*x1344; void*x1345; unsigned int x1346/* : ? */; long x1347; void*x1348; unsigned char x1349; out long x1350; long x1351; void*x1352; BOOL x1353; void*x1354; int x1355; out in oneway int x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; id x1377; bool x1378; void*x1379; void*x1380; void*x1381; void*x1382; unsigned short x1383; bool x1384; void*x1385; unsigned long long x1386; void*x1387; void*x1388; void*x1389; void*x1390; unsigned short x1391; BOOL x1392; void*x1393; void*x1394; double x1395; void*x1396; long x1397; void*x1398; const void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; id x1407; bool x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; out void*x1415; void*x1416; void*x1417; BOOL x1418; void*x1419; int x1420; void x1421; int x1422; void*x1423; void*x1424; void*x1425; const out void x1426; int x1427; double x1428; void*x1429; const void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; id x1449; bool x1450; void*x1451; void*x1452; char *x1453; void*x1454; unsigned long x1455; BOOL x1456; void*x1457; int x1458; void x1459; int x1460; void*x1461; void*x1462; unsigned char x1463; const int x1464; void*x1465; void*x1466; const int x1467; out in void*x1468; int x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; id x1491; bool x1492; void*x1493; void*x1494; void*x1495; void*x1496; unsigned long x1497; unsigned char x1498; long x1499; out void*x1500; double x1501; void*x1502; void*x1503; short x1504; out void*x1505; const BOOL x1506; void*x1507; void*x1508; void*x1509; long long x1510; void*x1511; void*x1512; short x1513; void*x1514; void*x1515; double x1516; void*x1517; void*x1518; short x1519; short x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; id x1535; bool x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; unsigned int x1543; unsigned short x1544; void*x1545; void*x1546; void*x1547; void*x1548; short x1549; void*x1550; void*x1551; double x1552; void*x1553; void*x1554; in double x1555; long x1556; void*x1557; short x1558; unsigned short x1559; void*x1560; void*x1561; void*x1562; int x1563; in void*x1564; short x1565; void*x1566; void*x1567; void*x1568; double x1569; void*x1570; const void*x1571; out out void*x1572; void*x1573; const long doublex1574; void*x1575; short x1576; BOOL x1577; const int x1578; void*x1579; void*x1580; int x1581; out in void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; id x1589; bool x1590; void*x1591; void*x1592; void*x1593; void*x1594; unsigned short x1595; void*x1596; void*x1597; void*x1598; int x1599; in void*x1600; bycopy void*x1601; void*x1602; in void*x1603; void*x1604; void*x1605; unsigned int x1606/* : ? */; out void*x1607; const double x1608; unsigned short x1609; void*x1610; void*x1611; void*x1612; int x1613; in void*x1614; short x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; id x1629; void*x1630; void*x1631; id x1632; void*x1633; void*x1634; int x1635; const void*x1636; long x1637; void*x1638; void*x1639; unsigned short x1640; void*x1641; void*x1642; void*x1643; int x1644; in void*x1645; short x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; id x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; short x1663; int x1664; BOOL x1665; unsigned short x1666; void*x1667; int x1668; void*x1669; BOOL x1670; void*x1671; void*x1672; const bool x1673; void*x1674; void*x1675; void*x1676; out in unsigned char x1677; out in void*x1678; void*x1679; int x1680; in void*x1681; const oneway int x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; id x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; void*x1701; unsigned int x1702; unsigned short x1703; void*x1704; void*x1705; long x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; void*x1717; void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; id x1725; bycopy void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; out long x1732; void*x1733; void*x1734; out in void*x1735; void*x1736; void*x1737; void*x1738; out double x1739; void*x1740; long x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; id x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; void*x1759; const void*x1760; float x1761; void*x1762; const void*x1763; in BOOL x1764; void*x1765; short x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; void*x1775; void*x1776; void*x1777; void*x1778; id x1779; void*x1780; void*x1781; void*x1782; void*x1783; unsigned short x1784; void*x1785; void*x1786; void*x1787; int x1788; in void*x1789; bycopy void*x1790; void*x1791; in unsigned int x1792; unsigned char x1793; long x1794; out void*x1795; double x1796; unsigned short x1797; void*x1798; void*x1799; void*x1800; int x1801; in void*x1802; short x1803; void*x1804; void*x1805; void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; void*x1816; void*x1817; void*x1818; id x1819; void*x1820; void*x1821; void*x1822; void*x1823; void*x1824; void*x1825; void*x1826; unsigned int x1827; void*x1828; void*x1829; double x1830; int x1831; void*x1832; void*x1833; long x1834; void*x1835; void*x1836; void*x1837; const unsigned int x1838; in void*x1839; void*x1840; const float x1841; void*x1842; BOOL x1843; void*x1844; void*x1845; void*x1846; void*x1847; void*x1848; void*x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; void*x1862; id x1863; void*x1864; short x1865; void*x1866; void*x1867; void*x1868; bool x1869; void*x1870; void*x1871; const out BOOL x1872; void*x1873; double x1874; void*x1875; const void*x1876; long x1877; void*x1878; void*x1879; long x1880; long x1881; void*x1882; void*x1883; void*x1884; void*x1885; const oneway int x1886; void*x1887; void*x1888; void*x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; id x1905; void*x1906; long x1907; unsigned long long x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; void*x1915; bool x1916; void*x1917; unsigned int x1918/* : ? */; unsigned int x1919/* : ? */; long x1920; void*x1921; unsigned char x1922; out in void*x1923; const out long x1924; void*x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; id x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; unsigned long x1938; void*x1939; void*x1940; short x1941; out void*x1942; const BOOL x1943; void*x1944; unsigned char x1945; void*x1946; out out short x1947; void*x1948; const void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; id x1958; void*x1959; short x1960; void*x1961; void*x1962; void*x1963; unsigned short x1964; unsigned char x1965; void*x1966; void*x1967; long doublex1968; unsigned char x1969; void*x1970; void*x1971; const void*x1972; unsigned long x1973; void*x1974; unsigned int x1975/* : ? */; void*x1976; long x1977; short x1978; unsigned char x1979; out in void*x1980; void*x1981; int x1982; in int x1983; in void*x1984; unsigned short x1985; BOOL x1986; void*x1987; in void*x1988; bycopy unsigned int x1989/* : ? */; void*x1990; void*x1991; BOOL x1992; void*x1993; void*x1994; void*x1995; void*x1996; void*x1997; id x1998; bool x1999; void*x2000; unsigned long long x2001; void*x2002; void*x2003; long doublex2004; unsigned short x2005; unsigned long long x2006; unsigned long x2007; int x2008; void*x2009; void*x2010; long doublex2011; void*x2012; void*x2013; void*x2014; unsigned int x2015/* : ? */; void*x2016; short x2017; void*x2018; unsigned short x2019; BOOL x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void*x2028; void*x2029; void*x2030; void*x2031; void*x2032; void*x2033; void*x2034; void*x2035; char *x2036; void*x2037; union x2038; void*x2039; void*x2040; void*x2041; void*x2042; void*x2043; void*x2044; void*x2045; void*x2046; void*x2047; void*x2048; void*x2049; void*x2050; void*x2051; void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; unsigned int x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; long long x2076; long x2077; void*x2078; void*x2079; void*x2080; void*x2081; unsigned int x2082; void*x2083; out void*x2084; BOOL x2085; void*x2086; void*x2087; out const void*x2088; void*x2089; const double x2090; int x2091; in void*x2092; void*x2093; void*x2094; BOOL x2095; int x2096; void*x2097; int x2098; void*x2099; in void*x2100; void*x2101; void*x2102; void*x2103; void*x2104; void*x2105; void*x2106; void*x2107; void*x2108; void*x2109; void*x2110; void*x2111; void*x2112; void*x2113; void*x2114; void*x2115; id x2116; void*x2117; void*x2118; void*x2119; void*x2120; void*x2121; void*x2122; void*x2123; out double x2124; int x2125; float x2126; void*x2127; void*x2128; void*x2129; BOOL x2130; out const double x2131; BOOL x2132; BOOL x2133; void*x2134; short x2135; short x2136; bycopy void*x2137; void*x2138; const void*x2139; void*x2140; int x2141; out in void*x2142; void*x2143; void*x2144; void*x2145; void*x2146; void*x2147; void*x2148; void*x2149; void*x2150; void*x2151; void*x2152; void*x2153; void*x2154; id x2155; void*x2156; void*x2157; void*x2158; void*x2159; void*x2160; bycopy bycopy bool x2161; void*x2162; void*x2163; short x2164; short x2165; void*x2166; void*x2167; void*x2168; void*x2169; void*x2170; void*x2171; void*x2172; void*x2173; void*x2174; void*x2175; void*x2176; void*x2177; void*x2178; void*x2179; void*x2180; void*x2181; void*x2182; id x2183; unsigned short x2184; short x2185; void*x2186; void*x2187; void*x2188; long doublex2189; void*x2190; void*x2191; const void*x2192; void*x2193; double x2194; void*x2195; bycopy unsigned char x2196; bycopy const void*x2197; void*x2198; in int x2199; void*x2200; void*x2201; const void*x2202; void*x2203; void*x2204; void*x2205; void*x2206; void*x2207; id x2208; void*x2209; void*x2210; void*x2211; void*x2212; void*x2213; void*x2214; unsigned int x2215; void*x2216; void*x2217; void*x2218; unsigned int x2219/* : ? */; out void*x2220; const double x2221; void*x2222; unsigned int x2223/* : ? */; int x2224; void*x2225; void*x2226; const void*x2227; void*x2228; void*x2229; void*x2230; void*x2231; void*x2232; void*x2233; void*x2234; id x2235; void*x2236; void*x2237; void*x2238; void*x2239; void*x2240; void*x2241; oneway int x2242; double x2243; void*x2244; out bycopy void x2245; void*x2246; const long x2247; void*x2248; void*x2249; void*x2250; void*x2251; void*x2252; void*x2253; void*x2254; void*x2255; void*x2256; void*x2257; void*x2258; void*x2259; void*x2260; void*x2261; id x2262; void*x2263; void*x2264; void*x2265; void*x2266; void*x2267; void*x2268; void*x2269; const void*x2270; double x2271; int x2272; void*x2273; in void*x2274; unsigned char x2275; out long x2276; out const unsigned short x2277; void*x2278; out void*x2279; void*x2280; void*x2281; void*x2282; void*x2283; void*x2284; void*x2285; void*x2286; id x2287; struct x2288; void*x2289; void*x2290; short x2291; int x2292; BOOL x2293; unsigned short x2294; void*x2295; out const void*x2296; void*x2297; out double x2298; void*x2299; long x2300; long x2301; unsigned int x2302/* : ? */; void*x2303; void*x2304; bool x2305; void*x2306; int x2307; long x2308; double x2309; void*x2310; const void*x2311; void*x2312; void*x2313; void*x2314; void*x2315; void*x2316; void*x2317; void*x2318; void*x2319; void*x2320; void*x2321; void*x2322; void*x2323; void*x2324; void*x2325; id x2326; void*x2327; long long x2328; void*x2329; void*x2330; void*x2331; void*x2332; void*x2333; long doublex2334; void*x2335; void*x2336; void*x2337; void*x2338; void*x2339; long x2340; void*x2341; void*x2342; const void*x2343; void*x2344; void*x2345; void*x2346; void*x2347; void*x2348; void*x2349; void*x2350; void*x2351; void*x2352; void*x2353; void*x2354; id x2355; void*x2356; void*x2357; void*x2358; void*x2359; void*x2360; void*x2361; bycopy unsigned char x2362; void*x2363; void*x2364; void*x2365; void*x2366; out const void*x2367; void*x2368; void*x2369; void*x2370; void*x2371; void*x2372; void*x2373; void*x2374; void*x2375; void*x2376; void*x2377; void*x2378; void*x2379; void*x2380; void*x2381; void*x2382; id x2383; void*x2384; void*x2385; void*x2386; void*x2387; void*x2388; unsigned short x2389; void*x2390; short x2391; void*x2392; const BOOL x2393; void*x2394; int x2395; out in void*x2396; void*x2397; void*x2398; void*x2399; void*x2400; void*x2401; void*x2402; void*x2403; void*x2404; void*x2405; void*x2406; void*x2407; void*x2408; void*x2409; id x2410; void*x2411; long long x2412; void*x2413; void*x2414; void*x2415; unsigned short x2416; void*x2417; out BOOL x2418; void*x2419; unsigned short x2420; in int x2421; void*x2422; void*x2423; void*x2424; void*x2425; void*x2426; void*x2427; void*x2428; void*x2429; void*x2430; void*x2431; void*x2432; void*x2433; void*x2434; void*x2435; struct x2436; void*x2437; void*x2438; void*x2439; void*x2440; void*x2441; void*x2442; void*x2443; void*x2444; void*x2445; void*x2446; void*x2447; void*x2448; void*x2449; void*x2450; void*x2451; void*x2452; void*x2453; void*x2454; void*x2455; id x2456; void*x2457; void*x2458; void*x2459; void*x2460; void*x2461; void*x2462; long x2463; void*x2464; void*x2465; void*x2466; void*x2467; void*x2468; void*x2469; void*x2470; void*x2471; void*x2472; void*x2473; void*x2474; void*x2475; void*x2476; void*x2477; void*x2478; void*x2479; out void*x2480; void*x2481; void*x2482; void*x2483; void*x2484; void*x2485; void*x2486; void*x2487; void*x2488; void*x2489; void*x2490; void*x2491; void*x2492; void*x2493; void*x2494; void*x2495; void*x2496; void*x2497; void*x2498; void*x2499; void*x2500; void*x2501; void*x2502; void*x2503; void*x2504; void*x2505; void*x2506; void*x2507; void*x2508; void*x2509; void*x2510; void*x2511; void*x2512; void*x2513; void*x2514; void*x2515; void*x2516; void*x2517; void*x2518; void*x2519; void*x2520; void*x2521; void*x2522; void*x2523; void*x2524; void*x2525; void*x2526; void*x2527; void*x2528; void*x2529; void*x2530; void*x2531; void*x2532; void*x2533; void*x2534; void*x2535; void*x2536; void*x2537; void*x2538; void*x2539; void*x2540; unsigned long x2541; void*x2542; out void*x2543; void*x2544; void*x2545; void*x2546; void*x2547; void*x2548; void*x2549; void*x2550; void*x2551; void*x2552; void*x2553; void*x2554; void*x2555; void*x2556; void*x2557; void*x2558; void*x2559; void*x2560; void*x2561; void*x2562; void*x2563; void*x2564; void*x2565; void*x2566; void*x2567; void*x2568; void*x2569; void*x2570; void*x2571; void*x2572; void*x2573; void*x2574; void*x2575; void*x2576; void*x2577; void*x2578; void*x2579; id x2580; void*x2581; void*x2582; void*x2583; void*x2584; bycopy void*x2585; void*x2586; void*x2587; void*x2588; void*x2589; void*x2590; void*x2591; void*x2592; void*x2593; void*x2594; void*x2595; void*x2596; void*x2597; void*x2598; void*x2599; void*x2600; void*x2601; void*x2602; void x2603; void*x2604; void*x2605; void*x2606; void*x2607; void*x2608; void*x2609; void*x2610; void*x2611; unsigned int x2612; long x2613; void*x2614; const void*x2615; unsigned char x2616; out in void*x2617; const out long x2618; long x2619; void*x2620; const oneway int x2621; short x2622; void*x2623; void*x2624; long x2625; unsigned short x2626; void*x2627; void*x2628; long x2629; void*x2630; long x2631; void*x2632; const void*x2633; unsigned char x2634; void*x2635; const void*x2636; void*x2637; void*x2638; void*x2639; void*x2640; void*x2641; void*x2642; void*x2643; void*x2644; void*x2645; void*x2646; void*x2647; void*x2648; void*x2649; void*x2650; void*x2651; void*x2652; void*x2653; void*x2654; void*x2655; void*x2656; void*x2657; void*x2658; void*x2659; void*x2660; void*x2661; void*x2662; void*x2663; void*x2664; void*x2665; void*x2666; void*x2667; void*x2668; void*x2669; void*x2670; void*x2671; void*x2672; void*x2673; long long x2674; void*x2675; void*x2676; void*x2677; void*x2678; void*x2679; void*x2680; void*x2681; void*x2682; void*x2683; void*x2684; void*x2685; void*x2686; void*x2687; void*x2688; void*x2689; void*x2690; void*x2691; void*x2692; void*x2693; void*x2694; void*x2695; void*x2696; void*x2697; void*x2698; void*x2699; void*x2700; void*x2701; void*x2702; void*x2703; void x2704; void*x2705; void*x2706; void*x2707; void*x2708; void*x2709; void*x2710; void*x2711; void*x2712; void*x2713; void*x2714; void*x2715; void*x2716; void*x2717; void*x2718; void*x2719; void*x2720; void*x2721; void*x2722; void*x2723; void*x2724; void*x2725; void*x2726; void*x2727; void*x2728; void*x2729; void*x2730; void*x2731; void*x2732; void*x2733; void*x2734; void*x2735; void*x2736; void*x2737; id x2738; void*x2739; void*x2740; id x2741; void*x2742; void*x2743; void*x2744; void*x2745; void*x2746; void*x2747; void*x2748; void*x2749; void*x2750; void*x2751; void*x2752; void*x2753; void*x2754; void*x2755; void*x2756; void*x2757; void*x2758; void*x2759; void*x2760; void*x2761; void*x2762; void*x2763; void*x2764; void*x2765; void x2766; void*x2767; void*x2768; void*x2769; void*x2770; void*x2771; void*x2772; void*x2773; void*x2774; void*x2775; void*x2776; void*x2777; void*x2778; void*x2779; void*x2780; void*x2781; void*x2782; void*x2783; void*x2784; void*x2785; void*x2786; void*x2787; void*x2788; void*x2789; void*x2790; void*x2791; void*x2792; void*x2793; void*x2794; void*x2795; void*x2796; void*x2797; void*x2798; void*x2799; id x2800; void*x2801; void*x2802; long long x2803; out void*x2804; int x2805; void*x2806; double x2807; void*x2808; void*x2809; void*x2810; void*x2811; void*x2812; void*x2813; void*x2814; void*x2815; void*x2816; void*x2817; void*x2818; void*x2819; void*x2820; void*x2821; void*x2822; void*x2823; void*x2824; void*x2825; void*x2826; id x2827; void*x2828; void*x2829; void*x2830; void*x2831; void*x2832; void*x2833; void*x2834; void*x2835; void*x2836; void*x2837; void*x2838; void*x2839; void*x2840; void*x2841; void*x2842; void*x2843; void*x2844; void*x2845; void*x2846; void*x2847; void*x2848; void*x2849; void*x2850; void*x2851; void*x2852; void*x2853; void*x2854; void*x2855; void*x2856; void*x2857; void*x2858; void*x2859; void*x2860; void*x2861; void*x2862; void*x2863; void*x2864; void*x2865; void*x2866; void*x2867; void*x2868; void*x2869; void*x2870; void*x2871; void*x2872; void*x2873; void*x2874; void x2875; void*x2876; void*x2877; void*x2878; void*x2879; void*x2880; void*x2881; void*x2882; void*x2883; unsigned short x2884; void*x2885; short x2886; void*x2887; void*x2888; void*x2889; void*x2890; unsigned long x2891; int x2892; unsigned int x2893/* : ? */; const void*x2894; const void*x2895; void*x2896; void*x2897; const void*x2898; void*x2899; void*x2900; void*x2901; out const void*x2902; short x2903; void*x2904; unsigned char x2905; out const void*x2906; unsigned int x2907; void*x2908; void*x2909; void*x2910; void*x2911; void*x2912; float x2913; const void*x2914; void*x2915; void*x2916; void*x2917; out const void*x2918; void*x2919; unsigned char x2920; out const void*x2921; unsigned int x2922; void*x2923; void*x2924; void*x2925; void*x2926; void*x2927; void*x2928; void*x2929; void*x2930; void*x2931; void*x2932; void*x2933; void*x2934; void*x2935; void*x2936; void*x2937; void*x2938; void*x2939; void*x2940; void*x2941; long doublex2942; void*x2943; short x2944; void*x2945; void*x2946; void*x2947; void*x2948; void*x2949; void*x2950; void*x2951; void*x2952; void*x2953; void*x2954; void*x2955; void*x2956; void*x2957; void*x2958; void*x2959; void*x2960; void*x2961; void*x2962; void*x2963; void*x2964; void*x2965; void*x2966; void*x2967; void*x2968; void*x2969; void*x2970; void*x2971; void*x2972; void*x2973; void*x2974; void x2975; void*x2976; void*x2977; void*x2978; void*x2979; void*x2980; void*x2981; void*x2982; void*x2983; void*x2984; void*x2985; void*x2986; void*x2987; void*x2988; void*x2989; void*x2990; void*x2991; void*x2992; void*x2993; void*x2994; void*x2995; void*x2996; void*x2997; void*x2998; void*x2999; void*x3000; void*x3001; void*x3002; void*x3003; void*x3004; void*x3005; void*x3006; void*x3007; void*x3008; id x3009; void*x3010; void*x3011; id x3012; void*x3013; void*x3014; void*x3015; void*x3016; void*x3017; void*x3018; void*x3019; void*x3020; void*x3021; void*x3022; void*x3023; void*x3024; void*x3025; void*x3026; void*x3027; void*x3028; void*x3029; void*x3030; void*x3031; void*x3032; void*x3033; void*x3034; void*x3035; void*x3036; void x3037; void*x3038; void*x3039; void*x3040; void*x3041; void*x3042; void*x3043; void*x3044; void*x3045; void*x3046; void*x3047; void*x3048; void*x3049; void*x3050; void*x3051; void*x3052; void*x3053; void*x3054; void*x3055; void*x3056; void*x3057; void*x3058; void*x3059; void*x3060; void*x3061; void*x3062; void*x3063; void*x3064; void*x3065; void*x3066; void*x3067; void*x3068; void x3069; void*x3070; void*x3071; void*x3072; void*x3073; void*x3074; void*x3075; void*x3076; void*x3077; void*x3078; void*x3079; void*x3080; void*x3081; void*x3082; void*x3083; void*x3084; void*x3085; void*x3086; void*x3087; void*x3088; void*x3089; void*x3090; void*x3091; void*x3092; void*x3093; void*x3094; void*x3095; void*x3096; void*x3097; void*x3098; void*x3099; void*x3100; void x3101; void*x3102; void*x3103; void*x3104; void*x3105; void*x3106; void*x3107; void*x3108; void*x3109; unsigned short x3110; unsigned short x3111; void*x3112; unsigned int x3113/* : ? */; short x3114; BOOL x3115; const int x3116; unsigned int x3117/* : ? */; void*x3118; void*x3119; void*x3120; unsigned char x3121; unsigned short x3122; void*x3123; const out void*x3124; out BOOL x3125; out long x3126; void*x3127; void*x3128; void*x3129; void*x3130; void*x3131; void*x3132; void*x3133; void*x3134; void*x3135; void*x3136; void*x3137; void*x3138; void*x3139; void*x3140; void*x3141; void*x3142; void*x3143; void*x3144; void*x3145; void*x3146; void*x3147; void*x3148; void*x3149; void*x3150; void*x3151; void*x3152; void*x3153; void*x3154; bool x3155; void*x3156; void*x3157; void*x3158; bool x3159; void*x3160; void*x3161; void*x3162; void*x3163; void*x3164; void*x3165; void*x3166; void*x3167; void*x3168; void*x3169; void*x3170; void*x3171; void*x3172; void*x3173; void*x3174; void x3175; void*x3176; void*x3177; void*x3178; void*x3179; void*x3180; void*x3181; void*x3182; void*x3183; unsigned short x3184; unsigned short x3185; void*x3186; unsigned int x3187/* : ? */; short x3188; BOOL x3189; const int x3190; unsigned int x3191/* : ? */; void*x3192; void*x3193; void*x3194; unsigned char x3195; unsigned short x3196; void*x3197; const out void*x3198; out BOOL x3199; out long x3200; void*x3201; void*x3202; void*x3203; void*x3204; void*x3205; void*x3206; void*x3207; void*x3208; void*x3209; void*x3210; void*x3211; void*x3212; void*x3213; void*x3214; void*x3215; void*x3216; void*x3217; void x3218; void*x3219; void*x3220; void*x3221; void*x3222; void*x3223; void*x3224; void*x3225; void*x3226; unsigned short x3227; void*x3228; short x3229; void*x3230; void*x3231; void*x3232; void*x3233; unsigned long x3234; int x3235; unsigned int x3236/* : ? */; const void*x3237; const void*x3238; void*x3239; void*x3240; const int x3241; void x3242; void*x3243; void*x3244; void*x3245; void*x3246; const void*x3247; void*x3248; void*x3249; void*x3250; out const void*x3251; short x3252; void*x3253; unsigned char x3254; out const void*x3255; void*x3256; void*x3257; double x3258; int x3259; void*x3260; unsigned short x3261; void*x3262; const void*x3263; void*x3264; void*x3265; void*x3266; float x3267; const void*x3268; void*x3269; void*x3270; void*x3271; out const void*x3272; void*x3273; unsigned char x3274; out const void*x3275; void*x3276; void*x3277; double x3278; int x3279; void*x3280; unsigned short x3281; void*x3282; const void*x3283; void*x3284; void*x3285; void*x3286; void*x3287; void*x3288; void*x3289; void*x3290; void*x3291; void*x3292; void*x3293; void*x3294; void*x3295; void*x3296; void*x3297; void*x3298; void*x3299; void*x3300; void*x3301; void*x3302; void*x3303; void*x3304; void*x3305; void*x3306; void*x3307; void*x3308; void*x3309; void*x3310; void*x3311; void*x3312; void*x3313; void*x3314; void*x3315; void*x3316; void*x3317; void*x3318; void*x3319; void*x3320; void*x3321; void*x3322; void*x3323; void*x3324; void*x3325; void*x3326; void*x3327; void*x3328; void*x3329; void*x3330; void x3331; void*x3332; void*x3333; void*x3334; void*x3335; void*x3336; void*x3337; void*x3338; int x3339; short x3340; void*x3341; int x3342; long x3343; void*x3344; void*x3345; void*x3346; float x3347; void*x3348; const void*x3349; in BOOL x3350; void*x3351; void*x3352; void*x3353; unsigned long x3354; void*x3355; void*x3356; void*x3357; void*x3358; void*x3359; void*x3360; })arg1;
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)absoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)fileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
+ (id)fileURLWithPathComponents:(id)arg1;

- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(BOOL)arg2;
- (id)URLByAppendingPathExtension:(id)arg1;
- (id)URLByDeletingLastPathComponent;
- (id)URLByDeletingPathExtension;
- (id)URLByResolvingSymlinksInPath;
- (id)URLByStandardizingPath;
- (id)_URLByEscapingSpacesAndControlChars;
- (unsigned long)_cfTypeID;
- (struct __CFURL { }*)_cfurl;
- (struct __CFDictionary { }*)_clientsCreatingIfNecessary:(BOOL)arg1;
- (id)_fixedUpSideFaultError:(id)arg1;
- (void)_freeClients;
- (id)_hostString;
- (BOOL)_isAbsolute;
- (BOOL)_isDeallocating;
- (void)_performWithPhysicalURL:(id /* block */)arg1;
- (long long)_promiseExtensionConsume;
- (void)_promiseExtensionRelease:(long long)arg1;
- (id)_relativeURLPath;
- (BOOL)_tryRetain;
- (id)_valueFromFaultDictionary:(id)arg1 forKey:(id)arg2;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (struct { id x1; id x2; int x3; id x4; id x5; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; })_web_URLComponents;
- (BOOL)_web_isJavaScriptURL;
- (id)_web_scriptIfJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (id)absoluteString;
- (id)absoluteURL;
- (id)baseURL;
- (BOOL)checkPromisedItemIsReachableAndReturnError:(id*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataRepresentation;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (const char *)fileSystemRepresentation;
- (void)finalize;
- (id)fragment;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned int)arg2;
- (BOOL)getPromisedItemResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (BOOL)hasDirectoryPath;
- (unsigned int)hash;
- (id)host;
- (id)init;
- (id)initAbsoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initByResolvingAliasFileAtURL:(id)arg1 options:(unsigned int)arg2 error:(id*)arg3;
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned int)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(BOOL*)arg4 error:(id*)arg5;
- (id)initFileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isFileURL;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (id)lastPathComponent;
- (id)parameterString;
- (id)password;
- (id)path;
- (id)pathComponents;
- (id)pathExtension;
- (id)port;
- (id)promisedItemResourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (id)query;
- (id)relativePath;
- (id)relativeString;
- (oneway void)release;
- (id)resourceSpecifier;
- (id)retain;
- (unsigned int)retainCount;
- (id)scheme;
- (id)standardizedURL;
- (id)user;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

- (int)_mpUTITypeFromMRUTIType:(unsigned int)arg1;
- (id)mpUniversalTrackIDBaseID;
- (int)mpUniversalTrackIDType;

// Image: /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices

- (id)betaStoreURL;
- (BOOL)conformsToOverridePatternWithKey:(id)arg1;
- (id)facebookURL;
- (id)fmfURL;
- (id)fmipURL;
- (id)gamecenterURL;
- (id)iCloudFamilyURL;
- (id)iCloudSharingURL;
- (id)iCloudSharingURL_noFragment;
- (id)iTunesStoreURL;
- (id)iWorkApplicationName;
- (id)iWorkDocumentName;
- (BOOL)isiWorkURL;
- (id)keynoteLiveURL;
- (id)mapsURL;
- (id)photosURL;
- (id)twitterURL;
- (id)youTubeURL;

// Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// Image: /System/Library/Frameworks/QuickLook.framework/QuickLook

- (id)previewItemURL;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

- (id)sf_appLink;
- (BOOL)sf_isOfflineReadingListURL;
- (BOOL)sf_isWebSearchURL;

// Image: /System/Library/Frameworks/Social.framework/Social

+ (id)SLTwitterAccessTokenURL;
+ (id)SLTwitterAccountGenerateURL;
+ (id)SLTwitterAccountSettingsURL;
+ (id)SLTwitterCleanupPushDestinationsURL;
+ (id)SLTwitterDirectMessageURL;
+ (id)SLTwitterFriendsURL;
+ (id)SLTwitterFriendshipsURL;
+ (id)SLTwitterImageLimitsURL;
+ (id)SLTwitterNearbyPlacesURL;
+ (id)SLTwitterRequestTokenURL;
+ (id)SLTwitterRetweetURLForTweetID:(id)arg1;
+ (id)SLTwitterTCoLengthURL;
+ (id)SLTwitterUpdateMultiPartStatusURL;
+ (id)SLTwitterUpdateStatusURL;
+ (id)SLTwitterUserInfoURL;
+ (id)SLTwitterUsersLookupURL;
+ (id)SLTwitterVerifyCredentialsURL;
+ (id)URLForFacebookGraphAPIWithDomain:(id)arg1 path:(id)arg2;
+ (id)URLForFacebookGraphAPIWithPath:(id)arg1;
+ (id)URLForFacebookPageAtPath:(id)arg1;
+ (id)URLForFacebookRESTMethod:(id)arg1;
+ (BOOL)_isBetaSwitchEnabledForKey:(struct __CFString { }*)arg1;

- (BOOL)isAppStoreURL;
- (BOOL)isAssetURL;
- (BOOL)isMusicStoreURL;
- (BOOL)loadingInUIWebViewWillLaunchAnotherApp;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (id)URLWithDisplayIdentifier:(id)arg1 forSearchResultDomain:(int)arg2 andIdentifier:(unsigned long long)arg3;
+ (id)mapsURLWithQuery:(id)arg1;
+ (id)mapsURLWithSourceAddress:(id)arg1 destinationAddress:(id)arg2;
+ (id)ui_URLFromExportBookmark:(id)arg1;
+ (id)ui_cloudDocsContainerURL;
+ (id)ui_incomingDirectory:(BOOL)arg1;

- (void)_domain:(id*)arg1 subdomain:(id*)arg2;
- (BOOL)_isGoogleMapsDomain:(id)arg1 subdomain:(id)arg2 path:(id)arg3 queryKeysAndValues:(id)arg4;
- (id)appleStoreURL;
- (BOOL)isAccountURL;
- (BOOL)isGoogleMapsURL;
- (BOOL)isHTTPOrHTTPSURL;
- (BOOL)isInternalUIKitURL;
- (BOOL)isJavaScriptURL;
- (BOOL)isSpringboardHandledURL;
- (BOOL)isWebcalURL;
- (id)itmsURL;
- (id)phobosURL;
- (id)radarWebURL;
- (id)searchResultDomain;
- (id)searchResultIdentifier;
- (id)ui_bookmarkForExportWithError:(id*)arg1;
- (BOOL)ui_canOpenInPlace;
- (BOOL)ui_hasReadSandboxExtended;
- (BOOL)ui_hasSandboxExtendedForClass:(const char *)arg1;
- (BOOL)ui_isFileProviderURL;
- (BOOL)ui_isUnfulfilledPromiseURL;
- (id)ui_issueReadSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueReadWriteSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;
- (id)ui_resolveOnDiskBookmarkAndPromise;
- (void)ui_scheduleForCleanup;
- (void)ui_setIsFileProviderURL:(BOOL)arg1;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

+ (id)_web_URLWithWTFString:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg1;
+ (id)_web_URLWithWTFString:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg1 relativeToURL:(id)arg2;

- (struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; })_web_originalDataAsWTFString;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

+ (id)_af_URLWithMessageIdentifier:(id)arg1;

- (id)_af_messageIdentifierValue;
- (BOOL)isAMOSCommittedIdentifier;
- (BOOL)isAMOSIdentifier;

// Image: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI

- (BOOL)afui_hasMapItemScheme;

// Image: /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV

+ (id)URLWithDirtyString:(id)arg1;
+ (id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4;
+ (int)classicPortForScheme:(id)arg1;
+ (id)davCompatibleFilenameForFilename:(id)arg1;
+ (id)iDiskSmallNameCompatibleNameForFilename:(id)arg1;

- (id)URLByRemovingLastPathComponent;
- (id)URLWithUsername:(id)arg1;
- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (id)URLWithoutPassword;
- (id)URLWithoutUsername;
- (BOOL)absoluteURLisEqual:(id)arg1;
- (id)initWithDirtyString:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4;
- (BOOL)isEqualToURL:(id)arg1;
- (id)lastPathComponent;
- (id)pathWithoutDecodingAndRemovingTrailingSlash;
- (id)pathWithoutTrailingRemovingSlash;
- (id)queryParameters;
- (id)serverURL;
- (id)unquotedPassword;
- (id)uri;

// Image: /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation

+ (id)URLWithAddressBookUID:(id)arg1;
+ (id)davCompatibleFilenameForFilename:(id)arg1;

- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (BOOL)compareToLocalString:(id)arg1;
- (BOOL)compareToLocalURL:(id)arg1;
- (id)hostWithoutWWW;
- (id)initWithCalDirtyString:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4;
- (BOOL)isEqualToURL:(id)arg1;
- (BOOL)isEqualToURLIgnoringScheme:(id)arg1;
- (BOOL)isOnRemoteFileSystem;
- (id)lastPathComponent;
- (id)pathDecodedAndWithoutTrailingSlashRemoved;
- (id)pathWithoutTrailingRemovingSlash;
- (id)queryParameters;
- (id)serverURL;
- (id)unquotedPassword;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

+ (id)ckURLForChatIdentifier:(id)arg1 entryBody:(id)arg2;
+ (id)ckURLForResource:(id)arg1 withExtension:(id)arg2;

- (BOOL)ckShouldShowComposeUI;
- (id)ckWillNotLaunchComposeUIURL;

// Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs

+ (void)br_containerIDsWithExternalReferencesTo:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)br_documentURLFromBookmarkableString:(id)arg1 completion:(id /* block */)arg2;
+ (id)brc_fileURLWithFileDescriptor:(int)arg1;
+ (id)brc_fileURLWithVolumeID:(id)arg1 fileID:(id)arg2 isDirectory:(BOOL)arg3;

- (id)br_URLByResolvingExternalDocumentReferenceWithError:(id*)arg1;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 error:(id*)arg3;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 lastEditorUserName:(id)arg3 error:(id*)arg4;
- (void)br_bookmarkableStringForRemoteOpeningAppWithBundleID:(id)arg1 completion:(id /* block */)arg2;
- (void)br_bookmarkableStringWithEtag:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)br_cloudDocsContainer;
- (id)br_containerID;
- (id)br_containerIDForDocumentsContainerURL;
- (void)br_containerIDsWithExternalReferencesWithHandler:(id /* block */)arg1;
- (id)br_debugDescription;
- (BOOL)br_getTagNames:(id*)arg1 error:(id*)arg2;
- (void)br_isConflictedWithHandler:(id /* block */)arg1;
- (BOOL)br_isDocumentsContainer;
- (BOOL)br_isExternalDocumentReference;
- (BOOL)br_isInCloudDocsPrivateStorages;
- (BOOL)br_isInMobileDocuments;
- (BOOL)br_isParentOfURL:(id)arg1;
- (BOOL)br_isParentOfURL:(id)arg1 strictly:(BOOL)arg2;
- (BOOL)br_isStrictlyInMobileDocuments;
- (id)br_lastEditorDeviceName;
- (id)br_lastEditorName;
- (id)br_pathRelativeToMobileDocuments;
- (void)br_preCacheBookmarkData:(id)arg1 versionEtag:(id)arg2;
- (BOOL)br_setTagNames:(id)arg1 error:(id*)arg2;
- (BOOL)br_unresolvedPathIsInLocalVolume;
- (id)brc_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon

- (id)brc_applicationBundleID;
- (id)brc_applicationContainerID;
- (id)brc_attributesValues:(id)arg1 container:(id)arg2 lookup:(id)arg3;
- (id)brc_localizedApplicationName;

// Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary

- (id)initWithCPLArchiver:(id)arg1;
- (id)plistArchiveWithCPLArchiver:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CommunicationsSetupUI.framework/CommunicationsSetupUI

- (id)CNFQueryDictionary;
- (id)URLByAppendingCNFQueryDictionary:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync

+ (id)_SYTemporaryFileURL:(id*)arg1;
+ (id)_SYURLForNewTemporaryFile:(id*)arg1;

// Image: /System/Library/PrivateFrameworks/Conference.framework/Conference

- (BOOL)_isPhoneNumberID:(id)arg1;
- (id)formattedFaceTimeDestinationAccount;

// Image: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV

+ (id)CDVDefaultPortForScheme:(id)arg1;
+ (id)CDVURLWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4;
+ (id)CDVURLWithScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6;

- (id)CDVFileSystemSafePath;
- (BOOL)CDVIsEqualToURL:(id)arg1;
- (BOOL)CDVIsSafeRedirectForRequestURL:(id)arg1;
- (id)CDVPassword;
- (id)CDVRawLastPathComponent;
- (id)CDVRawLastPathComponentPreservingEscapes;
- (id)CDVRawPath;
- (id)CDVServerURL;
- (id)CDVServerURLWithPath:(BOOL)arg1;
- (id)CDVURLByDeletingLastPathComponent;
- (id)CDVURLWithPassword:(id)arg1;
- (id)CDVURLWithPath:(id)arg1;
- (id)CDVURLWithScheme:(id)arg1 userandpass:(id)arg2 host:(id)arg3 port:(id)arg4 path:(id)arg5 parameters:(id)arg6 encodePercents:(BOOL)arg7;
- (id)CDVURLWithUser:(id)arg1;
- (id)CDVfixedURLByAppendingPathComponent:(id)arg1;
- (id)initWithCDVScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 parameterString:(id)arg7 query:(id)arg8 fragment:(id)arg9;

// Image: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess

+ (id)da_URLWithDirtyString:(id)arg1;
+ (id)da_URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4;
+ (id)da_URLWithScheme:(id)arg1 host:(id)arg2 user:(id)arg3 port:(int)arg4 uri:(id)arg5;
+ (int)da_classicPortForScheme:(id)arg1;

- (id)URLByRemovingLastPathComponent;
- (id)URLWithUsername:(id)arg1;
- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (id)URLWithoutUsername;
- (BOOL)da_isEqualToDAVURL:(id)arg1;
- (id)da_leastInfoStringRepresentationRelativeToParentURL:(id)arg1;
- (id)da_pathWithoutTrailingRemovingSlash;
- (id)da_rawPath;
- (id)da_urlByRemovingUsername;
- (id)da_urlBySettingHost:(id)arg1;
- (id)da_urlBySettingHost:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingPath:(id)arg1;
- (id)da_urlBySettingPath:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingPort:(id)arg1;
- (id)da_urlBySettingPort:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingScheme:(id)arg1;
- (id)da_urlBySettingScheme:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingUsername:(id)arg1;
- (id)uri;

// Image: /System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI

+ (id)dd_URLWithPotentiallyInvalidURLString:(id)arg1;

- (id)dd_emailFromMailtoScheme;
- (id)dd_phoneNumberFromTelScheme;

// Image: /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite

- (id)preferencesPathURLForDomain:(id)arg1;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (BOOL)isPlayImmediatelyURL;
- (BOOL)isShowNowPlayingURL;
- (id)shortcutIdentifier;

// Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation

- (BOOL)_gkIsSecure;
- (BOOL)_gkIsValidServerURL;
- (id)_gkQueryDictionary;
- (id)_gkURLByAddingQueryParameters:(id)arg1;
- (id)_gkURLByReplacingSchemeWithScheme:(id)arg1;
- (id)cacheKeyRepresentation;

// Image: /System/Library/PrivateFrameworks/GenerationalStorage.framework/GenerationalStorage

- (void)chmod:(unsigned short)arg1;
- (id)gs_URLByUpdatingPathExtensionWithPathOrURL:(id)arg1;
- (id)gs_issueExtension:(const char *)arg1 error:(id*)arg2;
- (id)gs_issueReadExtensionIfNeededForPid:(int)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

- (id)_geo_portionAfterHostname;

// Image: /System/Library/PrivateFrameworks/Message.framework/Message

- (id)mf_firstPartNumber;
- (BOOL)mf_isResourceURL;
- (BOOL)mf_isValidAttachmentURL;
- (id)mf_lastPartNumber;
- (id)mf_partNumbers;
- (unsigned int)mf_rowID;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (BOOL)isMapURL;
- (BOOL)isNewsURL;
- (id)queryComponents;
- (id)uniquedURL;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

+ (id)URLWithPackagePart:(id)arg1;
+ (id)sfu_filePathURLWithEscapes:(id)arg1;
+ (id)sfu_improperlyEscapedString:(id)arg1;
+ (id)sfu_properlyEscapedString:(id)arg1;
+ (id)sfu_relativeURLWithEscapes:(id)arg1;

- (id)initWithPackagePart:(id)arg1;
- (BOOL)isInternalToPackage;
- (BOOL)sfu_isRelative;
- (id)tsu_UTI;
- (BOOL)tsu_conformsToUTI:(id)arg1;
- (id)tsu_displayName;
- (id)tsu_documentIdentifier;
- (unsigned long long)tsu_fileSize;
- (BOOL)tsu_isFileSizeTooLargeForSharing;
- (BOOL)tsu_isShared;
- (BOOL)tsu_isSharedWithMe;
- (void)tsu_performSecurityScopedResourceAccessAsynchronouslyUsingBlock:(id /* block */)arg1;
- (void)tsu_performSecurityScopedResourceAccessUsingBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/SafariSafeBrowsing.framework/SafariSafeBrowsing

- (BOOL)ssb_hasUserInfo;
- (BOOL)ssb_isSafeURL;

// Image: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared

+ (id)safari_URLWithDataAsString:(id)arg1;
+ (id)safari_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)safari_URLWithUserTypedString:(id)arg1;
+ (void)safari_enumeratePossibleURLsForUserTypedString:(id)arg1 withBlock:(id /* block */)arg2;
+ (struct _NSRange { unsigned int x1; unsigned int x2; })safari_hostAndPortRangeFromUserTypedString:(id)arg1;

- (id)_safari_URLByReplacingComponent:(long)arg1 includingSeparators:(BOOL)arg2 withString:(id)arg3;
- (id)_safari_URLByReplacingComponent:(long)arg1 withString:(id)arg2;
- (id)safari_URLByDeletingPort;
- (id)safari_URLByReplacingHostWithString:(id)arg1;
- (id)safari_URLByReplacingQueryWithString:(id)arg1;
- (id)safari_URLByReplacingSchemeWithString:(id)arg1;
- (id)safari_canonicalURL;
- (id)safari_displayNameWithTitle:(id)arg1;
- (BOOL)safari_hasCharactersBeyondPath;
- (BOOL)safari_hasScheme:(id)arg1;
- (BOOL)safari_isDataURL;
- (BOOL)safari_isHTTPFamilyURL;
- (id)safari_originalDataAsString;
- (id)safari_path;
- (id)safari_userVisibleHost;
- (id)safari_userVisibleHostWithoutWWWSubdomain;
- (id)safari_userVisibleString;

// Image: /System/Library/PrivateFrameworks/Search.framework/Search

+ (id)sp_URLFromFileID:(id)arg1 filename:(id)arg2 parentFileID:(id)arg3 documentID:(id)arg4;

// Image: /System/Library/PrivateFrameworks/ServerDocsProtocol.framework/ServerDocsProtocol

- (id)URLByReallyResolvingSymlinksInPath;
- (BOOL)sd_containsOrIsItemAtURL:(id)arg1 error:(id*)arg2;
- (BOOL)sd_strictlyContainsItemAtURL:(id)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusFoundation.framework/OpusFoundation

+ (id)_contentModificationDate:(id)arg1;
+ (id)_displayName:(id)arg1;
+ (BOOL)_hasUnresolvedConflict:(id)arg1;
+ (BOOL)_isDownloaded:(id)arg1;
+ (BOOL)_isDownloading:(id)arg1;
+ (BOOL)_isInCloud:(id)arg1;
+ (BOOL)_isUploaded:(id)arg1;
+ (BOOL)_isUploading:(id)arg1;
+ (int)isHostnameReachable:(id)arg1;
+ (id)parseURLParams:(id)arg1;

- (id)contentModificationDate;
- (id)displayName;
- (BOOL)hasUnresolvedConflict;
- (BOOL)isDownloaded;
- (BOOL)isDownloading;
- (BOOL)isInCloud;
- (BOOL)isUploaded;
- (BOOL)isUploading;

// Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation

- (id)fileCacheStableDataRepresentation;

// Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices

- (id)copyXPCEncoding;
- (id)initWithXPCEncoding:(id)arg1;
- (BOOL)isStoreServicesURL;

// Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities

+ (id)URLWithTelephoneNumber:(id)arg1;
+ (id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2;
+ (id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)URLWithTelephoneNumber:(id)arg1 promptUser:(BOOL)arg2;
+ (id)_applyFaceTimeScheme:(id)arg1 toFaceTimeURL:(id)arg2;
+ (id)_faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3;
+ (id)faceTimeLaunchForIncomingCallURL;
+ (id)faceTimePromptURLWithURL:(id)arg1;
+ (id)faceTimeShowInCallUIURL;
+ (id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1;
+ (id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1 showPrompt:(BOOL)arg2;
+ (id)faceTimeURLWithDestinationID:(id)arg1;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5 audioOnly:(BOOL)arg6;
+ (id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3 forceAssist:(BOOL)arg4 suppressAssist:(BOOL)arg5 wasAssisted:(BOOL)arg6;
+ (id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)faceTimeURLWithURL:(id)arg1;
+ (id)telephonyURLForTelEmergencyCall;
+ (id)telephonyURLForVoicemail;
+ (id)telephonyURLWithDestinationID:(id)arg1;
+ (id)telephonyURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2;
+ (id)telephonyURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)telephonyURLWithDestinationID:(id)arg1 promptUser:(BOOL)arg2;

- (id)URLByDeletingQueryParameterWithKey:(id)arg1;
- (id)URLBySettingQueryParameterValue:(id)arg1 forKey:(id)arg2;
- (id)URLWithNewQueryParameterDictionary:(id)arg1;
- (BOOL)_isPhoneNumberID:(id)arg1;
- (id)_mobilePhonePathParameters;
- (id)_mobilePhoneQueryParameters;
- (id)_phoneNumberConvertNumbersToLatin:(BOOL)arg1;
- (int)addressBookUID;
- (int)callService;
- (id)faceTimeDestinationAccount;
- (BOOL)forceAssist;
- (id)formattedPhoneNumber;
- (BOOL)hasNoPromptOption;
- (BOOL)hasTelephonyScheme;
- (BOOL)isBasebandLogURL;
- (BOOL)isDialCallURL;
- (BOOL)isEmergencyCallURL;
- (BOOL)isEmergencyURL;
- (BOOL)isFaceTimeAudioPromptURL;
- (BOOL)isFaceTimeAudioURL;
- (BOOL)isFaceTimePromptURL;
- (BOOL)isFaceTimeURL;
- (BOOL)isLaunchForIncomingCallURL;
- (BOOL)isShowInCallUIURL;
- (BOOL)isTelephonyPromptURL;
- (BOOL)isTelephonyURL;
- (BOOL)isVoicemailURL;
- (BOOL)isWebSafeTelephoneURL;
- (id)numberQualifiedForAddressBook;
- (id)originatingUIIdentifier;
- (id)phoneNumber;
- (id)queryParameters;
- (BOOL)suppressAssist;
- (id)telephonyParameterDictionary;
- (id)tuQueryParameters;
- (BOOL)wasAlreadyAssisted;
- (id)webSafeTelephoneURL;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

- (id)rc_URLByAppendingStringToLastComponentBasename:(id)arg1;
- (id)rc_URLByFixingUpPersistentMediaRecordingsDirectory;
- (id)rc_URLByReplacingPathExtensionWithExtension:(id)arg1;
- (id)rc_URLByStandardizingResolvedPath;

// Image: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks

- (BOOL)_webBookmarks_isHTTPFamilyURL;

// Image: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis

- (BOOL)WF_hostnameIsIPAddress;
- (id)WF_normalizedRelativePath;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (id)_web_URLWithData:(id)arg1;
+ (id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithDataAsString:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithUserTypedString:(id)arg1;
+ (id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_uniqueWebDataURL;
+ (id)uniqueURLWithRelativePart:(id)arg1;

- (id)_web_URLByRemovingUserInfo;
- (const char *)_web_URLCString;
- (id)_web_dataForURLComponentType:(long)arg1;
- (id)_web_hostData;
- (id)_web_hostString;
- (BOOL)_web_isEmpty;
- (id)_web_originalData;
- (id)_web_originalDataAsString;
- (id)_web_schemeData;
- (id)_web_schemeSeparatorWithoutColon;
- (id)_web_userVisibleString;
- (id)_webkit_URLByRemovingFragment;
- (id)_webkit_URLFromURLOrSchemelessFileURL;
- (id)_webkit_canonicalize;
- (BOOL)_webkit_isFileURL;
- (BOOL)_webkit_isJavaScriptURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (id)_webkit_suggestedFilenameWithMIMEType:(id)arg1;

// Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI

- (BOOL)isStoreServicesURL;

// Image: /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar

- (void)_ICSStringWithOptions:(unsigned int)arg1 appendingToString:(id)arg2;

// Image: /System/Library/PrivateFrameworks/iCloudQuotaUI.framework/iCloudQuotaUI

+ (id)icqURLForIndex:(int)arg1;

- (int)icqIndex;

// Image: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore

+ (id)_URLQueryParameterValueAllowedCharacterSet;
+ (id)copyDictionaryForQueryString:(id)arg1 unescapedValues:(BOOL)arg2;
+ (id)escapedStringForString:(id)arg1;
+ (id)queryStringForDictionary:(id)arg1 escapedValues:(BOOL)arg2;
+ (id)unescapedStringForString:(id)arg1;

- (id)URLByAppendingQueryParameter:(id)arg1 value:(id)arg2;
- (id)copyQueryStringDictionaryWithUnescapedValues:(BOOL)arg1;
- (void)enumerateQueryWithBlock:(id /* block */)arg1;
- (BOOL)isSafeExternalURL;
- (id)sanitizedURL;
- (id)schemeSwizzledURL;
- (id)urlByReplacingSchemeWithScheme:(id)arg1;
- (id)urlBySettingQueryStringDictionary:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

+ (id)termsAndConditionsURL;

- (int)storeURLType;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

+ (BOOL)canHandleDownloadTask:(id)arg1;
+ (void)downloadManager:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
+ (BOOL)downloadManager:(id)arg1 task:(id)arg2 didFinishDownloadingToURL:(id)arg3 error:(id*)arg4;
+ (id)sfu_filePathURLWithEscapes:(id)arg1;
+ (id)sfu_improperlyEscapedString:(id)arg1;
+ (id)sfu_properlyEscapedString:(id)arg1;
+ (id)sfu_relativeURLWithEscapes:(id)arg1;

- (id)downloadTaskDescription;
- (id)downloadURL;
- (BOOL)sfu_isRelative;
- (long long)totalBytesExpectedToBeDownloaded;
- (id)tsp_URLExceptPrivate;
- (id)tsp_embeddedUTI;
- (BOOL)tsp_getIsUbiquitousValue:(BOOL*)arg1 error:(id*)arg2;
- (BOOL)tsp_isAssetsLibraryURL;
- (BOOL)tsp_isEqualToURLExceptPrivate:(id)arg1;
- (BOOL)tsp_isIWorkAVAssetURL;
- (BOOL)tsp_isOnNonHFSVolume;
- (BOOL)tsp_isUbiquitous;
- (BOOL)tsp_matchesURL:(id)arg1;
- (id)tsp_pathExceptPrivate;
- (id)tsu_UTI;
- (BOOL)tsu_conformsToUTI:(id)arg1;
- (id)tsu_displayName;
- (id)tsu_documentIdentifier;
- (unsigned long long)tsu_fileSize;
- (BOOL)tsu_isDocumentUploaded;
- (BOOL)tsu_isFileSizeTooLargeForSharing;
- (BOOL)tsu_isShared;
- (BOOL)tsu_isSharedWithMe;
- (void)tsu_performSecurityScopedResourceAccessAsynchronouslyUsingBlock:(id /* block */)arg1;
- (void)tsu_performSecurityScopedResourceAccessUsingBlock:(id /* block */)arg1;

// Image: /usr/lib/libprequelite.dylib

+ (id)newFromSqliteValue:(struct Mem { }*)arg1;

- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;

@end
