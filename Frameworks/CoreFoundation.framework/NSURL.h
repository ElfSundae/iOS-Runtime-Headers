/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSURL : NSObject <CKXPCSuitableString, NSCopying, NSSecureCoding, PQLValuable, QLPreviewItem, TSUDownloadItem> {
    NSURL *_baseURL;
    void *_clients;
    void *_reserved;
    NSString *_urlString;
}

@property (readonly, copy) NSURL *URLByDeletingLastPathComponent;
@property (readonly, copy) NSURL *URLByDeletingPathExtension;
@property (readonly, copy) NSURL *URLByResolvingSymlinksInPath;
@property (readonly, copy) NSURL *URLByStandardizingPath;
@property (readonly, copy) NSString *absoluteString;
@property (readonly, copy) NSURL *absoluteURL;
@property (readonly) int addressBookUID;
@property (readonly, copy) NSURL *baseURL;
@property (nonatomic, readonly) NSString *br_lastEditorDeviceName;
@property (nonatomic, readonly) NSString *br_lastEditorName;
@property (readonly) int callService;
@property (nonatomic, readonly) BOOL ckShouldShowComposeUI;
@property (readonly, copy) NSData *dataRepresentation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *downloadTaskDescription;
@property (nonatomic, readonly) NSURL *downloadURL;
@property (readonly, copy) NSURL *filePathURL;
@property (readonly) const char *fileSystemRepresentation;
@property (getter=isFileURL, readonly) BOOL fileURL;
@property (readonly) BOOL forceAssist;
@property (readonly, copy) NSString *fragment;
@property (readonly) BOOL hasDirectoryPath;
@property (readonly) unsigned int hash;
@property (readonly, copy) NSString *host;
@property (readonly) BOOL isBasebandLogURL;
@property (readonly) BOOL isEmergencyCallURL;
@property (readonly) BOOL isEmergencyURL;
@property (nonatomic, readonly) BOOL isMapURL;
@property (nonatomic, readonly) BOOL isNewsURL;
@property (nonatomic, readonly) BOOL isPlayImmediatelyURL;
@property (nonatomic, readonly) BOOL isShowNowPlayingURL;
@property (readonly) BOOL isVoicemailURL;
@property (readonly, copy) NSString *lastPathComponent;
@property (nonatomic, readonly) NSString *mpUniversalTrackIDBaseID;
@property (nonatomic, readonly) int mpUniversalTrackIDType;
@property (nonatomic, readonly) BOOL needsDownload;
@property (readonly) NSString *originatingUIIdentifier;
@property (readonly, copy) NSString *parameterString;
@property (readonly, copy) NSString *password;
@property (readonly, copy) NSString *path;
@property (readonly, copy) NSArray *pathComponents;
@property (readonly, copy) NSString *pathExtension;
@property (readonly) NSString *phoneNumber;
@property (readonly, copy) NSNumber *port;
@property (nonatomic, readonly) NSString *previewItemTitle;
@property (nonatomic, readonly) NSURL *previewItemURL;
@property (readonly, copy) NSString *query;
@property (readonly, copy) NSString *relativePath;
@property (readonly, copy) NSString *relativeString;
@property (readonly, copy) NSString *resourceSpecifier;
@property (readonly, copy) NSString *scheme;
@property (nonatomic, readonly) LSAppLink *sf_appLink;
@property (nonatomic, readonly) BOOL sf_isOfflineReadingListURL;
@property (nonatomic, readonly) BOOL sf_isWebSearchURL;
@property (nonatomic, readonly) NSString *shortcutIdentifier;
@property (nonatomic, readonly) BOOL ssb_hasUserInfo;
@property (nonatomic, readonly) BOOL ssb_isSafeURL;
@property (readonly, copy) NSURL *standardizedURL;
@property (readonly) Class superclass;
@property (readonly) BOOL suppressAssist;
@property (nonatomic, readonly) long long totalBytesExpectedToBeDownloaded;
@property (nonatomic, readonly) NSString *tsu_UTI;
@property (nonatomic, readonly) NSURL *uniquedURL;
@property (readonly, copy) NSString *user;
@property (readonly) BOOL wasAlreadyAssisted;

// Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

+ (id)__unurl;
+ (id)bookmarkDataWithContentsOfURL:(id)arg1 error:(id*)arg2;
+ (id)resourceValuesForKeys:(id)arg1 fromBookmarkData:(id)arg2;
+ (BOOL)supportsSecureCoding;
+ (BOOL)writeBookmarkData:(id)arg1 toURL:(id)arg2 options:(unsigned int)arg3 error:(id*)arg4;

- (id)bookmarkDataWithAliasRecord:(id)arg1;
- (id)bookmarkDataWithOptions:(unsigned int)arg1 includingResourceValuesForKeys:(id)arg2 relativeToURL:(id)arg3 error:(id*)arg4;
- (BOOL)checkResourceIsReachableAndReturnError:(id*)arg1;
- (id)filePathURL;
- (id)fileReferenceURL;
- (BOOL)getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (BOOL)isFileReferenceURL;
- (void)removeAllCachedResourceValues;
- (void)removeCachedResourceValueForKey:(id)arg1;
- (id)resourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (BOOL)setResourceValue:(id)arg1 forKey:(id)arg2 error:(id*)arg3;
- (BOOL)setResourceValues:(id)arg1 error:(id*)arg2;
- (void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2;
- (BOOL)startAccessingSecurityScopedResource;
- (void)stopAccessingSecurityScopedResource;

// Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI

+ (id)ab_URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2;
+ (id)ab_faceTimeURLWithDestinationID:(id)arg1;

// Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork

- (BOOL)_isSafeDirectoryForDownloads:(int)arg1;
- (BOOL)_isSafeFileForBackgroundUpload:(int)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (id)CKXPCSuitableString;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)ab_URLWithTelephoneNumber:(id)arg1 contact:(id)arg2;
+ (id)ab_faceTimeURLWithDestinationID:(id)arg1;
+ (id)cnui_faceTimeURLWithDestinationID:(id)arg1 contact:(id)arg2 audioOnly:(BOOL)arg3;

// Image: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight

- (BOOL)cs_addDocumentTracking;
- (BOOL)cs_isInMobileDocuments;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)URLByResolvingAliasFileAtURL:(id)arg1 options:(unsigned int)arg2 error:(id*)arg3;
+ (id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned int)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(BOOL*)arg4 error:(id*)arg5;
+ (id)URLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)URLWithString:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithComponents:(struct { id x1; id x2; int x3; id x4; id x5; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; })arg1;
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)absoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)fileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
+ (id)fileURLWithPathComponents:(id)arg1;

- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(BOOL)arg2;
- (id)URLByAppendingPathExtension:(id)arg1;
- (id)URLByDeletingLastPathComponent;
- (id)URLByDeletingPathExtension;
- (id)URLByResolvingSymlinksInPath;
- (id)URLByStandardizingPath;
- (id)_URLByEscapingSpacesAndControlChars;
- (unsigned long)_cfTypeID;
- (struct __CFURL { }*)_cfurl;
- (struct __CFDictionary { }*)_clientsCreatingIfNecessary:(BOOL)arg1;
- (id)_fixedUpSideFaultError:(id)arg1;
- (void)_freeClients;
- (id)_hostString;
- (BOOL)_isAbsolute;
- (BOOL)_isDeallocating;
- (void)_performWithPhysicalURL:(id /* block */)arg1;
- (long long)_promiseExtensionConsume;
- (void)_promiseExtensionRelease:(long long)arg1;
- (id)_relativeURLPath;
- (BOOL)_tryRetain;
- (id)_valueFromFaultDictionary:(id)arg1 forKey:(id)arg2;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (struct { id x1; id x2; int x3; id x4; id x5; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; unsigned int x26; unsigned char x27; unsigned short x28; void x29; void*x30; int x31; long x32; void*x33; unsigned int x34/* : ? */; int x35; long x36; int x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; unsigned int x89; unsigned char x90; unsigned short x91; void x92; void*x93; int x94; long x95; void*x96; unsigned int x97/* : ? */; int x98; long x99; int x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; unsigned short x121; void*x122; short x123; void*x124; void*x125; void*x126; void*x127; unsigned long x128; int x129; unsigned int x130/* : ? */; const void*x131; const void*x132; void*x133; void*x134; const int x135; void x136; void*x137; void*x138; void*x139; void*x140; const void*x141; void*x142; void*x143; void*x144; out const void*x145; short x146; void*x147; int x148; unsigned char x149; void*x150; long x151; void*x152; in double x153; void*x154; const void*x155; float x156; const void*x157; void*x158; void*x159; void*x160; out const void*x161; void*x162; int x163; unsigned char x164; void*x165; long x166; void*x167; in double x168; void*x169; const void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; unsigned short x253; unsigned int x254; in float x255; out unsigned long x256; void*x257; unsigned int x258/* : ? */; void*x259; long x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; unsigned short x315; unsigned int x316; in float x317; out unsigned long x318; void*x319; unsigned int x320/* : ? */; void*x321; long x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; unsigned int x342; void*x343; unsigned short x344; void*x345; short x346; void*x347; void*x348; void*x349; void*x350; unsigned long x351; int x352; unsigned int x353/* : ? */; const void*x354; const void*x355; void*x356; void*x357; const int x358; void x359; void*x360; void*x361; void*x362; void*x363; const void*x364; void*x365; void*x366; void*x367; out const void*x368; short x369; void*x370; void*x371; const out void*x372; out void*x373; void*x374; void*x375; void*x376; void*x377; out out long x378; short x379; void*x380; float x381; const void*x382; void*x383; void*x384; void*x385; out const void*x386; void*x387; void*x388; const out void*x389; out void*x390; void*x391; void*x392; void*x393; void*x394; out out long x395; short x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; in void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; unsigned short x579; void*x580; void*x581; int x582; long x583; void*x584; unsigned int x585; bycopy unsigned char x586; void*x587; void*x588; in in void*x589; long x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; unsigned short x624; unsigned char x625; void*x626; unsigned char x627; void*x628; void*x629; const void*x630; long doublex631; const void*x632; void*x633; void*x634; unsigned int x635/* : ? */; long x636; void*x637; unsigned long x638; void*x639; void*x640; out void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; unsigned short x669; unsigned char x670; void*x671; unsigned char x672; void*x673; void*x674; const void*x675; long doublex676; const void*x677; void*x678; void*x679; unsigned int x680/* : ? */; long x681; void*x682; unsigned long x683; void*x684; void*x685; out void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; unsigned char x712; void*x713; unsigned short x714; void*x715; short x716; void*x717; void*x718; void*x719; void*x720; unsigned long x721; int x722; unsigned int x723/* : ? */; const void*x724; const void*x725; void*x726; void*x727; const int x728; void x729; void*x730; void*x731; void*x732; void*x733; const void*x734; void*x735; void*x736; void*x737; out const void*x738; short x739; void*x740; int x741; void*x742; out const void*x743; unsigned int x744; void*x745; void*x746; out const void*x747; void*x748; float x749; const void*x750; void*x751; void*x752; void*x753; out const void*x754; void*x755; int x756; void*x757; out const void*x758; unsigned int x759; void*x760; void*x761; out const void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; struct x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; unsigned short x866; void*x867; unsigned short x868; BOOL x869; const int x870; void*x871; void*x872; BOOL x873; void*x874; int x875; void x876; int x877; void*x878; void*x879; oneway int x880; void*x881; void*x882; unsigned char x883; out in void*x884; const out long x885; long x886; void*x887; const void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; unsigned short x906; void*x907; unsigned short x908; BOOL x909; const int x910; void*x911; void*x912; BOOL x913; void*x914; int x915; void x916; int x917; void*x918; void*x919; oneway int x920; void*x921; void*x922; unsigned char x923; out in void*x924; const out long x925; long x926; void*x927; const void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; unsigned short x947; void*x948; short x949; void*x950; void*x951; void*x952; void*x953; unsigned long x954; int x955; unsigned int x956/* : ? */; const void*x957; const void*x958; void*x959; void*x960; const int x961; void x962; void*x963; void*x964; void*x965; void*x966; const void*x967; void*x968; void*x969; void*x970; out const void*x971; short x972; void*x973; int x974; void*x975; void*x976; in void*x977; short x978; unsigned short x979; void*x980; out const void*x981; void*x982; unsigned int x983; void*x984; float x985; const void*x986; void*x987; void*x988; void*x989; out const void*x990; void*x991; int x992; void*x993; void*x994; in void*x995; short x996; unsigned short x997; void*x998; out const void*x999; void*x1000; unsigned int x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; unsigned short x1091; void*x1092; void*x1093; unsigned int x1094; bool x1095; void*x1096; in in void*x1097; const oneway int x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; unsigned short x1151; void*x1152; void*x1153; unsigned int x1154; bool x1155; void*x1156; in in void*x1157; const oneway int x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; unsigned short x1179; void*x1180; short x1181; void*x1182; void*x1183; void*x1184; void*x1185; unsigned long x1186; int x1187; unsigned int x1188/* : ? */; const void*x1189; const void*x1190; void*x1191; void*x1192; const int x1193; void x1194; void*x1195; void*x1196; void*x1197; void*x1198; const void*x1199; void*x1200; void*x1201; void*x1202; out const void*x1203; short x1204; void*x1205; unsigned short x1206; void*x1207; out const void*x1208; void*x1209; int x1210; void*x1211; void*x1212; unsigned int x1213; void*x1214; float x1215; const void*x1216; void*x1217; void*x1218; void*x1219; out const void*x1220; void*x1221; unsigned short x1222; void*x1223; out const void*x1224; void*x1225; int x1226; void*x1227; void*x1228; unsigned int x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; unsigned short x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; unsigned short x1309; void*x1310; void*x1311; unsigned int x1312; unsigned int x1313; void*x1314; void*x1315; void*x1316; unsigned long x1317; int x1318; short x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; void*x1338; long long x1339; void*x1340; void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; unsigned char x1388; void*x1389; unsigned short x1390; void*x1391; short x1392; void*x1393; void*x1394; void*x1395; void*x1396; unsigned long x1397; int x1398; unsigned int x1399/* : ? */; const void*x1400; const void*x1401; void*x1402; void*x1403; const int x1404; void x1405; void*x1406; void*x1407; void*x1408; void*x1409; const void*x1410; void*x1411; void*x1412; void*x1413; out const void*x1414; short x1415; void*x1416; int x1417; void*x1418; out const void*x1419; unsigned int x1420; void*x1421; void*x1422; out const void*x1423; void*x1424; float x1425; const void*x1426; void*x1427; void*x1428; void*x1429; out const void*x1430; void*x1431; int x1432; void*x1433; out const void*x1434; unsigned int x1435; void*x1436; void*x1437; out const void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; unsigned short x1453; void*x1454; void*x1455; in void*x1456; const BOOL x1457; void*x1458; int x1459; void x1460; void*x1461; const void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; SEL x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; void*x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; void*x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; void*x1657; short x1658; long doublex1659; int x1660; const void*x1661; BOOL x1662; void*x1663; out const void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; void*x1715; void*x1716; inout void*x1717; void*x1718; long doublex1719; void*x1720; int x1721; double x1722; double x1723; long x1724; void*x1725; void*x1726; void*x1727; const void*x1728; void*x1729; void*x1730; BOOL x1731; void*x1732; void*x1733; void*x1734; int x1735; out in void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; void*x1756; void*x1757; void*x1758; void*x1759; inout void*x1760; void*x1761; long doublex1762; void*x1763; int x1764; double x1765; double x1766; long x1767; void*x1768; void*x1769; void*x1770; const void*x1771; void*x1772; void*x1773; BOOL x1774; void*x1775; void*x1776; void*x1777; int x1778; out in void*x1779; void*x1780; void*x1781; void*x1782; void*x1783; void*x1784; void*x1785; void*x1786; void*x1787; void*x1788; void*x1789; void*x1790; void*x1791; void*x1792; void*x1793; void*x1794; void*x1795; void*x1796; void*x1797; void*x1798; void*x1799; void*x1800; void*x1801; void*x1802; void*x1803; void*x1804; short x1805; const void*x1806; long x1807; int x1808; unsigned int x1809/* : ? */; void*x1810; long x1811; int x1812; unsigned int x1813/* : ? */; in float x1814; short x1815; void*x1816; void*x1817; const void*x1818; double x1819; void*x1820; double x1821; void*x1822; long x1823; int x1824; unsigned int x1825/* : ? */; void*x1826; void*x1827; void*x1828; void*x1829; void*x1830; void*x1831; void*x1832; void*x1833; void*x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; void*x1844; void*x1845; void*x1846; void*x1847; void*x1848; void*x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; void*x1862; void*x1863; void*x1864; void*x1865; void*x1866; void*x1867; void*x1868; void*x1869; void*x1870; void*x1871; void*x1872; void*x1873; void*x1874; void*x1875; void*x1876; void*x1877; void*x1878; void*x1879; void*x1880; bool x1881; unsigned short x1882; unsigned char x1883; unsigned char x1884; out in void*x1885; void*x1886; void*x1887; void*x1888; unsigned short x1889; BOOL x1890; void*x1891; in void*x1892; unsigned long x1893; void*x1894; void*x1895; void*x1896; const void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; void*x1909; void*x1910; void*x1911; void*x1912; void*x1913; void*x1914; void*x1915; void*x1916; void*x1917; void*x1918; void*x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; void*x1925; void*x1926; void*x1927; void*x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; short x1943; inout void*x1944; void*x1945; void*x1946; void*x1947; void*x1948; void*x1949; void*x1950; void*x1951; void*x1952; void*x1953; void*x1954; void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; void*x1960; void*x1961; void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; void*x1969; void*x1970; bool x1971; unsigned short x1972; unsigned char x1973; unsigned char x1974; out in void*x1975; void*x1976; void*x1977; void*x1978; unsigned short x1979; BOOL x1980; void*x1981; in void*x1982; unsigned long x1983; void*x1984; void*x1985; void*x1986; const void*x1987; void*x1988; SEL x1989; void*x1990; unsigned long long x1991; void*x1992; bycopy void*x1993; void*x1994; void*x1995; void*x1996; void*x1997; void*x1998; void*x1999; void*x2000; void*x2001; void*x2002; void*x2003; void*x2004; void*x2005; void*x2006; void*x2007; void*x2008; void*x2009; void*x2010; void*x2011; void*x2012; void*x2013; void*x2014; void*x2015; void*x2016; void*x2017; void*x2018; void*x2019; void*x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void*x2028; long doublex2029; BOOL x2030; void*x2031; int x2032; void*x2033; void x2034; void*x2035; void*x2036; void*x2037; in void*x2038; long doublex2039; void*x2040; void*x2041; void*x2042; unsigned short x2043; void*x2044; out const void*x2045; void*x2046; void*x2047; void*x2048; void*x2049; void*x2050; void*x2051; void*x2052; void*x2053; void*x2054; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; void*x2079; void*x2080; void*x2081; void*x2082; void*x2083; void*x2084; void*x2085; void*x2086; void*x2087; void*x2088; void*x2089; void*x2090; void*x2091; void*x2092; void*x2093; void*x2094; void*x2095; void*x2096; void*x2097; void*x2098; void*x2099; void*x2100; void*x2101; void*x2102; void*x2103; void*x2104; void*x2105; void*x2106; void*x2107; void*x2108; void*x2109; void*x2110; void*x2111; void*x2112; void*x2113; void*x2114; void*x2115; void*x2116; void*x2117; void*x2118; void*x2119; void*x2120; void*x2121; void*x2122; void*x2123; void*x2124; void*x2125; void*x2126; void*x2127; void*x2128; void*x2129; void*x2130; void*x2131; void*x2132; void*x2133; void*x2134; void*x2135; void*x2136; unsigned short x2137; void*x2138; short x2139; void*x2140; void*x2141; void*x2142; void*x2143; unsigned long x2144; int x2145; unsigned int x2146/* : ? */; const void*x2147; const void*x2148; void*x2149; void*x2150; const void*x2151; void*x2152; void*x2153; void*x2154; out const void*x2155; short x2156; void*x2157; void*x2158; void*x2159; short x2160; short x2161; void*x2162; int x2163; void*x2164; void*x2165; float x2166; const void*x2167; void*x2168; void*x2169; void*x2170; out const void*x2171; void*x2172; void*x2173; void*x2174; short x2175; short x2176; void*x2177; int x2178; void*x2179; void*x2180; void*x2181; void*x2182; void*x2183; void*x2184; void*x2185; void*x2186; void*x2187; void*x2188; void*x2189; void*x2190; void*x2191; void*x2192; void*x2193; void*x2194; void*x2195; void*x2196; void*x2197; void*x2198; void*x2199; void*x2200; void*x2201; void*x2202; void*x2203; void*x2204; bycopy void*x2205; void*x2206; void*x2207; void*x2208; void*x2209; void*x2210; void*x2211; void*x2212; void*x2213; void*x2214; void*x2215; void*x2216; void*x2217; void*x2218; void*x2219; void*x2220; void*x2221; void*x2222; void*x2223; void*x2224; void*x2225; void*x2226; void*x2227; void*x2228; void*x2229; void*x2230; void*x2231; void*x2232; void*x2233; void*x2234; void*x2235; void*x2236; void*x2237; void*x2238; void*x2239; void*x2240; void*x2241; void*x2242; void*x2243; void*x2244; void*x2245; void*x2246; void*x2247; void*x2248; void*x2249; void*x2250; void*x2251; void*x2252; void*x2253; void*x2254; void*x2255; void*x2256; void*x2257; void*x2258; void*x2259; void*x2260; void*x2261; void*x2262; void*x2263; void*x2264; void*x2265; void*x2266; void*x2267; void*x2268; void*x2269; void*x2270; void*x2271; void*x2272; void*x2273; void*x2274; void*x2275; void*x2276; void*x2277; void*x2278; void*x2279; void*x2280; void*x2281; void*x2282; void*x2283; void*x2284; void*x2285; void*x2286; void*x2287; void*x2288; void*x2289; void*x2290; void*x2291; void*x2292; void*x2293; void*x2294; void*x2295; void*x2296; void*x2297; void*x2298; void*x2299; void*x2300; unsigned short x2301; void*x2302; void*x2303; unsigned int x2304; oneway void*x2305; const void*x2306; int x2307; BOOL x2308; void*x2309; long x2310; unsigned int x2311; in float x2312; out unsigned long x2313; int x2314; short x2315; void*x2316; void*x2317; void*x2318; void*x2319; void*x2320; unsigned short x2321; void*x2322; BOOL x2323; void*x2324; int x2325; out in void*x2326; void*x2327; void*x2328; void*x2329; void*x2330; void*x2331; void*x2332; void*x2333; void*x2334; void*x2335; void*x2336; void*x2337; void*x2338; void*x2339; void*x2340; void*x2341; void*x2342; unsigned short x2343; void*x2344; void*x2345; unsigned int x2346; oneway void*x2347; const void*x2348; int x2349; BOOL x2350; void*x2351; long x2352; unsigned int x2353; in float x2354; out unsigned long x2355; int x2356; short x2357; void*x2358; void*x2359; void*x2360; void*x2361; void*x2362; unsigned short x2363; void*x2364; BOOL x2365; void*x2366; int x2367; out in void*x2368; void*x2369; void*x2370; void*x2371; void*x2372; void*x2373; void*x2374; void*x2375; void*x2376; void*x2377; void*x2378; void*x2379; void*x2380; void*x2381; void*x2382; void*x2383; void*x2384; unsigned short x2385; void*x2386; short x2387; void*x2388; void*x2389; void*x2390; void*x2391; unsigned long x2392; int x2393; unsigned int x2394/* : ? */; const void*x2395; const void*x2396; void*x2397; void*x2398; const int x2399; void x2400; void*x2401; void*x2402; void*x2403; void*x2404; const void*x2405; void*x2406; void*x2407; void*x2408; out const void*x2409; short x2410; void*x2411; unsigned short x2412; void*x2413; out const void*x2414; void*x2415; int x2416; void*x2417; void*x2418; unsigned int x2419; void*x2420; float x2421; const void*x2422; void*x2423; void*x2424; void*x2425; out const void*x2426; void*x2427; unsigned short x2428; void*x2429; out const void*x2430; void*x2431; int x2432; void*x2433; void*x2434; unsigned int x2435; void*x2436; void*x2437; void*x2438; void*x2439; void*x2440; void*x2441; void*x2442; void*x2443; void*x2444; unsigned long long x2445; void*x2446; void*x2447; void*x2448; void*x2449; void*x2450; void*x2451; void*x2452; void*x2453; void*x2454; void*x2455; void*x2456; void*x2457; void*x2458; void*x2459; void*x2460; void*x2461; void*x2462; void*x2463; void*x2464; void*x2465; void*x2466; void*x2467; void*x2468; void*x2469; void*x2470; void*x2471; void*x2472; void*x2473; void*x2474; void*x2475; void*x2476; void*x2477; void*x2478; void*x2479; void*x2480; void*x2481; void*x2482; void*x2483; void*x2484; void*x2485; void*x2486; void*x2487; void*x2488; void*x2489; void*x2490; void*x2491; void*x2492; void*x2493; void*x2494; void*x2495; void*x2496; void*x2497; void*x2498; void*x2499; void*x2500; void*x2501; void*x2502; void*x2503; void*x2504; void*x2505; void*x2506; void*x2507; void*x2508; void*x2509; void*x2510; void*x2511; void*x2512; void*x2513; void*x2514; void*x2515; void*x2516; void*x2517; void*x2518; void*x2519; void*x2520; void*x2521; void*x2522; void*x2523; void*x2524; void*x2525; void*x2526; void*x2527; void*x2528; void*x2529; void*x2530; void*x2531; void*x2532; void*x2533; void*x2534; void*x2535; void*x2536; void*x2537; void*x2538; void*x2539; void*x2540; void*x2541; void*x2542; void*x2543; void*x2544; void*x2545; void*x2546; void*x2547; void*x2548; void*x2549; void*x2550; void*x2551; void*x2552; void*x2553; void*x2554; void*x2555; void*x2556; void*x2557; void*x2558; void*x2559; void*x2560; void*x2561; void*x2562; unsigned short x2563; void*x2564; short x2565; void*x2566; void*x2567; void*x2568; void*x2569; unsigned long x2570; int x2571; unsigned int x2572/* : ? */; const void*x2573; const void*x2574; void*x2575; void*x2576; const int x2577; void x2578; void*x2579; void*x2580; void*x2581; void*x2582; const void*x2583; void*x2584; void*x2585; void*x2586; out const void*x2587; short x2588; void*x2589; unsigned short x2590; void*x2591; out const void*x2592; void*x2593; int x2594; void*x2595; void*x2596; unsigned int x2597; void*x2598; float x2599; const void*x2600; void*x2601; void*x2602; void*x2603; out const void*x2604; void*x2605; unsigned short x2606; void*x2607; out const void*x2608; void*x2609; int x2610; void*x2611; void*x2612; unsigned int x2613; void*x2614; void*x2615; void*x2616; void*x2617; void*x2618; void*x2619; void*x2620; void*x2621; void*x2622; void*x2623; void*x2624; void*x2625; void*x2626; void*x2627; void*x2628; void*x2629; void*x2630; void*x2631; void*x2632; void*x2633; void*x2634; void*x2635; void*x2636; void*x2637; void*x2638; void*x2639; void*x2640; void*x2641; void*x2642; void*x2643; void*x2644; void*x2645; void*x2646; void*x2647; void*x2648; void*x2649; void*x2650; void*x2651; void*x2652; void*x2653; void*x2654; void*x2655; void*x2656; void*x2657; void*x2658; void*x2659; void*x2660; void*x2661; void*x2662; void*x2663; void*x2664; void*x2665; void*x2666; void*x2667; void*x2668; void*x2669; void*x2670; void*x2671; void*x2672; void*x2673; void*x2674; void*x2675; void*x2676; void*x2677; void*x2678; void*x2679; void*x2680; void*x2681; void*x2682; void*x2683; void*x2684; void*x2685; void*x2686; void*x2687; void*x2688; void*x2689; void*x2690; void*x2691; void*x2692; void*x2693; void*x2694; void*x2695; void*x2696; void*x2697; void*x2698; void*x2699; void*x2700; void*x2701; void*x2702; void*x2703; void*x2704; void*x2705; void*x2706; void*x2707; void*x2708; void*x2709; void*x2710; void*x2711; void*x2712; void*x2713; void*x2714; void*x2715; long doublex2716; void*x2717; void*x2718; void*x2719; void*x2720; void*x2721; void*x2722; void*x2723; void*x2724; void*x2725; void*x2726; void*x2727; void*x2728; void*x2729; void*x2730; void*x2731; void*x2732; void*x2733; void*x2734; void*x2735; void*x2736; void*x2737; void*x2738; void*x2739; void*x2740; bool x2741; void*x2742; void*x2743; const void*x2744; void*x2745; const void*x2746; void*x2747; void*x2748; void*x2749; const out void*x2750; void*x2751; const void*x2752; int x2753; void*x2754; short x2755; void*x2756; void*x2757; void*x2758; void*x2759; void*x2760; void*x2761; void*x2762; void*x2763; void*x2764; void*x2765; void*x2766; void*x2767; void*x2768; void*x2769; void*x2770; void*x2771; void*x2772; void*x2773; void*x2774; void*x2775; void*x2776; void*x2777; void*x2778; void*x2779; void*x2780; void*x2781; void*x2782; void*x2783; unsigned short x2784; void*x2785; short x2786; void*x2787; void*x2788; void*x2789; void*x2790; unsigned long x2791; int x2792; unsigned int x2793/* : ? */; const void*x2794; const void*x2795; void*x2796; void*x2797; const int x2798; void x2799; void*x2800; void*x2801; void*x2802; void*x2803; const void*x2804; void*x2805; void*x2806; void*x2807; out const void*x2808; short x2809; void*x2810; unsigned int x2811; void*x2812; void*x2813; unsigned long x2814; void*x2815; int x2816; void*x2817; void*x2818; float x2819; const void*x2820; void*x2821; void*x2822; void*x2823; out const void*x2824; void*x2825; unsigned int x2826; void*x2827; void*x2828; unsigned long x2829; void*x2830; int x2831; void*x2832; void*x2833; void*x2834; void*x2835; void*x2836; void*x2837; void*x2838; void*x2839; void*x2840; void*x2841; void*x2842; void*x2843; void*x2844; void*x2845; void*x2846; void*x2847; void*x2848; void*x2849; void*x2850; void*x2851; unsigned long long x2852; void*x2853; void*x2854; void*x2855; void*x2856; void*x2857; void*x2858; void*x2859; void*x2860; void*x2861; void*x2862; void*x2863; void*x2864; void*x2865; void*x2866; void*x2867; void*x2868; void*x2869; void*x2870; void*x2871; void*x2872; void*x2873; void*x2874; void*x2875; void*x2876; void*x2877; void*x2878; void*x2879; void*x2880; void*x2881; void*x2882; void*x2883; void*x2884; void*x2885; void*x2886; void*x2887; void*x2888; void*x2889; void*x2890; void*x2891; void*x2892; void*x2893; void*x2894; void*x2895; void*x2896; void*x2897; void*x2898; void*x2899; void*x2900; void*x2901; void*x2902; void*x2903; void*x2904; void*x2905; void*x2906; void*x2907; void*x2908; void*x2909; void*x2910; void*x2911; void*x2912; void*x2913; void*x2914; void*x2915; void*x2916; void*x2917; void*x2918; void*x2919; void*x2920; void*x2921; void*x2922; void*x2923; void*x2924; void*x2925; void*x2926; void*x2927; void*x2928; void*x2929; void*x2930; void*x2931; void*x2932; void*x2933; void*x2934; void*x2935; void*x2936; void*x2937; void*x2938; void*x2939; void*x2940; void*x2941; void*x2942; void*x2943; void*x2944; void*x2945; void*x2946; void*x2947; void*x2948; void*x2949; void*x2950; void*x2951; void*x2952; void*x2953; void*x2954; void*x2955; void*x2956; void*x2957; void*x2958; void*x2959; void*x2960; void*x2961; void*x2962; void*x2963; void*x2964; void*x2965; void*x2966; void*x2967; void*x2968; void*x2969; void*x2970; void*x2971; void*x2972; void*x2973; void*x2974; void*x2975; void*x2976; void*x2977; void*x2978; void*x2979; void*x2980; void*x2981; void*x2982; void*x2983; void*x2984; void*x2985; void*x2986; void*x2987; void*x2988; void*x2989; void*x2990; void*x2991; void*x2992; void*x2993; void*x2994; void*x2995; void*x2996; void*x2997; void*x2998; void*x2999; void*x3000; void*x3001; void*x3002; void*x3003; void*x3004; void*x3005; void*x3006; void*x3007; void*x3008; void*x3009; void*x3010; void*x3011; void*x3012; void*x3013; void*x3014; void*x3015; void*x3016; void*x3017; void*x3018; void*x3019; void*x3020; void*x3021; void*x3022; void*x3023; void*x3024; void*x3025; void*x3026; void*x3027; void*x3028; void*x3029; void*x3030; void*x3031; void*x3032; void*x3033; void*x3034; void*x3035; void*x3036; void*x3037; void*x3038; void*x3039; void*x3040; void*x3041; void*x3042; void*x3043; void*x3044; void*x3045; void*x3046; void*x3047; void*x3048; void*x3049; void*x3050; void*x3051; void*x3052; void*x3053; void*x3054; void*x3055; void*x3056; void*x3057; void*x3058; void*x3059; void*x3060; void*x3061; void*x3062; void*x3063; void*x3064; void*x3065; void*x3066; void*x3067; void*x3068; void*x3069; void*x3070; void*x3071; long long x3072; void*x3073; void*x3074; void*x3075; void*x3076; void*x3077; void*x3078; void*x3079; void*x3080; void*x3081; void*x3082; void*x3083; void*x3084; void*x3085; void*x3086; void*x3087; void*x3088; void*x3089; void*x3090; void*x3091; void*x3092; void*x3093; void*x3094; void*x3095; void*x3096; void*x3097; void*x3098; void*x3099; void*x3100; void*x3101; void*x3102; void*x3103; void*x3104; void*x3105; void*x3106; void*x3107; void*x3108; void*x3109; void*x3110; void*x3111; void*x3112; void*x3113; void*x3114; void*x3115; void*x3116; void*x3117; void*x3118; void*x3119; void*x3120; void*x3121; void*x3122; void*x3123; void*x3124; unsigned char x3125; inout int x3126; bycopy unsigned short x3127; bool x3128; unsigned char x3129; out in void*x3130; void*x3131; int x3132; in void*x3133; const short x3134; void*x3135; out const BOOL x3136; BOOL x3137; out void*x3138; in void*x3139; void*x3140; const void*x3141; double x3142; int x3143; BOOL x3144; void*x3145; void*x3146; void*x3147; void*x3148; void*x3149; void*x3150; void*x3151; void*x3152; void*x3153; void*x3154; void*x3155; void*x3156; void*x3157; void*x3158; void*x3159; unsigned char x3160; inout int x3161; bycopy unsigned short x3162; bool x3163; unsigned char x3164; out in void*x3165; void*x3166; int x3167; in void*x3168; const short x3169; void*x3170; out const BOOL x3171; BOOL x3172; out void*x3173; in void*x3174; void*x3175; const void*x3176; double x3177; int x3178; BOOL x3179; void*x3180; void*x3181; void*x3182; void*x3183; void*x3184; void*x3185; void*x3186; void*x3187; void*x3188; void*x3189; void*x3190; void*x3191; void*x3192; void*x3193; void*x3194; void*x3195; unsigned short x3196; void*x3197; short x3198; void*x3199; void*x3200; void*x3201; void*x3202; unsigned long x3203; int x3204; unsigned int x3205/* : ? */; const void*x3206; const void*x3207; void*x3208; void*x3209; const void*x3210; void*x3211; void*x3212; void*x3213; out const void*x3214; short x3215; void*x3216; unsigned char x3217; out in void*x3218; void*x3219; BOOL x3220; void*x3221; short x3222; void*x3223; float x3224; const void*x3225; void*x3226; void*x3227; void*x3228; out const void*x3229; void*x3230; unsigned char x3231; out in void*x3232; void*x3233; BOOL x3234; void*x3235; short x3236; void*x3237; void*x3238; void*x3239; void*x3240; void*x3241; void*x3242; void*x3243; void*x3244; void*x3245; void*x3246; void*x3247; void*x3248; void*x3249; void*x3250; void*x3251; void*x3252; void*x3253; void*x3254; void*x3255; void*x3256; void*x3257; void*x3258; void*x3259; void*x3260; void*x3261; void*x3262; void*x3263; void*x3264; void*x3265; void*x3266; void*x3267; void*x3268; void*x3269; void*x3270; void*x3271; void*x3272; void*x3273; void*x3274; void*x3275; void*x3276; void*x3277; void*x3278; void*x3279; void*x3280; void*x3281; void*x3282; void*x3283; void*x3284; void*x3285; void*x3286; void*x3287; void*x3288; void*x3289; void*x3290; void*x3291; void*x3292; void*x3293; void*x3294; void*x3295; void*x3296; void*x3297; void*x3298; void*x3299; void*x3300; void*x3301; void*x3302; void*x3303; void*x3304; void*x3305; void*x3306; void*x3307; void*x3308; void*x3309; void*x3310; void*x3311; unsigned long x3312; void*x3313; int x3314; void*x3315; void*x3316; void*x3317; void*x3318; float x3319; void*x3320; const void*x3321; in BOOL x3322; void*x3323; unsigned short x3324; void*x3325; short x3326; void*x3327; void*x3328; void*x3329; void*x3330; void*x3331; void*x3332; void*x3333; void*x3334; void*x3335; void*x3336; void*x3337; void*x3338; unsigned long long x3339; void*x3340; void*x3341; void*x3342; void*x3343; void*x3344; void*x3345; void*x3346; void*x3347; void*x3348; void*x3349; void*x3350; void*x3351; void*x3352; void*x3353; void*x3354; void*x3355; void*x3356; void*x3357; void*x3358; void*x3359; void*x3360; void*x3361; void*x3362; void*x3363; void*x3364; void*x3365; void*x3366; void*x3367; void*x3368; void*x3369; void*x3370; void*x3371; void*x3372; void*x3373; void*x3374; void*x3375; void*x3376; void*x3377; void*x3378; void*x3379; void*x3380; void*x3381; void*x3382; void*x3383; void*x3384; void*x3385; void*x3386; void*x3387; void*x3388; void*x3389; void*x3390; void*x3391; void*x3392; void*x3393; void*x3394; void*x3395; void*x3396; void*x3397; void*x3398; void*x3399; void*x3400; void*x3401; void*x3402; void*x3403; void*x3404; void*x3405; void*x3406; void*x3407; void*x3408; void*x3409; void*x3410; void*x3411; void*x3412; void*x3413; void*x3414; void*x3415; void*x3416; void*x3417; void*x3418; void*x3419; void*x3420; void*x3421; void*x3422; void*x3423; void*x3424; void*x3425; void*x3426; void*x3427; void*x3428; void*x3429; void*x3430; void*x3431; void*x3432; void*x3433; void*x3434; void*x3435; void*x3436; void*x3437; void*x3438; void*x3439; void*x3440; void*x3441; void*x3442; void*x3443; void*x3444; void*x3445; void*x3446; void*x3447; void*x3448; void*x3449; void*x3450; void*x3451; void*x3452; void*x3453; unsigned long x3454; void*x3455; int x3456; void*x3457; void*x3458; void*x3459; void*x3460; float x3461; void*x3462; const void*x3463; in BOOL x3464; void*x3465; unsigned short x3466; void*x3467; short x3468; void*x3469; void*x3470; void*x3471; void*x3472; void*x3473; void*x3474; void*x3475; void*x3476; void*x3477; void*x3478; void*x3479; void*x3480; void*x3481; void*x3482; void*x3483; unsigned short x3484; void*x3485; short x3486; void*x3487; void*x3488; void*x3489; void*x3490; unsigned long x3491; int x3492; unsigned int x3493/* : ? */; const void*x3494; const void*x3495; void*x3496; void*x3497; const int x3498; void x3499; void*x3500; void*x3501; void*x3502; void*x3503; const void*x3504; void*x3505; void*x3506; void*x3507; out const void*x3508; short x3509; void*x3510; void*x3511; out void*x3512; void*x3513; const long x3514; out void*x3515; unsigned char x3516; out const void*x3517; void*x3518; float x3519; const void*x3520; void*x3521; void*x3522; void*x3523; out const void*x3524; void*x3525; void*x3526; out void*x3527; void*x3528; const long x3529; out void*x3530; unsigned char x3531; out const void*x3532; void*x3533; void*x3534; void*x3535; void*x3536; void*x3537; void*x3538; void*x3539; void*x3540; void*x3541; void*x3542; void*x3543; void*x3544; void*x3545; void*x3546; void*x3547; void*x3548; void*x3549; void*x3550; void*x3551; void*x3552; void*x3553; void*x3554; void*x3555; void*x3556; void*x3557; void*x3558; void*x3559; void*x3560; void*x3561; void*x3562; void*x3563; void*x3564; void*x3565; void*x3566; void*x3567; void*x3568; void*x3569; void*x3570; void*x3571; void*x3572; void*x3573; void*x3574; void*x3575; void*x3576; void*x3577; void*x3578; void*x3579; void*x3580; void*x3581; void*x3582; void*x3583; void*x3584; void*x3585; void*x3586; void*x3587; void*x3588; void*x3589; void*x3590; void*x3591; void*x3592; void*x3593; void*x3594; void*x3595; void*x3596; void*x3597; void*x3598; void*x3599; void*x3600; void*x3601; void*x3602; void*x3603; void*x3604; void*x3605; void*x3606; void*x3607; void*x3608; void*x3609; void*x3610; void*x3611; void*x3612; void*x3613; void*x3614; void*x3615; void*x3616; void*x3617; void*x3618; void*x3619; void*x3620; void*x3621; void*x3622; void*x3623; void*x3624; long doublex3625; void*x3626; void*x3627; void*x3628; void*x3629; void*x3630; void*x3631; void*x3632; unsigned short x3633; void*x3634; void*x3635; void*x3636; void*x3637; void*x3638; void*x3639; void*x3640; void*x3641; void*x3642; void*x3643; void*x3644; void*x3645; void*x3646; void*x3647; void*x3648; void*x3649; void*x3650; void*x3651; void*x3652; void*x3653; void*x3654; void*x3655; void*x3656; void*x3657; bycopy void*x3658; long doublex3659; void*x3660; void*x3661; out BOOL x3662; out void*x3663; void*x3664; long x3665; void*x3666; void*x3667; void*x3668; void*x3669; void*x3670; short x3671; void*x3672; long x3673; void*x3674; void*x3675; void*x3676; void*x3677; void*x3678; void*x3679; void*x3680; void*x3681; void*x3682; void*x3683; void*x3684; void*x3685; void*x3686; void*x3687; void*x3688; void*x3689; void*x3690; void*x3691; void*x3692; void*x3693; void*x3694; void*x3695; void*x3696; void*x3697; void*x3698; void*x3699; void*x3700; void*x3701; void*x3702; void*x3703; void*x3704; void*x3705; void*x3706; void*x3707; void*x3708; void*x3709; void*x3710; void*x3711; void*x3712; void*x3713; void*x3714; void*x3715; void*x3716; void*x3717; void*x3718; void*x3719; void*x3720; void*x3721; void*x3722; void*x3723; void*x3724; void*x3725; void*x3726; void*x3727; void*x3728; void*x3729; void*x3730; void*x3731; void*x3732; void*x3733; bycopy void*x3734; long doublex3735; void*x3736; void*x3737; out BOOL x3738; out void*x3739; void*x3740; long x3741; void*x3742; void*x3743; void*x3744; void*x3745; void*x3746; short x3747; void*x3748; long x3749; void*x3750; void*x3751; void*x3752; void*x3753; void*x3754; void*x3755; void*x3756; void*x3757; void*x3758; void*x3759; void*x3760; void*x3761; void*x3762; void*x3763; void*x3764; void*x3765; void*x3766; void*x3767; void*x3768; void*x3769; void*x3770; void*x3771; void*x3772; void*x3773; void*x3774; unsigned char x3775; void*x3776; unsigned short x3777; void*x3778; short x3779; void*x3780; void*x3781; void*x3782; void*x3783; unsigned long x3784; int x3785; unsigned int x3786/* : ? */; const void*x3787; const void*x3788; void*x3789; void*x3790; const int x3791; void x3792; void*x3793; void*x3794; void*x3795; void*x3796; const void*x3797; void*x3798; void*x3799; void*x3800; out const void*x3801; short x3802; void*x3803; void*x3804; void*x3805; out unsigned short x3806; void*x3807; const void x3808; int x3809; BOOL x3810; void*x3811; short x3812; void*x3813; float x3814; const void*x3815; void*x3816; void*x3817; void*x3818; out const void*x3819; void*x3820; void*x3821; void*x3822; out unsigned short x3823; void*x3824; const void x3825; int x3826; BOOL x3827; void*x3828; short x3829; void*x3830; void*x3831; void*x3832; void*x3833; void*x3834; void*x3835; void*x3836; void*x3837; void*x3838; void*x3839; void*x3840; void*x3841; void*x3842; void*x3843; void*x3844; void*x3845; void*x3846; void*x3847; void*x3848; void*x3849; void*x3850; void*x3851; void*x3852; void*x3853; void*x3854; void*x3855; void*x3856; void*x3857; void*x3858; void*x3859; void*x3860; void*x3861; void*x3862; void*x3863; void*x3864; void*x3865; void*x3866; void*x3867; void*x3868; void*x3869; void*x3870; void*x3871; void*x3872; void*x3873; void*x3874; void*x3875; void*x3876; void*x3877; void*x3878; void*x3879; void*x3880; void*x3881; void*x3882; void*x3883; void*x3884; void*x3885; void*x3886; void*x3887; void*x3888; void*x3889; void*x3890; void*x3891; void*x3892; void*x3893; void*x3894; void*x3895; void*x3896; void*x3897; void*x3898; void*x3899; void*x3900; void*x3901; void*x3902; void*x3903; void*x3904; void*x3905; void*x3906; void*x3907; void*x3908; void*x3909; void*x3910; void*x3911; void*x3912; void*x3913; void*x3914; void*x3915; void*x3916; void*x3917; void*x3918; void*x3919; void*x3920; void*x3921; void*x3922; void*x3923; void*x3924; void*x3925; void*x3926; void*x3927; void*x3928; void*x3929; void*x3930; void*x3931; void*x3932; unsigned long long x3933; void*x3934; void*x3935; void*x3936; void*x3937; void*x3938; void*x3939; void*x3940; void*x3941; void*x3942; void*x3943; void*x3944; void*x3945; void*x3946; void*x3947; void*x3948; void*x3949; void*x3950; void*x3951; void*x3952; void*x3953; void*x3954; void*x3955; void*x3956; void*x3957; void*x3958; void*x3959; void*x3960; void*x3961; void*x3962; void*x3963; void*x3964; void*x3965; void*x3966; void*x3967; void*x3968; void*x3969; void*x3970; void*x3971; void*x3972; void*x3973; void*x3974; void*x3975; void*x3976; void*x3977; void*x3978; void*x3979; void*x3980; void*x3981; double x3982; void*x3983; void*x3984; void*x3985; void*x3986; void*x3987; void*x3988; void*x3989; void*x3990; void*x3991; void*x3992; void*x3993; void*x3994; void*x3995; void*x3996; void*x3997; void*x3998; void*x3999; void*x4000; void*x4001; void*x4002; void*x4003; unsigned short x4004; unsigned char x4005; void*x4006; void*x4007; long doublex4008; void*x4009; void*x4010; out in void*x4011; void*x4012; void*x4013; void*x4014; void*x4015; const int x4016; void*x4017; long x4018; void*x4019; void*x4020; BOOL x4021; void*x4022; void*x4023; void*x4024; void*x4025; void*x4026; void*x4027; void*x4028; void*x4029; void*x4030; void*x4031; void*x4032; void*x4033; void*x4034; void*x4035; void*x4036; void*x4037; void*x4038; void*x4039; void*x4040; void*x4041; void*x4042; void*x4043; void*x4044; void*x4045; void*x4046; void*x4047; void*x4048; unsigned short x4049; unsigned char x4050; void*x4051; void*x4052; long doublex4053; void*x4054; void*x4055; out in void*x4056; void*x4057; void*x4058; void*x4059; void*x4060; const int x4061; void*x4062; long x4063; void*x4064; void*x4065; BOOL x4066; void*x4067; void*x4068; void*x4069; void*x4070; void*x4071; void*x4072; void*x4073; void*x4074; void*x4075; void*x4076; void*x4077; void*x4078; void*x4079; void*x4080; void*x4081; void*x4082; void*x4083; void*x4084; void*x4085; void*x4086; void*x4087; void*x4088; void*x4089; void*x4090; void*x4091; unsigned char x4092; void*x4093; unsigned short x4094; void*x4095; short x4096; void*x4097; void*x4098; void*x4099; void*x4100; unsigned long x4101; int x4102; unsigned int x4103/* : ? */; const void*x4104; const void*x4105; void*x4106; void*x4107; const int x4108; void x4109; void*x4110; void*x4111; void*x4112; void*x4113; const void*x4114; void*x4115; void*x4116; void*x4117; out const void*x4118; short x4119; void*x4120; int x4121; void*x4122; out const void*x4123; unsigned int x4124; void*x4125; void*x4126; out const void*x4127; void*x4128; float x4129; const void*x4130; void*x4131; void*x4132; void*x4133; out const void*x4134; void*x4135; int x4136; void*x4137; out const void*x4138; unsigned int x4139; void*x4140; void*x4141; out const void*x4142; void*x4143; void*x4144; void*x4145; void*x4146; void*x4147; void*x4148; void*x4149; void*x4150; void*x4151; void*x4152; void*x4153; void*x4154; void*x4155; void*x4156; void*x4157; void*x4158; void*x4159; void*x4160; void*x4161; void*x4162; void*x4163; void*x4164; void*x4165; void*x4166; void*x4167; void*x4168; void*x4169; void*x4170; void*x4171; void*x4172; void*x4173; void*x4174; void*x4175; void*x4176; void*x4177; void*x4178; out void*x4179; void*x4180; void*x4181; void*x4182; void*x4183; void*x4184; void*x4185; BOOL x4186; void*x4187; out void*x4188; in void*x4189; short x4190; void*x4191; void*x4192; void*x4193; void*x4194; void*x4195; void x4196; void*x4197; out void*x4198; int x4199; void*x4200; double x4201; void*x4202; char *x4203; void*x4204; void*x4205; void*x4206; void*x4207; void*x4208; void*x4209; void*x4210; void*x4211; void*x4212; void*x4213; void*x4214; void*x4215; void*x4216; void*x4217; void*x4218; void*x4219; void*x4220; void*x4221; void*x4222; void*x4223; void*x4224; void*x4225; void*x4226; void*x4227; void*x4228; void*x4229; void*x4230; void*x4231; unsigned char x4232; inout unsigned char x4233; out in void*x4234; void*x4235; BOOL x4236; void*x4237; unsigned short x4238; void*x4239; out const void*x4240; unsigned short x4241; in void*x4242; void*x4243; short x4244; void*x4245; out void*x4246; void*x4247; void*x4248; void*x4249; void*x4250; void*x4251; void*x4252; void*x4253; void*x4254; void*x4255; id x4256; void*x4257; void*x4258; void*x4259; void*x4260; void*x4261; void*x4262; void*x4263; void*x4264; void*x4265; void*x4266; void*x4267; void*x4268; void*x4269; void*x4270; void*x4271; void*x4272; void*x4273; void*x4274; void*x4275; void*x4276; void*x4277; void*x4278; void*x4279; void*x4280; void*x4281; void*x4282; void*x4283; void*x4284; void*x4285; void*x4286; void*x4287; unsigned char x4288; inout unsigned char x4289; out in void*x4290; void*x4291; BOOL x4292; void*x4293; unsigned short x4294; void*x4295; out const void*x4296; unsigned short x4297; in void*x4298; void*x4299; short x4300; void*x4301; out void*x4302; void*x4303; void*x4304; void*x4305; void*x4306; void*x4307; void*x4308; void*x4309; void*x4310; void*x4311; SEL x4312; void*x4313; unsigned short x4314; void*x4315; short x4316; void*x4317; void*x4318; void*x4319; void*x4320; unsigned long x4321; int x4322; unsigned int x4323/* : ? */; const void*x4324; const void*x4325; void*x4326; void*x4327; const void*x4328; void*x4329; void*x4330; void*x4331; out const void*x4332; short x4333; void*x4334; unsigned char x4335; out in void*x4336; void*x4337; BOOL x4338; void*x4339; short x4340; void*x4341; unsigned int x4342; void*x4343; float x4344; const void*x4345; void*x4346; void*x4347; void*x4348; out const void*x4349; void*x4350; unsigned char x4351; out in void*x4352; void*x4353; BOOL x4354; void*x4355; short x4356; void*x4357; unsigned int x4358; void*x4359; void*x4360; void*x4361; void*x4362; void*x4363; void*x4364; void*x4365; void*x4366; void*x4367; void*x4368; void*x4369; void*x4370; void*x4371; void*x4372; void*x4373; void*x4374; void*x4375; void*x4376; void*x4377; void*x4378; void*x4379; void*x4380; void*x4381; void*x4382; void*x4383; void*x4384; void*x4385; void*x4386; void*x4387; void*x4388; void*x4389; void*x4390; void*x4391; void*x4392; void*x4393; void*x4394; void*x4395; void*x4396; void*x4397; void*x4398; void*x4399; void*x4400; void*x4401; void*x4402; void*x4403; void*x4404; void*x4405; void*x4406; void*x4407; void*x4408; void*x4409; void*x4410; void*x4411; void*x4412; void*x4413; void*x4414; void*x4415; void*x4416; void*x4417; void*x4418; void*x4419; void*x4420; void*x4421; void*x4422; void*x4423; void*x4424; void*x4425; void*x4426; void*x4427; void*x4428; void*x4429; void*x4430; void*x4431; void*x4432; void*x4433; void*x4434; void*x4435; void*x4436; void*x4437; void*x4438; void*x4439; void*x4440; void*x4441; void*x4442; void*x4443; void*x4444; void*x4445; void*x4446; void*x4447; void*x4448; void*x4449; void*x4450; void*x4451; void*x4452; void*x4453; void*x4454; void*x4455; void*x4456; void*x4457; void*x4458; void*x4459; void*x4460; void*x4461; void*x4462; void*x4463; void*x4464; void*x4465; void*x4466; void*x4467; void*x4468; void*x4469; void*x4470; void*x4471; void*x4472; void*x4473; void*x4474; void*x4475; void*x4476; void*x4477; void*x4478; void*x4479; void*x4480; void*x4481; void*x4482; void*x4483; void*x4484; void*x4485; void*x4486; void*x4487; void*x4488; void*x4489; void*x4490; void*x4491; void*x4492; void*x4493; void*x4494; unsigned long x4495; void*x4496; void*x4497; in BOOL x4498; void*x4499; unsigned short x4500; void*x4501; void*x4502; void*x4503; short x4504; unsigned short x4505; void*x4506; void*x4507; void*x4508; int x4509; short x4510; void*x4511; int x4512; BOOL x4513; short x4514; void*x4515; void*x4516; void*x4517; void*x4518; void*x4519; void*x4520; void*x4521; void*x4522; void*x4523; void*x4524; void*x4525; void*x4526; void*x4527; void*x4528; void*x4529; void*x4530; void*x4531; void*x4532; void*x4533; void*x4534; void*x4535; void*x4536; void*x4537; void*x4538; void*x4539; void*x4540; unsigned long x4541; void*x4542; void*x4543; in BOOL x4544; void*x4545; unsigned short x4546; void*x4547; void*x4548; void*x4549; short x4550; unsigned short x4551; void*x4552; void*x4553; void*x4554; int x4555; short x4556; void*x4557; int x4558; BOOL x4559; short x4560; void*x4561; void*x4562; void*x4563; void*x4564; void*x4565; void*x4566; void*x4567; void*x4568; void*x4569; void*x4570; void*x4571; void*x4572; void*x4573; void*x4574; void*x4575; void*x4576; void*x4577; void*x4578; void*x4579; void*x4580; void*x4581; void*x4582; void*x4583; unsigned int x4584; void*x4585; unsigned short x4586; void*x4587; short x4588; void*x4589; void*x4590; void*x4591; void*x4592; unsigned long x4593; int x4594; unsigned int x4595/* : ? */; const void*x4596; const void*x4597; void*x4598; void*x4599; const int x4600; void x4601; void*x4602; void*x4603; void*x4604; void*x4605; const void*x4606; void*x4607; void*x4608; void*x4609; out const void*x4610; short x4611; void*x4612; void*x4613; void*x4614; unsigned long x4615; void*x4616; void*x4617; in BOOL x4618; void*x4619; unsigned short x4620; void*x4621; void*x4622; void*x4623; short x4624; void*x4625; float x4626; const void*x4627; void*x4628; void*x4629; void*x4630; out const void*x4631; void*x4632; void*x4633; void*x4634; unsigned long x4635; void*x4636; void*x4637; in BOOL x4638; void*x4639; unsigned short x4640; void*x4641; void*x4642; void*x4643; short x4644; void*x4645; void*x4646; void*x4647; void*x4648; void*x4649; void*x4650; void*x4651; void*x4652; void*x4653; void*x4654; void*x4655; void*x4656; void*x4657; void*x4658; void*x4659; void*x4660; void*x4661; void*x4662; void*x4663; void*x4664; void*x4665; void*x4666; void*x4667; void*x4668; void*x4669; void*x4670; void*x4671; void*x4672; void*x4673; void*x4674; void*x4675; void*x4676; void*x4677; void*x4678; void*x4679; void*x4680; void*x4681; void*x4682; void*x4683; void*x4684; void*x4685; void*x4686; void*x4687; void*x4688; void*x4689; void*x4690; void*x4691; void*x4692; void*x4693; void*x4694; void*x4695; void*x4696; void*x4697; void*x4698; void*x4699; void*x4700; void*x4701; void*x4702; void*x4703; void*x4704; void*x4705; void*x4706; void*x4707; void*x4708; void*x4709; void*x4710; void*x4711; void*x4712; void*x4713; void*x4714; void*x4715; void*x4716; void*x4717; void*x4718; void*x4719; void*x4720; void*x4721; void*x4722; void*x4723; void*x4724; void*x4725; void*x4726; void*x4727; void*x4728; void*x4729; void*x4730; void*x4731; void*x4732; void*x4733; void*x4734; void*x4735; void*x4736; void*x4737; void*x4738; void*x4739; void*x4740; void*x4741; void*x4742; void*x4743; void*x4744; void*x4745; void*x4746; void*x4747; void*x4748; void*x4749; void*x4750; void*x4751; void*x4752; void*x4753; void*x4754; void*x4755; void*x4756; void*x4757; void*x4758; void*x4759; void*x4760; void*x4761; void*x4762; void*x4763; void*x4764; void*x4765; void*x4766; void*x4767; void*x4768; void*x4769; void*x4770; void*x4771; void*x4772; void*x4773; void*x4774; void*x4775; void*x4776; void*x4777; void*x4778; void*x4779; void*x4780; void*x4781; void*x4782; void*x4783; void*x4784; void*x4785; void*x4786; void*x4787; void*x4788; void*x4789; void*x4790; void*x4791; void*x4792; void*x4793; void*x4794; void*x4795; void*x4796; void*x4797; void*x4798; void*x4799; void*x4800; void*x4801; void*x4802; void*x4803; void*x4804; void*x4805; void*x4806; void*x4807; void*x4808; void*x4809; void*x4810; void*x4811; void*x4812; void*x4813; void*x4814; void*x4815; void*x4816; void*x4817; void*x4818; void*x4819; void*x4820; void*x4821; void*x4822; void*x4823; void*x4824; void*x4825; void*x4826; void*x4827; void*x4828; void*x4829; void*x4830; void*x4831; void*x4832; void*x4833; void*x4834; void*x4835; void*x4836; void*x4837; void*x4838; void*x4839; void*x4840; void*x4841; void*x4842; void*x4843; void*x4844; void*x4845; void*x4846; void*x4847; void*x4848; void*x4849; void*x4850; void*x4851; void*x4852; void*x4853; void*x4854; void*x4855; void*x4856; void*x4857; void*x4858; void*x4859; void*x4860; void*x4861; void*x4862; void*x4863; void*x4864; void*x4865; void*x4866; void*x4867; void*x4868; void*x4869; void*x4870; void*x4871; void*x4872; void*x4873; void*x4874; void*x4875; bool x4876; void*x4877; void*x4878; out void*x4879; int x4880; out in void*x4881; void*x4882; void*x4883; BOOL x4884; void*x4885; void*x4886; void*x4887; in void*x4888; short x4889; inout out double x4890; void*x4891; void*x4892; void*x4893; void*x4894; void*x4895; void*x4896; void*x4897; void*x4898; void*x4899; void*x4900; void*x4901; void*x4902; void*x4903; void*x4904; void*x4905; void*x4906; void*x4907; void*x4908; void*x4909; void*x4910; void*x4911; void*x4912; void*x4913; void*x4914; void*x4915; void*x4916; void*x4917; unsigned short x4918; void*x4919; short x4920; void*x4921; void*x4922; void*x4923; void*x4924; unsigned long x4925; int x4926; unsigned int x4927/* : ? */; const void*x4928; const void*x4929; void*x4930; void*x4931; const int x4932; void x4933; void*x4934; void*x4935; void*x4936; void*x4937; const void*x4938; void*x4939; void*x4940; void*x4941; out const void*x4942; short x4943; void*x4944; unsigned char x4945; void*x4946; long x4947; void*x4948; short x4949; void*x4950; int x4951; void*x4952; long x4953; void*x4954; float x4955; const void*x4956; void*x4957; void*x4958; void*x4959; out const void*x4960; void*x4961; unsigned char x4962; void*x4963; long x4964; void*x4965; short x4966; void*x4967; int x4968; void*x4969; long x4970; void*x4971; void*x4972; void*x4973; void*x4974; void*x4975; void*x4976; void*x4977; void*x4978; void*x4979; void*x4980; void*x4981; void*x4982; void*x4983; void*x4984; void*x4985; void*x4986; void*x4987; void*x4988; void*x4989; void*x4990; void*x4991; void*x4992; void*x4993; void*x4994; void*x4995; void*x4996; void*x4997; void*x4998; void*x4999; void*x5000; void*x5001; void*x5002; void*x5003; void*x5004; void*x5005; void*x5006; void*x5007; void*x5008; void*x5009; void*x5010; void*x5011; void*x5012; void*x5013; void*x5014; void*x5015; void*x5016; void*x5017; void*x5018; void*x5019; void*x5020; void*x5021; void*x5022; void*x5023; void*x5024; void*x5025; void*x5026; void*x5027; void*x5028; void*x5029; void*x5030; void*x5031; void*x5032; void*x5033; void*x5034; void*x5035; void*x5036; void*x5037; void*x5038; void*x5039; void*x5040; void*x5041; void*x5042; void*x5043; void*x5044; void*x5045; void*x5046; void*x5047; void*x5048; void*x5049; void*x5050; void*x5051; unsigned short x5052; unsigned char x5053; inout void*x5054; void*x5055; void*x5056; void*x5057; void*x5058; const void*x5059; long doublex5060; void*x5061; long x5062; void*x5063; void*x5064; void*x5065; void*x5066; void*x5067; unsigned short x5068; out void*x5069; const BOOL x5070; void*x5071; void*x5072; void*x5073; void*x5074; void*x5075; void*x5076; void*x5077; void*x5078; void*x5079; void*x5080; void*x5081; void*x5082; void*x5083; void*x5084; void*x5085; void*x5086; void*x5087; void*x5088; void*x5089; void*x5090; void*x5091; void*x5092; void*x5093; void*x5094; void*x5095; unsigned short x5096; unsigned char x5097; inout void*x5098; void*x5099; void*x5100; void*x5101; void*x5102; const void*x5103; long doublex5104; void*x5105; long x5106; void*x5107; void*x5108; void*x5109; void*x5110; void*x5111; unsigned short x5112; out void*x5113; const BOOL x5114; void*x5115; void*x5116; void*x5117; void*x5118; void*x5119; void*x5120; void*x5121; void*x5122; void*x5123; void*x5124; void*x5125; void*x5126; void*x5127; void*x5128; void*x5129; void*x5130; void*x5131; void*x5132; void*x5133; void*x5134; void*x5135; void*x5136; void*x5137; void*x5138; void*x5139; void*x5140; unsigned short x5141; void*x5142; short x5143; void*x5144; void*x5145; void*x5146; void*x5147; unsigned long x5148; int x5149; unsigned int x5150/* : ? */; const void*x5151; const void*x5152; void*x5153; void*x5154; const void*x5155; void*x5156; void*x5157; void*x5158; out const void*x5159; short x5160; void*x5161; unsigned short x5162; BOOL x5163; void*x5164; in void*x5165; void*x5166; int x5167; void*x5168; void*x5169; float x5170; const void*x5171; void*x5172; void*x5173; void*x5174; out const void*x5175; void*x5176; unsigned short x5177; BOOL x5178; void*x5179; in void*x5180; void*x5181; int x5182; void*x5183; void*x5184; void*x5185; void*x5186; void*x5187; void*x5188; void*x5189; void*x5190; void*x5191; void*x5192; void*x5193; void*x5194; void*x5195; void*x5196; void*x5197; void*x5198; void*x5199; void*x5200; void*x5201; void*x5202; void*x5203; void*x5204; void*x5205; void*x5206; void*x5207; void*x5208; void*x5209; void*x5210; void*x5211; void*x5212; void*x5213; void*x5214; void*x5215; void*x5216; void*x5217; void*x5218; void*x5219; void*x5220; void*x5221; void*x5222; void*x5223; void*x5224; void*x5225; unsigned short x5226; unsigned char x5227; inout void*x5228; void*x5229; void*x5230; void*x5231; void*x5232; const void*x5233; bycopy float x5234; float x5235; short x5236; BOOL x5237; const void*x5238; void*x5239; in void*x5240; void*x5241; in double x5242; void*x5243; const int x5244; in void*x5245; unsigned short x5246; out void*x5247; const BOOL x5248; void*x5249; void*x5250; void*x5251; void*x5252; void*x5253; void*x5254; void*x5255; void*x5256; void*x5257; void*x5258; void*x5259; void*x5260; void*x5261; void*x5262; void*x5263; void*x5264; void*x5265; void*x5266; void*x5267; void*x5268; void*x5269; void*x5270; void*x5271; bycopy void*x5272; void*x5273; void*x5274; void*x5275; void*x5276; void*x5277; void*x5278; void*x5279; void*x5280; void*x5281; void*x5282; void*x5283; void*x5284; void*x5285; void*x5286; void*x5287; void*x5288; void*x5289; void*x5290; void*x5291; void*x5292; void*x5293; void*x5294; unsigned short x5295; unsigned char x5296; inout void*x5297; void*x5298; void*x5299; void*x5300; void*x5301; const void*x5302; bycopy float x5303; float x5304; short x5305; BOOL x5306; const void*x5307; void*x5308; in void*x5309; void*x5310; in double x5311; void*x5312; const int x5313; in void*x5314; unsigned short x5315; out void*x5316; const BOOL x5317; void*x5318; void*x5319; void*x5320; void*x5321; void*x5322; void*x5323; void*x5324; void*x5325; void*x5326; void*x5327; void*x5328; void*x5329; void*x5330; void*x5331; void*x5332; void*x5333; unsigned short x5334; void*x5335; short x5336; void*x5337; void*x5338; void*x5339; void*x5340; unsigned long x5341; int x5342; unsigned int x5343/* : ? */; const void*x5344; const void*x5345; void*x5346; void*x5347; const void*x5348; void*x5349; void*x5350; void*x5351; out const void*x5352; short x5353; void*x5354; unsigned short x5355; BOOL x5356; void*x5357; in void*x5358; void*x5359; int x5360; void*x5361; void*x5362; float x5363; const void*x5364; void*x5365; void*x5366; void*x5367; out const void*x5368; void*x5369; unsigned short x5370; BOOL x5371; void*x5372; in void*x5373; void*x5374; int x5375; void*x5376; void*x5377; void*x5378; void*x5379; void*x5380; void*x5381; void*x5382; void*x5383; void*x5384; void*x5385; void*x5386; void*x5387; void*x5388; void*x5389; void*x5390; void*x5391; void*x5392; void*x5393; void*x5394; void*x5395; void*x5396; long long x5397; void*x5398; void*x5399; void*x5400; void*x5401; void*x5402; void*x5403; void*x5404; void*x5405; void*x5406; void*x5407; void*x5408; void*x5409; void*x5410; void*x5411; void*x5412; void*x5413; void*x5414; void*x5415; void*x5416; void*x5417; void*x5418; void*x5419; void*x5420; void*x5421; void*x5422; void*x5423; void*x5424; void*x5425; void*x5426; void*x5427; void*x5428; void*x5429; void*x5430; void*x5431; void*x5432; void*x5433; void*x5434; void*x5435; void*x5436; void*x5437; void*x5438; void*x5439; void*x5440; void*x5441; void*x5442; void*x5443; void*x5444; void*x5445; void*x5446; void*x5447; void*x5448; void*x5449; void*x5450; void*x5451; void*x5452; void*x5453; void*x5454; void*x5455; void*x5456; void*x5457; void*x5458; void*x5459; void*x5460; void*x5461; void*x5462; void*x5463; void*x5464; void*x5465; void*x5466; void*x5467; void*x5468; void*x5469; void*x5470; void*x5471; void*x5472; void*x5473; void*x5474; void*x5475; void*x5476; void*x5477; void*x5478; void*x5479; void*x5480; void*x5481; void*x5482; void*x5483; void*x5484; void*x5485; void*x5486; void*x5487; void*x5488; void*x5489; void*x5490; void*x5491; unsigned short x5492; void*x5493; void*x5494; void*x5495; void*x5496; void*x5497; void*x5498; void*x5499; void*x5500; void*x5501; void*x5502; void*x5503; void*x5504; void*x5505; void*x5506; void*x5507; void*x5508; void*x5509; void*x5510; void*x5511; void*x5512; void*x5513; void*x5514; void*x5515; void*x5516; bycopy BOOL x5517; void*x5518; int x5519; void x5520; void*x5521; void*x5522; int x5523; long x5524; void*x5525; unsigned short x5526; void*x5527; void*x5528; void*x5529; void*x5530; void*x5531; void*x5532; void*x5533; void*x5534; void*x5535; void*x5536; void*x5537; void*x5538; void*x5539; void*x5540; void*x5541; void*x5542; void*x5543; void*x5544; void*x5545; void*x5546; void*x5547; void*x5548; void*x5549; void*x5550; void*x5551; void*x5552; void*x5553; void*x5554; void*x5555; void*x5556; void*x5557; void*x5558; void*x5559; void*x5560; void*x5561; void*x5562; void*x5563; void*x5564; void*x5565; void*x5566; void*x5567; void*x5568; void*x5569; void*x5570; void*x5571; void*x5572; void*x5573; void*x5574; void*x5575; void*x5576; void*x5577; void*x5578; void*x5579; void*x5580; void*x5581; void*x5582; void*x5583; void*x5584; void*x5585; void*x5586; void*x5587; void*x5588; void*x5589; void*x5590; void*x5591; void*x5592; void*x5593; void*x5594; void*x5595; void*x5596; void*x5597; void*x5598; void*x5599; void*x5600; void*x5601; void*x5602; void*x5603; void*x5604; void*x5605; void*x5606; void*x5607; void*x5608; void*x5609; void*x5610; void*x5611; void*x5612; void*x5613; void*x5614; void*x5615; void*x5616; void*x5617; void*x5618; void*x5619; void*x5620; void*x5621; void*x5622; void*x5623; void*x5624; void*x5625; void*x5626; void*x5627; void*x5628; void*x5629; void*x5630; void*x5631; void*x5632; void*x5633; void*x5634; void*x5635; void*x5636; void*x5637; void*x5638; void*x5639; void*x5640; void*x5641; void*x5642; void*x5643; void*x5644; void*x5645; void*x5646; void*x5647; void*x5648; void*x5649; void*x5650; void*x5651; void*x5652; void*x5653; void*x5654; void*x5655; void*x5656; void*x5657; void*x5658; void*x5659; void*x5660; void*x5661; void*x5662; void*x5663; void*x5664; void*x5665; void*x5666; void*x5667; void*x5668; void*x5669; void*x5670; void*x5671; void*x5672; void*x5673; void*x5674; void*x5675; void*x5676; void*x5677; void*x5678; void*x5679; void*x5680; void*x5681; void*x5682; void*x5683; void*x5684; void*x5685; void*x5686; void*x5687; void*x5688; void*x5689; void*x5690; void*x5691; void*x5692; void*x5693; void*x5694; void*x5695; void*x5696; void*x5697; void*x5698; void*x5699; void*x5700; void*x5701; void*x5702; void*x5703; void*x5704; void*x5705; void*x5706; void*x5707; void*x5708; void*x5709; void*x5710; void*x5711; void*x5712; void*x5713; void*x5714; void*x5715; void*x5716; void*x5717; void*x5718; void*x5719; void*x5720; })_web_URLComponents;
- (BOOL)_web_isJavaScriptURL;
- (id)_web_scriptIfJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (id)absoluteString;
- (id)absoluteURL;
- (id)baseURL;
- (BOOL)checkPromisedItemIsReachableAndReturnError:(id*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataRepresentation;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (const char *)fileSystemRepresentation;
- (void)finalize;
- (id)fragment;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned int)arg2;
- (BOOL)getPromisedItemResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (BOOL)hasDirectoryPath;
- (unsigned int)hash;
- (id)host;
- (id)init;
- (id)initAbsoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initByResolvingAliasFileAtURL:(id)arg1 options:(unsigned int)arg2 error:(id*)arg3;
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned int)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(BOOL*)arg4 error:(id*)arg5;
- (id)initFileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isFileURL;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (id)lastPathComponent;
- (id)parameterString;
- (id)password;
- (id)path;
- (id)pathComponents;
- (id)pathExtension;
- (id)port;
- (id)promisedItemResourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (id)query;
- (id)relativePath;
- (id)relativeString;
- (oneway void)release;
- (id)resourceSpecifier;
- (id)retain;
- (unsigned int)retainCount;
- (id)scheme;
- (id)standardizedURL;
- (id)user;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

- (int)_mpUTITypeFromMRUTIType:(unsigned int)arg1;
- (id)mpUniversalTrackIDBaseID;
- (int)mpUniversalTrackIDType;

// Image: /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices

- (id)betaStoreURL;
- (BOOL)conformsToOverridePatternWithKey:(id)arg1;
- (id)facebookURL;
- (id)fmfURL;
- (id)fmipURL;
- (id)gamecenterURL;
- (id)iCloudFamilyURL;
- (id)iCloudSharingURL;
- (id)iCloudSharingURL_noFragment;
- (id)iTunesStoreURL;
- (id)iWorkApplicationName;
- (id)iWorkDocumentName;
- (BOOL)isiWorkURL;
- (id)keynoteLiveURL;
- (id)mapsURL;
- (id)photosURL;
- (id)twitterURL;
- (id)youTubeURL;

// Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// Image: /System/Library/Frameworks/QuickLook.framework/QuickLook

- (id)previewItemURL;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

- (id)sf_appLink;
- (BOOL)sf_isOfflineReadingListURL;
- (BOOL)sf_isWebSearchURL;

// Image: /System/Library/Frameworks/Social.framework/Social

+ (id)SLTwitterAccessTokenURL;
+ (id)SLTwitterAccountGenerateURL;
+ (id)SLTwitterAccountSettingsURL;
+ (id)SLTwitterCleanupPushDestinationsURL;
+ (id)SLTwitterDirectMessageURL;
+ (id)SLTwitterFriendsURL;
+ (id)SLTwitterFriendshipsURL;
+ (id)SLTwitterImageLimitsURL;
+ (id)SLTwitterNearbyPlacesURL;
+ (id)SLTwitterRequestTokenURL;
+ (id)SLTwitterRetweetURLForTweetID:(id)arg1;
+ (id)SLTwitterTCoLengthURL;
+ (id)SLTwitterUpdateMultiPartStatusURL;
+ (id)SLTwitterUpdateStatusURL;
+ (id)SLTwitterUserInfoURL;
+ (id)SLTwitterUsersLookupURL;
+ (id)SLTwitterVerifyCredentialsURL;
+ (id)URLForFacebookGraphAPIWithDomain:(id)arg1 path:(id)arg2;
+ (id)URLForFacebookGraphAPIWithPath:(id)arg1;
+ (id)URLForFacebookPageAtPath:(id)arg1;
+ (id)URLForFacebookRESTMethod:(id)arg1;
+ (BOOL)_isBetaSwitchEnabledForKey:(struct __CFString { }*)arg1;

- (BOOL)isAppStoreURL;
- (BOOL)isAssetURL;
- (BOOL)isMusicStoreURL;
- (BOOL)loadingInUIWebViewWillLaunchAnotherApp;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (id)URLWithDisplayIdentifier:(id)arg1 forSearchResultDomain:(int)arg2 andIdentifier:(unsigned long long)arg3;
+ (id)mapsURLWithQuery:(id)arg1;
+ (id)mapsURLWithSourceAddress:(id)arg1 destinationAddress:(id)arg2;
+ (id)ui_URLFromExportBookmark:(id)arg1;
+ (id)ui_cloudDocsContainerURL;
+ (id)ui_incomingDirectory:(BOOL)arg1;

- (void)_domain:(id*)arg1 subdomain:(id*)arg2;
- (BOOL)_isGoogleMapsDomain:(id)arg1 subdomain:(id)arg2 path:(id)arg3 queryKeysAndValues:(id)arg4;
- (id)appleStoreURL;
- (BOOL)isAccountURL;
- (BOOL)isGoogleMapsURL;
- (BOOL)isHTTPOrHTTPSURL;
- (BOOL)isInternalUIKitURL;
- (BOOL)isJavaScriptURL;
- (BOOL)isSpringboardHandledURL;
- (BOOL)isWebcalURL;
- (id)itmsURL;
- (id)phobosURL;
- (id)radarWebURL;
- (id)searchResultDomain;
- (id)searchResultIdentifier;
- (id)ui_bookmarkForExportWithError:(id*)arg1;
- (BOOL)ui_canOpenInPlace;
- (BOOL)ui_hasReadSandboxExtended;
- (BOOL)ui_hasSandboxExtendedForClass:(const char *)arg1;
- (BOOL)ui_isFileProviderURL;
- (BOOL)ui_isUnfulfilledPromiseURL;
- (id)ui_issueReadSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueReadWriteSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;
- (id)ui_resolveOnDiskBookmarkAndPromise;
- (void)ui_scheduleForCleanup;
- (void)ui_setIsFileProviderURL:(BOOL)arg1;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

+ (id)_web_URLWithWTFString:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg1;
+ (id)_web_URLWithWTFString:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg1 relativeToURL:(id)arg2;

- (struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; })_web_originalDataAsWTFString;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

+ (id)_af_URLWithMessageIdentifier:(id)arg1;

- (id)_af_messageIdentifierValue;
- (BOOL)isAMOSCommittedIdentifier;
- (BOOL)isAMOSIdentifier;

// Image: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI

- (BOOL)afui_hasMapItemScheme;

// Image: /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV

+ (id)URLWithDirtyString:(id)arg1;
+ (id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4;
+ (int)classicPortForScheme:(id)arg1;
+ (id)davCompatibleFilenameForFilename:(id)arg1;
+ (id)iDiskSmallNameCompatibleNameForFilename:(id)arg1;

- (id)URLByRemovingLastPathComponent;
- (id)URLWithUsername:(id)arg1;
- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (id)URLWithoutPassword;
- (id)URLWithoutUsername;
- (BOOL)absoluteURLisEqual:(id)arg1;
- (id)initWithDirtyString:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4;
- (BOOL)isEqualToURL:(id)arg1;
- (id)lastPathComponent;
- (id)pathWithoutDecodingAndRemovingTrailingSlash;
- (id)pathWithoutTrailingRemovingSlash;
- (id)queryParameters;
- (id)serverURL;
- (id)unquotedPassword;
- (id)uri;

// Image: /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation

+ (id)URLWithAddressBookUID:(id)arg1;
+ (id)davCompatibleFilenameForFilename:(id)arg1;

- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (BOOL)compareToLocalString:(id)arg1;
- (BOOL)compareToLocalURL:(id)arg1;
- (id)hostWithoutWWW;
- (id)initWithCalDirtyString:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4;
- (BOOL)isEqualToURL:(id)arg1;
- (BOOL)isEqualToURLIgnoringScheme:(id)arg1;
- (BOOL)isOnRemoteFileSystem;
- (id)lastPathComponent;
- (id)pathDecodedAndWithoutTrailingSlashRemoved;
- (id)pathWithoutTrailingRemovingSlash;
- (id)queryParameters;
- (id)serverURL;
- (id)unquotedPassword;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

+ (id)ckURLForChatIdentifier:(id)arg1 entryBody:(id)arg2;
+ (id)ckURLForResource:(id)arg1 withExtension:(id)arg2;

- (BOOL)ckShouldShowComposeUI;
- (id)ckWillNotLaunchComposeUIURL;

// Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs

+ (void)br_containerIDsWithExternalReferencesTo:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)br_documentURLFromBookmarkableString:(id)arg1 completion:(id /* block */)arg2;
+ (id)brc_fileURLWithFileDescriptor:(int)arg1;
+ (id)brc_fileURLWithVolumeID:(id)arg1 fileID:(id)arg2 isDirectory:(BOOL)arg3;

- (id)br_URLByResolvingExternalDocumentReferenceWithError:(id*)arg1;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 error:(id*)arg3;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 lastEditorUserName:(id)arg3 error:(id*)arg4;
- (void)br_bookmarkableStringForRemoteOpeningAppWithBundleID:(id)arg1 completion:(id /* block */)arg2;
- (void)br_bookmarkableStringWithEtag:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)br_cloudDocsContainer;
- (id)br_containerID;
- (id)br_containerIDForDocumentsContainerURL;
- (void)br_containerIDsWithExternalReferencesWithHandler:(id /* block */)arg1;
- (id)br_debugDescription;
- (BOOL)br_getTagNames:(id*)arg1 error:(id*)arg2;
- (void)br_isConflictedWithHandler:(id /* block */)arg1;
- (BOOL)br_isDocumentsContainer;
- (BOOL)br_isExternalDocumentReference;
- (BOOL)br_isInCloudDocsPrivateStorages;
- (BOOL)br_isInMobileDocuments;
- (BOOL)br_isParentOfURL:(id)arg1;
- (BOOL)br_isParentOfURL:(id)arg1 strictly:(BOOL)arg2;
- (BOOL)br_isStrictlyInMobileDocuments;
- (id)br_lastEditorDeviceName;
- (id)br_lastEditorName;
- (id)br_pathRelativeToMobileDocuments;
- (void)br_preCacheBookmarkData:(id)arg1 versionEtag:(id)arg2;
- (BOOL)br_setTagNames:(id)arg1 error:(id*)arg2;
- (BOOL)br_unresolvedPathIsInLocalVolume;
- (id)brc_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon

- (id)brc_applicationBundleID;
- (id)brc_applicationContainerID;
- (id)brc_attributesValues:(id)arg1 container:(id)arg2 lookup:(id)arg3;
- (id)brc_localizedApplicationName;

// Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary

- (id)initWithCPLArchiver:(id)arg1;
- (id)plistArchiveWithCPLArchiver:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CommunicationsSetupUI.framework/CommunicationsSetupUI

- (id)CNFQueryDictionary;
- (id)URLByAppendingCNFQueryDictionary:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync

+ (id)_SYTemporaryFileURL:(id*)arg1;
+ (id)_SYURLForNewTemporaryFile:(id*)arg1;

// Image: /System/Library/PrivateFrameworks/Conference.framework/Conference

- (BOOL)_isPhoneNumberID:(id)arg1;
- (id)formattedFaceTimeDestinationAccount;

// Image: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV

+ (id)CDVDefaultPortForScheme:(id)arg1;
+ (id)CDVURLWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4;
+ (id)CDVURLWithScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6;

- (id)CDVFileSystemSafePath;
- (BOOL)CDVIsEqualToURL:(id)arg1;
- (BOOL)CDVIsSafeRedirectForRequestURL:(id)arg1;
- (id)CDVPassword;
- (id)CDVRawLastPathComponent;
- (id)CDVRawLastPathComponentPreservingEscapes;
- (id)CDVRawPath;
- (id)CDVServerURL;
- (id)CDVServerURLWithPath:(BOOL)arg1;
- (id)CDVURLByDeletingLastPathComponent;
- (id)CDVURLWithPassword:(id)arg1;
- (id)CDVURLWithPath:(id)arg1;
- (id)CDVURLWithScheme:(id)arg1 userandpass:(id)arg2 host:(id)arg3 port:(id)arg4 path:(id)arg5 parameters:(id)arg6 encodePercents:(BOOL)arg7;
- (id)CDVURLWithUser:(id)arg1;
- (id)CDVfixedURLByAppendingPathComponent:(id)arg1;
- (id)initWithCDVScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 parameterString:(id)arg7 query:(id)arg8 fragment:(id)arg9;

// Image: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess

+ (id)da_URLWithDirtyString:(id)arg1;
+ (id)da_URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4;
+ (id)da_URLWithScheme:(id)arg1 host:(id)arg2 user:(id)arg3 port:(int)arg4 uri:(id)arg5;
+ (int)da_classicPortForScheme:(id)arg1;

- (id)URLByRemovingLastPathComponent;
- (id)URLWithUsername:(id)arg1;
- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (id)URLWithoutUsername;
- (BOOL)da_isEqualToDAVURL:(id)arg1;
- (id)da_leastInfoStringRepresentationRelativeToParentURL:(id)arg1;
- (id)da_pathWithoutTrailingRemovingSlash;
- (id)da_rawPath;
- (id)da_urlByRemovingUsername;
- (id)da_urlBySettingHost:(id)arg1;
- (id)da_urlBySettingHost:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingPath:(id)arg1;
- (id)da_urlBySettingPath:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingPort:(id)arg1;
- (id)da_urlBySettingPort:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingScheme:(id)arg1;
- (id)da_urlBySettingScheme:(id)arg1 keepUsername:(BOOL)arg2;
- (id)da_urlBySettingUsername:(id)arg1;
- (id)uri;

// Image: /System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI

+ (id)dd_URLWithPotentiallyInvalidURLString:(id)arg1;

- (id)dd_emailFromMailtoScheme;
- (id)dd_phoneNumberFromTelScheme;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (BOOL)isPlayImmediatelyURL;
- (BOOL)isShowNowPlayingURL;
- (id)shortcutIdentifier;

// Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation

- (BOOL)_gkIsSecure;
- (BOOL)_gkIsValidServerURL;
- (id)_gkQueryDictionary;
- (id)_gkURLByAddingQueryParameters:(id)arg1;
- (id)_gkURLByReplacingSchemeWithScheme:(id)arg1;
- (id)cacheKeyRepresentation;

// Image: /System/Library/PrivateFrameworks/GenerationalStorage.framework/GenerationalStorage

- (void)chmod:(unsigned short)arg1;
- (id)gs_URLByUpdatingPathExtensionWithPathOrURL:(id)arg1;
- (id)gs_issueExtension:(const char *)arg1 error:(id*)arg2;
- (id)gs_issueReadExtensionIfNeededForPid:(int)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

- (id)_geo_portionAfterHostname;

// Image: /System/Library/PrivateFrameworks/Message.framework/Message

- (id)mf_firstPartNumber;
- (BOOL)mf_isValidAttachmentURL;
- (id)mf_lastPartNumber;
- (id)mf_partNumbers;
- (unsigned int)mf_rowID;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (BOOL)isMapURL;
- (BOOL)isNewsURL;
- (id)queryComponents;
- (id)uniquedURL;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

+ (id)URLWithPackagePart:(id)arg1;
+ (id)sfu_filePathURLWithEscapes:(id)arg1;
+ (id)sfu_improperlyEscapedString:(id)arg1;
+ (id)sfu_properlyEscapedString:(id)arg1;
+ (id)sfu_relativeURLWithEscapes:(id)arg1;

- (id)initWithPackagePart:(id)arg1;
- (BOOL)isInternalToPackage;
- (BOOL)sfu_isRelative;
- (id)tsu_UTI;
- (BOOL)tsu_conformsToUTI:(id)arg1;
- (id)tsu_displayName;
- (id)tsu_documentIdentifier;
- (unsigned long long)tsu_fileSize;
- (BOOL)tsu_isFileSizeTooLargeForSharing;
- (BOOL)tsu_isShared;
- (BOOL)tsu_isSharedWithMe;
- (void)tsu_performSecurityScopedResourceAccessAsynchronouslyUsingBlock:(id /* block */)arg1;
- (void)tsu_performSecurityScopedResourceAccessUsingBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/SafariSafeBrowsing.framework/SafariSafeBrowsing

- (BOOL)ssb_hasUserInfo;
- (BOOL)ssb_isSafeURL;

// Image: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared

+ (id)safari_URLWithDataAsString:(id)arg1;
+ (id)safari_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)safari_URLWithUserTypedString:(id)arg1;
+ (void)safari_enumeratePossibleURLsForUserTypedString:(id)arg1 withBlock:(id /* block */)arg2;
+ (struct _NSRange { unsigned int x1; unsigned int x2; })safari_hostAndPortRangeFromUserTypedString:(id)arg1;

- (id)_safari_URLByReplacingComponent:(long)arg1 includingSeparators:(BOOL)arg2 withString:(id)arg3;
- (id)_safari_URLByReplacingComponent:(long)arg1 withString:(id)arg2;
- (id)safari_URLByDeletingPort;
- (id)safari_URLByReplacingHostWithString:(id)arg1;
- (id)safari_URLByReplacingQueryWithString:(id)arg1;
- (id)safari_URLByReplacingSchemeWithString:(id)arg1;
- (id)safari_canonicalURL;
- (id)safari_displayNameWithTitle:(id)arg1;
- (BOOL)safari_hasCharactersBeyondPath;
- (BOOL)safari_hasScheme:(id)arg1;
- (BOOL)safari_isDataURL;
- (BOOL)safari_isHTTPFamilyURL;
- (id)safari_originalDataAsString;
- (id)safari_path;
- (id)safari_userVisibleHost;
- (id)safari_userVisibleHostWithoutWWWSubdomain;
- (id)safari_userVisibleString;

// Image: /System/Library/PrivateFrameworks/Search.framework/Search

+ (id)sp_URLFromFileID:(id)arg1 filename:(id)arg2 parentFileID:(id)arg3 documentID:(id)arg4;

// Image: /System/Library/PrivateFrameworks/ServerDocsProtocol.framework/ServerDocsProtocol

- (id)URLByReallyResolvingSymlinksInPath;
- (BOOL)sd_containsOrIsItemAtURL:(id)arg1 error:(id*)arg2;
- (BOOL)sd_strictlyContainsItemAtURL:(id)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusFoundation.framework/OpusFoundation

+ (id)_contentModificationDate:(id)arg1;
+ (id)_displayName:(id)arg1;
+ (BOOL)_hasUnresolvedConflict:(id)arg1;
+ (BOOL)_isDownloaded:(id)arg1;
+ (BOOL)_isDownloading:(id)arg1;
+ (BOOL)_isInCloud:(id)arg1;
+ (BOOL)_isUploaded:(id)arg1;
+ (BOOL)_isUploading:(id)arg1;
+ (int)isHostnameReachable:(id)arg1;
+ (id)parseURLParams:(id)arg1;

- (id)contentModificationDate;
- (id)displayName;
- (BOOL)hasUnresolvedConflict;
- (BOOL)isDownloaded;
- (BOOL)isDownloading;
- (BOOL)isInCloud;
- (BOOL)isUploaded;
- (BOOL)isUploading;

// Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices

- (id)copyXPCEncoding;
- (id)initWithXPCEncoding:(id)arg1;
- (BOOL)isStoreServicesURL;

// Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities

+ (id)URLWithTelephoneNumber:(id)arg1;
+ (id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2;
+ (id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)URLWithTelephoneNumber:(id)arg1 promptUser:(BOOL)arg2;
+ (id)_applyFaceTimeScheme:(id)arg1 toFaceTimeURL:(id)arg2;
+ (id)_faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3;
+ (id)faceTimeLaunchForIncomingCallURL;
+ (id)faceTimePromptURLWithURL:(id)arg1;
+ (id)faceTimeShowInCallUIURL;
+ (id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1;
+ (id)faceTimeTelephonyURLWithPhoneNumber:(id)arg1 showPrompt:(BOOL)arg2;
+ (id)faceTimeURLWithDestinationID:(id)arg1;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3;
+ (id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5 audioOnly:(BOOL)arg6;
+ (id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 audioOnly:(BOOL)arg3 forceAssist:(BOOL)arg4 suppressAssist:(BOOL)arg5 wasAssisted:(BOOL)arg6;
+ (id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)faceTimeURLWithURL:(id)arg1;
+ (id)telephonyURLForTelEmergencyCall;
+ (id)telephonyURLForVoicemail;
+ (id)telephonyURLWithDestinationID:(id)arg1;
+ (id)telephonyURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2;
+ (id)telephonyURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 forceAssist:(BOOL)arg3 suppressAssist:(BOOL)arg4 wasAssisted:(BOOL)arg5;
+ (id)telephonyURLWithDestinationID:(id)arg1 promptUser:(BOOL)arg2;

- (id)URLByDeletingQueryParameterWithKey:(id)arg1;
- (id)URLBySettingQueryParameterValue:(id)arg1 forKey:(id)arg2;
- (id)URLWithNewQueryParameterDictionary:(id)arg1;
- (BOOL)_isPhoneNumberID:(id)arg1;
- (id)_mobilePhonePathParameters;
- (id)_mobilePhoneQueryParameters;
- (id)_phoneNumberConvertNumbersToLatin:(BOOL)arg1;
- (int)addressBookUID;
- (int)callService;
- (id)faceTimeDestinationAccount;
- (BOOL)forceAssist;
- (id)formattedPhoneNumber;
- (BOOL)hasNoPromptOption;
- (BOOL)hasTelephonyScheme;
- (BOOL)isBasebandLogURL;
- (BOOL)isDialCallURL;
- (BOOL)isEmergencyCallURL;
- (BOOL)isEmergencyURL;
- (BOOL)isFaceTimeAudioPromptURL;
- (BOOL)isFaceTimeAudioURL;
- (BOOL)isFaceTimePromptURL;
- (BOOL)isFaceTimeURL;
- (BOOL)isLaunchForIncomingCallURL;
- (BOOL)isShowInCallUIURL;
- (BOOL)isTelephonyPromptURL;
- (BOOL)isTelephonyURL;
- (BOOL)isVoicemailURL;
- (BOOL)isWebSafeTelephoneURL;
- (id)numberQualifiedForAddressBook;
- (id)originatingUIIdentifier;
- (id)phoneNumber;
- (id)queryParameters;
- (BOOL)suppressAssist;
- (id)telephonyParameterDictionary;
- (id)tuQueryParameters;
- (BOOL)wasAlreadyAssisted;
- (id)webSafeTelephoneURL;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

- (id)rc_URLByAppendingStringToLastComponentBasename:(id)arg1;
- (id)rc_URLByFixingUpPersistentMediaRecordingsDirectory;
- (id)rc_URLByReplacingPathExtensionWithExtension:(id)arg1;
- (id)rc_URLByStandardizingResolvedPath;

// Image: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks

- (BOOL)_webBookmarks_isHTTPFamilyURL;

// Image: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis

- (BOOL)WF_hostnameIsIPAddress;
- (id)WF_normalizedRelativePath;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (id)_web_URLWithData:(id)arg1;
+ (id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithDataAsString:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithUserTypedString:(id)arg1;
+ (id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_uniqueWebDataURL;
+ (id)uniqueURLWithRelativePart:(id)arg1;

- (id)_web_URLByRemovingUserInfo;
- (const char *)_web_URLCString;
- (id)_web_dataForURLComponentType:(long)arg1;
- (id)_web_hostData;
- (id)_web_hostString;
- (BOOL)_web_isEmpty;
- (id)_web_originalData;
- (id)_web_originalDataAsString;
- (id)_web_schemeData;
- (id)_web_schemeSeparatorWithoutColon;
- (id)_web_userVisibleString;
- (id)_webkit_URLByRemovingFragment;
- (id)_webkit_URLFromURLOrSchemelessFileURL;
- (id)_webkit_canonicalize;
- (BOOL)_webkit_isFileURL;
- (BOOL)_webkit_isJavaScriptURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (id)_webkit_suggestedFilenameWithMIMEType:(id)arg1;

// Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI

- (BOOL)isStoreServicesURL;

// Image: /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar

- (void)_ICSStringWithOptions:(unsigned int)arg1 appendingToString:(id)arg2;

// Image: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore

+ (id)_URLQueryParameterValueAllowedCharacterSet;
+ (id)copyDictionaryForQueryString:(id)arg1 unescapedValues:(BOOL)arg2;
+ (id)escapedStringForString:(id)arg1;
+ (id)queryStringForDictionary:(id)arg1 escapedValues:(BOOL)arg2;
+ (id)unescapedStringForString:(id)arg1;

- (id)URLByAppendingQueryParameter:(id)arg1 value:(id)arg2;
- (id)copyQueryStringDictionaryWithUnescapedValues:(BOOL)arg1;
- (void)enumerateQueryWithBlock:(id /* block */)arg1;
- (BOOL)isSafeExternalURL;
- (id)sanitizedURL;
- (id)schemeSwizzledURL;
- (id)urlByReplacingSchemeWithScheme:(id)arg1;
- (id)urlBySettingQueryStringDictionary:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

+ (id)termsAndConditionsURL;

- (int)storeURLType;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

+ (BOOL)canHandleDownloadTask:(id)arg1;
+ (void)downloadManager:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
+ (BOOL)downloadManager:(id)arg1 task:(id)arg2 didFinishDownloadingToURL:(id)arg3 error:(id*)arg4;
+ (id)sfu_filePathURLWithEscapes:(id)arg1;
+ (id)sfu_improperlyEscapedString:(id)arg1;
+ (id)sfu_properlyEscapedString:(id)arg1;
+ (id)sfu_relativeURLWithEscapes:(id)arg1;

- (id)downloadTaskDescription;
- (id)downloadURL;
- (BOOL)sfu_isRelative;
- (long long)totalBytesExpectedToBeDownloaded;
- (id)tsp_URLExceptPrivate;
- (id)tsp_embeddedUTI;
- (BOOL)tsp_getIsUbiquitousValue:(BOOL*)arg1 error:(id*)arg2;
- (BOOL)tsp_isAssetsLibraryURL;
- (BOOL)tsp_isEqualToURLExceptPrivate:(id)arg1;
- (BOOL)tsp_isIWorkAVAssetURL;
- (BOOL)tsp_isOnNonHFSVolume;
- (BOOL)tsp_isUbiquitous;
- (BOOL)tsp_matchesURL:(id)arg1;
- (id)tsp_pathExceptPrivate;
- (id)tsu_UTI;
- (BOOL)tsu_conformsToUTI:(id)arg1;
- (id)tsu_displayName;
- (id)tsu_documentIdentifier;
- (unsigned long long)tsu_fileSize;
- (BOOL)tsu_isDocumentUploaded;
- (BOOL)tsu_isFileSizeTooLargeForSharing;
- (BOOL)tsu_isShared;
- (BOOL)tsu_isSharedWithMe;
- (void)tsu_performSecurityScopedResourceAccessAsynchronouslyUsingBlock:(id /* block */)arg1;
- (void)tsu_performSecurityScopedResourceAccessUsingBlock:(id /* block */)arg1;

// Image: /usr/lib/libprequelite.dylib

+ (id)newFromSqliteValue:(struct Mem { }*)arg1;

- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;

@end
