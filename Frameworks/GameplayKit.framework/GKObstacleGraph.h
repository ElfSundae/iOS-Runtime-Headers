/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameplayKit.framework/GameplayKit
 */

@interface GKObstacleGraph : GKGraph {
    float _bufferRadius;
    struct GKCObstacleGraph { int (**x1)(); struct vector<GKCGraphNode *, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_2_1_1; struct GKCGraphNode {} **x_2_1_2; struct __compressed_pair<GKCGraphNode **, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_3_2_1; } x_2_1_3; } x2; id x3; void x4; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x5; BOOL x6; void*x7; out const void*x8; void*x9; void*x10; unsigned char x11; void*x12; out long x13; void*x14; void*x15; out in bycopy unsigned int x16/* : ? */; short x17; void*x18; void*x19; BOOL x20; long x21; void*x22; void*x23; char *x24; void*x25; void*x26; short x27; void*x28; double x29; SEL x30; SEL x31; void*x32; void*x33; void*x34; SEL x35; SEL x36; void*x37; long x38; long x39; out BOOL x40; void*x41; void*x42; out const void*x43; void*x44; void*x45; unsigned char x46; void*x47; out long x48; void*x49; void*x50; out in bycopy unsigned int x51/* : ? */; short x52; void*x53; void*x54; BOOL x55; long x56; void*x57; void*x58; char *x59; void*x60; void*x61; void*x62; void*x63; struct GKCPolygonObstacle {} **x64; struct GKCPolygonObstacle {} **x65; struct __compressed_pair<GKCPolygonObstacle **, std::__1::allocator<GKCPolygonObstacle *> > { struct GKCPolygonObstacle {} **x_66_1_1; } x66; } *_cObstacleGraph;
    NSMutableArray *_sourceObstacles;
}

@property (nonatomic, readonly) float bufferRadius;
@property (nonatomic, readonly) NSArray *obstacles;

+ (id)graphWithObstacles:(id)arg1 bufferRadius:(float)arg2;

- (void).cxx_destruct;
- (void)addObstacles:(id)arg1;
- (float)bufferRadius;
- (struct GKCObstacleGraph { int (**x1)(); struct vector<GKCGraphNode *, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_2_1_1; struct GKCGraphNode {} **x_2_1_2; struct __compressed_pair<GKCGraphNode **, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_3_2_1; } x_2_1_3; } x2; id x3; void x4; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x5; BOOL x6; void*x7; out const void*x8; void*x9; void*x10; unsigned char x11; void*x12; out long x13; void*x14; void*x15; out in bycopy unsigned int x16/* : ? */; short x17; void*x18; void*x19; BOOL x20; long x21; void*x22; void*x23; char *x24; void*x25; void*x26; short x27; void*x28; double x29; SEL x30; SEL x31; void*x32; void*x33; void*x34; SEL x35; SEL x36; void*x37; long x38; long x39; out BOOL x40; void*x41; void*x42; out const void*x43; void*x44; void*x45; unsigned char x46; void*x47; out long x48; void*x49; void*x50; out in bycopy unsigned int x51/* : ? */; short x52; void*x53; void*x54; BOOL x55; long x56; void*x57; void*x58; char *x59; void*x60; void*x61; void*x62; void*x63; struct GKCPolygonObstacle {} **x64; struct GKCPolygonObstacle {} **x65; struct __compressed_pair<GKCPolygonObstacle **, std::__1::allocator<GKCPolygonObstacle *> > { struct GKCPolygonObstacle {} **x_66_1_1; } x66; }*)cObstacleGraph;
- (void)connectNodeUsingObstacles:(id)arg1;
- (void)connectNodeUsingObstacles:(id)arg1 ignoringBufferRadiusOfObstacles:(id)arg2;
- (void)connectNodeUsingObstacles:(id)arg1 ignoringObstacles:(id)arg2;
- (id)initWithObstacles:(id)arg1 bufferRadius:(float)arg2;
- (BOOL)isConnectionLockedFromNode:(id)arg1 toNode:(id)arg2;
- (void)lockConnectionFromNode:(id)arg1 toNode:(id)arg2;
- (struct GKCGraph { int (**x1)(); struct vector<GKCGraphNode *, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_2_1_1; struct GKCGraphNode {} **x_2_1_2; struct __compressed_pair<GKCGraphNode **, std::__1::allocator<GKCGraphNode *> > { struct GKCGraphNode {} **x_3_2_1; } x_2_1_3; } x2; id x3; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; long doublex27; unsigned char x28; out double x29; void*x30; unsigned int x31/* : ? */; long x32; void*x33; void*x34; out const void*x35; out void*x36; void*x37; void*x38; void x39; void*x40; in void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; unsigned short x86; unsigned short x87; long x88; unsigned int x89/* : ? */; void*x90; void*x91; unsigned char x92; void*x93; void*x94; in void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; const void*x117; void*x118; void*x119; short x120; void*x121; short x122; void*x123; void*x124; void*x125; double x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; int x134; void*x135; const void*x136; void*x137; void*x138; short x139; void*x140; void*x141; void*x142; double x143; void*x144; SEL x145; void*x146; SEL x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; SEL x155; void*x156; SEL x157; void*x158; void x159; void*x160; void*x161; void*x162; BOOL x163; void*x164; void*x165; void*x166; out void*x167; const void*x168; void*x169; void*x170; int x171; void*x172; in void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; short x180; void*x181; void*x182; void*x183; double x184; void*x185; SEL x186; void*x187; SEL x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; SEL x196; void*x197; SEL x198; void*x199; void*x200; void*x201; long x202; void*x203; long x204; void*x205; out void*x206; BOOL x207; void*x208; void*x209; void*x210; void*x211; void*x212; out void*x213; const void*x214; void*x215; void*x216; int x217; void*x218; in void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; char *x230; void*x231; void*x232; void*x233; void*x234; void*x235; short x236; void*x237; void*x238; void*x239; double x240; void*x241; SEL x242; void*x243; SEL x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; SEL x252; void*x253; SEL x254; void*x255; void*x256; void*x257; long x258; void*x259; long x260; void*x261; out void*x262; BOOL x263; void*x264; void*x265; void*x266; void*x267; void*x268; out void*x269; const void*x270; void*x271; void*x272; short x273; void*x274; void*x275; void*x276; double x277; void*x278; SEL x279; void*x280; SEL x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; SEL x289; void*x290; SEL x291; void*x292; void x293; void*x294; void*x295; void*x296; BOOL x297; void*x298; void*x299; void*x300; out void*x301; const void*x302; void*x303; void*x304; int x305; void*x306; in void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; short x314; void*x315; void*x316; void*x317; double x318; void*x319; SEL x320; void*x321; SEL x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; SEL x330; void*x331; SEL x332; void*x333; void*x334; void*x335; long x336; void*x337; long x338; void*x339; out void*x340; BOOL x341; void*x342; void*x343; void*x344; void*x345; void*x346; out void*x347; const void*x348; void*x349; void*x350; int x351; void*x352; in void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; struct x372; void*x373; void*x374; void*x375; short x376; void*x377; void*x378; void*x379; const void*x380; void*x381; void*x382; BOOL x383; void*x384; void*x385; void*x386; void*x387; void*x388; void x389; void*x390; void*x391; void*x392; BOOL x393; void*x394; void*x395; void*x396; out void*x397; const void*x398; void*x399; void*x400; int x401; void*x402; in void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; short x410; void*x411; void*x412; void*x413; double x414; void*x415; SEL x416; void*x417; SEL x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; SEL x426; void*x427; SEL x428; void*x429; void*x430; void*x431; long x432; void*x433; long x434; void*x435; out void*x436; BOOL x437; void*x438; void*x439; void*x440; void*x441; void*x442; out void*x443; const void*x444; void*x445; void*x446; int x447; void*x448; in void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; struct x460; void*x461; }*)makeCGraph;
- (id)mutObstacles;
- (id)nodesForObstacle:(id)arg1;
- (id)obstacles;
- (void)removeAllObstacles;
- (void)removeObstacles:(id)arg1;
- (void)unlockConnectionFromNode:(id)arg1 toNode:(id)arg2;

@end
