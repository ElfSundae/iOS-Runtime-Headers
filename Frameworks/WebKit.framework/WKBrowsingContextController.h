/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKBrowsingContextController : NSObject {
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<id<WKBrowsingContextHistoryDelegate> >="m_weakReference"@}' */ struct WeakObjCPtr<id<WKBrowsingContextHistoryDelegate> > { 
        id m_weakReference; 
    }  _historyDelegate;
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<id<WKBrowsingContextLoadDelegate> >="m_weakReference"@}' */ struct WeakObjCPtr<id<WKBrowsingContextLoadDelegate> > { 
        id m_weakReference; 
    }  _loadDelegate;
    struct RefPtr<WebKit::WebPageProxy> { 
        struct WebPageProxy {} *m_ptr; 
    }  _page;
    struct unique_ptr<WebKit::PageLoadStateObserver, std::__1::default_delete<WebKit::PageLoadStateObserver> > { 
        struct __compressed_pair<WebKit::PageLoadStateObserver *, std::__1::default_delete<WebKit::PageLoadStateObserver> > { 
            struct PageLoadStateObserver {} *__first_; 
        } __ptr_; 
    }  _pageLoadStateObserver;
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<id<WKBrowsingContextPolicyDelegate> >="m_weakReference"@}' */ struct WeakObjCPtr<id<WKBrowsingContextPolicyDelegate> > { 
        id m_weakReference; 
    }  _policyDelegate;
}

@property (readonly) struct OpaqueWKPage { }*_pageRef;
@property (nonatomic, readonly) _WKRemoteObjectRegistry *_remoteObjectRegistry;
@property (readonly) NSURL *activeURL;
@property (copy) NSString *applicationNameForUserAgent;
@property (readonly) WKBackForwardList *backForwardList;
@property (readonly) BOOL canGoBack;
@property (readonly) BOOL canGoForward;
@property (readonly) NSArray *certificateChain;
@property (readonly) NSURL *committedURL;
@property (copy) NSString *customUserAgent;
@property (readonly) double estimatedProgress;
@property float gapBetweenPages;
@property (nonatomic, readonly) WKBrowsingContextHandle *handle;
@property (readonly) BOOL hasOnlySecureContent;
@property <WKBrowsingContextHistoryDelegate> *historyDelegate;
@property <WKBrowsingContextLoadDelegate> *loadDelegate;
@property (getter=isLoading, readonly) BOOL loading;
@property (readonly) unsigned int pageCount;
@property float pageLength;
@property float pageZoom;
@property BOOL paginationBehavesLikeColumns;
@property BOOL paginationLineGridEnabled;
@property unsigned int paginationMode;
@property <WKBrowsingContextPolicyDelegate> *policyDelegate;
@property (nonatomic, readonly) int processIdentifier;
@property (readonly) NSURL *provisionalURL;
@property float textZoom;
@property (readonly) NSString *title;
@property (readonly) NSURL *unreachableURL;

+ (id)_browsingContextControllerForPageRef:(struct OpaqueWKPage { }*)arg1;
+ (id)customSchemes;
+ (void)registerSchemeForCustomProtocol:(id)arg1;
+ (void)unregisterSchemeForCustomProtocol:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_initWithPageRef:(struct OpaqueWKPage { }*)arg1;
- (struct OpaqueWKPage { }*)_pageRef;
- (id)_remoteObjectRegistry;
- (BOOL)_webProcessIsResponsive;
- (id)activeURL;
- (id)applicationNameForUserAgent;
- (id)backForwardList;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (id)certificateChain;
- (id)committedURL;
- (id)customUserAgent;
- (void)dealloc;
- (double)estimatedProgress;
- (float)gapBetweenPages;
- (void)goBack;
- (void)goForward;
- (void)goToBackForwardListItem:(id)arg1;
- (id)handle;
- (BOOL)hasOnlySecureContent;
- (id)historyDelegate;
- (BOOL)isLoading;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 userData:(id)arg5;
- (id)loadDelegate;
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2;
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2 userData:(id)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 userData:(id)arg3;
- (void)loadRequest:(id)arg1;
- (void)loadRequest:(id)arg1 userData:(id)arg2;
- (unsigned int)pageCount;
- (float)pageLength;
- (float)pageZoom;
- (BOOL)paginationBehavesLikeColumns;
- (BOOL)paginationLineGridEnabled;
- (unsigned int)paginationMode;
- (id)policyDelegate;
- (int)processIdentifier;
- (id)provisionalURL;
- (void)reload;
- (void)reloadFromOrigin;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)setCustomUserAgent:(id)arg1;
- (void)setGapBetweenPages:(float)arg1;
- (void)setHistoryDelegate:(id)arg1;
- (void)setLoadDelegate:(id)arg1;
- (void)setPageLength:(float)arg1;
- (void)setPageZoom:(float)arg1;
- (void)setPaginationBehavesLikeColumns:(BOOL)arg1;
- (void)setPaginationLineGridEnabled:(BOOL)arg1;
- (void)setPaginationMode:(unsigned int)arg1;
- (void)setPolicyDelegate:(id)arg1;
- (void)setTextZoom:(float)arg1;
- (void)stopLoading;
- (float)textZoom;
- (id)title;
- (id)unreachableURL;

@end
