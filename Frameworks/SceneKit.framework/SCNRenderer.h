/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNRenderer : NSObject <SCNSceneRenderer, SCNTechniqueSupport> {
    unsigned int  __antialiasingMode;
    double  __nextFrameTime;
    NSObject<OS_dispatch_queue> * __renderingQueue;
    struct SCNVector4 { 
        float x; 
        float y; 
        float z; 
        float w; 
    }  __viewport;
    unsigned int  _adaptativeEndFrame;
    unsigned int  _adaptativeState0;
    unsigned int  _adaptativeTechniqueTimeStamp;
    UIColor * _backgroundColor;
    struct C3DColor4 { 
        union { 
            float rgba[4]; 
            struct { 
                float r; 
                float g; 
                float b; 
                float a; 
            } ; 
        } ; 
    }  _c3dBackgroundColor;
    double  _currentSceneTime;
    double  _currentSystemTime;
    id  _delegate;
    unsigned int  _delegateSupportsDidApplyAnimations;
    unsigned int  _delegateSupportsDidRender;
    unsigned int  _delegateSupportsDidSimulatePhysics;
    unsigned int  _delegateSupportsUpdate;
    unsigned int  _delegateSupportsWillRender;
    double  _deltaTime;
    BOOL  _disableOverlays;
    struct __C3DEngineContext { } * _engineContext;
    double  _forceSystemTime;
    struct { 
        struct __C3DFramebuffer {} *frameBuffer; 
        struct __C3DFramebuffer {} *multisamplingFrameBuffer; 
        struct CGSize { 
            float width; 
            float height; 
        } drawableSize; 
    }  _framebufferInfo;
    unsigned int  _frozen;
    EAGLContext * _glContext;
    BOOL  _isAnimating;
    unsigned int  _isPrivateRenderer;
    BOOL  _isRunningInExtension;
    unsigned int  _isViewPrivateRenderer;
    unsigned int  _jitteringEnabled;
    double  _lastSystemTime;
    NSLock * _lock;
    BOOL  _loops;
    <MTLTexture> * _mtlTexture;
    __SKSCNRenderer * _overlayRenderer;
    id  _overlayScene;
    BOOL  _playing;
    SCNNode * _pointOfView;
    unsigned int  _pointOfViewWasSet;
    SCNRenderer * _preloadRenderer;
    <SCNSceneRenderer> * _privateRendererOwner;
    <SCNRenderContext> * _renderContext;
    unsigned int  _renderingAPI;
    unsigned int  _renderingSnapshot;
    SCNScene * _scene;
    unsigned int  _shouldDeleteFramebuffer;
    BOOL  _showStatistics;
    SCNRenderer * _snapshotRenderer;
    double  _statisticsTimeStamp;
    SCNTechnique * _technique;
    SCNRendererTransitionContext * _transitionContext;
}

@property (nonatomic, readonly) AVAudioEngine *audioEngine;
@property (nonatomic, readonly) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (nonatomic, retain) SCNNode *audioListener;
@property (nonatomic) BOOL autoenablesDefaultLighting;
@property (nonatomic, readonly) unsigned int colorPixelFormat;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (nonatomic, readonly) void*context;
@property (nonatomic, readonly) <MTLRenderCommandEncoder> *currentRenderCommandEncoder;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned int debugOptions;
@property (nonatomic) <SCNSceneRendererDelegate> *delegate;
@property (nonatomic, readonly) unsigned int depthPixelFormat;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (readonly) unsigned int hash;
@property (getter=isJitteringEnabled, nonatomic) BOOL jitteringEnabled;
@property (nonatomic) BOOL loops;
@property (nonatomic, readonly) double nextFrameTime;
@property (nonatomic, retain) SKScene *overlaySKScene;
@property (getter=isPlaying) BOOL playing;
@property (nonatomic, retain) SCNNode *pointOfView;
@property (nonatomic, readonly) unsigned int renderingAPI;
@property (nonatomic, retain) SCNScene *scene;
@property (nonatomic) double sceneTime;
@property (nonatomic) BOOL showsStatistics;
@property (nonatomic, readonly) unsigned int stencilPixelFormat;
@property (readonly) Class superclass;
@property (nonatomic, copy) SCNTechnique *technique;

+ (id)rendererWithContext:(id)arg1 options:(id)arg2;
+ (id)rendererWithDevice:(id)arg1 options:(id)arg2;

- (id)MTLTexture;
- (const void*)__CFObject;
- (unsigned int)_antialiasingMode;
- (void)_attachTexture:(id)arg1;
- (id)_authoringEnvironment;
- (void)_beginFrame;
- (void)_clearBuffers;
- (double)_computeNextFrameTime;
- (float)_contentsScaleFactor;
- (id)_copyPerformanceStatistics;
- (void)_createOffscreenFramebufferIfNeeded;
- (id)_defaultPOVForScene:(id)arg1;
- (void)_deleteGLFramebuffer;
- (void)_detachTexture:(id)arg1;
- (void)_didRenderScene:(id)arg1;
- (void)_displayLinkStatsTack;
- (void)_displayLinkStatsTick;
- (void)_draw;
- (void)_drawAtTime:(double)arg1;
- (void)_drawOverlaySceneAtTime:(double)arg1;
- (void)_drawScene:(struct __C3DScene { }*)arg1;
- (BOOL)_drawSceneWithLegacyRenderer:(struct __C3DScene { }*)arg1;
- (BOOL)_drawSceneWithNewRenderer:(struct __C3DScene { }*)arg1;
- (void)_drawWithJitteringPresentationMode;
- (BOOL)_enablesDeferredShading;
- (void)_endFrame;
- (struct __C3DEngineContext { }*)_engineContext;
- (id)_hitTest:(struct CGPoint { float x1; float x2; })arg1 viewport:(struct CGSize { float x1; float x2; })arg2 options:(id)arg3;
- (id)_initWithOptions:(id)arg1 isPrivateRenderer:(BOOL)arg2 privateRendererOwner:(id)arg3 clearsOnDraw:(BOOL)arg4 context:(void*)arg5 renderingAPI:(unsigned int)arg6;
- (BOOL)_installContext;
- (void)_installGLContextAndSetViewport;
- (void)_installViewport;
- (void)_invalidateFramebuffer;
- (BOOL)_isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2 viewport:(struct CGSize { float x1; float x2; })arg3;
- (void)_jitterAtStep:(unsigned int)arg1 updateMainFramebuffer:(BOOL)arg2 redisplay:(BOOL)arg3 jitterer:(id)arg4;
- (BOOL)_needsRepetitiveRedraw;
- (double)_nextFrameTime;
- (id)_nodesInsideFrustumWithPointOfView:(id)arg1 viewport:(struct CGSize { float x1; float x2; })arg2;
- (void)_pause;
- (void)_play;
- (BOOL)_preloadResource:(id)arg1 abortHandler:(id /* block */)arg2;
- (void)_prepareForTransition:(id)arg1 outgoingScene:(id)arg2 outgoingPointOfView:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_prepareFrame:(BOOL)arg1;
- (void)_prepareGLRenderTarget;
- (BOOL)_prepareObject:(id)arg1 shouldAbortBlock:(id /* block */)arg2;
- (BOOL)_preparePreloadRenderer;
- (void)_prepareRenderTarget;
- (id)_prepareSKRenderer;
- (void)_presentFramebuffer;
- (struct SCNVector3 { float x1; float x2; float x3; })_projectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 viewport:(struct CGSize { float x1; float x2; })arg2;
- (void)_projectPoints:(struct SCNVector3 { float x1; float x2; float x3; }*)arg1 count:(unsigned int)arg2 viewport:(struct CGSize { float x1; float x2; })arg3;
- (void)_releasePreloadRenderer;
- (void)_renderAtTime:(double)arg1;
- (void)_renderAtTime:(double)arg1 viewport:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 encoder:(id)arg3 passDescriptor:(id)arg4 commandQueue:(id)arg5 commandBuffer:(id)arg6;
- (id)_renderContextMetal;
- (void)_renderSceneWithEngineContext:(struct __C3DEngineContext { }*)arg1 sceneTime:(double)arg2;
- (struct __C3DRendererContext { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; long x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; float x7; unsigned int x8; struct __C3DTexture {} *x9; struct __C3DStack {} *x10; void *x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned long x17; struct __CFDictionary {} *x18; struct __CFDictionary {} *x19; struct __CFDictionary {} *x20; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_21_1_1; } x21; void *x22; int x23; struct __C3DFXProgramObject {} *x24; struct __C3DEngineStats { unsigned int x_25_1_1; unsigned int x_25_1_2; unsigned int x_25_1_3; unsigned int x_25_1_4; unsigned int x_25_1_5; unsigned int x_25_1_6; unsigned int x_25_1_7; unsigned int x_25_1_8; unsigned int x_25_1_9; unsigned int x_25_1_10; unsigned int x_25_1_11; unsigned int x_25_1_12; unsigned int x_25_1_13; unsigned int x_25_1_14; unsigned int x_25_1_15; unsigned int x_25_1_16; unsigned int x_25_1_17; unsigned int x_25_1_18; unsigned int x_25_1_19; unsigned int x_25_1_20; unsigned int x_25_1_21; unsigned int x_25_1_22; unsigned int x_25_1_23; unsigned int x_25_1_24; double x_25_1_25; double x_25_1_26; double x_25_1_27; double x_25_1_28; double x_25_1_29; double x_25_1_30; double x_25_1_31; double x_25_1_32; double x_25_1_33; double x_25_1_34; double x_25_1_35; double x_25_1_36; double x_25_1_37; double x_25_1_38; unsigned int x_25_1_39; unsigned int x_25_1_40; unsigned int x_25_1_41; unsigned int x_25_1_42; unsigned int x_25_1_43; unsigned int x_25_1_44; unsigned int x_25_1_45; unsigned int x_25_1_46; unsigned int x_25_1_47; } x25; }*)_rendererContext;
- (id)_renderingQueue;
- (void)_resolveAndDiscardGL;
- (void)_runningInExtension;
- (unsigned int)_sampleCount;
- (void)_setBackingSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setSceneTime:(double)arg1;
- (void)_setupOffscreenRendererWithSize:(struct CGSize { float x1; float x2; })arg1;
- (id)_setupSKRendererIfNeeded;
- (BOOL)_showsAuthoringEnvironment;
- (void)_stop;
- (double)_systemTime;
- (struct SCNVector3 { float x1; float x2; float x3; })_unprojectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 viewport:(struct CGSize { float x1; float x2; })arg2;
- (void)_update:(struct __C3DScene { }*)arg1 rendererContext:(struct __C3DRendererContext { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; long x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; float x7; unsigned int x8; struct __C3DTexture {} *x9; struct __C3DStack {} *x10; void *x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned long x17; struct __CFDictionary {} *x18; struct __CFDictionary {} *x19; struct __CFDictionary {} *x20; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_21_1_1; } x21; void *x22; int x23; struct __C3DFXProgramObject {} *x24; struct __C3DEngineStats { unsigned int x_25_1_1; unsigned int x_25_1_2; unsigned int x_25_1_3; unsigned int x_25_1_4; unsigned int x_25_1_5; unsigned int x_25_1_6; unsigned int x_25_1_7; unsigned int x_25_1_8; unsigned int x_25_1_9; unsigned int x_25_1_10; unsigned int x_25_1_11; unsigned int x_25_1_12; unsigned int x_25_1_13; unsigned int x_25_1_14; unsigned int x_25_1_15; unsigned int x_25_1_16; unsigned int x_25_1_17; unsigned int x_25_1_18; unsigned int x_25_1_19; unsigned int x_25_1_20; unsigned int x_25_1_21; unsigned int x_25_1_22; unsigned int x_25_1_23; unsigned int x_25_1_24; double x_25_1_25; double x_25_1_26; double x_25_1_27; double x_25_1_28; double x_25_1_29; double x_25_1_30; double x_25_1_31; double x_25_1_32; double x_25_1_33; double x_25_1_34; double x_25_1_35; double x_25_1_36; double x_25_1_37; double x_25_1_38; unsigned int x_25_1_39; unsigned int x_25_1_40; unsigned int x_25_1_41; unsigned int x_25_1_42; unsigned int x_25_1_43; unsigned int x_25_1_44; unsigned int x_25_1_45; unsigned int x_25_1_46; unsigned int x_25_1_47; } x25; }*)arg2;
- (void)_updateEngineCallbacks;
- (void)_updatePointOfView;
- (void)_updateProbes:(id)arg1 withProgress:(id)arg2;
- (void)_updateSystemTimeAndDeltaTimeWithCurrentTime:(double)arg1;
- (void)_updateWithSystemTime:(double)arg1;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })_viewport;
- (void)_willRenderScene:(id)arg1;
- (id)audioEngine;
- (id)audioEnvironmentNode;
- (id)audioListener;
- (BOOL)autoAdjustCamera;
- (BOOL)autoenablesDefaultLighting;
- (id)backgroundColor;
- (unsigned int)colorPixelFormat;
- (id)commandQueue;
- (void*)context;
- (struct CGImage { }*)copySnapshotWithSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGImage { }*)createSnapshot:(double)arg1;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (double)currentTime;
- (void)dealloc;
- (unsigned int)debugOptions;
- (id)delegate;
- (unsigned int)depthPixelFormat;
- (id)description;
- (id)device;
- (BOOL)disableOverlays;
- (BOOL)frozen;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 options:(id)arg2;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 options:(id)arg3;
- (id)init;
- (id)initOffscreenRendererWithSize:(struct CGSize { float x1; float x2; })arg1 options:(id)arg2;
- (BOOL)isJitteringEnabled;
- (BOOL)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;
- (BOOL)isPlaying;
- (BOOL)jitteringEnabled;
- (void)lock;
- (BOOL)loops;
- (id)metalDevice;
- (id)metalLayer;
- (double)nextFrameTime;
- (id)nodesInsideFrustumWithPointOfView:(id)arg1;
- (id)overlaySKScene;
- (id)pointOfView;
- (BOOL)prepareObject:(id)arg1 shouldAbortBlock:(id /* block */)arg2;
- (void)prepareObjects:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)presentScene:(id)arg1 withTransition:(id)arg2 incomingPointOfView:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)programWithNode:(id)arg1 withMaterial:(id)arg2;
- (struct SCNVector3 { float x1; float x2; float x3; })projectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)render;
- (void)renderAtTime:(double)arg1;
- (void)renderAtTime:(double)arg1 viewport:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 commandBuffer:(id)arg3 passDescriptor:(id)arg4;
- (void)renderAtTime:(double)arg1 viewport:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 encoder:(id)arg3 passDescriptor:(id)arg4 commandQueue:(id)arg5;
- (unsigned int)renderingAPI;
- (id)scene;
- (double)sceneTime;
- (void)setAudioListener:(id)arg1;
- (void)setAutoAdjustCamera:(BOOL)arg1;
- (void)setAutoenablesDefaultLighting:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDebugOptions:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableOverlays:(BOOL)arg1;
- (void)setFrozen:(BOOL)arg1;
- (void)setJitteringEnabled:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setOverlaySKScene:(id)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setScene:(id)arg1;
- (void)setScene:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setSceneTime:(double)arg1;
- (void)setShowsStatistics:(BOOL)arg1;
- (void)setTechnique:(id)arg1;
- (void)set_antialiasingMode:(unsigned int)arg1;
- (void)set_deltaTime:(double)arg1;
- (void)set_enablesDeferredShading:(BOOL)arg1;
- (void)set_nextFrameTime:(double)arg1;
- (void)set_showsAuthoringEnvironment:(BOOL)arg1;
- (void)set_systemTime:(double)arg1;
- (void)set_viewport:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (BOOL)showsStatistics;
- (id)snapshotAtTime:(double)arg1;
- (id)snapshotAtTime:(double)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 antialiasingMode:(unsigned int)arg3;
- (id)snapshotRendererWithSize:(struct CGSize { float x1; float x2; })arg1;
- (unsigned int)stencilPixelFormat;
- (id)technique;
- (void)unlock;
- (struct SCNVector3 { float x1; float x2; float x3; })unprojectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)updateAndDrawStatisticsIfNeeded;
- (void)updateCurrentTimeIfPlayingWithSystemTime:(double)arg1;
- (void)updateProbes:(id)arg1 atTime:(double)arg2;

@end
