/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNMetalLayer : CAMetalLayer <SCNSceneRenderer, SCNTechniqueSupport> {
    SCNDisplayLink * _displayLink;
    BOOL  _drawForJittering;
    SCNJitterer * _jitterer;
    double  _lastRenderedTime;
    double  _lastUpdate;
    int  _preferredFramePerSeconds;
    SCNRenderer * _renderer;
    BOOL  _rendersIntoMaterial;
    SCNScene * _scene;
    BOOL  _syncTimeWithCoreAnimation;
}

@property (nonatomic) unsigned int antialiasingMode;
@property (nonatomic, readonly) AVAudioEngine *audioEngine;
@property (nonatomic, readonly) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (nonatomic, retain) SCNNode *audioListener;
@property (nonatomic) BOOL autoenablesDefaultLighting;
@property (nonatomic, readonly) unsigned int colorPixelFormat;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (nonatomic, readonly) void*context;
@property (nonatomic, readonly) <MTLRenderCommandEncoder> *currentRenderCommandEncoder;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned int debugOptions;
@property (nonatomic) <SCNSceneRendererDelegate> *delegate;
@property (nonatomic, readonly) unsigned int depthPixelFormat;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (readonly) unsigned int hash;
@property (getter=isJitteringEnabled, nonatomic) BOOL jitteringEnabled;
@property (nonatomic) BOOL loops;
@property (nonatomic, retain) SKScene *overlaySKScene;
@property (getter=isPlaying) BOOL playing;
@property (nonatomic, retain) SCNNode *pointOfView;
@property (nonatomic, readonly) unsigned int renderingAPI;
@property (nonatomic, retain) SCNScene *scene;
@property (nonatomic) double sceneTime;
@property (nonatomic) BOOL showsStatistics;
@property (nonatomic, readonly) unsigned int stencilPixelFormat;
@property (readonly) Class superclass;
@property (nonatomic) BOOL syncTimeWithCoreAnimation;
@property (nonatomic, copy) SCNTechnique *technique;

+ (id)_kvoKeysForwardedToRenderer;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;

- (void)SCN_displayLinkCallback:(double)arg1;
- (id)_authoringEnvironment;
- (BOOL)_canJitter;
- (void)_cancelJitterRedisplay;
- (BOOL)_checkAndUpdateDisplayLinkStateIfNeeded;
- (void)_drawAtTime:(double)arg1;
- (BOOL)_isGLLayerBacked;
- (void)_jitterRedisplay;
- (void)_sceneDidUpdate:(id)arg1;
- (BOOL)_showsAuthoringEnvironment;
- (BOOL)_supportsJitteringSyncRedraw;
- (void)_systemTimeAnimationStarted:(id)arg1;
- (unsigned int)antialiasingMode;
- (id)audioEngine;
- (id)audioEnvironmentNode;
- (id)audioListener;
- (BOOL)autoenablesDefaultLighting;
- (BOOL)canDrawConcurrently;
- (unsigned int)colorPixelFormat;
- (id)commandQueue;
- (void)commonInit;
- (id)contentLayer;
- (void*)context;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (double)currentTime;
- (void)dealloc;
- (unsigned int)debugOptions;
- (id)delegate;
- (unsigned int)depthPixelFormat;
- (id)description;
- (id)device;
- (void)display;
- (id)displayLink;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 options:(id)arg2;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 options:(id)arg3;
- (BOOL)inLiveResize;
- (id)init;
- (id)initWithLayer:(id)arg1;
- (BOOL)isJitteringEnabled;
- (BOOL)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;
- (BOOL)isPlaying;
- (id)layer;
- (BOOL)loops;
- (id)nodesInsideFrustumWithPointOfView:(id)arg1;
- (id)overlaySKScene;
- (void)pause;
- (void)pause:(id)arg1;
- (void)pauseDisplayLink;
- (void)play;
- (void)play:(id)arg1;
- (id)pointOfView;
- (int)preferredFramesPerSecond;
- (BOOL)prepareObject:(id)arg1 shouldAbortBlock:(id /* block */)arg2;
- (void)prepareObjects:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)presentScene:(id)arg1 withTransition:(id)arg2 incomingPointOfView:(id)arg3 completionHandler:(id /* block */)arg4;
- (struct SCNVector3 { float x1; float x2; float x3; })projectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)projectPoints:(struct SCNVector3 { float x1; float x2; float x3; }*)arg1 count:(unsigned int)arg2;
- (id)renderer;
- (id)rendererOptions;
- (unsigned int)renderingAPI;
- (BOOL)rendersIntoMaterial;
- (void)resumeDisplayLink;
- (id)scene;
- (double)sceneTime;
- (void)setAntialiasingMode:(unsigned int)arg1;
- (void)setAudioListener:(id)arg1;
- (void)setAutoenablesDefaultLighting:(BOOL)arg1;
- (void)setBackgroundColor:(struct CGColor { }*)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDebugOptions:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setJitteringEnabled:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setNeedsDisplay;
- (void)setOverlaySKScene:(id)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setPreferredFramesPerSecond:(int)arg1;
- (void)setRenderer:(id)arg1;
- (void)setRendersIntoMaterial:(BOOL)arg1;
- (void)setScene:(id)arg1;
- (void)setSceneTime:(double)arg1;
- (void)setShowsStatistics:(BOOL)arg1;
- (void)setSyncTimeWithCoreAnimation:(BOOL)arg1;
- (void)setTechnique:(id)arg1;
- (void)set_showsAuthoringEnvironment:(BOOL)arg1;
- (BOOL)showsStatistics;
- (unsigned int)stencilPixelFormat;
- (void)stop;
- (void)stop:(id)arg1;
- (BOOL)syncTimeWithCoreAnimation;
- (id)technique;
- (struct SCNVector3 { float x1; float x2; float x3; })unprojectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;

@end
