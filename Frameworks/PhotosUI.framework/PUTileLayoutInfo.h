/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUTileLayoutInfo : NSObject <NSCopying> {
    float  _alpha;
    struct CGPoint { 
        float x; 
        float y; 
    }  _center;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _contentsRect;
    <PUTilingCoordinateSystem> * _coordinateSystem;
    struct { 
        float left; 
        float right; 
        float top; 
        float bottom; 
    }  _expandedRectInsets;
    struct CGSize { 
        float width; 
        float height; 
    }  _size;
    PUTileIdentifier * _tileIdentifier;
    struct CGAffineTransform { 
        float a; 
        float b; 
        float c; 
        float d; 
        float tx; 
        float ty; 
    }  _transform;
    float  _zPosition;
}

@property (setter=_setAlpha:, nonatomic) float alpha;
@property (setter=_setCenter:, nonatomic) struct CGPoint { float x1; float x2; } center;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } contentsRect;
@property (setter=_setCoordinateSystem:, nonatomic, retain) <PUTilingCoordinateSystem> *coordinateSystem;
@property (nonatomic, readonly) NSString *dataSourceIdentifier;
@property (nonatomic) struct { float x1; float x2; float x3; float x4; } expandedRectInsets;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) NSIndexPath *indexPath;
@property (setter=_setSize:, nonatomic) struct CGSize { float x1; float x2; } size;
@property (setter=_setTileIdentifier:, nonatomic, retain) PUTileIdentifier *tileIdentifier;
@property (nonatomic, readonly) NSString *tileKind;
@property (setter=_setTransform:, nonatomic) struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } transform;
@property (setter=_setZPosition:, nonatomic) float zPosition;

- (void).cxx_destruct;
- (void)_setAlpha:(float)arg1;
- (void)_setCenter:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setCoordinateSystem:(id)arg1;
- (void)_setSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setTileIdentifier:(id)arg1;
- (void)_setTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)_setZPosition:(float)arg1;
- (float)alpha;
- (struct CGPoint { float x1; float x2; })center;
- (id)clone;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentsRect;
- (id)coordinateSystem;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cropInsets;
- (id)dataSourceIdentifier;
- (id)description;
- (struct { float x1; float x2; float x3; float x4; })expandedRectInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (unsigned int)hash;
- (id)indexPath;
- (id)init;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { float x1; float x2; })arg2 size:(struct CGSize { float x1; float x2; })arg3 alpha:(float)arg4 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg5 zPosition:(float)arg6 contentsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg7 coordinateSystem:(id)arg8;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { float x1; float x2; })arg2 size:(struct CGSize { float x1; float x2; })arg3 alpha:(float)arg4 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg5 zPosition:(float)arg6 coordinateSystem:(id)arg7;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isGeometryEqualToLayoutInfo:(id)arg1;
- (id)layoutInfoByInterpolatingWithLayoutInfo:(id)arg1 mixFactor:(float)arg2 coordinateSystem:(id)arg3;
- (id)layoutInfoWithAlpha:(float)arg1;
- (id)layoutInfoWithCenter:(struct CGPoint { float x1; float x2; })arg1 size:(struct CGSize { float x1; float x2; })arg2 alpha:(float)arg3 tranform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 zPosition:(float)arg5 coordinateSystem:(id)arg6;
- (id)layoutInfoWithCenter:(struct CGPoint { float x1; float x2; })arg1 size:(struct CGSize { float x1; float x2; })arg2 tranform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg3;
- (id)layoutInfoWithCoordinateSystem:(id)arg1;
- (id)layoutInfoWithIndexPath:(id)arg1 tileKind:(id)arg2 dataSourceIdentifier:(id)arg3;
- (id)layoutInfoWithZPosition:(float)arg1;
- (struct CGPoint { float x1; float x2; })parallaxOffset;
- (void)setExpandedRectInsets:(struct { float x1; float x2; float x3; float x4; })arg1;
- (struct CGSize { float x1; float x2; })size;
- (id)tileIdentifier;
- (id)tileKind;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })transform;
- (float)zPosition;

@end
