/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUBrowsingVideoPlayer : PUViewModel <PUAVPlayerDelegate> {
    PUAudioSessionCategoryToken *__audioCategoryToken;
    BOOL __audioCategoryTokenIsConfigured;
    int __currentRequestID;
    int __currentUnloadRequestId;
    BOOL __isBuffering;
    BOOL __isPlayerTimeAdvancing;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } __lastPlayerTime;
    NSString *__lastRequestedAudioCategory;
    BOOL __needsUpdateAVPlayer;
    BOOL __needsUpdateAVPlayerState;
    BOOL __needsUpdateAtBeginningOrEnd;
    BOOL __needsUpdateBuffering;
    BOOL __needsUpdatePlayState;
    BOOL __needsUpdatePlayability;
    BOOL __needsUpdatePlayerItem;
    BOOL __needsUpdateStalled;
    id /* block */ __onPlayerLoadedBlock;
    NSDate *__playRequestDate;
    NSMutableSet *__playerLoadingDisablingReasons;
    NSTimer *__playerTimeAdvancementTimer;
    id __playerTimeObservationToken;
    NSMutableSet *__playingDisablingReasons;
    BOOL __shouldLoadPlayer;
    BOOL __shouldRewindBeforePlaying;
    NSHashTable *__timeObservers;
    <PUDisplayAsset> *_asset;
    AVPlayer *_avPlayer;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _currentTime;
    int _desiredPlayState;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _desiredSeekTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _duration;
    BOOL _isActivated;
    BOOL _isAtBeginning;
    BOOL _isAtEnd;
    BOOL _isPlayable;
    BOOL _isPlayerLoadingAllowed;
    BOOL _isPlayingAllowed;
    BOOL _isStalled;
    PUMediaProvider *_mediaProvider;
    int _playState;
    AVPlayerItem *_playerItem;
    BOOL _shouldRespectMuteSwitch;
}

@property (setter=_setAudioCategoryToken:, nonatomic, retain) PUAudioSessionCategoryToken *_audioCategoryToken;
@property (setter=_setAudioCategoryTokenIsConfigured:, nonatomic) BOOL _audioCategoryTokenIsConfigured;
@property (setter=_setCurrentRequestID:, nonatomic) int _currentRequestID;
@property (setter=_setCurrentUnloadRequestId:, nonatomic) int _currentUnloadRequestId;
@property (setter=_setBuffering:, nonatomic) BOOL _isBuffering;
@property (setter=_setPlayerTimeAdvancing:, nonatomic) BOOL _isPlayerTimeAdvancing;
@property (setter=_setLastPlayerTime:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } _lastPlayerTime;
@property (setter=_setLastRequestedAudioCategory:, nonatomic, retain) NSString *_lastRequestedAudioCategory;
@property (setter=_setNeedsUpdateAVPlayer:, nonatomic) BOOL _needsUpdateAVPlayer;
@property (setter=_setNeedsUpdateAVPlayerState:, nonatomic) BOOL _needsUpdateAVPlayerState;
@property (setter=_setNeedsUpdateAtBeginningOrEnd:, nonatomic) BOOL _needsUpdateAtBeginningOrEnd;
@property (setter=_setNeedsUpdateBuffering:, nonatomic) BOOL _needsUpdateBuffering;
@property (setter=_setNeedsUpdatePlayState:, nonatomic) BOOL _needsUpdatePlayState;
@property (setter=_setNeedsUpdatePlayability:, nonatomic) BOOL _needsUpdatePlayability;
@property (setter=_setNeedsUpdatePlayerItem:, nonatomic) BOOL _needsUpdatePlayerItem;
@property (setter=_setNeedsUpdateStalled:, nonatomic) BOOL _needsUpdateStalled;
@property (setter=_setOnPlayerLoadedBlock:, nonatomic, copy) id /* block */ _onPlayerLoadedBlock;
@property (setter=_setPlayRequestDate:, nonatomic, retain) NSDate *_playRequestDate;
@property (setter=_setPlayerLoadingDisablingReasons:, nonatomic, retain) NSMutableSet *_playerLoadingDisablingReasons;
@property (setter=_setPlayerTimeAdvancementTimer:, nonatomic, retain) NSTimer *_playerTimeAdvancementTimer;
@property (setter=_setPlayerTimeObservationToken:, nonatomic, retain) id _playerTimeObservationToken;
@property (setter=_setPlayingDisablingReasons:, nonatomic, retain) NSMutableSet *_playingDisablingReasons;
@property (setter=_setShouldLoadPlayer:, nonatomic) BOOL _shouldLoadPlayer;
@property (setter=_setShouldRewindBeforePlaying:, nonatomic) BOOL _shouldRewindBeforePlaying;
@property (nonatomic, readonly) NSHashTable *_timeObservers;
@property (nonatomic, retain) <PUDisplayAsset> *asset;
@property (nonatomic, retain) AVPlayer *avPlayer;
@property (nonatomic, readonly) PUBrowsingVideoPlayerChange *currentChange;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) int desiredPlayState;
@property (setter=setDesiredSeekTime:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } desiredSeekTime;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } duration;
@property (readonly) unsigned int hash;
@property (setter=setActivated:, nonatomic) BOOL isActivated;
@property (nonatomic) BOOL isAtBeginning;
@property (nonatomic) BOOL isAtEnd;
@property (nonatomic) BOOL isPlayable;
@property (nonatomic) BOOL isPlayerLoadingAllowed;
@property (nonatomic) BOOL isPlayingAllowed;
@property (nonatomic) BOOL isStalled;
@property (nonatomic, readonly) PUMediaProvider *mediaProvider;
@property (nonatomic) int playState;
@property (nonatomic, retain) AVPlayerItem *playerItem;
@property (nonatomic) BOOL shouldRespectMuteSwitch;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_audioCategoryToken;
- (BOOL)_audioCategoryTokenIsConfigured;
- (void)_avPlayerTimeDidChange:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_completedConfiguringAudioToken:(id)arg1;
- (void)_configureAudioSession:(id)arg1 withDesiredCategory:(id)arg2;
- (int)_currentRequestID;
- (int)_currentUnloadRequestId;
- (void)_dequeueAllOnPlayerLoadedBlocksIfApplicable;
- (void)_enqueueOnPlayerLoadedBlock:(id /* block */)arg1;
- (void)_handlePlayerTimeAdvancementTimer:(id)arg1;
- (void)_handlePlayerUnloadWithRequestId:(int)arg1;
- (void)_handleResultOfPlayerItemRequestWithID:(int)arg1 playerItem:(id)arg2 info:(id)arg3;
- (void)_handleShouldReloadAssetMediaNotification:(id)arg1;
- (void)_handleWillResignActiveNotification:(id)arg1;
- (void)_invalidateAVPlayer;
- (void)_invalidateAVPlayerPlayState;
- (void)_invalidateAtBeginningOrEnd;
- (void)_invalidateBuffering;
- (void)_invalidatePlayState;
- (void)_invalidatePlayability;
- (void)_invalidatePlayerItem;
- (void)_invalidateStalled;
- (BOOL)_isBuffering;
- (BOOL)_isPlayerTimeAdvancing;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_lastPlayerTime;
- (id)_lastRequestedAudioCategory;
- (void)_logPlaybackState;
- (BOOL)_needsUpdate;
- (BOOL)_needsUpdateAVPlayer;
- (BOOL)_needsUpdateAVPlayerState;
- (BOOL)_needsUpdateAtBeginningOrEnd;
- (BOOL)_needsUpdateBuffering;
- (BOOL)_needsUpdatePlayState;
- (BOOL)_needsUpdatePlayability;
- (BOOL)_needsUpdatePlayerItem;
- (BOOL)_needsUpdateStalled;
- (id /* block */)_onPlayerLoadedBlock;
- (void)_performBlockWithLoadedAVPlayer:(id /* block */)arg1;
- (id)_playRequestDate;
- (id)_playbackStateDescription;
- (void)_playerItemDidPlayToEndTime:(id)arg1;
- (id)_playerLoadingDisablingReasons;
- (id)_playerTimeAdvancementTimer;
- (id)_playerTimeObservationToken;
- (id)_playingDisablingReasons;
- (void)_setAVPlayer:(id)arg1;
- (void)_setAtBeginning:(BOOL)arg1;
- (void)_setAtEnd:(BOOL)arg1;
- (void)_setAudioCategoryToken:(id)arg1;
- (void)_setAudioCategoryTokenIsConfigured:(BOOL)arg1;
- (void)_setBuffering:(BOOL)arg1;
- (void)_setCurrentRequestID:(int)arg1;
- (void)_setCurrentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setCurrentUnloadRequestId:(int)arg1;
- (void)_setDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setLastPlayerTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setLastRequestedAudioCategory:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_setNeedsUpdateAVPlayer:(BOOL)arg1;
- (void)_setNeedsUpdateAVPlayerState:(BOOL)arg1;
- (void)_setNeedsUpdateAtBeginningOrEnd:(BOOL)arg1;
- (void)_setNeedsUpdateBuffering:(BOOL)arg1;
- (void)_setNeedsUpdatePlayState:(BOOL)arg1;
- (void)_setNeedsUpdatePlayability:(BOOL)arg1;
- (void)_setNeedsUpdatePlayerItem:(BOOL)arg1;
- (void)_setNeedsUpdateStalled:(BOOL)arg1;
- (void)_setOnPlayerLoadedBlock:(id /* block */)arg1;
- (void)_setPlayRequestDate:(id)arg1;
- (void)_setPlayState:(int)arg1;
- (void)_setPlayabilityFromAsset;
- (void)_setPlayable:(BOOL)arg1;
- (void)_setPlayerItem:(id)arg1;
- (void)_setPlayerLoadingAllowed:(BOOL)arg1;
- (void)_setPlayerLoadingDisablingReasons:(id)arg1;
- (void)_setPlayerTimeAdvancementTimer:(id)arg1;
- (void)_setPlayerTimeAdvancing:(BOOL)arg1;
- (void)_setPlayerTimeObservationToken:(id)arg1;
- (void)_setPlayingAllowed:(BOOL)arg1;
- (void)_setPlayingDisablingReasons:(id)arg1;
- (void)_setShouldLoadPlayer:(BOOL)arg1;
- (void)_setShouldRewindBeforePlaying:(BOOL)arg1;
- (void)_setStalled:(BOOL)arg1;
- (BOOL)_shouldLoadPlayer;
- (BOOL)_shouldRewindBeforePlaying;
- (void)_startObservingAVPlayer;
- (void)_startObservingPlayerItem;
- (void)_stopObservingAVPlayer;
- (void)_stopObservingPlayerItem;
- (id)_timeObservers;
- (void)_updateAVPlayer;
- (void)_updateAVPlayerPlayState;
- (void)_updateAtBeginningOrEnd;
- (void)_updateAudioCategoryToken;
- (void)_updateBuffering;
- (void)_updateDuration;
- (void)_updateIfNeeded;
- (void)_updatePlayState;
- (void)_updatePlayabilityIfNeeded;
- (void)_updatePlayerItem;
- (void)_updateStalled;
- (id)asset;
- (id)avPlayer;
- (void)avPlayerDidDeallocate;
- (void)avPlayerStatusDidChange:(id)arg1;
- (id)currentChange;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentTime;
- (void)dealloc;
- (id)debugDetailedDescription;
- (int)desiredPlayState;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })desiredSeekTime;
- (void)didPerformChanges;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (id)init;
- (id)initWithAsset:(id)arg1 mediaProvider:(id)arg2;
- (void)invalidateExistingPlayer;
- (BOOL)isActivated;
- (BOOL)isAtBeginning;
- (BOOL)isAtEnd;
- (BOOL)isPlayable;
- (BOOL)isPlayerLoadingAllowed;
- (BOOL)isPlayingAllowed;
- (BOOL)isStalled;
- (id)mediaProvider;
- (id)newViewModelChange;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (int)playState;
- (id)playerItem;
- (void)registerChangeObserver:(id)arg1;
- (void)registerTimeObserver:(id)arg1;
- (void)rewindExistingPlayer;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id /* block */)arg2;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 completionHandler:(id /* block */)arg4;
- (void)setActivated:(BOOL)arg1;
- (void)setAsset:(id)arg1;
- (void)setDesiredPlayState:(int)arg1;
- (void)setDesiredSeekTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setPlayerLoadingDisabled:(BOOL)arg1 forReason:(id)arg2;
- (void)setPlayingDisabled:(BOOL)arg1 forReason:(id)arg2;
- (void)setShouldRespectMuteSwitch:(BOOL)arg1;
- (BOOL)shouldRespectMuteSwitch;
- (void)unregisterChangeObserver:(id)arg1;
- (void)unregisterTimeObserver:(id)arg1;

@end
