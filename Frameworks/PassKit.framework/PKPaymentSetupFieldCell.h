/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PassKit.framework/PassKit
 */

@interface PKPaymentSetupFieldCell : PKTableViewCell <PKDatePickerDelegate, UITextFieldDelegate> {
    PKDatePicker *_dateInputView;
    <PKPaymentSetupFieldCellDelegate> *_delegate;
    UIColor *_editableTextFieldCameraCapturedTextColor;
    UIColor *_editableTextFieldDisabledTextColor;
    UIColor *_editableTextFieldTextColor;
    BOOL _enabled;
    BOOL _ignoreCurrentValueChangedNotifications;
    float _minimumTextLabelWidth;
    PKPaymentSetupField *_paymentSetupField;
    BOOL _shouldDrawFullWidthSeperator;
    BOOL _shouldDrawSeperator;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKPaymentSetupFieldCellDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) UIColor *editableTextFieldCameraCapturedTextColor;
@property (nonatomic, copy) UIColor *editableTextFieldDisabledTextColor;
@property (nonatomic, copy) UIColor *editableTextFieldTextColor;
@property (getter=isEnabled, nonatomic) BOOL enabled;
@property (readonly) unsigned int hash;
@property (nonatomic) float minimumTextLabelWidth;
@property (nonatomic, retain) PKPaymentSetupField *paymentSetupField;
@property (nonatomic) BOOL shouldDrawFullWidthSeperator;
@property (nonatomic) BOOL shouldDrawSeperator;
@property (readonly) Class superclass;

+ (float)minimumCellHeight;
+ (id)paymentSetupFieldCellForField:(id)arg1 fromTableView:(id)arg2;
+ (id)reuseIdentifier;
+ (int)tableViewCellStyle;

- (void)_applyDefaultValues;
- (void)_editableTextFieldDidBeginEditing:(id)arg1;
- (void)_editableTextFieldValueChanged:(id)arg1;
- (void)_paymentSetupFieldCurrentValueChangedNotification:(id)arg1;
- (void)_pullCurrentValueFromField;
- (void)_pushCurrentValueToField;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_separatorFrame;
- (void)_updateDisplay:(BOOL)arg1;
- (void)_updateDisplayForFieldTypeDate:(id)arg1;
- (void)_updateDisplayForFieldTypeText:(id)arg1;
- (void)datePicker:(id)arg1 didChangeDate:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)editableTextFieldCameraCapturedTextColor;
- (id)editableTextFieldDisabledTextColor;
- (id)editableTextFieldTextColor;
- (float)heightForWidth:(float)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithSetupField:(id)arg1;
- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;
- (BOOL)isEnabled;
- (void)layoutSubviews;
- (float)minimumTextLabelWidth;
- (id)paymentSetupField;
- (void)pk_applyAppearance:(struct _PKAppearanceSpecifier { BOOL x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; inout void*x28; unsigned short x29; void*x30; BOOL x31; void*x32; const void*x33; void*x34; long x35; void*x36; void*x37; void*x38; in void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; unsigned short x58; void*x59; short x60; void*x61; void*x62; void*x63; void*x64; unsigned long x65; int x66; unsigned int x67/* : ? */; const void*x68; const void*x69; void*x70; void*x71; const int x72; void x73; void*x74; void*x75; void*x76; void*x77; const void*x78; void*x79; void*x80; void*x81; out const void*x82; short x83; void*x84; inout void*x85; void*x86; const void*x87; int x88; void*x89; long x90; double x91; void*x92; float x93; const void*x94; void*x95; void*x96; void*x97; out const void*x98; void*x99; inout void*x100; void*x101; const void*x102; int x103; void*x104; long x105; double x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; id x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; short x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; unsigned long x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; unsigned short x236; void*x237; void*x238; void*x239; const short x240; int x241; short x242; void*x243; void*x244; double x245; bycopy unsigned int x246/* : ? */; void*x247; void*x248; BOOL x249; void*x250; void*x251; void*x252; unsigned int x253; long doublex254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; unsigned char x280; void*x281; unsigned short x282; void*x283; short x284; void*x285; void*x286; void*x287; void*x288; unsigned long x289; int x290; unsigned int x291/* : ? */; const void*x292; const void*x293; void*x294; void*x295; const int x296; void x297; void*x298; void*x299; void*x300; void*x301; const void*x302; void*x303; void*x304; void*x305; out const void*x306; short x307; void*x308; int x309; void*x310; out const void*x311; unsigned int x312; void*x313; void*x314; out const void*x315; void*x316; float x317; const void*x318; void*x319; void*x320; void*x321; out const void*x322; void*x323; int x324; void*x325; out const void*x326; unsigned int x327; void*x328; void*x329; out const void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void**x399; void*x400; void*x401; void*x402; void*x403; unsigned long long x404; void*x405; void*x406; void*x407; unsigned int x408/* : ? */; long x409; void*x410; oneway int x411; void*x412; void*x413; SEL x414; void*x415; void*x416; int x417; void*x418; void*x419; void*x420; void*x421; out const void*x422; out out void*x423; void*x424; const unsigned int x425; in unsigned short x426; void*x427; BOOL x428; void*x429; int x430; out in SEL x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; int x450; in void*x451; void*x452; long x453; void*x454; void*x455; short x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; float x464; void*x465; const void*x466; in BOOL x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; unsigned short x490; void*x491; short x492; void*x493; void*x494; void*x495; void*x496; unsigned long x497; int x498; unsigned int x499/* : ? */; const void*x500; const void*x501; void*x502; void*x503; const void*x504; void*x505; void*x506; void*x507; out const void*x508; short x509; void*x510; void*x511; void*x512; out void*x513; in double x514; void*x515; void*x516; int x517; out in void*x518; float x519; const void*x520; void*x521; void*x522; void*x523; out const void*x524; void*x525; void*x526; void*x527; out void*x528; in double x529; void*x530; void*x531; int x532; out in void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; unsigned short x616; unsigned char x617; void*x618; void*x619; void*x620; float x621; void*x622; const void*x623; in BOOL x624; void*x625; unsigned long x626; int x627; in void*x628; unsigned short x629; void*x630; void*x631; long x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; float x683; void*x684; const void*x685; in BOOL x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; unsigned short x706; void*x707; short x708; void*x709; void*x710; void*x711; void*x712; unsigned long x713; int x714; unsigned int x715/* : ? */; const void*x716; const void*x717; void*x718; void*x719; const void*x720; void*x721; void*x722; void*x723; out const void*x724; short x725; void*x726; void*x727; void*x728; out void*x729; in double x730; void*x731; void*x732; int x733; out in void*x734; float x735; const void*x736; void*x737; void*x738; void*x739; out const void*x740; void*x741; void*x742; void*x743; out void*x744; in double x745; void*x746; void*x747; int x748; out in void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; short x824; void*x825; union x826; void*x827; void*x828; void*x829; void*x830; unsigned long x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; unsigned int x839/* : ? */; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; inout unsigned long x875; out BOOL x876; void*x877; long x878; inout out void*x879; int x880; float x881; int x882; BOOL x883; void*x884; void*x885; int x886; out in unsigned short x887; void*x888; const void x889; int x890; BOOL x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; unsigned short x916; void*x917; short x918; void*x919; void*x920; void*x921; void*x922; unsigned long x923; int x924; unsigned int x925/* : ? */; const void*x926; const void*x927; void*x928; void*x929; const int x930; void x931; void*x932; void*x933; void*x934; void*x935; const void*x936; void*x937; void*x938; void*x939; out const void*x940; short x941; void*x942; void*x943; short x944; void*x945; const inout out void*x946; int x947; float x948; int x949; BOOL x950; void*x951; void*x952; int x953; out in void*x954; float x955; const void*x956; void*x957; void*x958; void*x959; out const void*x960; void*x961; void*x962; short x963; void*x964; const inout out void*x965; int x966; float x967; int x968; BOOL x969; void*x970; void*x971; int x972; out in void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; const void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; unsigned long long x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; struct x1064; void*x1065; void*x1066; void*x1067; void*x1068; unsigned long x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; id x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; void*x1183; void*x1184; short x1185; void*x1186; void*x1187; void*x1188; long long x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; unsigned int x1236/* : ? */; void*x1237; void*x1238; char *x1239; float x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; }*)arg1;
- (id)pk_childrenForAppearance;
- (void)prepareForReuse;
- (void)setDelegate:(id)arg1;
- (void)setEditableTextFieldCameraCapturedTextColor:(id)arg1;
- (void)setEditableTextFieldDisabledTextColor:(id)arg1;
- (void)setEditableTextFieldTextColor:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setMinimumTextLabelWidth:(float)arg1;
- (void)setPaymentSetupField:(id)arg1;
- (void)setShouldDrawFullWidthSeperator:(BOOL)arg1;
- (void)setShouldDrawSeperator:(BOOL)arg1;
- (BOOL)shouldDrawFullWidthSeperator;
- (BOOL)shouldDrawSeperator;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 replacementString:(id)arg3;
- (BOOL)textFieldShouldBeginEditing:(id)arg1;
- (BOOL)textFieldShouldClear:(id)arg1;
- (BOOL)textFieldShouldReturn:(id)arg1;
- (void)updatePaymentSetupFieldWithCurrentCellValue;

@end
