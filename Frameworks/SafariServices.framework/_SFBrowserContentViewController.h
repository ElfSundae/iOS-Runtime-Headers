/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices
 */

@interface _SFBrowserContentViewController : UIViewController <SFReaderAppearanceViewControllerDelegate, SFReaderEnabledWebViewControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, UIScrollViewDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, _SFActivityViewControllerDelegate, _SFBrowserToolbarDataSource, _SFBrowserToolbarDelegate, _SFDownloadControllerDelegate, _SFDynamicBarAnimatorDelegate, _SFFindOnPageViewDelegate, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFSafeBrowsingControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate, _SFTelephonyNavigationMitigationPolicyDelegate> {
    NSString * _EVOrganizationName;
    BOOL  _EVOrganizationNameIsValid;
    _SFURLSpoofingMitigator * _URLSpoofingMitigator;
    _WKActivatedElementInfo * _activatedElementInfo;
    WebUIAuthenticationManager * _authenticationManager;
    _SFBrowserView * _browserView;
    float  _crashBannerDraggingOffset;
    int  _customPreferredStatusBarStyle;
    BOOL  _didNotifyInitialLoadFinish;
    BOOL  _didReceivePolicyForInitialLoad;
    int  _displayMode;
    _SFDownloadController * _downloadController;
    _SFDynamicBarAnimator * _dynamicBarAnimator;
    BOOL  _entersReaderIfAvailable;
    _SFFindOnPageView * _findOnPageView;
    WBSFluidProgressController * _fluidProgressController;
    WBSFluidProgressState * _fluidProgressState;
    BOOL  _interfaceFillsScreen;
    BOOL  _isDisplayingTelephonyPrompt;
    BOOL  _isShowingSheetController;
    BOOL  _isSuppressingPreviewProgressAnimation;
    WKBackForwardListItem * _lastBackFowardListItemOnWhichReaderWasActivated;
    NSArray * _linkActions;
    _SFNavigationBarItem * _navigationBarItem;
    _SFPageLoadErrorController * _pageLoadErrorController;
    BOOL  _pageScrollsWithBottomBar;
    UIColor * _preferredBarTintColor;
    UIColor * _preferredControlTintColor;
    int  _preferredWhitePointAdaptivityStyle;
    SFReaderViewController * _readerViewController;
    _SFReloadOptionsController * _reloadOptionsController;
    BOOL  _remoteSwipeGestureEnabled;
    _SFSafeBrowsingController * _safeBrowsingController;
    BOOL  _safeBrowsingEnabled;
    BOOL  _scrollViewIsDragging;
    _SFSafariSharingExtensionController * _sharingExtensionController;
    WBUSheetController * _sheetController;
    UITapGestureRecognizer * _showBarsFromBottomBarRecognizer;
    BOOL  _showingCrashBanner;
    BOOL  _showingReader;
    _SFTelephonyNavigationMitigationPolicy * _telephonyNavigationPolicy;
    BOOL  _updatingGeometryFromDynamicBarAnimator;
    BOOL  _usesNarrowLayout;
    SFReaderEnabledWebViewController * _webViewController;
}

@property (nonatomic, retain) _WKActivatedElementInfo *activatedElementInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) int displayMode;
@property (nonatomic) BOOL entersReaderIfAvailable;
@property (nonatomic, retain) _SFFindOnPageView *findOnPageView;
@property (readonly) unsigned int hash;
@property (nonatomic, copy) NSArray *linkActions;
@property (nonatomic, retain) UIColor *preferredBarTintColor;
@property (nonatomic, retain) UIColor *preferredControlTintColor;
@property (nonatomic) int preferredWhitePointAdaptivityStyle;
@property (nonatomic, retain) _SFReloadOptionsController *reloadOptionsController;
@property (nonatomic) BOOL remoteSwipeGestureEnabled;
@property (readonly) Class superclass;
@property (nonatomic, retain) SFReaderEnabledWebViewController *webViewController;

- (void).cxx_destruct;
- (id)_EVOrganizationName;
- (id)_activeToolbar;
- (void)_addAuthenticationChallenge:(id)arg1 completionHandler:(id /* block */)arg2;
- (float)_buttonBarHeight;
- (BOOL)_canScrollToTopInView:(id)arg1;
- (void)_commitPreviewViewController:(id)arg1;
- (float)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (id)_currentWebView;
- (void)_didLoadWebView;
- (void)_dismiss;
- (void)_fetchCustomActivitiesForURL:(id)arg1 title:(id)arg2 completion:(id /* block */)arg3;
- (void)_hideCrashBanner;
- (void)_initialLoadFinishedWithSuccess:(BOOL)arg1;
- (void)_invalidateEVOrganizationName;
- (BOOL)_isSecure;
- (BOOL)_isSplitScreen;
- (id)_linkPreviewActionsWithDefaultActions:(id)arg1;
- (void)_notifyInitialLoadDidFinish:(BOOL)arg1;
- (void)_performSafeBrowsingCheckForURL:(id)arg1;
- (id)_previewViewControllerForURL:(id)arg1 defaultActions:(id)arg2 elementInfo:(id)arg3;
- (void)_recordHostAppIdAndURLForTapToRadar:(id)arg1;
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(BOOL)arg3 userAction:(id)arg4;
- (BOOL)_redirectToHostAppWithNavigationResult:(id)arg1 options:(id)arg2;
- (void)_scrollToTopFromScrollToTopView;
- (void)_setShowingCrashBanner:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setShowingReader:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setSuppressingPreviewProgressAnimation:(BOOL)arg1;
- (void)_setUpFindOnPageViewIfNeeded;
- (void)_setUpReloadOptionsControllerIfNeeded;
- (void)_setUpSafeBrowsingController;
- (void)_setUpToolbar;
- (void)_setUpTopBarAndBottomBar;
- (void)_setUpWebViewControllerIfNeeded;
- (void)_setWebView:(id)arg1;
- (BOOL)_shouldPromptUserForExternalNavigationResult:(id)arg1 userAction:(id)arg2;
- (void)_showBarsFromBottomBarTap:(id)arg1;
- (void)_showGenericDownloadAlert;
- (BOOL)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2;
- (void)_showPassBookControllerForPass:(id)arg1;
- (int)_sizeClassForWidth:(float)arg1;
- (void)_updateContentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1 forWebView:(id)arg2;
- (void)_updateCrashBannerOffset;
- (void)_updateCurrentScrollViewInsets;
- (void)_updateDoNotTrackPreference;
- (void)_updateDynamicBarGeometry;
- (void)_updateInterfaceFillsScreen;
- (void)_updateNavigationBar;
- (void)_updatePreferredBarTintColor;
- (void)_updatePreferredControlTintColor;
- (void)_updatePreviewLoadingUI;
- (void)_updateRemoteSwipeGestureState;
- (void)_updateScrollToTopView;
- (void)_updateStatusBarAppearance;
- (void)_updateStatusBarStyleForced:(BOOL)arg1;
- (void)_updateUI;
- (void)_updateUsesNarrowLayout;
- (void)_updateWebViewLayoutSize;
- (void)_updateWebViewShrinkToFit;
- (void)_updateWhitePointAdaptivityStyle;
- (id)activatedElementInfo;
- (void)activityViewController:(id)arg1 prepareActivity:(id)arg2 completion:(id /* block */)arg3;
- (int)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(BOOL)arg2;
- (BOOL)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)browserToolbarCanGoBack:(id)arg1;
- (BOOL)browserToolbarCanGoForward:(id)arg1;
- (BOOL)browserToolbarCanOpenPageInSafari:(id)arg1;
- (BOOL)browserToolbarCanShowAction:(id)arg1;
- (void)browserToolbarGoBack:(id)arg1;
- (void)browserToolbarGoForward:(id)arg1;
- (void)browserToolbarOpenInSafari:(id)arg1;
- (void)browserToolbarShowActionSheet:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (void)clearFluidProgressState;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (BOOL)createFluidProgressState;
- (id)currentFluidProgressStateSource;
- (void)dealloc;
- (void)didMoveToParentViewController:(id)arg1;
- (int)displayMode;
- (id)downloadBackgroundTaskName;
- (BOOL)dynamicBarAnimator:(id)arg1 canHideBarsByDraggingWithOffset:(float)arg2;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (BOOL)entersReaderIfAvailable;
- (double)estimatedProgress;
- (id)expectedOrCurrentURL;
- (void)fileDownloadDidFinish:(id)arg1 withPath:(id)arg2 withType:(int)arg3 withSourceURL:(id)arg4;
- (id)findOnPageView;
- (void)fluidProgressRocketAnimationDidComplete;
- (BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)hasFailedURL;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)linkActions;
- (void)loadRequest:(id)arg1;
- (void)loadView;
- (void)navigationBar:(id)arg1 backDropWillApplySettings:(id)arg2;
- (void)navigationBarBackdropDidApplySettings:(id)arg1;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarDoneButtonWasTapped:(id)arg1;
- (void)navigationBarReaderAppearanceButtonWasTapped:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarReloadButtonWasLongPressed:(id)arg1;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (id)navigationBarURLForSharing:(id)arg1;
- (void)navigationBarURLWasTapped:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)overrideTraitCollectionForChildViewController:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 didChooseOnlyAvailableIdentityForAuthenticationChallenge:(id)arg2;
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;
- (id)pageLoadErrorControllerApplicationDisplayName:(id)arg1;
- (void)pageLoadErrorControllerDidShowAlert:(id)arg1;
- (BOOL)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;
- (void)pageLoadErrorControllerWillShowPrintingDuringLoadAlert:(id)arg1 action:(int)arg2;
- (id)preferredBarTintColor;
- (id)preferredControlTintColor;
- (int)preferredStatusBarStyle;
- (int)preferredWhitePointAdaptivityStyle;
- (void)presentDialog:(id)arg1 forTelephonyNavigationPolicy:(id)arg2;
- (void)presentViewController:(id)arg1 animated:(BOOL)arg2 completion:(id /* block */)arg3;
- (id)presentingViewControllerForAlertInAuthenticationManager:(id)arg1;
- (id)presentingViewControllerForWebViewController:(id)arg1;
- (id)previewActions;
- (id)progressState;
- (void)readerAppearanceViewControllerDidChangeFont:(id)arg1;
- (void)readerAppearanceViewControllerDidChangeTheme:(id)arg1;
- (void)readerAppearanceViewControllerDidDecreaseTextSize:(id)arg1;
- (void)readerAppearanceViewControllerDidIncreaseTextSize:(id)arg1;
- (id)reloadOptionsController;
- (void)reloadWithoutContentBlockers;
- (BOOL)remoteSwipeGestureEnabled;
- (void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2;
- (void)safeBrowsingControllerClosePage:(id)arg1;
- (void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1;
- (void)safeBrowsingControllerGoBack:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (BOOL)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { float x1; float x2; })arg2 targetContentOffset:(inout struct CGPoint { float x1; float x2; }*)arg3;
- (void)setActivatedElementInfo:(id)arg1;
- (void)setDisplayMode:(int)arg1;
- (void)setEntersReaderIfAvailable:(BOOL)arg1;
- (void)setFindOnPageView:(id)arg1;
- (void)setLinkActions:(id)arg1;
- (void)setPreferredBarTintColor:(id)arg1;
- (void)setPreferredControlTintColor:(id)arg1;
- (void)setPreferredWhitePointAdaptivityStyle:(int)arg1;
- (void)setReloadOptionsController:(id)arg1;
- (void)setRemoteSwipeGestureEnabled:(BOOL)arg1;
- (void)setWebViewController:(id)arg1;
- (void)sheetController:(id)arg1 performAction:(int)arg2 forAlert:(id)arg3;
- (id)sheetController:(id)arg1 viewControllerForAlert:(id)arg2;
- (void)sheetControllerDidHideSheet:(id)arg1;
- (void)sheetControllerDidShowSheet:(id)arg1;
- (void)stopLoading;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateBottombarOffset:(float)arg1 topBarHeight:(float)arg2;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { float x1; float x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;
- (id)webViewController;
- (void)webViewController:(id)arg1 commitPreviewedViewController:(id)arg2;
- (id)webViewController:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3;
- (void)webViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webViewController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;
- (void)webViewController:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)webViewController:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (id)webViewController:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;
- (void)webViewController:(id)arg1 setDownloadingFileType:(int)arg2;
- (void)webViewControllerDidChangeEstimatedProgress:(id)arg1;
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)arg1;
- (void)webViewControllerDidChangeLoadingState:(id)arg1;
- (void)webViewControllerDidChangeURL:(id)arg1;
- (void)webViewControllerDidDetermineReaderAvailability:(id)arg1;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)arg1;
- (void)webViewControllerWebProcessDidCrash:(id)arg1;
- (void)webViewControllerWillPresentJavaScriptDialog:(id)arg1;
- (id)webViewForFindOnPageView:(id)arg1;

@end
