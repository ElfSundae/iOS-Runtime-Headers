/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices
 */

@interface _SFSafeBrowsingController : NSObject <_SFSafeBrowsingWarningResponseObserver> {
    <_SFSafeBrowsingControllerDelegate> * _delegate;
    BOOL  _loadingSecurityWarningPage;
    _SFSecurityInfo * _provisionalSecurityInfo;
    unsigned int  _safeBrowsingCheckSeed;
    <_SFSafeBrowsingWebProcessController> * _safeBrowsingControllerProxy;
    _WKRemoteObjectInterface * _safeBrowsingResponseObserverInterface;
    BOOL  _showingSecurityWarningPage;
    WKWebView * _webView;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_SFSafeBrowsingControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (getter=isLoadingSecurityWarningPage, nonatomic, readonly) BOOL loadingSecurityWarningPage;
@property (nonatomic, retain) _SFSecurityInfo *provisionalSecurityInfo;
@property (getter=isShowingSecurityWarningPage, nonatomic, readonly) BOOL showingSecurityWarningPage;
@property (readonly) Class superclass;

+ (id)_localizedStringsForSafeBrowsing;

- (void).cxx_destruct;
- (void)_fraudulentWebsiteCheckCompletedForURL:(id)arg1 withResult:(id)arg2 error:(id)arg3;
- (id)_securityWarningPageURL;
- (void)_setUpSafeBrowsingObserverInterface;
- (void)cancelCheckForFraudulentWebsites;
- (void)commitProvisionalSecurityInfo;
- (id)delegate;
- (void)didRespondToSafeBrowsingWarningWithResult:(int)arg1;
- (void)hideSecurityWarningPage;
- (id)initWithWebView:(id)arg1;
- (void)invalidate;
- (BOOL)isLoadingSecurityWarningPage;
- (BOOL)isShowingSecurityWarningPage;
- (id)provisionalSecurityInfo;
- (void)safeBrowsingCheckFinishedWithSecurityInfo:(id)arg1;
- (id)safeBrowsingControllerProxy;
- (void)setDelegate:(id)arg1;
- (void)setProvisionalSecurityInfo:(id)arg1;
- (void)showSecurityWarningPageWithSecurityInfo:(id)arg1;
- (void)startCheckingFraudulentWebSitesWithURL:(id)arg1;
- (void)updateShowingSecurityWarningPageIfNeeded;
- (void)urlPassedSafeBrowsingCheck:(id)arg1 canCache:(BOOL)arg2;

@end
