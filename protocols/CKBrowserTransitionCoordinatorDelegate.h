/* Generated by RuntimeBrowser.
 */

@protocol CKBrowserTransitionCoordinatorDelegate <NSObject>

@optional

- (void)browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 browserWillBecomeInactive:(UIViewController<CKBrowserViewControllerProtocol> *)arg2;
- (void)browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 currentConsumerDidChange:(int)arg2;
- (void)browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 didTransitionFromOrientation:(int)arg2 toOrientation:(int)arg3;
- (void)browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 expandedStateDidChange:(BOOL)arg2 withReason:(int)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 preferredBoundsForBrowser:(UIViewController<CKBrowserViewControllerProtocol> *)arg2;
- (void)browserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 wantsToSwitchToPlugin:(IMBalloonPlugin *)arg2;
- (void)browserTransitionCoordinatorDidCollapseOrDismiss:(CKBrowserTransitionCoordinator *)arg1 withReason:(int)arg2;
- (void)browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:(CKBrowserTransitionCoordinator *)arg1 withReason:(int)arg2;
- (void)browserTransitionCoordinatorWantsPresentationOfAppStore:(CKBrowserTransitionCoordinator *)arg1;
- (void)browserTransitionCoordinatorWillCollapseOrDismiss:(CKBrowserTransitionCoordinator *)arg1 withReason:(int)arg2;
- (void)browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:(CKBrowserTransitionCoordinator *)arg1 withReason:(int)arg2;
- (void)reinsertSwitcherFooterViewForBrowserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1;
- (CKBrowserSwitcherFooterView *)switcherFooterViewForBrowserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1;
- (CKMessageEntryView *)transcriptEntryViewForBrowserTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1;

@end
