/* Generated by RuntimeBrowser.
 */

@protocol VKTileSourceClient <NSObject>

@required

- (void)didStopLoadingTilesWithError:(NSError *)arg1;
- (void)dirtyTilesFromTileSource:(VKTileSource *)arg1;
- (void)invalidateTilesFromTileSource:(VKTileSource *)arg1;
- (void)tileSource:(VKTileSource *)arg1 didFailToDecodeTileForKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg2;
- (void)tileSource:(VKTileSource *)arg1 didFailToLoadTileForKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg2 error:(NSError *)arg3;
- (void)tileSource:(VKTileSource *)arg1 didFetchTile:(VKTile *)arg2 forKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg3;
- (void)tileSource:(VKTileSource *)arg1 dirtyTilesWithinRect:(const struct { double x1; double x2; double x3; double x4; }*)arg2 level:(int)arg3;
- (void)tileSource:(VKTileSource *)arg1 invalidateKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg2;
- (void)tileSource:(VKTileSource *)arg1 invalidateKeys:(VKTileKeyList *)arg2;
- (void)tileSource:(VKTileSource *)arg1 invalidateTilesWithState:(unsigned int)arg2;
- (BOOL)tileSource:(VKTileSource *)arg1 keyIsNeeded:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg2;
- (BOOL)tileSourceMayUseNetwork:(VKTileSource *)arg1;
- (void)willStartLoadingTiles;

@end
